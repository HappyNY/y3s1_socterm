
Hello.elf:     file format elf32-littlenios2
Hello.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x08000244

Program Header:
    LOAD off    0x00001000 vaddr 0x08000000 paddr 0x08000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x08000020 paddr 0x08000020 align 2**12
         filesz 0x000134f8 memsz 0x000134f8 flags r-x
    LOAD off    0x00014518 vaddr 0x08013518 paddr 0x08015030 align 2**12
         filesz 0x00001b18 memsz 0x00001b18 flags rw-
    LOAD off    0x00016b48 vaddr 0x08016b48 paddr 0x08016b48 align 2**12
         filesz 0x00000000 memsz 0x00000180 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  08000000  08000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000224  08000020  08000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00012548  08000244  08000244  00001244  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000d8c  0801278c  0801278c  0001378c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001b18  08013518  08015030  00014518  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000180  08016b48  08016b48  00016b48  2**2
                  ALLOC, SMALL_DATA
  6 .sdram        00000000  08016cc8  08016cc8  00016030  2**0
                  CONTENTS
  7 .bufferram_out 00000000  10000000  10000000  00016030  2**0
                  CONTENTS
  8 .comment      00000023  00000000  00000000  00016030  2**0
                  CONTENTS, READONLY
  9 .debug_aranges 00001460  00000000  00000000  00016058  2**3
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_info   00030a6b  00000000  00000000  000174b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 0000d363  00000000  00000000  00047f23  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   0001041f  00000000  00000000  00055286  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  0000301c  00000000  00000000  000656a8  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00007237  00000000  00000000  000686c4  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    0001bd7f  00000000  00000000  0006f8fb  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_alt_sim_info 00000030  00000000  00000000  0008b67c  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_ranges 000020d0  00000000  00000000  0008b6b0  2**3
                  CONTENTS, READONLY, DEBUGGING
 18 .thread_model 00000003  00000000  00000000  000928aa  2**0
                  CONTENTS, READONLY
 19 .cpu          0000000c  00000000  00000000  000928ad  2**0
                  CONTENTS, READONLY
 20 .qsys         00000001  00000000  00000000  000928b9  2**0
                  CONTENTS, READONLY
 21 .simulation_enabled 00000001  00000000  00000000  000928ba  2**0
                  CONTENTS, READONLY
 22 .sysid_hash   00000004  00000000  00000000  000928bb  2**0
                  CONTENTS, READONLY
 23 .sysid_base   00000004  00000000  00000000  000928bf  2**0
                  CONTENTS, READONLY
 24 .sysid_time   00000004  00000000  00000000  000928c3  2**0
                  CONTENTS, READONLY
 25 .stderr_dev   0000000b  00000000  00000000  000928c7  2**0
                  CONTENTS, READONLY
 26 .stdin_dev    0000000b  00000000  00000000  000928d2  2**0
                  CONTENTS, READONLY
 27 .stdout_dev   0000000b  00000000  00000000  000928dd  2**0
                  CONTENTS, READONLY
 28 .sopc_system_name 00000006  00000000  00000000  000928e8  2**0
                  CONTENTS, READONLY
 29 .quartus_project_dir 0000003c  00000000  00000000  000928ee  2**0
                  CONTENTS, READONLY
 30 .jdi          00007b65  00000000  00000000  0009292a  2**0
                  CONTENTS, READONLY
 31 .sopcinfo     0005a7a1  00000000  00000000  0009a48f  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
08000000 l    d  .entry	00000000 .entry
08000020 l    d  .exceptions	00000000 .exceptions
08000244 l    d  .text	00000000 .text
0801278c l    d  .rodata	00000000 .rodata
08013518 l    d  .rwdata	00000000 .rwdata
08016b48 l    d  .bss	00000000 .bss
08016cc8 l    d  .sdram	00000000 .sdram
10000000 l    d  .bufferram_out	00000000 .bufferram_out
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../Hello_bsp//obj/HAL/src/crt0.o
0800028c l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 hello_world.cpp
00000000 l    df *ABS*	00000000 cgrom.cpp
00000000 l    df *ABS*	00000000 chout.cpp
00000000 l    df *ABS*	00000000 gppcu.cpp
00000000 l    df *ABS*	00000000 del_op.cc
00000000 l    df *ABS*	00000000 eh_personality.cc
08000c74 l     F .text	000000a4 _ZL21size_of_encoded_valueh
08000d18 l     F .text	0000020c _ZL28read_encoded_value_with_basehjPKhPj
08000f24 l     F .text	00000054 _ZL15get_ttype_entryP16lsda_header_infom
08000f78 l     F .text	0000008c _ZL21base_of_encoded_valuehP15_Unwind_Context
08001004 l     F .text	00000134 _ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info
08001138 l     F .text	00000088 _ZL16get_adjusted_ptrPKSt9type_infoS1_PPv.constprop.3
080011c0 l     F .text	000001c0 _ZL28check_compact_exception_specPKSt9type_infoPvPKhij
08001380 l     F .text	000000a8 _ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl
00000000 l    df *ABS*	00000000 eh_catch.cc
00000000 l    df *ABS*	00000000 eh_terminate.cc
00000000 l    df *ABS*	00000000 new_op.cc
00000000 l    df *ABS*	00000000 eh_globals.cc
08016b48 l     O .bss	00000008 _ZL10eh_globals
00000000 l    df *ABS*	00000000 eh_alloc.cc
08001fb8 l     F .text	000000b8 _ZN12_GLOBAL__N_14pool4freeEPv.constprop.4
08016b90 l     O .bss	00000010 _ZN12_GLOBAL__N_114emergency_poolE
08002070 l     F .text	000000a8 _ZN12_GLOBAL__N_14pool8allocateEj.constprop.5
08002220 l     F .text	0000005c _GLOBAL__sub_I___cxa_allocate_exception
00000000 l    df *ABS*	00000000 eh_exception.cc
00000000 l    df *ABS*	00000000 eh_throw.cc
080022b4 l     F .text	00000044 _ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception
00000000 l    df *ABS*	00000000 eh_call.cc
00000000 l    df *ABS*	00000000 si_class_type_info.cc
00000000 l    df *ABS*	00000000 tinfo.cc
00000000 l    df *ABS*	00000000 eh_term_handler.cc
00000000 l    df *ABS*	00000000 eh_unex_handler.cc
00000000 l    df *ABS*	00000000 pure.cc
00000000 l    df *ABS*	00000000 bad_alloc.cc
00000000 l    df *ABS*	00000000 new_handler.cc
08016b50 l     O .bss	00000004 _ZN12_GLOBAL__N_113__new_handlerE
00000000 l    df *ABS*	00000000 class_type_info.cc
00000000 l    df *ABS*	00000000 unwind-sjlj.c
08002b00 l     F .text	00000118 _Unwind_ForcedUnwind_Phase2
08016b54 l     O .bss	00000004 fc_static
08002c18 l     F .text	000000c0 _Unwind_RaiseException_Phase2
08002cd8 l     F .text	00000030 uw_install_context.isra.1
00000000 l    df *ABS*	00000000 abort.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 putchar.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 signal.c
00000000 l    df *ABS*	00000000 signalr.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
0801325e l     O .rodata	00000010 zeroes.4404
080061d4 l     F .text	000000bc __sbprintf
0801326e l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
080063e4 l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
08007f14 l     F .text	00000008 __fp_unlock
08007f28 l     F .text	0000019c __sinit.part.1
080080c4 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
08013920 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 locale.c
08013d64 l     O .rwdata	00000020 lc_ctype_charset
08013d44 l     O .rwdata	00000020 lc_message_charset
08013d84 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 mprec.c
080132a0 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 putc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 vfprintf.c
0800abc4 l     F .text	000000fc __sprint_r.part.0
080133d4 l     O .rodata	00000010 blanks.4348
080133c4 l     O .rodata	00000010 zeroes.4349
0800c150 l     F .text	000000bc __sbprintf
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
0800fe0c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0800ff18 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_exit.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0800ff78 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_getpid.c
00000000 l    df *ABS*	00000000 alt_isatty.c
08010084 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_kill.c
08010164 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
080102d0 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
080103bc l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
08010590 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
08015020 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
080107dc l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
08010910 l     F .text	00000034 alt_dev_reg
08013f64 l     O .rwdata	00001060 jtag_uart_0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
08010c04 l     F .text	0000020c altera_avalon_jtag_uart_irq
08010e10 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
08011448 l     F .text	00000078 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
080116b0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
08011b24 l     F .text	000000c4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
08011c64 l     F .text	0000003c alt_get_errno
08011ca0 l     F .text	000000c4 alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
08016b8c g     O .bss	00000004 alt_instruction_exception_handler
08002178 g     F .text	00000028 __cxa_free_exception
08003a08 g     F .text	00000018 putchar
0800272c g     F .text	00000008 _ZNKSt9type_info15__is_function_pEv
0800a1d0 g     F .text	00000074 _mprec_log10
08001ed0 g     F .text	00000018 _ZSt10unexpectedv
0800a2bc g     F .text	0000008c __any_on
0800c844 g     F .text	00000054 _isatty_r
080132ac g     O .rodata	00000028 __mprec_tinytens
080104cc g     F .text	0000007c alt_main
08003a20 g     F .text	000000c0 _puts_r
08016bc8 g     O .bss	00000100 alt_irq
080022a4 g     F .text	00000004 _ZN10__cxxabiv115__forced_unwindD1Ev
0800c898 g     F .text	00000060 _lseek_r
08002d94 g     F .text	00000020 .hidden _Unwind_GetIPInfo
08015030 g       *ABS*	00000000 __flash_rwdata_start
0800e938 g     F .text	00000088 .hidden __eqdf2
08002388 g     F .text	00000084 __cxa_rethrow
08002d20 g     F .text	00000014 .hidden _Unwind_SjLj_Unregister
08001f0c g     F .text	00000014 _ZSt14set_unexpectedPFvvE
08002d84 g     F .text	00000010 .hidden _Unwind_GetIP
08016cc8 g       *ABS*	00000000 __alt_heap_start
08003dec g     F .text	0000005c _kill_r
080027d0 g     F .text	00000010 _ZNSt9bad_allocD2Ev
080039c4 g     F .text	0000003c printf
0800c958 g     F .text	0000009c _wcrtomb_r
08003bb4 g     F .text	00000084 _signal_r
0800ab60 g     F .text	0000005c __sseek
08008264 g     F .text	00000010 __sinit
0800c20c g     F .text	00000140 __swbuf_r
080021f4 g     F .text	0000002c __cxa_free_dependent_exception
08002464 g     F .text	00000010 _ZN10__cxxabiv120__si_class_type_infoD2Ev
08008d2c g     F .text	0000007c _setlocale_r
080130b0  w    O .rodata	00000025 _ZTSN10__cxxabiv120__si_class_type_infoE
080080cc g     F .text	00000068 __sfmoreglue
0801056c g     F .text	00000024 __malloc_unlock
080022a4 g     F .text	00000004 _ZN10__cxxabiv115__forced_unwindD2Ev
08001dc8 g     F .text	00000020 _ZSt18uncaught_exceptionv
080027a4 g     F .text	00000020 __cxa_deleted_virtual
080091f0 g     F .text	0000015c memmove
0800227c g     F .text	00000004 _ZNSt9exceptionD2Ev
0800824c g     F .text	00000018 _cleanup
0800934c g     F .text	000000a8 _Balloc
0800e9c0 g     F .text	000000dc .hidden __gtdf2
08013074  w    O .rodata	00000014 _ZTVSt13bad_exception
0801205c g     F .text	00000024 altera_nios2_gen2_irq_init
08000000 g     F .entry	0000001c __reset
080007f8 g     F .text	0000003c _ZN9skConsoleD2Ev
08002dd0 g     F .text	00000008 .hidden _Unwind_GetRegionStart
08000020 g       *ABS*	00000000 __flash_exceptions_start
0800c7e8 g     F .text	0000005c _fstat_r
08016b64 g     O .bss	00000004 errno
0800aadc g     F .text	00000008 __seofread
08002fac g     F .text	00000074 .hidden _Unwind_Backtrace
08016b78 g     O .bss	00000004 alt_argv
0801cfc4 g       *ABS*	00000000 _gp
08010064 g     F .text	00000020 getpid
08001a28 g     F .text	00000230 __cxa_call_unexpected
08001c58 g     F .text	00000008 __cxa_get_exception_ptr
08013de4 g     O .rwdata	00000180 alt_fd_list
08003a00 g     F .text	00000008 _putchar_r
08002ec0 g     F .text	00000044 .hidden _Unwind_SjLj_ForcedUnwind
08002d50 g     F .text	00000018 .hidden _Unwind_GetCFA
08001ee8 g     F .text	00000014 _ZSt13set_terminatePFvvE
08012080 g     F .text	00000090 alt_find_dev
080090a8 g     F .text	00000148 memcpy
080021a0 g     F .text	00000054 __cxa_allocate_dependent_exception
08007f1c g     F .text	0000000c _cleanup_r
080028b0 g     F .text	00000018 _ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_
0800fc24 g     F .text	000000dc .hidden __floatsidf
08011be8 g     F .text	0000007c alt_io_redirect
0800ea9c g     F .text	000000f4 .hidden __ltdf2
0801278c g       *ABS*	00000000 __DTOR_END__
080028c8 g     F .text	00000010 _ZN10__cxxabiv117__class_type_infoD1Ev
08003ae0 g     F .text	00000014 puts
0801234c g     F .text	0000009c alt_exception_cause_generated_bad_addr
0800aa14 g     F .text	00000074 __fpclassifyd
0800a12c g     F .text	000000a4 __ratio
0800c134 g     F .text	0000001c __vfiprintf_internal
08011008 g     F .text	0000021c altera_avalon_jtag_uart_read
08003038 g     F .text	00000014 malloc
08003994 g     F .text	00000030 _printf_r
0800d6e8 g     F .text	00000064 .hidden __udivsi3
080100c0 g     F .text	000000a4 isatty
08003c38 g     F .text	000000bc _raise_r
080132fc g     O .rodata	000000c8 __mprec_tens
08008da8 g     F .text	0000000c __locale_charset
080122bc g     F .text	00000090 alt_icache_flush
08016b60 g     O .bss	00000004 __malloc_top_pad
08003e48 g     F .text	00000004 _getpid_r
08015000 g     O .rwdata	00000004 __mb_cur_max
08008dd8 g     F .text	0000000c _localeconv_r
08009758 g     F .text	0000003c __i2b
080086e8 g     F .text	000004bc __sfvwrite_r
08002a48 g     F .text	000000b8 _ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj
08003cf4 g     F .text	000000a8 __sigtramp_r
08003af4 g     F .text	00000054 _sbrk_r
08013120  w    O .rodata	00000020 _ZTVSt9type_info
0800c8f8 g     F .text	00000060 _read_r
08002284 g     F .text	0000000c _ZNKSt9exception4whatEv
08015018 g     O .rwdata	00000004 alt_max_fd
0800c4dc g     F .text	000000f0 _fclose_r
0801319c  w    O .rodata	0000000c _ZTISt9bad_alloc
08007ee4 g     F .text	00000030 fflush
08016b5c g     O .bss	00000004 __malloc_max_sbrked_mem
0800d7a4 g     F .text	000008ac .hidden __adddf3
080130e4  w    O .rodata	0000002c _ZTVN10__cxxabiv120__si_class_type_infoE
08009ed4 g     F .text	0000010c __b2d
0800d0b8 g     F .text	00000538 .hidden __umoddi3
080103f8 g     F .text	000000d4 lseek
0800290c g     F .text	0000006c _ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE
08000c70 g     F .text	00000004 _ZdlPv
08014ff8 g     O .rwdata	00000004 _global_impure_ptr
0800a4b0 g     F .text	00000564 _realloc_r
08016cc8 g       *ABS*	00000000 __bss_end
08002828 g     F .text	00000010 _ZSt15get_new_handlerv
08011a34 g     F .text	000000f0 alt_iic_isr_register
080008a8 g     F .text	0000002c _ZN9skConsole9SetCursorEii
08011f54 g     F .text	00000108 alt_tick
08002d08 g     F .text	00000018 .hidden _Unwind_SjLj_Register
0800cb40 g     F .text	00000578 .hidden __udivdi3
0800c744 g     F .text	00000024 _fputwc_r
080132d4 g     O .rodata	00000028 __mprec_bigtens
0800953c g     F .text	00000104 __s2b
08003020 g     F .text	00000018 abort
0800fd00 g     F .text	000000a8 .hidden __floatunsidf
08009c14 g     F .text	00000060 __mcmp
08001d14 g     F .text	000000b4 __cxa_end_catch
08008284 g     F .text	00000018 __fp_lock_all
080119e8 g     F .text	0000004c alt_ic_irq_enabled
08002280 g     F .text	00000004 _ZNSt13bad_exceptionD2Ev
08011eb8 g     F .text	0000009c alt_alarm_stop
08016b80 g     O .bss	00000004 alt_irq_active
08001ea8 g     F .text	00000018 _ZSt9terminatev
080000fc g     F .exceptions	000000d4 alt_irq_handler
08013dbc g     O .rwdata	00000028 alt_dev_null
080022ac g     F .text	00000004 _ZN10__cxxabiv119__foreign_exceptionD2Ev
080131bc  w    O .rodata	00000022 _ZTSN10__cxxabiv117__class_type_infoE
08011668 g     F .text	00000048 alt_dcache_flush_all
08009640 g     F .text	00000068 __hi0bits
08014fc4  w    O .rwdata	00000008 _ZTISt9exception
0800fba4 g     F .text	00000080 .hidden __fixdfsi
08015030 g       *ABS*	00000000 __ram_rwdata_end
08002728 g     F .text	00000004 _ZNSt9type_infoD1Ev
08015010 g     O .rwdata	00000008 alt_dev_list
080022ac g     F .text	00000004 _ZN10__cxxabiv119__foreign_exceptionD1Ev
08010818 g     F .text	000000f8 write
0800a348 g     F .text	000000a0 _putc_r
0800273c g     F .text	00000004 _ZNSt9type_infoD0Ev
080008d4 g     F .text	0000002c _ZNK9skConsole9GetCursorERiS0_
08013518 g       *ABS*	00000000 __ram_rodata_end
0800ffb4 g     F .text	000000b0 fstat
080101a0 g     F .text	00000130 kill
0800ea9c g     F .text	000000f4 .hidden __ledf2
0800998c g     F .text	00000140 __pow5mult
0800acd8 g     F .text	0000145c ___vfiprintf_internal_r
08016b70 g     O .bss	00000004 __nlocale_changed
0800d74c g     F .text	00000058 .hidden __umodsi3
08002734 g     F .text	00000008 _ZNKSt9type_info11__do_upcastEPKN10__cxxabiv117__class_type_infoEPPv
08001efc g     F .text	00000010 _ZSt13get_terminatev
08016cc8 g       *ABS*	00000000 end
08000740 g     F .text	000000b8 _ZN9skConsoleC2Ejj
08002f94 g     F .text	00000018 .hidden _Unwind_DeleteException
08010b44 g     F .text	000000c0 altera_avalon_jtag_uart_init
080001d0 g     F .exceptions	00000074 alt_instruction_exception_entry
08002978 g     F .text	000000d0 _ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE
08000834 g     F .text	00000074 _ZN9skConsole5WriteEPc
08012785 g       *ABS*	00000000 __CTOR_LIST__
10000000 g       *ABS*	00000000 __alt_stack_pointer
080114c0 g     F .text	0000007c alt_avalon_timer_sc_init
0800fda8 g     F .text	00000064 .hidden __clzsi2
08002838 g     F .text	00000078 _ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv
08011224 g     F .text	00000224 altera_avalon_jtag_uart_write
08008274 g     F .text	00000004 __sfp_lock_acquire
08012ffc  w    O .rodata	00000012 _ZTSSt13bad_exception
08008fc4 g     F .text	000000e4 memchr
08003fc0 g     F .text	000021f8 ___vfprintf_internal_r
080083d8 g     F .text	00000310 _free_r
08008db4 g     F .text	00000010 __locale_mb_cur_max
080125c8 g     F .text	00000180 __call_exitprocs
08016b6c g     O .bss	00000004 __mlocale_changed
08014ff0 g     O .rwdata	00000004 __malloc_sbrk_base
08000244 g     F .text	0000004c _start
08016b84 g     O .bss	00000004 _alt_tick_rate
08013110  w    O .rodata	0000000d _ZTSSt9type_info
080027c4 g     F .text	0000000c _ZNKSt9bad_alloc4whatEv
08002784 g     F .text	00000020 __cxa_pure_virtual
08009acc g     F .text	00000148 __lshift
080131a8  w    O .rodata	00000014 _ZTVSt9bad_alloc
08016b88 g     O .bss	00000004 _alt_nticks
08003db0 g     F .text	00000018 signal
080105cc g     F .text	000000fc read
0801097c g     F .text	00000064 alt_sys_init
080124b0 g     F .text	00000118 __register_exitproc
0801318c  w    O .rodata	0000000d _ZTSSt9bad_alloc
10000000 g       *ABS*	00000000 __alt_mem_bufferram_out
080024a8 g     F .text	00000160 _ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE
08000740 g     F .text	000000b8 _ZN9skConsoleC1Ejj
08009794 g     F .text	000001f8 __multiply
08010eb0 g     F .text	00000068 altera_avalon_jtag_uart_close
08013518 g       *ABS*	00000000 __ram_rwdata_start
08002df0 g     F .text	000000d0 .hidden _Unwind_SjLj_RaiseException
0801278c g       *ABS*	00000000 __ram_rodata_start
08016ba0 g     O .bss	00000028 __malloc_current_mallinfo
08002f04 g     F .text	00000044 .hidden _Unwind_SjLj_Resume
08009fe0 g     F .text	0000014c __d2b
0801309c  w    O .rodata	00000014 _ZTVN10__cxxabiv119__foreign_exceptionE
08002728 g     F .text	00000004 _ZNSt9type_infoD2Ev
080022b0 g     F .text	00000004 _ZN10__cxxabiv119__foreign_exceptionD0Ev
080026a4 g     F .text	00000084 _ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE
080109e0 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
08012218 g     F .text	000000a4 alt_get_fd
08014fd4  w    O .rwdata	00000008 _ZTIN10__cxxabiv119__foreign_exceptionE
0800c3c4 g     F .text	00000054 _close_r
080002d4 g     F .text	00000064 _Z10QueueInstrm
08012434 g     F .text	0000007c memcmp
08010aa0 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
08016cc8 g       *ABS*	00000000 __alt_stack_base
08010af0 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
080027e0 g     F .text	00000034 _ZNSt9bad_allocD0Ev
08002464 g     F .text	00000010 _ZN10__cxxabiv120__si_class_type_infoD1Ev
08006290 g     F .text	00000154 __swsetup_r
08002f48 g     F .text	0000004c .hidden _Unwind_SjLj_Resume_or_Rethrow
0800e050 g     F .text	000008e8 .hidden __divdf3
08008134 g     F .text	00000118 __sfp
0800a244 g     F .text	00000078 __copybits
0800272c g     F .text	00000008 _ZNKSt9type_info14__is_pointer_pEv
08013518 g     O .rwdata	00000408 __malloc_av_
08008280 g     F .text	00000004 __sinit_lock_release
0800eb90 g     F .text	00000718 .hidden __muldf3
0800aa88 g     F .text	00000054 __sread
08013060  w    O .rodata	00000014 _ZTVSt9exception
080022a8 g     F .text	00000004 _ZN10__cxxabiv115__forced_unwindD0Ev
08012110 g     F .text	00000108 alt_find_file
080116ec g     F .text	000000a4 alt_dev_llist_insert
08010548 g     F .text	00000024 __malloc_lock
0801072c g     F .text	000000b0 sbrk
080131ec  w    O .rodata	0000002c _ZTVN10__cxxabiv117__class_type_infoE
080022f8 g     F .text	00000090 __cxa_throw
08007e88 g     F .text	0000005c _fflush_r
08002db4 g     F .text	00000010 .hidden _Unwind_SetIP
0800c418 g     F .text	000000c4 _calloc_r
08016b48 g       *ABS*	00000000 __bss_start
0800386c g     F .text	00000128 memset
080009b4 g     F .text	000002bc _ZN9skConsole9WriteCharEc
0800044c g     F .text	000002f4 main
08016b7c g     O .bss	00000004 alt_envp
08016b58 g     O .bss	00000004 __malloc_max_total_mem
08010a40 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
0800c34c g     F .text	00000018 __swbuf
08001fa0 g     F .text	0000000c __cxa_get_globals_fast
0800abbc g     F .text	00000008 __sclose
10000000 g       *ABS*	00000000 __alt_heap_limit
0800c5cc g     F .text	00000014 fclose
080065e4 g     F .text	00001688 _dtoa_r
08003060 g     F .text	0000080c _malloc_r
0800cab4 g     F .text	00000030 __ascii_wctomb
08002290 g     F .text	0000000c _ZNKSt13bad_exception4whatEv
0801501c g     O .rwdata	00000004 alt_errno
08003dc8 g     F .text	00000010 _init_signal
080131e0  w    O .rodata	0000000c _ZTIN10__cxxabiv117__class_type_infoE
08008ba4 g     F .text	000000c4 _fwalk
08002280 g     F .text	00000004 _ZNSt13bad_exceptionD1Ev
08000338 g     F .text	0000008c _Z8ReadDataii
0800a3e8 g     F .text	000000c8 putc
0800d5f0 g     F .text	00000084 .hidden __divsi3
080082b4 g     F .text	00000124 _malloc_trim_r
0801278c g       *ABS*	00000000 __CTOR_END__
08003e4c g     F .text	000000dc strcmp
080007f8 g     F .text	0000003c _ZN9skConsoleD1Ev
0801278c g       *ABS*	00000000 __flash_rodata_start
08013088  w    O .rodata	00000014 _ZTVN10__cxxabiv115__forced_unwindE
0801278c g       *ABS*	00000000 __DTOR_LIST__
080127c8 g     O .rodata	00000800 CGROM
0800e938 g     F .text	00000088 .hidden __nedf2
08010944 g     F .text	00000038 alt_irq_init
080106c8 g     F .text	00000064 alt_release_fd
08002474 g     F .text	00000034 _ZN10__cxxabiv120__si_class_type_infoD0Ev
080133e4 g     O .rodata	00000100 .hidden __clz_tab
08016b68 g     O .bss	00000004 _PathLocale
080123e8 g     F .text	00000014 atexit
0800c364 g     F .text	00000060 _write_r
08008de4 g     F .text	00000018 setlocale
08002de8 g     F .text	00000008 .hidden _Unwind_GetTextRelBase
0800240c g     F .text	00000058 __cxa_call_terminate
08014ffc g     O .rwdata	00000004 _impure_ptr
08014fcc  w    O .rwdata	00000008 _ZTIN10__cxxabiv115__forced_unwindE
08016b74 g     O .bss	00000004 alt_argc
08007c6c g     F .text	0000021c __sflush_r
080117f0 g     F .text	00000060 _do_dtors
08008dd0 g     F .text	00000008 __locale_cjk_lang
08001f20 g     F .text	00000010 _ZSt14get_unexpectedv
08000020 g       .exceptions	00000000 alt_irq_entry
08009e70 g     F .text	00000064 __ulp
08002dd8 g     F .text	00000008 .hidden _Unwind_FindEnclosingFunction
0800829c g     F .text	00000018 __fp_unlock_all
08015008 g     O .rwdata	00000008 alt_fs_list
0801303c  w    O .rodata	00000024 _ZTSN10__cxxabiv119__foreign_exceptionE
08002dc4 g     F .text	0000000c .hidden _Unwind_GetLanguageSpecificData
08001c60 g     F .text	000000b4 __cxa_begin_catch
080028c8 g     F .text	00000010 _ZN10__cxxabiv117__class_type_infoD2Ev
08001ec0 g     F .text	00000010 _ZN10__cxxabiv112__unexpectedEPFvvE
08000020 g       *ABS*	00000000 __ram_exceptions_start
08008dfc g     F .text	0000000c localeconv
080022a0 g     F .text	00000004 _ZNSt13bad_exceptionD0Ev
08014fe4 g     O .rwdata	00000004 _ZN10__cxxabiv119__terminate_handlerE
08011884 g     F .text	00000050 alt_ic_isr_register
08002118 g     F .text	00000060 __cxa_allocate_exception
080130d8  w    O .rodata	0000000c _ZTIN10__cxxabiv120__si_class_type_infoE
08002814 g     F .text	00000014 _ZSt15set_new_handlerPFvvE
08015030 g       *ABS*	00000000 _edata
08016cc8 g       *ABS*	00000000 _end
08014fec g     O .rwdata	00000001 _ZSt7nothrow
08001428 g     F .text	00000600 __gxx_personality_sj0
0800c5e0 g     F .text	00000164 __fputwc
08000244 g       *ABS*	00000000 __ram_exceptions_end
08010f18 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
0800227c g     F .text	00000004 _ZNSt9exceptionD1Ev
0801195c g     F .text	0000008c alt_ic_irq_disable
0800aae4 g     F .text	0000007c __swrite
08001f30 g     F .text	00000070 _Znwj
08014ff4 g     O .rwdata	00000004 __malloc_trim_threshold
08008dc4 g     F .text	0000000c __locale_msgcharset
080123fc g     F .text	00000038 exit
08002d68 g     F .text	0000001c .hidden _Unwind_SetGR
08008c68 g     F .text	000000c4 _fwalk_reent
08002608 g     F .text	0000009c _ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_
08009c74 g     F .text	000001fc __mdiff
08001de8 g     F .text	000000c0 _ZN10__cxxabiv111__terminateEPFvvE
0800d674 g     F .text	00000074 .hidden __modsi3
080027d0 g     F .text	00000010 _ZNSt9bad_allocD1Ev
10000000 g       *ABS*	00000000 __alt_data_end
08000020 g     F .exceptions	00000000 alt_exception
08008278 g     F .text	00000004 __sfp_lock_release
08013010  w    O .rodata	0000000c _ZTISt13bad_exception
08000000 g       *ABS*	00000000 __alt_mem_sdram
08000900 g     F .text	000000b4 _ZNK9skConsole5PrintEPVm
0800ff44 g     F .text	00000034 _exit
0801153c g     F .text	0000012c alt_alarm_start
08002d34 g     F .text	0000001c .hidden _Unwind_GetGR
08001fac g     F .text	0000000c __cxa_get_globals
08008e08 g     F .text	000001bc __smakebuf_r
08014fe8 g     O .rwdata	00000004 _ZN10__cxxabiv120__unexpected_handlerE
08003f28 g     F .text	00000098 strlen
08003b48 g     F .text	0000006c _init_signal_r
08014fdc  w    O .rwdata	00000008 _ZTISt9type_info
08011d64 g     F .text	00000154 open
0800e9c0 g     F .text	000000dc .hidden __gedf2
08012fec  w    O .rodata	0000000d _ZTSSt9exception
08015004 g     O .rwdata	00000004 __wctomb
0800229c g     F .text	00000004 _ZNSt9exceptionD0Ev
0800acc0 g     F .text	00000018 __sprint_r
08011850 g     F .text	00000034 alt_icache_flush_all
08002de0 g     F .text	00000008 .hidden _Unwind_GetDataRelBase
08015024 g     O .rwdata	00000004 alt_priority_mask
080118d4 g     F .text	00000088 alt_ic_irq_enable
080061b8 g     F .text	0000001c __vfprintf_internal
0800cae4 g     F .text	0000005c _wctomb_r
0800f2a8 g     F .text	000008fc .hidden __subdf3
080096a8 g     F .text	000000b0 __lo0bits
08015028 g     O .rwdata	00000008 alt_alarm_list
08011790 g     F .text	00000060 _do_ctors
08003dd8 g     F .text	00000014 __sigtramp
0800c9f4 g     F .text	000000c0 wcrtomb
0800fe48 g     F .text	000000d0 close
080003c4 g     F .text	00000088 _Z9WriteDataiim
0801301c  w    O .rodata	00000020 _ZTSN10__cxxabiv115__forced_unwindE
08010338 g     F .text	00000084 alt_load
08002740 g     F .text	00000044 _ZNKSt9type_info10__do_catchEPKS_PPvj
08000290 g     F .text	00000044 _Z4waiti
0800c768 g     F .text	00000080 fputwc
08003d9c g     F .text	00000014 raise
0800304c g     F .text	00000014 free
0800827c g     F .text	00000004 __sinit_lock_acquire
0800941c g     F .text	00000120 __multadd
080028d8 g     F .text	00000034 _ZN10__cxxabiv117__class_type_infoD0Ev
080093f4 g     F .text	00000028 _Bfree



Disassembly of section .entry:

08000000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
 8000000:	00840014 	movui	r2,4096
#endif

0:
    initi r2
 8000004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
 8000008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
 800000c:	00bffd16 	blt	zero,r2,8000004 <__alt_data_end+0xf8000004>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
 8000010:	00420034 	movhi	at,2048
    ori r1, r1, %lo(_start)
 8000014:	08409114 	ori	at,at,580
    jmp r1
 8000018:	0800683a 	jmp	at
 800001c:	00000000 	call	0 <__alt_mem_sdram-0x8000000>

Disassembly of section .exceptions:

08000020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
 8000020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
 8000024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
 8000028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
 800002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
 8000030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
 8000034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
 8000038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
 800003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
 8000040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
 8000044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
 8000048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
 800004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
 8000050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
 8000054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
 8000058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
 800005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
 8000060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
 8000064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
 8000068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
 800006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
 8000070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
 8000074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
 8000078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
 800007c:	10000326 	beq	r2,zero,800008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
 8000080:	20000226 	beq	r4,zero,800008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
 8000084:	80000fc0 	call	80000fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
 8000088:	00000706 	br	80000a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
 800008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
 8000090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
 8000094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
 8000098:	80001d00 	call	80001d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
 800009c:	1000021e 	bne	r2,zero,80000a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
 80000a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
 80000a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
 80000a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
 80000ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
 80000b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
 80000b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
 80000b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
 80000bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
 80000c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
 80000c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
 80000c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
 80000cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
 80000d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
 80000d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
 80000d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
 80000dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
 80000e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
 80000e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
 80000e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
 80000ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
 80000f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
 80000f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
 80000f8:	ef80083a 	eret

080000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
 80000fc:	defff904 	addi	sp,sp,-28
 8000100:	dfc00615 	stw	ra,24(sp)
 8000104:	df000515 	stw	fp,20(sp)
 8000108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
 800010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 8000110:	0005313a 	rdctl	r2,ipending
 8000114:	e0bffe15 	stw	r2,-8(fp)

  return active;
 8000118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 800011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
 8000120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 8000124:	00800044 	movi	r2,1
 8000128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 800012c:	e0fffb17 	ldw	r3,-20(fp)
 8000130:	e0bffc17 	ldw	r2,-16(fp)
 8000134:	1884703a 	and	r2,r3,r2
 8000138:	10001426 	beq	r2,zero,800018c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
 800013c:	00820074 	movhi	r2,2049
 8000140:	109af204 	addi	r2,r2,27592
 8000144:	e0fffd17 	ldw	r3,-12(fp)
 8000148:	180690fa 	slli	r3,r3,3
 800014c:	10c5883a 	add	r2,r2,r3
 8000150:	10c00017 	ldw	r3,0(r2)
 8000154:	00820074 	movhi	r2,2049
 8000158:	109af204 	addi	r2,r2,27592
 800015c:	e13ffd17 	ldw	r4,-12(fp)
 8000160:	200890fa 	slli	r4,r4,3
 8000164:	1105883a 	add	r2,r2,r4
 8000168:	10800104 	addi	r2,r2,4
 800016c:	10800017 	ldw	r2,0(r2)
 8000170:	1009883a 	mov	r4,r2
 8000174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
 8000178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 800017c:	0005313a 	rdctl	r2,ipending
 8000180:	e0bfff15 	stw	r2,-4(fp)

  return active;
 8000184:	e0bfff17 	ldw	r2,-4(fp)
 8000188:	00000706 	br	80001a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
 800018c:	e0bffc17 	ldw	r2,-16(fp)
 8000190:	1085883a 	add	r2,r2,r2
 8000194:	e0bffc15 	stw	r2,-16(fp)
      i++;
 8000198:	e0bffd17 	ldw	r2,-12(fp)
 800019c:	10800044 	addi	r2,r2,1
 80001a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
 80001a4:	003fe106 	br	800012c <__alt_data_end+0xf800012c>

    active = alt_irq_pending ();
 80001a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
 80001ac:	e0bffb17 	ldw	r2,-20(fp)
 80001b0:	103fdb1e 	bne	r2,zero,8000120 <__alt_data_end+0xf8000120>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
 80001b4:	0001883a 	nop
}
 80001b8:	0001883a 	nop
 80001bc:	e037883a 	mov	sp,fp
 80001c0:	dfc00117 	ldw	ra,4(sp)
 80001c4:	df000017 	ldw	fp,0(sp)
 80001c8:	dec00204 	addi	sp,sp,8
 80001cc:	f800283a 	ret

080001d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
 80001d0:	defffb04 	addi	sp,sp,-20
 80001d4:	dfc00415 	stw	ra,16(sp)
 80001d8:	df000315 	stw	fp,12(sp)
 80001dc:	df000304 	addi	fp,sp,12
 80001e0:	e13fff15 	stw	r4,-4(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
 80001e4:	000531fa 	rdctl	r2,exception
 80001e8:	e0bffd15 	stw	r2,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
 80001ec:	e0bffd17 	ldw	r2,-12(fp)
 80001f0:	10801f0c 	andi	r2,r2,124
 80001f4:	1004d0ba 	srli	r2,r2,2
 80001f8:	e0bffd15 	stw	r2,-12(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
 80001fc:	0005333a 	rdctl	r2,badaddr
 8000200:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
 8000204:	d0a6f217 	ldw	r2,-25656(gp)
 8000208:	10000726 	beq	r2,zero,8000228 <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
 800020c:	d0a6f217 	ldw	r2,-25656(gp)
 8000210:	e0fffd17 	ldw	r3,-12(fp)
 8000214:	e1bffe17 	ldw	r6,-8(fp)
 8000218:	e17fff17 	ldw	r5,-4(fp)
 800021c:	1809883a 	mov	r4,r3
 8000220:	103ee83a 	callr	r2
 8000224:	00000206 	br	8000230 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
 8000228:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
 800022c:	0005883a 	mov	r2,zero
}
 8000230:	e037883a 	mov	sp,fp
 8000234:	dfc00117 	ldw	ra,4(sp)
 8000238:	df000017 	ldw	fp,0(sp)
 800023c:	dec00204 	addi	sp,sp,8
 8000240:	f800283a 	ret

Disassembly of section .text:

08000244 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
 8000244:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
 8000248:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
 800024c:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
 8000250:	00bffd16 	blt	zero,r2,8000248 <__alt_data_end+0xf8000248>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
 8000254:	06c40034 	movhi	sp,4096
    ori sp, sp, %lo(__alt_stack_pointer)
 8000258:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
 800025c:	06820074 	movhi	gp,2049
    ori gp, gp, %lo(_gp)
 8000260:	d6b3f114 	ori	gp,gp,53188
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
 8000264:	00820074 	movhi	r2,2049
    ori r2, r2, %lo(__bss_start)
 8000268:	109ad214 	ori	r2,r2,27464

    movhi r3, %hi(__bss_end)
 800026c:	00c20074 	movhi	r3,2049
    ori r3, r3, %lo(__bss_end)
 8000270:	18db3214 	ori	r3,r3,27848

    beq r2, r3, 1f
 8000274:	10c00326 	beq	r2,r3,8000284 <_start+0x40>

0:
    stw zero, (r2)
 8000278:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
 800027c:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
 8000280:	10fffd36 	bltu	r2,r3,8000278 <__alt_data_end+0xf8000278>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
 8000284:	80103380 	call	8010338 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
 8000288:	80104cc0 	call	80104cc <alt_main>

0800028c <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
 800028c:	003fff06 	br	800028c <__alt_data_end+0xf800028c>

08000290 <_Z4waiti>:
#define LPCMD ((volatile uint32_t*)PIO_CMD_BASE)
#define LPDATI ((volatile uint32_t*)PIO_DATAIN_BASE)
#define LPDATO ((volatile uint32_t*)PIO_DATAOUT_BASE)

void wait(int val)
{
 8000290:	defffd04 	addi	sp,sp,-12
 8000294:	df000215 	stw	fp,8(sp)
 8000298:	df000204 	addi	fp,sp,8
 800029c:	e13fff15 	stw	r4,-4(fp)
	for(int i =0; i < val; ++i)
 80002a0:	e03ffe15 	stw	zero,-8(fp)
 80002a4:	e0fffe17 	ldw	r3,-8(fp)
 80002a8:	e0bfff17 	ldw	r2,-4(fp)
 80002ac:	1880040e 	bge	r3,r2,80002c0 <_Z4waiti+0x30>
 80002b0:	e0bffe17 	ldw	r2,-8(fp)
 80002b4:	10800044 	addi	r2,r2,1
 80002b8:	e0bffe15 	stw	r2,-8(fp)
 80002bc:	003ff906 	br	80002a4 <__alt_data_end+0xf80002a4>
	{
		// nop;
	}
}
 80002c0:	0001883a 	nop
 80002c4:	e037883a 	mov	sp,fp
 80002c8:	df000017 	ldw	fp,0(sp)
 80002cc:	dec00104 	addi	sp,sp,4
 80002d0:	f800283a 	ret

080002d4 <_Z10QueueInstrm>:
 
void QueueInstr(skGppcu::instr_t instr)
{  
 80002d4:	defffe04 	addi	sp,sp,-8
 80002d8:	df000115 	stw	fp,4(sp)
 80002dc:	df000104 	addi	fp,sp,4
 80002e0:	e13fff15 	stw	r4,-4(fp)
	IOWR_ALTERA_AVALON_PIO_DATA(PIO_CMD_BASE, 0); 
 80002e4:	0007883a 	mov	r3,zero
 80002e8:	00840134 	movhi	r2,4100
 80002ec:	10841404 	addi	r2,r2,4176
 80002f0:	10c00035 	stwio	r3,0(r2)
	IOWR_ALTERA_AVALON_PIO_DATA(PIO_DATAOUT_BASE, instr);
 80002f4:	e0ffff17 	ldw	r3,-4(fp)
 80002f8:	00840134 	movhi	r2,4100
 80002fc:	10841004 	addi	r2,r2,4160
 8000300:	10c00035 	stwio	r3,0(r2)
	IOWR_ALTERA_AVALON_PIO_DATA(PIO_CMD_BASE, 1u << 31); 
 8000304:	00e00034 	movhi	r3,32768
 8000308:	00840134 	movhi	r2,4100
 800030c:	10841404 	addi	r2,r2,4176
 8000310:	10c00035 	stwio	r3,0(r2)
	IOWR_ALTERA_AVALON_PIO_DATA(PIO_CMD_BASE, 0); 
 8000314:	0007883a 	mov	r3,zero
 8000318:	00840134 	movhi	r2,4100
 800031c:	10841404 	addi	r2,r2,4176
 8000320:	10c00035 	stwio	r3,0(r2)
} 
 8000324:	0001883a 	nop
 8000328:	e037883a 	mov	sp,fp
 800032c:	df000017 	ldw	fp,0(sp)
 8000330:	dec00104 	addi	sp,sp,4
 8000334:	f800283a 	ret

08000338 <_Z8ReadDataii>:

#define CMD_RD 2
#define CMD_WR 1
uint32_t ReadData(int ThreadIdx, int WordIdx)
{
 8000338:	defffc04 	addi	sp,sp,-16
 800033c:	df000315 	stw	fp,12(sp)
 8000340:	df000304 	addi	fp,sp,12
 8000344:	e13ffe15 	stw	r4,-8(fp)
 8000348:	e17fff15 	stw	r5,-4(fp)
	uint32_t cmd = (CMD_RD << 24) | (ThreadIdx << 16) | (WordIdx);
 800034c:	e0bffe17 	ldw	r2,-8(fp)
 8000350:	1004943a 	slli	r2,r2,16
 8000354:	10c08034 	orhi	r3,r2,512
 8000358:	e0bfff17 	ldw	r2,-4(fp)
 800035c:	1884b03a 	or	r2,r3,r2
 8000360:	e0bffd15 	stw	r2,-12(fp)
	IOWR_ALTERA_AVALON_PIO_DATA(PIO_CMD_BASE, cmd); 
 8000364:	e0fffd17 	ldw	r3,-12(fp)
 8000368:	00840134 	movhi	r2,4100
 800036c:	10841404 	addi	r2,r2,4176
 8000370:	10c00035 	stwio	r3,0(r2)
	IOWR_ALTERA_AVALON_PIO_DATA(PIO_CMD_BASE, (1u<<31)|cmd); 
 8000374:	e0bffd17 	ldw	r2,-12(fp)
 8000378:	10a00034 	orhi	r2,r2,32768
 800037c:	1007883a 	mov	r3,r2
 8000380:	00840134 	movhi	r2,4100
 8000384:	10841404 	addi	r2,r2,4176
 8000388:	10c00035 	stwio	r3,0(r2)
	IOWR_ALTERA_AVALON_PIO_DATA(PIO_CMD_BASE, ~(1u<<31)&cmd); 
 800038c:	e0fffd17 	ldw	r3,-12(fp)
 8000390:	00a00034 	movhi	r2,32768
 8000394:	10bfffc4 	addi	r2,r2,-1
 8000398:	1886703a 	and	r3,r3,r2
 800039c:	00840134 	movhi	r2,4100
 80003a0:	10841404 	addi	r2,r2,4176
 80003a4:	10c00035 	stwio	r3,0(r2)
	return IORD_ALTERA_AVALON_PIO_DATA(PIO_DATAIN_BASE);
 80003a8:	00840134 	movhi	r2,4100
 80003ac:	10841804 	addi	r2,r2,4192
 80003b0:	10800037 	ldwio	r2,0(r2)
}
 80003b4:	e037883a 	mov	sp,fp
 80003b8:	df000017 	ldw	fp,0(sp)
 80003bc:	dec00104 	addi	sp,sp,4
 80003c0:	f800283a 	ret

080003c4 <_Z9WriteDataiim>:

void WriteData(int ThreadIdx, int WordIdx, uint32_t Data)
{
 80003c4:	defffb04 	addi	sp,sp,-20
 80003c8:	df000415 	stw	fp,16(sp)
 80003cc:	df000404 	addi	fp,sp,16
 80003d0:	e13ffd15 	stw	r4,-12(fp)
 80003d4:	e17ffe15 	stw	r5,-8(fp)
 80003d8:	e1bfff15 	stw	r6,-4(fp)
	uint32_t cmd = (CMD_WR << 24) | (ThreadIdx << 16) | (WordIdx);
 80003dc:	e0bffd17 	ldw	r2,-12(fp)
 80003e0:	1004943a 	slli	r2,r2,16
 80003e4:	10c04034 	orhi	r3,r2,256
 80003e8:	e0bffe17 	ldw	r2,-8(fp)
 80003ec:	1884b03a 	or	r2,r3,r2
 80003f0:	e0bffc15 	stw	r2,-16(fp)
	IOWR_ALTERA_AVALON_PIO_DATA(PIO_DATAOUT_BASE, Data); 
 80003f4:	e0ffff17 	ldw	r3,-4(fp)
 80003f8:	00840134 	movhi	r2,4100
 80003fc:	10841004 	addi	r2,r2,4160
 8000400:	10c00035 	stwio	r3,0(r2)
	IOWR_ALTERA_AVALON_PIO_DATA(PIO_CMD_BASE, (1u<<31)|cmd); 
 8000404:	e0bffc17 	ldw	r2,-16(fp)
 8000408:	10a00034 	orhi	r2,r2,32768
 800040c:	1007883a 	mov	r3,r2
 8000410:	00840134 	movhi	r2,4100
 8000414:	10841404 	addi	r2,r2,4176
 8000418:	10c00035 	stwio	r3,0(r2)
	IOWR_ALTERA_AVALON_PIO_DATA(PIO_CMD_BASE, ~(1u<<31)&cmd);  
 800041c:	e0fffc17 	ldw	r3,-16(fp)
 8000420:	00a00034 	movhi	r2,32768
 8000424:	10bfffc4 	addi	r2,r2,-1
 8000428:	1886703a 	and	r3,r3,r2
 800042c:	00840134 	movhi	r2,4100
 8000430:	10841404 	addi	r2,r2,4176
 8000434:	10c00035 	stwio	r3,0(r2)
}
 8000438:	0001883a 	nop
 800043c:	e037883a 	mov	sp,fp
 8000440:	df000017 	ldw	fp,0(sp)
 8000444:	dec00104 	addi	sp,sp,4
 8000448:	f800283a 	ret

0800044c <main>:

int main()
{ 
 800044c:	deffdb04 	addi	sp,sp,-148
 8000450:	dfc02415 	stw	ra,144(sp)
 8000454:	df002315 	stw	fp,140(sp)
 8000458:	ddc02215 	stw	r23,136(sp)
 800045c:	dd802115 	stw	r22,132(sp)
 8000460:	dd402015 	stw	r21,128(sp)
 8000464:	dd001f15 	stw	r20,124(sp)
 8000468:	dcc01e15 	stw	r19,120(sp)
 800046c:	dc801d15 	stw	r18,116(sp)
 8000470:	dc401c15 	stw	r17,112(sp)
 8000474:	dc001b15 	stw	r16,108(sp)
 8000478:	df002304 	addi	fp,sp,140
 800047c:	00820034 	movhi	r2,2048
 8000480:	10850a04 	addi	r2,r2,5160
 8000484:	e0bff015 	stw	r2,-64(fp)
 8000488:	00820074 	movhi	r2,2049
 800048c:	1089d204 	addi	r2,r2,10056
 8000490:	e0bff115 	stw	r2,-60(fp)
 8000494:	e0bff204 	addi	r2,fp,-56
 8000498:	e0ffdd04 	addi	r3,fp,-140
 800049c:	10c00015 	stw	r3,0(r2)
 80004a0:	00c20034 	movhi	r3,2048
 80004a4:	18c1c404 	addi	r3,r3,1808
 80004a8:	10c00115 	stw	r3,4(r2)
 80004ac:	16c00215 	stw	sp,8(r2)
 80004b0:	e0bfea04 	addi	r2,fp,-88
 80004b4:	1009883a 	mov	r4,r2
 80004b8:	8002d080 	call	8002d08 <_Unwind_SjLj_Register>
	printf("Hello from Nios II! ... Launching ... \n");
 80004bc:	01020074 	movhi	r4,2049
 80004c0:	00bfffc4 	movi	r2,-1
 80004c4:	e0bfeb15 	stw	r2,-84(fp)
 80004c8:	2109e304 	addi	r4,r4,10124
 80004cc:	8003ae00 	call	8003ae0 <puts>

	memset((void*)LPDISPLAY, 0, 96000*sizeof(*LPDISPLAY));
 80004d0:	008001b4 	movhi	r2,6
 80004d4:	10b70004 	addi	r2,r2,-9216
 80004d8:	100d883a 	mov	r6,r2
 80004dc:	000b883a 	mov	r5,zero
 80004e0:	01040034 	movhi	r4,4096
 80004e4:	800386c0 	call	800386c <memset>
	skConsole Console(400, 240); 
 80004e8:	e0bfe404 	addi	r2,fp,-112
 80004ec:	01803c04 	movi	r6,240
 80004f0:	01406404 	movi	r5,400
 80004f4:	1009883a 	mov	r4,r2
 80004f8:	80007400 	call	8000740 <_ZN9skConsoleC1Ejj>

	const int max_iter = 15;
 80004fc:	008003c4 	movi	r2,15
 8000500:	e0bfe215 	stw	r2,-120(fp)
	const int max_rot  = 8;
 8000504:	00800204 	movi	r2,8
 8000508:	e0bfe315 	stw	r2,-116(fp)
	for(int i = 0; i < max_rot; ++i)
 800050c:	e03fdd15 	stw	zero,-140(fp)
 8000510:	e0bfdd17 	ldw	r2,-140(fp)
 8000514:	10800208 	cmpgei	r2,r2,8
 8000518:	10000a1e 	bne	r2,zero,8000544 <main+0xf8>
	{
		WriteData(i, 0, 0x1000 + i);
 800051c:	e0bfdd17 	ldw	r2,-140(fp)
 8000520:	10840004 	addi	r2,r2,4096
 8000524:	100d883a 	mov	r6,r2
 8000528:	000b883a 	mov	r5,zero
 800052c:	e13fdd17 	ldw	r4,-140(fp)
 8000530:	80003c40 	call	80003c4 <_Z9WriteDataiim>
	memset((void*)LPDISPLAY, 0, 96000*sizeof(*LPDISPLAY));
	skConsole Console(400, 240); 

	const int max_iter = 15;
	const int max_rot  = 8;
	for(int i = 0; i < max_rot; ++i)
 8000534:	e0bfdd17 	ldw	r2,-140(fp)
 8000538:	10800044 	addi	r2,r2,1
 800053c:	e0bfdd15 	stw	r2,-140(fp)
 8000540:	003ff306 	br	8000510 <__alt_data_end+0xf8000510>
		WriteData(i, 0, 0x1000 + i);
	}
	
	using namespace GPPCU; 
	
	wait(1000); 
 8000544:	0100fa04 	movi	r4,1000
 8000548:	80002900 	call	8000290 <_Z4waiti>
	
	int cc = 0;
 800054c:	e03fde15 	stw	zero,-136(fp)
#define R(v) v
	while(1)
	{
		QueueInstr(GPPCU_ASSEMBLE_INSTRUCTION_C(COND_ALWAYS, OPR_MVI, 0, R(0), ++cc));
 8000550:	e0bfde17 	ldw	r2,-136(fp)
 8000554:	10800044 	addi	r2,r2,1
 8000558:	e0bfde15 	stw	r2,-136(fp)
 800055c:	e0ffde17 	ldw	r3,-136(fp)
 8000560:	008000b4 	movhi	r2,2
 8000564:	10bfffc4 	addi	r2,r2,-1
 8000568:	1884703a 	and	r2,r3,r2
 800056c:	10814034 	orhi	r2,r2,1280
 8000570:	1009883a 	mov	r4,r2
 8000574:	80002d40 	call	80002d4 <_Z10QueueInstrm>
		QueueInstr(GPPCU_ASSEMBLE_INSTRUCTION_C(COND_ALWAYS, OPR_MVI, 0, R(1), cc));
 8000578:	e0ffde17 	ldw	r3,-136(fp)
 800057c:	008000b4 	movhi	r2,2
 8000580:	10bfffc4 	addi	r2,r2,-1
 8000584:	1884703a 	and	r2,r3,r2
 8000588:	108140b4 	orhi	r2,r2,1282
 800058c:	1009883a 	mov	r4,r2
 8000590:	80002d40 	call	80002d4 <_Z10QueueInstrm>
		QueueInstr(GPPCU_ASSEMBLE_INSTRUCTION_A(COND_ALWAYS, OPR_ITOF, 0, R(2), R(0), 0, R(0)));
 8000594:	0101c134 	movhi	r4,1796
 8000598:	80002d40 	call	80002d4 <_Z10QueueInstrm>
		QueueInstr(GPPCU_ASSEMBLE_INSTRUCTION_A(COND_ALWAYS, OPR_ADC, 0, R(3), R(1), 0, R(0)));
 800059c:	010061b4 	movhi	r4,390
 80005a0:	21040004 	addi	r4,r4,4096
 80005a4:	80002d40 	call	80002d4 <_Z10QueueInstrm>
		QueueInstr(GPPCU_ASSEMBLE_INSTRUCTION_A(COND_ALWAYS, OPR_ADC, 0, R(3), R(3), 0, R(0)));
 80005a8:	010061b4 	movhi	r4,390
 80005ac:	210c0004 	addi	r4,r4,12288
 80005b0:	80002d40 	call	80002d4 <_Z10QueueInstrm>
		QueueInstr(GPPCU_ASSEMBLE_INSTRUCTION_C(COND_ALWAYS, OPR_MVI, 0, R(4), 8));
 80005b4:	01014234 	movhi	r4,1288
 80005b8:	21000204 	addi	r4,r4,8
 80005bc:	80002d40 	call	80002d4 <_Z10QueueInstrm>
		QueueInstr(GPPCU_ASSEMBLE_INSTRUCTION_A(COND_ALWAYS, OPR_STL, 0, R(0), R(3), 0, R(4)));
 80005c0:	01030034 	movhi	r4,3072
 80005c4:	210c0104 	addi	r4,r4,12292
 80005c8:	80002d40 	call	80002d4 <_Z10QueueInstrm>
		QueueInstr(GPPCU_ASSEMBLE_INSTRUCTION_C(COND_ALWAYS, OPR_MVI, 0, R(4), 7));
 80005cc:	01014234 	movhi	r4,1288
 80005d0:	210001c4 	addi	r4,r4,7
 80005d4:	80002d40 	call	80002d4 <_Z10QueueInstrm>
		QueueInstr(GPPCU_ASSEMBLE_INSTRUCTION_A(COND_ALWAYS, OPR_STL, 0, R(0), R(2), 0, R(4)));
 80005d8:	01030034 	movhi	r4,3072
 80005dc:	21080104 	addi	r4,r4,8196
 80005e0:	80002d40 	call	80002d4 <_Z10QueueInstrm>
		QueueInstr(GPPCU_ASSEMBLE_INSTRUCTION_C(COND_ALWAYS, OPR_MVI, 0, R(4), 6));
 80005e4:	01014234 	movhi	r4,1288
 80005e8:	21000184 	addi	r4,r4,6
 80005ec:	80002d40 	call	80002d4 <_Z10QueueInstrm>
		QueueInstr(GPPCU_ASSEMBLE_INSTRUCTION_A(COND_ALWAYS, OPR_STL, 0, R(0), R(1), 0, R(4)));
 80005f0:	01030034 	movhi	r4,3072
 80005f4:	21040104 	addi	r4,r4,4100
 80005f8:	80002d40 	call	80002d4 <_Z10QueueInstrm>
		QueueInstr(GPPCU_ASSEMBLE_INSTRUCTION_C(COND_ALWAYS, OPR_MVI, 0, R(0), 0));
 80005fc:	01014034 	movhi	r4,1280
 8000600:	80002d40 	call	80002d4 <_Z10QueueInstrm>
		QueueInstr(GPPCU_ASSEMBLE_INSTRUCTION_C(COND_ALWAYS, OPR_LDL, 0, R(11), R(0)));
 8000604:	0102c5b4 	movhi	r4,2838
 8000608:	80002d40 	call	80002d4 <_Z10QueueInstrm>
		QueueInstr(GPPCU_ASSEMBLE_INSTRUCTION_C(COND_ALWAYS, OPR_MVI, 0, R(1), 1));
 800060c:	010140b4 	movhi	r4,1282
 8000610:	21000044 	addi	r4,r4,1
 8000614:	80002d40 	call	80002d4 <_Z10QueueInstrm>
		QueueInstr(GPPCU_ASSEMBLE_INSTRUCTION_A(COND_ALWAYS, OPR_STL, 0, R(0), R(11), 0, R(1)));
 8000618:	01030074 	movhi	r4,3073
 800061c:	212c0044 	addi	r4,r4,-20479
 8000620:	80002d40 	call	80002d4 <_Z10QueueInstrm>
		
		wait(10000000);
 8000624:	01002674 	movhi	r4,153
 8000628:	2125a004 	addi	r4,r4,-27008
 800062c:	80002900 	call	8000290 <_Z4waiti>
		
		for(int rot = 0; rot < max_rot; ++rot)
 8000630:	e03fdf15 	stw	zero,-132(fp)
 8000634:	e0bfdf17 	ldw	r2,-132(fp)
 8000638:	10800208 	cmpgei	r2,r2,8
 800063c:	103fc41e 	bne	r2,zero,8000550 <__alt_data_end+0xf8000550>
		{
			printf("for thread %d\n", rot);
 8000640:	e17fdf17 	ldw	r5,-132(fp)
 8000644:	01020074 	movhi	r4,2049
 8000648:	00800044 	movi	r2,1
 800064c:	e0bfeb15 	stw	r2,-84(fp)
 8000650:	2109ed04 	addi	r4,r4,10164
 8000654:	80039c40 	call	80039c4 <printf>
			for(int i=0; i<max_iter; ++i)
 8000658:	e03fe015 	stw	zero,-128(fp)
 800065c:	e0bfe017 	ldw	r2,-128(fp)
 8000660:	108003c8 	cmpgei	r2,r2,15
 8000664:	10000a1e 	bne	r2,zero,8000690 <main+0x244>
			{
				printf("%9x", i);
 8000668:	e17fe017 	ldw	r5,-128(fp)
 800066c:	01020074 	movhi	r4,2049
 8000670:	00800044 	movi	r2,1
 8000674:	e0bfeb15 	stw	r2,-84(fp)
 8000678:	2109f104 	addi	r4,r4,10180
 800067c:	80039c40 	call	80039c4 <printf>
		wait(10000000);
		
		for(int rot = 0; rot < max_rot; ++rot)
		{
			printf("for thread %d\n", rot);
			for(int i=0; i<max_iter; ++i)
 8000680:	e0bfe017 	ldw	r2,-128(fp)
 8000684:	10800044 	addi	r2,r2,1
 8000688:	e0bfe015 	stw	r2,-128(fp)
 800068c:	003ff306 	br	800065c <__alt_data_end+0xf800065c>
			{
				printf("%9x", i);
			}
			printf("\n");
 8000690:	00800044 	movi	r2,1
 8000694:	e0bfeb15 	stw	r2,-84(fp)
 8000698:	01000284 	movi	r4,10
 800069c:	8003a080 	call	8003a08 <putchar>
			for(int i=0; i<max_iter; ++i)
 80006a0:	e03fe115 	stw	zero,-124(fp)
 80006a4:	e0bfe117 	ldw	r2,-124(fp)
 80006a8:	108003c8 	cmpgei	r2,r2,15
 80006ac:	1000101e 	bne	r2,zero,80006f0 <main+0x2a4>
			{
				ReadData(rot, i);
 80006b0:	e17fe117 	ldw	r5,-124(fp)
 80006b4:	e13fdf17 	ldw	r4,-132(fp)
 80006b8:	80003380 	call	8000338 <_Z8ReadDataii>
				printf("%9x", ReadData(rot, i));
 80006bc:	e17fe117 	ldw	r5,-124(fp)
 80006c0:	e13fdf17 	ldw	r4,-132(fp)
 80006c4:	80003380 	call	8000338 <_Z8ReadDataii>
 80006c8:	100b883a 	mov	r5,r2
 80006cc:	01020074 	movhi	r4,2049
 80006d0:	00800044 	movi	r2,1
 80006d4:	e0bfeb15 	stw	r2,-84(fp)
 80006d8:	2109f104 	addi	r4,r4,10180
 80006dc:	80039c40 	call	80039c4 <printf>
			for(int i=0; i<max_iter; ++i)
			{
				printf("%9x", i);
			}
			printf("\n");
			for(int i=0; i<max_iter; ++i)
 80006e0:	e0bfe117 	ldw	r2,-124(fp)
 80006e4:	10800044 	addi	r2,r2,1
 80006e8:	e0bfe115 	stw	r2,-124(fp)
 80006ec:	003fed06 	br	80006a4 <__alt_data_end+0xf80006a4>
			{
				ReadData(rot, i);
				printf("%9x", ReadData(rot, i));
			}
			printf("\n");
 80006f0:	00800044 	movi	r2,1
 80006f4:	e0bfeb15 	stw	r2,-84(fp)
 80006f8:	01000284 	movi	r4,10
 80006fc:	8003a080 	call	8003a08 <putchar>
		QueueInstr(GPPCU_ASSEMBLE_INSTRUCTION_C(COND_ALWAYS, OPR_MVI, 0, R(1), 1));
		QueueInstr(GPPCU_ASSEMBLE_INSTRUCTION_A(COND_ALWAYS, OPR_STL, 0, R(0), R(11), 0, R(1)));
		
		wait(10000000);
		
		for(int rot = 0; rot < max_rot; ++rot)
 8000700:	e0bfdf17 	ldw	r2,-132(fp)
 8000704:	10800044 	addi	r2,r2,1
 8000708:	e0bfdf15 	stw	r2,-132(fp)
 800070c:	003fc906 	br	8000634 <__alt_data_end+0xf8000634>
 8000710:	e7002304 	addi	fp,fp,140
 8000714:	e0bfec17 	ldw	r2,-80(fp)
 8000718:	e0bff715 	stw	r2,-36(fp)
int main()
{ 
	printf("Hello from Nios II! ... Launching ... \n");

	memset((void*)LPDISPLAY, 0, 96000*sizeof(*LPDISPLAY));
	skConsole Console(400, 240); 
 800071c:	e0bfe404 	addi	r2,fp,-112
 8000720:	e03feb15 	stw	zero,-84(fp)
 8000724:	1009883a 	mov	r4,r2
 8000728:	80007f80 	call	80007f8 <_ZN9skConsoleD1Ev>
 800072c:	e0fff717 	ldw	r3,-36(fp)
 8000730:	00bfffc4 	movi	r2,-1
 8000734:	e0bfeb15 	stw	r2,-84(fp)
 8000738:	1809883a 	mov	r4,r3
 800073c:	8002f040 	call	8002f04 <_Unwind_SjLj_Resume>

08000740 <_ZN9skConsoleC1Ejj>:
#include "chout.hpp"
#include <stdlib.h>
#include <string.h>

skConsole::skConsole(size_t Width, size_t Height) :
 8000740:	defffb04 	addi	sp,sp,-20
 8000744:	dfc00415 	stw	ra,16(sp)
 8000748:	df000315 	stw	fp,12(sp)
 800074c:	df000304 	addi	fp,sp,12
 8000750:	e13ffd15 	stw	r4,-12(fp)
 8000754:	e17ffe15 	stw	r5,-8(fp)
 8000758:	e1bfff15 	stw	r6,-4(fp)
	mHeight(Height),
	mBuff(new uint16_t(Width * Height)),  
	mCsrX(0),
	mCsrY(0),
	ForeColor(0xffff),
	BackColor(0x0000)
 800075c:	e0bffd17 	ldw	r2,-12(fp)
 8000760:	00ffffc4 	movi	r3,-1
 8000764:	10c0000d 	sth	r3,0(r2)
 8000768:	e0bffd17 	ldw	r2,-12(fp)
 800076c:	1000008d 	sth	zero,2(r2)
 8000770:	e0bffd17 	ldw	r2,-12(fp)
 8000774:	10000115 	stw	zero,4(r2)
 8000778:	e0bffd17 	ldw	r2,-12(fp)
 800077c:	10000215 	stw	zero,8(r2)
 8000780:	e0bffd17 	ldw	r2,-12(fp)
 8000784:	e0fffe17 	ldw	r3,-8(fp)
 8000788:	10c00315 	stw	r3,12(r2)
 800078c:	e0bffd17 	ldw	r2,-12(fp)
 8000790:	e0ffff17 	ldw	r3,-4(fp)
 8000794:	10c00415 	stw	r3,16(r2)
 8000798:	01000084 	movi	r4,2
 800079c:	8001f300 	call	8001f30 <_Znwj>
 80007a0:	e0fffe17 	ldw	r3,-8(fp)
 80007a4:	1809883a 	mov	r4,r3
 80007a8:	e0ffff17 	ldw	r3,-4(fp)
 80007ac:	20c7383a 	mul	r3,r4,r3
 80007b0:	10c0000d 	sth	r3,0(r2)
 80007b4:	e0fffd17 	ldw	r3,-12(fp)
 80007b8:	18800515 	stw	r2,20(r3)
{
	memset(mBuff, 0, Width*Height*sizeof(*mBuff));
 80007bc:	e0bffd17 	ldw	r2,-12(fp)
 80007c0:	11000517 	ldw	r4,20(r2)
 80007c4:	e0fffe17 	ldw	r3,-8(fp)
 80007c8:	e0bfff17 	ldw	r2,-4(fp)
 80007cc:	1885383a 	mul	r2,r3,r2
 80007d0:	1085883a 	add	r2,r2,r2
 80007d4:	100d883a 	mov	r6,r2
 80007d8:	000b883a 	mov	r5,zero
 80007dc:	800386c0 	call	800386c <memset>
}
 80007e0:	0001883a 	nop
 80007e4:	e037883a 	mov	sp,fp
 80007e8:	dfc00117 	ldw	ra,4(sp)
 80007ec:	df000017 	ldw	fp,0(sp)
 80007f0:	dec00204 	addi	sp,sp,8
 80007f4:	f800283a 	ret

080007f8 <_ZN9skConsoleD1Ev>:

skConsole::~skConsole()
 80007f8:	defffd04 	addi	sp,sp,-12
 80007fc:	dfc00215 	stw	ra,8(sp)
 8000800:	df000115 	stw	fp,4(sp)
 8000804:	df000104 	addi	fp,sp,4
 8000808:	e13fff15 	stw	r4,-4(fp)
{
	delete mBuff;
 800080c:	e0bfff17 	ldw	r2,-4(fp)
 8000810:	10800517 	ldw	r2,20(r2)
 8000814:	1009883a 	mov	r4,r2
 8000818:	8000c700 	call	8000c70 <_ZdlPv>
}
 800081c:	0001883a 	nop
 8000820:	e037883a 	mov	sp,fp
 8000824:	dfc00117 	ldw	ra,4(sp)
 8000828:	df000017 	ldw	fp,0(sp)
 800082c:	dec00204 	addi	sp,sp,8
 8000830:	f800283a 	ret

08000834 <_ZN9skConsole5WriteEPc>:

void skConsole::Write(char* str)
{ 
 8000834:	defffc04 	addi	sp,sp,-16
 8000838:	dfc00315 	stw	ra,12(sp)
 800083c:	df000215 	stw	fp,8(sp)
 8000840:	df000204 	addi	fp,sp,8
 8000844:	e13ffe15 	stw	r4,-8(fp)
 8000848:	e17fff15 	stw	r5,-4(fp)
	while(*str != 0)
 800084c:	e0bfff17 	ldw	r2,-4(fp)
 8000850:	10800003 	ldbu	r2,0(r2)
 8000854:	10803fcc 	andi	r2,r2,255
 8000858:	1080201c 	xori	r2,r2,128
 800085c:	10bfe004 	addi	r2,r2,-128
 8000860:	10000b26 	beq	r2,zero,8000890 <_ZN9skConsole5WriteEPc+0x5c>
	{
		WriteChar(*str++);
 8000864:	e0bfff17 	ldw	r2,-4(fp)
 8000868:	10c00044 	addi	r3,r2,1
 800086c:	e0ffff15 	stw	r3,-4(fp)
 8000870:	10800003 	ldbu	r2,0(r2)
 8000874:	10803fcc 	andi	r2,r2,255
 8000878:	1080201c 	xori	r2,r2,128
 800087c:	10bfe004 	addi	r2,r2,-128
 8000880:	100b883a 	mov	r5,r2
 8000884:	e13ffe17 	ldw	r4,-8(fp)
 8000888:	80009b40 	call	80009b4 <_ZN9skConsole9WriteCharEc>
	delete mBuff;
}

void skConsole::Write(char* str)
{ 
	while(*str != 0)
 800088c:	003fef06 	br	800084c <__alt_data_end+0xf800084c>
	{
		WriteChar(*str++);
	}
}
 8000890:	0001883a 	nop
 8000894:	e037883a 	mov	sp,fp
 8000898:	dfc00117 	ldw	ra,4(sp)
 800089c:	df000017 	ldw	fp,0(sp)
 80008a0:	dec00204 	addi	sp,sp,8
 80008a4:	f800283a 	ret

080008a8 <_ZN9skConsole9SetCursorEii>:

void skConsole::SetCursor(int x, int y)
{
 80008a8:	defffc04 	addi	sp,sp,-16
 80008ac:	df000315 	stw	fp,12(sp)
 80008b0:	df000304 	addi	fp,sp,12
 80008b4:	e13ffd15 	stw	r4,-12(fp)
 80008b8:	e17ffe15 	stw	r5,-8(fp)
 80008bc:	e1bfff15 	stw	r6,-4(fp)
	
}
 80008c0:	0001883a 	nop
 80008c4:	e037883a 	mov	sp,fp
 80008c8:	df000017 	ldw	fp,0(sp)
 80008cc:	dec00104 	addi	sp,sp,4
 80008d0:	f800283a 	ret

080008d4 <_ZNK9skConsole9GetCursorERiS0_>:

void skConsole::GetCursor(int& x, int& y) const
{
 80008d4:	defffc04 	addi	sp,sp,-16
 80008d8:	df000315 	stw	fp,12(sp)
 80008dc:	df000304 	addi	fp,sp,12
 80008e0:	e13ffd15 	stw	r4,-12(fp)
 80008e4:	e17ffe15 	stw	r5,-8(fp)
 80008e8:	e1bfff15 	stw	r6,-4(fp)
	
}
 80008ec:	0001883a 	nop
 80008f0:	e037883a 	mov	sp,fp
 80008f4:	df000017 	ldw	fp,0(sp)
 80008f8:	dec00104 	addi	sp,sp,4
 80008fc:	f800283a 	ret

08000900 <_ZNK9skConsole5PrintEPVm>:

void skConsole::Print(volatile uint32_t* output_addr) const
{
 8000900:	defffb04 	addi	sp,sp,-20
 8000904:	df000415 	stw	fp,16(sp)
 8000908:	df000404 	addi	fp,sp,16
 800090c:	e13ffe15 	stw	r4,-8(fp)
 8000910:	e17fff15 	stw	r5,-4(fp)
	uint16_t const* lpHead = mBuff;
 8000914:	e0bffe17 	ldw	r2,-8(fp)
 8000918:	10800517 	ldw	r2,20(r2)
 800091c:	e0bffc15 	stw	r2,-16(fp)
	uint16_t const* const lpEnd = mBuff + mWidth * mHeight;
 8000920:	e0bffe17 	ldw	r2,-8(fp)
 8000924:	10c00517 	ldw	r3,20(r2)
 8000928:	e0bffe17 	ldw	r2,-8(fp)
 800092c:	11000317 	ldw	r4,12(r2)
 8000930:	e0bffe17 	ldw	r2,-8(fp)
 8000934:	10800417 	ldw	r2,16(r2)
 8000938:	2085383a 	mul	r2,r4,r2
 800093c:	1085883a 	add	r2,r2,r2
 8000940:	1885883a 	add	r2,r3,r2
 8000944:	e0bffd15 	stw	r2,-12(fp)
	
	while(lpHead < lpEnd)
 8000948:	e0fffc17 	ldw	r3,-16(fp)
 800094c:	e0bffd17 	ldw	r2,-12(fp)
 8000950:	1880132e 	bgeu	r3,r2,80009a0 <_ZNK9skConsole5PrintEPVm+0xa0>
	{
		output_addr[0] = ((lpHead[1]&0xffff) << 16) | lpHead[0];  
 8000954:	e0bffc17 	ldw	r2,-16(fp)
 8000958:	10800084 	addi	r2,r2,2
 800095c:	1080000b 	ldhu	r2,0(r2)
 8000960:	10bfffcc 	andi	r2,r2,65535
 8000964:	1006943a 	slli	r3,r2,16
 8000968:	e0bffc17 	ldw	r2,-16(fp)
 800096c:	1080000b 	ldhu	r2,0(r2)
 8000970:	10bfffcc 	andi	r2,r2,65535
 8000974:	1884b03a 	or	r2,r3,r2
 8000978:	1007883a 	mov	r3,r2
 800097c:	e0bfff17 	ldw	r2,-4(fp)
 8000980:	10c00015 	stw	r3,0(r2)
		++output_addr;
 8000984:	e0bfff17 	ldw	r2,-4(fp)
 8000988:	10800104 	addi	r2,r2,4
 800098c:	e0bfff15 	stw	r2,-4(fp)
		lpHead += 2;
 8000990:	e0bffc17 	ldw	r2,-16(fp)
 8000994:	10800104 	addi	r2,r2,4
 8000998:	e0bffc15 	stw	r2,-16(fp)
void skConsole::Print(volatile uint32_t* output_addr) const
{
	uint16_t const* lpHead = mBuff;
	uint16_t const* const lpEnd = mBuff + mWidth * mHeight;
	
	while(lpHead < lpEnd)
 800099c:	003fea06 	br	8000948 <__alt_data_end+0xf8000948>
	{
		output_addr[0] = ((lpHead[1]&0xffff) << 16) | lpHead[0];  
		++output_addr;
		lpHead += 2;
	}
}
 80009a0:	0001883a 	nop
 80009a4:	e037883a 	mov	sp,fp
 80009a8:	df000017 	ldw	fp,0(sp)
 80009ac:	dec00104 	addi	sp,sp,4
 80009b0:	f800283a 	ret

080009b4 <_ZN9skConsole9WriteCharEc>:

void skConsole::WriteChar(char p)
{
 80009b4:	defff704 	addi	sp,sp,-36
 80009b8:	df000815 	stw	fp,32(sp)
 80009bc:	df000804 	addi	fp,sp,32
 80009c0:	e13ffe15 	stw	r4,-8(fp)
 80009c4:	2805883a 	mov	r2,r5
 80009c8:	e0bfff05 	stb	r2,-4(fp)
	switch(p)
 80009cc:	e0bfff07 	ldb	r2,-4(fp)
 80009d0:	10c00260 	cmpeqi	r3,r2,9
 80009d4:	1800051e 	bne	r3,zero,80009ec <_ZN9skConsole9WriteCharEc+0x38>
 80009d8:	10c002a0 	cmpeqi	r3,r2,10
 80009dc:	18001e1e 	bne	r3,zero,8000a58 <_ZN9skConsole9WriteCharEc+0xa4>
 80009e0:	10800220 	cmpeqi	r2,r2,8
 80009e4:	10002b1e 	bne	r2,zero,8000a94 <_ZN9skConsole9WriteCharEc+0xe0>
				mCsrY = mHeight - 16;
			}
		} 
		break;
	default:
		break;
 80009e8:	00003d06 	br	8000ae0 <_ZN9skConsole9WriteCharEc+0x12c>
void skConsole::WriteChar(char p)
{
	switch(p)
	{ 
	case '\t':
		mCsrX = (((mCsrX / 8) / 4) + 1) * 4 * 8;
 80009ec:	e0bffe17 	ldw	r2,-8(fp)
 80009f0:	10800117 	ldw	r2,4(r2)
 80009f4:	1004d17a 	srli	r2,r2,5
 80009f8:	10800044 	addi	r2,r2,1
 80009fc:	1006917a 	slli	r3,r2,5
 8000a00:	e0bffe17 	ldw	r2,-8(fp)
 8000a04:	10c00115 	stw	r3,4(r2)
		if(mCsrX >= mWidth)
 8000a08:	e0bffe17 	ldw	r2,-8(fp)
 8000a0c:	10c00117 	ldw	r3,4(r2)
 8000a10:	e0bffe17 	ldw	r2,-8(fp)
 8000a14:	10800317 	ldw	r2,12(r2)
 8000a18:	18808e36 	bltu	r3,r2,8000c54 <_ZN9skConsole9WriteCharEc+0x2a0>
		{
			mCsrX = 0;
 8000a1c:	e0bffe17 	ldw	r2,-8(fp)
 8000a20:	10000115 	stw	zero,4(r2)
			mCsrY += 16;
 8000a24:	e0bffe17 	ldw	r2,-8(fp)
 8000a28:	10800217 	ldw	r2,8(r2)
 8000a2c:	10c00404 	addi	r3,r2,16
 8000a30:	e0bffe17 	ldw	r2,-8(fp)
 8000a34:	10c00215 	stw	r3,8(r2)
			if(mCsrY >= mHeight)
 8000a38:	e0bffe17 	ldw	r2,-8(fp)
 8000a3c:	10c00217 	ldw	r3,8(r2)
 8000a40:	e0bffe17 	ldw	r2,-8(fp)
 8000a44:	10800417 	ldw	r2,16(r2)
 8000a48:	18808236 	bltu	r3,r2,8000c54 <_ZN9skConsole9WriteCharEc+0x2a0>
			{
				mCsrY = 0;
 8000a4c:	e0bffe17 	ldw	r2,-8(fp)
 8000a50:	10000215 	stw	zero,8(r2)
			}
		}
		return;
 8000a54:	00007f06 	br	8000c54 <_ZN9skConsole9WriteCharEc+0x2a0>
	case '\n':
		mCsrX = 0;
 8000a58:	e0bffe17 	ldw	r2,-8(fp)
 8000a5c:	10000115 	stw	zero,4(r2)
		mCsrY += 16;
 8000a60:	e0bffe17 	ldw	r2,-8(fp)
 8000a64:	10800217 	ldw	r2,8(r2)
 8000a68:	10c00404 	addi	r3,r2,16
 8000a6c:	e0bffe17 	ldw	r2,-8(fp)
 8000a70:	10c00215 	stw	r3,8(r2)
		if(mCsrY >= mHeight)
 8000a74:	e0bffe17 	ldw	r2,-8(fp)
 8000a78:	10c00217 	ldw	r3,8(r2)
 8000a7c:	e0bffe17 	ldw	r2,-8(fp)
 8000a80:	10800417 	ldw	r2,16(r2)
 8000a84:	18807536 	bltu	r3,r2,8000c5c <_ZN9skConsole9WriteCharEc+0x2a8>
		{
			mCsrY = 0;
 8000a88:	e0bffe17 	ldw	r2,-8(fp)
 8000a8c:	10000215 	stw	zero,8(r2)
		}
		return;
 8000a90:	00007206 	br	8000c5c <_ZN9skConsole9WriteCharEc+0x2a8>
	case 0x08: //Backspace
		if((mCsrX-=8) < 0)
 8000a94:	e0bffe17 	ldw	r2,-8(fp)
 8000a98:	10800117 	ldw	r2,4(r2)
 8000a9c:	10fffe04 	addi	r3,r2,-8
 8000aa0:	e0bffe17 	ldw	r2,-8(fp)
 8000aa4:	10c00115 	stw	r3,4(r2)
 8000aa8:	0005883a 	mov	r2,zero
 8000aac:	10803fcc 	andi	r2,r2,255
 8000ab0:	10000a26 	beq	r2,zero,8000adc <_ZN9skConsole9WriteCharEc+0x128>
		{
			mCsrX = mWidth - 8;
 8000ab4:	e0bffe17 	ldw	r2,-8(fp)
 8000ab8:	10800317 	ldw	r2,12(r2)
 8000abc:	10fffe04 	addi	r3,r2,-8
 8000ac0:	e0bffe17 	ldw	r2,-8(fp)
 8000ac4:	10c00115 	stw	r3,4(r2)
			mCsrY -= 16;
 8000ac8:	e0bffe17 	ldw	r2,-8(fp)
 8000acc:	10800217 	ldw	r2,8(r2)
 8000ad0:	10fffc04 	addi	r3,r2,-16
 8000ad4:	e0bffe17 	ldw	r2,-8(fp)
 8000ad8:	10c00215 	stw	r3,8(r2)
			if(mCsrY < 0)
			{
				mCsrY = mHeight - 16;
			}
		} 
		break;
 8000adc:	0001883a 	nop
	default:
		break;
	}
	uint8_t const* lpChar = &CGROM[p*16];
 8000ae0:	e0bfff07 	ldb	r2,-4(fp)
 8000ae4:	1006913a 	slli	r3,r2,4
 8000ae8:	00820074 	movhi	r2,2049
 8000aec:	1089f204 	addi	r2,r2,10184
 8000af0:	1885883a 	add	r2,r3,r2
 8000af4:	e0bff815 	stw	r2,-32(fp)
	uint16_t* lpPivot = &mBuff[mCsrY * mWidth + mCsrX];
 8000af8:	e0bffe17 	ldw	r2,-8(fp)
 8000afc:	10c00517 	ldw	r3,20(r2)
 8000b00:	e0bffe17 	ldw	r2,-8(fp)
 8000b04:	11000217 	ldw	r4,8(r2)
 8000b08:	e0bffe17 	ldw	r2,-8(fp)
 8000b0c:	10800317 	ldw	r2,12(r2)
 8000b10:	2089383a 	mul	r4,r4,r2
 8000b14:	e0bffe17 	ldw	r2,-8(fp)
 8000b18:	10800117 	ldw	r2,4(r2)
 8000b1c:	2085883a 	add	r2,r4,r2
 8000b20:	1085883a 	add	r2,r2,r2
 8000b24:	1885883a 	add	r2,r3,r2
 8000b28:	e0bff915 	stw	r2,-28(fp)
	
	for(int row = 0; row < 16; ++row)
 8000b2c:	e03ffa15 	stw	zero,-24(fp)
 8000b30:	e0bffa17 	ldw	r2,-24(fp)
 8000b34:	10800408 	cmpgei	r2,r2,16
 8000b38:	10002b1e 	bne	r2,zero,8000be8 <_ZN9skConsole9WriteCharEc+0x234>
	{
		uint8_t ch = *lpChar++;
 8000b3c:	e0bff817 	ldw	r2,-32(fp)
 8000b40:	10c00044 	addi	r3,r2,1
 8000b44:	e0fff815 	stw	r3,-32(fp)
 8000b48:	10800003 	ldbu	r2,0(r2)
 8000b4c:	e0bffb05 	stb	r2,-20(fp)
		uint16_t* lpHead = lpPivot;
 8000b50:	e0bff917 	ldw	r2,-28(fp)
 8000b54:	e0bffc15 	stw	r2,-16(fp)
		lpPivot += mWidth;
 8000b58:	e0bffe17 	ldw	r2,-8(fp)
 8000b5c:	10800317 	ldw	r2,12(r2)
 8000b60:	1085883a 	add	r2,r2,r2
 8000b64:	1007883a 	mov	r3,r2
 8000b68:	e0bff917 	ldw	r2,-28(fp)
 8000b6c:	10c5883a 	add	r2,r2,r3
 8000b70:	e0bff915 	stw	r2,-28(fp)
		for(int dot = 0; dot < 8; ++dot)
 8000b74:	e03ffd15 	stw	zero,-12(fp)
 8000b78:	e0bffd17 	ldw	r2,-12(fp)
 8000b7c:	10800208 	cmpgei	r2,r2,8
 8000b80:	1000151e 	bne	r2,zero,8000bd8 <_ZN9skConsole9WriteCharEc+0x224>
		{
			*lpHead++ = ch & 0x80 ? ForeColor : BackColor;
 8000b84:	e0bffc17 	ldw	r2,-16(fp)
 8000b88:	10c00084 	addi	r3,r2,2
 8000b8c:	e0fffc15 	stw	r3,-16(fp)
 8000b90:	e0fffb03 	ldbu	r3,-20(fp)
 8000b94:	18c03fcc 	andi	r3,r3,255
 8000b98:	18c0201c 	xori	r3,r3,128
 8000b9c:	18ffe004 	addi	r3,r3,-128
 8000ba0:	1800030e 	bge	r3,zero,8000bb0 <_ZN9skConsole9WriteCharEc+0x1fc>
 8000ba4:	e0fffe17 	ldw	r3,-8(fp)
 8000ba8:	18c0000b 	ldhu	r3,0(r3)
 8000bac:	00000206 	br	8000bb8 <_ZN9skConsole9WriteCharEc+0x204>
 8000bb0:	e0fffe17 	ldw	r3,-8(fp)
 8000bb4:	18c0008b 	ldhu	r3,2(r3)
 8000bb8:	10c0000d 	sth	r3,0(r2)
			ch <<= 1; 
 8000bbc:	e0bffb03 	ldbu	r2,-20(fp)
 8000bc0:	1085883a 	add	r2,r2,r2
 8000bc4:	e0bffb05 	stb	r2,-20(fp)
	for(int row = 0; row < 16; ++row)
	{
		uint8_t ch = *lpChar++;
		uint16_t* lpHead = lpPivot;
		lpPivot += mWidth;
		for(int dot = 0; dot < 8; ++dot)
 8000bc8:	e0bffd17 	ldw	r2,-12(fp)
 8000bcc:	10800044 	addi	r2,r2,1
 8000bd0:	e0bffd15 	stw	r2,-12(fp)
 8000bd4:	003fe806 	br	8000b78 <__alt_data_end+0xf8000b78>
		break;
	}
	uint8_t const* lpChar = &CGROM[p*16];
	uint16_t* lpPivot = &mBuff[mCsrY * mWidth + mCsrX];
	
	for(int row = 0; row < 16; ++row)
 8000bd8:	e0bffa17 	ldw	r2,-24(fp)
 8000bdc:	10800044 	addi	r2,r2,1
 8000be0:	e0bffa15 	stw	r2,-24(fp)
 8000be4:	003fd206 	br	8000b30 <__alt_data_end+0xf8000b30>
			*lpHead++ = ch & 0x80 ? ForeColor : BackColor;
			ch <<= 1; 
		}
	} 
	
	if((mCsrX+=8) >= mWidth)
 8000be8:	e0bffe17 	ldw	r2,-8(fp)
 8000bec:	10800117 	ldw	r2,4(r2)
 8000bf0:	10c00204 	addi	r3,r2,8
 8000bf4:	e0bffe17 	ldw	r2,-8(fp)
 8000bf8:	10c00115 	stw	r3,4(r2)
 8000bfc:	e0bffe17 	ldw	r2,-8(fp)
 8000c00:	10c00117 	ldw	r3,4(r2)
 8000c04:	e0bffe17 	ldw	r2,-8(fp)
 8000c08:	10800317 	ldw	r2,12(r2)
 8000c0c:	1885403a 	cmpgeu	r2,r3,r2
 8000c10:	10803fcc 	andi	r2,r2,255
 8000c14:	10001226 	beq	r2,zero,8000c60 <_ZN9skConsole9WriteCharEc+0x2ac>
	{
		mCsrX = 0;
 8000c18:	e0bffe17 	ldw	r2,-8(fp)
 8000c1c:	10000115 	stw	zero,4(r2)
		mCsrY += 16;
 8000c20:	e0bffe17 	ldw	r2,-8(fp)
 8000c24:	10800217 	ldw	r2,8(r2)
 8000c28:	10c00404 	addi	r3,r2,16
 8000c2c:	e0bffe17 	ldw	r2,-8(fp)
 8000c30:	10c00215 	stw	r3,8(r2)
		if(mCsrY >= mHeight)
 8000c34:	e0bffe17 	ldw	r2,-8(fp)
 8000c38:	10c00217 	ldw	r3,8(r2)
 8000c3c:	e0bffe17 	ldw	r2,-8(fp)
 8000c40:	10800417 	ldw	r2,16(r2)
 8000c44:	18800636 	bltu	r3,r2,8000c60 <_ZN9skConsole9WriteCharEc+0x2ac>
		{
			mCsrY = 0;
 8000c48:	e0bffe17 	ldw	r2,-8(fp)
 8000c4c:	10000215 	stw	zero,8(r2)
 8000c50:	00000306 	br	8000c60 <_ZN9skConsole9WriteCharEc+0x2ac>
			if(mCsrY >= mHeight)
			{
				mCsrY = 0;
			}
		}
		return;
 8000c54:	0001883a 	nop
 8000c58:	00000106 	br	8000c60 <_ZN9skConsole9WriteCharEc+0x2ac>
		mCsrY += 16;
		if(mCsrY >= mHeight)
		{
			mCsrY = 0;
		}
		return;
 8000c5c:	0001883a 	nop
		if(mCsrY >= mHeight)
		{
			mCsrY = 0;
		}
	}
}
 8000c60:	e037883a 	mov	sp,fp
 8000c64:	df000017 	ldw	fp,0(sp)
 8000c68:	dec00104 	addi	sp,sp,4
 8000c6c:	f800283a 	ret

08000c70 <_ZdlPv>:
 8000c70:	800304c1 	jmpi	800304c <free>

08000c74 <_ZL21size_of_encoded_valueh>:
 8000c74:	deffff04 	addi	sp,sp,-4
 8000c78:	dfc00015 	stw	ra,0(sp)
 8000c7c:	20c03fcc 	andi	r3,r4,255
 8000c80:	00803fc4 	movi	r2,255
 8000c84:	18802026 	beq	r3,r2,8000d08 <_ZL21size_of_encoded_valueh+0x94>
 8000c88:	210001cc 	andi	r4,r4,7
 8000c8c:	00800144 	movi	r2,5
 8000c90:	11001c36 	bltu	r2,r4,8000d04 <_ZL21size_of_encoded_valueh+0x90>
 8000c94:	200890ba 	slli	r4,r4,2
 8000c98:	00820034 	movhi	r2,2048
 8000c9c:	10832b04 	addi	r2,r2,3244
 8000ca0:	2089883a 	add	r4,r4,r2
 8000ca4:	20800017 	ldw	r2,0(r4)
 8000ca8:	1000683a 	jmp	r2
 8000cac:	08000cc4 	addi	zero,at,51
 8000cb0:	08000d04 	addi	zero,at,52
 8000cb4:	08000cd4 	ori	zero,at,51
 8000cb8:	08000cc4 	addi	zero,at,51
 8000cbc:	08000cf4 	orhi	zero,at,51
 8000cc0:	08000ce4 	muli	zero,at,51
 8000cc4:	00800104 	movi	r2,4
 8000cc8:	dfc00017 	ldw	ra,0(sp)
 8000ccc:	dec00104 	addi	sp,sp,4
 8000cd0:	f800283a 	ret
 8000cd4:	00800084 	movi	r2,2
 8000cd8:	dfc00017 	ldw	ra,0(sp)
 8000cdc:	dec00104 	addi	sp,sp,4
 8000ce0:	f800283a 	ret
 8000ce4:	00800044 	movi	r2,1
 8000ce8:	dfc00017 	ldw	ra,0(sp)
 8000cec:	dec00104 	addi	sp,sp,4
 8000cf0:	f800283a 	ret
 8000cf4:	00800204 	movi	r2,8
 8000cf8:	dfc00017 	ldw	ra,0(sp)
 8000cfc:	dec00104 	addi	sp,sp,4
 8000d00:	f800283a 	ret
 8000d04:	80030200 	call	8003020 <abort>
 8000d08:	0005883a 	mov	r2,zero
 8000d0c:	dfc00017 	ldw	ra,0(sp)
 8000d10:	dec00104 	addi	sp,sp,4
 8000d14:	f800283a 	ret

08000d18 <_ZL28read_encoded_value_with_basehjPKhPj>:
 8000d18:	deffff04 	addi	sp,sp,-4
 8000d1c:	dfc00015 	stw	ra,0(sp)
 8000d20:	20c03fcc 	andi	r3,r4,255
 8000d24:	00801404 	movi	r2,80
 8000d28:	18807326 	beq	r3,r2,8000ef8 <_ZL28read_encoded_value_with_basehjPKhPj+0x1e0>
 8000d2c:	20c003cc 	andi	r3,r4,15
 8000d30:	00800304 	movi	r2,12
 8000d34:	10c06f36 	bltu	r2,r3,8000ef4 <_ZL28read_encoded_value_with_basehjPKhPj+0x1dc>
 8000d38:	180690ba 	slli	r3,r3,2
 8000d3c:	02020034 	movhi	r8,2048
 8000d40:	42035404 	addi	r8,r8,3408
 8000d44:	1a07883a 	add	r3,r3,r8
 8000d48:	18800017 	ldw	r2,0(r3)
 8000d4c:	1000683a 	jmp	r2
 8000d50:	08000d84 	addi	zero,at,54
 8000d54:	08000ea0 	cmpeqi	zero,at,58
 8000d58:	08000edc 	xori	zero,at,59
 8000d5c:	08000d84 	addi	zero,at,54
 8000d60:	08000de8 	cmpgeui	zero,at,55
 8000d64:	08000e3c 	xorhi	zero,at,56
 8000d68:	08000ef4 	orhi	zero,at,59
 8000d6c:	08000ef4 	orhi	zero,at,59
 8000d70:	08000ef4 	orhi	zero,at,59
 8000d74:	08000e48 	cmpgei	zero,at,57
 8000d78:	08000e18 	cmpnei	zero,at,56
 8000d7c:	08000d84 	addi	zero,at,54
 8000d80:	08000de8 	cmpgeui	zero,at,55
 8000d84:	30800043 	ldbu	r2,1(r6)
 8000d88:	30c00083 	ldbu	r3,2(r6)
 8000d8c:	324000c3 	ldbu	r9,3(r6)
 8000d90:	32000003 	ldbu	r8,0(r6)
 8000d94:	1004923a 	slli	r2,r2,8
 8000d98:	1806943a 	slli	r3,r3,16
 8000d9c:	4812963a 	slli	r9,r9,24
 8000da0:	1204b03a 	or	r2,r2,r8
 8000da4:	1884b03a 	or	r2,r3,r2
 8000da8:	4886b03a 	or	r3,r9,r2
 8000dac:	30800104 	addi	r2,r6,4
 8000db0:	18000926 	beq	r3,zero,8000dd8 <_ZL28read_encoded_value_with_basehjPKhPj+0xc0>
 8000db4:	22001c0c 	andi	r8,r4,112
 8000db8:	02400404 	movi	r9,16
 8000dbc:	42405726 	beq	r8,r9,8000f1c <_ZL28read_encoded_value_with_basehjPKhPj+0x204>
 8000dc0:	21003fcc 	andi	r4,r4,255
 8000dc4:	2100201c 	xori	r4,r4,128
 8000dc8:	213fe004 	addi	r4,r4,-128
 8000dcc:	1947883a 	add	r3,r3,r5
 8000dd0:	2000010e 	bge	r4,zero,8000dd8 <_ZL28read_encoded_value_with_basehjPKhPj+0xc0>
 8000dd4:	18c00017 	ldw	r3,0(r3)
 8000dd8:	38c00015 	stw	r3,0(r7)
 8000ddc:	dfc00017 	ldw	ra,0(sp)
 8000de0:	dec00104 	addi	sp,sp,4
 8000de4:	f800283a 	ret
 8000de8:	30800043 	ldbu	r2,1(r6)
 8000dec:	30c00083 	ldbu	r3,2(r6)
 8000df0:	324000c3 	ldbu	r9,3(r6)
 8000df4:	32000003 	ldbu	r8,0(r6)
 8000df8:	1004923a 	slli	r2,r2,8
 8000dfc:	1806943a 	slli	r3,r3,16
 8000e00:	4812963a 	slli	r9,r9,24
 8000e04:	1204b03a 	or	r2,r2,r8
 8000e08:	1884b03a 	or	r2,r3,r2
 8000e0c:	4886b03a 	or	r3,r9,r2
 8000e10:	30800204 	addi	r2,r6,8
 8000e14:	003fe606 	br	8000db0 <__alt_data_end+0xf8000db0>
 8000e18:	30c00043 	ldbu	r3,1(r6)
 8000e1c:	32000003 	ldbu	r8,0(r6)
 8000e20:	30800084 	addi	r2,r6,2
 8000e24:	1806923a 	slli	r3,r3,8
 8000e28:	1a06b03a 	or	r3,r3,r8
 8000e2c:	18ffffcc 	andi	r3,r3,65535
 8000e30:	18e0001c 	xori	r3,r3,32768
 8000e34:	18e00004 	addi	r3,r3,-32768
 8000e38:	003fdd06 	br	8000db0 <__alt_data_end+0xf8000db0>
 8000e3c:	30c00003 	ldbu	r3,0(r6)
 8000e40:	30800044 	addi	r2,r6,1
 8000e44:	003fda06 	br	8000db0 <__alt_data_end+0xf8000db0>
 8000e48:	3017883a 	mov	r11,r6
 8000e4c:	0007883a 	mov	r3,zero
 8000e50:	0013883a 	mov	r9,zero
 8000e54:	5a800003 	ldbu	r10,0(r11)
 8000e58:	58800044 	addi	r2,r11,1
 8000e5c:	1017883a 	mov	r11,r2
 8000e60:	52001fcc 	andi	r8,r10,127
 8000e64:	4250983a 	sll	r8,r8,r9
 8000e68:	53003fcc 	andi	r12,r10,255
 8000e6c:	6300201c 	xori	r12,r12,128
 8000e70:	633fe004 	addi	r12,r12,-128
 8000e74:	1a06b03a 	or	r3,r3,r8
 8000e78:	4a4001c4 	addi	r9,r9,7
 8000e7c:	603ff516 	blt	r12,zero,8000e54 <__alt_data_end+0xf8000e54>
 8000e80:	020007c4 	movi	r8,31
 8000e84:	427fca36 	bltu	r8,r9,8000db0 <__alt_data_end+0xf8000db0>
 8000e88:	5280100c 	andi	r10,r10,64
 8000e8c:	503fc826 	beq	r10,zero,8000db0 <__alt_data_end+0xf8000db0>
 8000e90:	023fffc4 	movi	r8,-1
 8000e94:	4252983a 	sll	r9,r8,r9
 8000e98:	1a46b03a 	or	r3,r3,r9
 8000e9c:	003fc506 	br	8000db4 <__alt_data_end+0xf8000db4>
 8000ea0:	3017883a 	mov	r11,r6
 8000ea4:	0007883a 	mov	r3,zero
 8000ea8:	0015883a 	mov	r10,zero
 8000eac:	5a000003 	ldbu	r8,0(r11)
 8000eb0:	58800044 	addi	r2,r11,1
 8000eb4:	1017883a 	mov	r11,r2
 8000eb8:	42401fcc 	andi	r9,r8,127
 8000ebc:	4a92983a 	sll	r9,r9,r10
 8000ec0:	42003fcc 	andi	r8,r8,255
 8000ec4:	4200201c 	xori	r8,r8,128
 8000ec8:	423fe004 	addi	r8,r8,-128
 8000ecc:	1a46b03a 	or	r3,r3,r9
 8000ed0:	528001c4 	addi	r10,r10,7
 8000ed4:	403ff516 	blt	r8,zero,8000eac <__alt_data_end+0xf8000eac>
 8000ed8:	003fb506 	br	8000db0 <__alt_data_end+0xf8000db0>
 8000edc:	30c00043 	ldbu	r3,1(r6)
 8000ee0:	32000003 	ldbu	r8,0(r6)
 8000ee4:	30800084 	addi	r2,r6,2
 8000ee8:	1806923a 	slli	r3,r3,8
 8000eec:	1a06b03a 	or	r3,r3,r8
 8000ef0:	003faf06 	br	8000db0 <__alt_data_end+0xf8000db0>
 8000ef4:	80030200 	call	8003020 <abort>
 8000ef8:	308000c4 	addi	r2,r6,3
 8000efc:	00ffff04 	movi	r3,-4
 8000f00:	10c4703a 	and	r2,r2,r3
 8000f04:	10c00017 	ldw	r3,0(r2)
 8000f08:	10800104 	addi	r2,r2,4
 8000f0c:	38c00015 	stw	r3,0(r7)
 8000f10:	dfc00017 	ldw	ra,0(sp)
 8000f14:	dec00104 	addi	sp,sp,4
 8000f18:	f800283a 	ret
 8000f1c:	300b883a 	mov	r5,r6
 8000f20:	003fa706 	br	8000dc0 <__alt_data_end+0xf8000dc0>

08000f24 <_ZL15get_ttype_entryP16lsda_header_infom>:
 8000f24:	defffc04 	addi	sp,sp,-16
 8000f28:	dfc00315 	stw	ra,12(sp)
 8000f2c:	dc400215 	stw	r17,8(sp)
 8000f30:	dc000115 	stw	r16,4(sp)
 8000f34:	2021883a 	mov	r16,r4
 8000f38:	21000503 	ldbu	r4,20(r4)
 8000f3c:	2823883a 	mov	r17,r5
 8000f40:	8000c740 	call	8000c74 <_ZL21size_of_encoded_valueh>
 8000f44:	1445383a 	mul	r2,r2,r17
 8000f48:	81800317 	ldw	r6,12(r16)
 8000f4c:	81400217 	ldw	r5,8(r16)
 8000f50:	81000503 	ldbu	r4,20(r16)
 8000f54:	d80f883a 	mov	r7,sp
 8000f58:	308dc83a 	sub	r6,r6,r2
 8000f5c:	8000d180 	call	8000d18 <_ZL28read_encoded_value_with_basehjPKhPj>
 8000f60:	d8800017 	ldw	r2,0(sp)
 8000f64:	dfc00317 	ldw	ra,12(sp)
 8000f68:	dc400217 	ldw	r17,8(sp)
 8000f6c:	dc000117 	ldw	r16,4(sp)
 8000f70:	dec00404 	addi	sp,sp,16
 8000f74:	f800283a 	ret

08000f78 <_ZL21base_of_encoded_valuehP15_Unwind_Context>:
 8000f78:	deffff04 	addi	sp,sp,-4
 8000f7c:	dfc00015 	stw	ra,0(sp)
 8000f80:	20c03fcc 	andi	r3,r4,255
 8000f84:	00803fc4 	movi	r2,255
 8000f88:	18800e26 	beq	r3,r2,8000fc4 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x4c>
 8000f8c:	20801c0c 	andi	r2,r4,112
 8000f90:	00c00804 	movi	r3,32
 8000f94:	10c01726 	beq	r2,r3,8000ff4 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x7c>
 8000f98:	18800e2e 	bgeu	r3,r2,8000fd4 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x5c>
 8000f9c:	00c01004 	movi	r3,64
 8000fa0:	10c01026 	beq	r2,r3,8000fe4 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x6c>
 8000fa4:	00c01404 	movi	r3,80
 8000fa8:	10c00626 	beq	r2,r3,8000fc4 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x4c>
 8000fac:	00c00c04 	movi	r3,48
 8000fb0:	10c00b1e 	bne	r2,r3,8000fe0 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x68>
 8000fb4:	2809883a 	mov	r4,r5
 8000fb8:	dfc00017 	ldw	ra,0(sp)
 8000fbc:	dec00104 	addi	sp,sp,4
 8000fc0:	8002de01 	jmpi	8002de0 <_Unwind_GetDataRelBase>
 8000fc4:	0005883a 	mov	r2,zero
 8000fc8:	dfc00017 	ldw	ra,0(sp)
 8000fcc:	dec00104 	addi	sp,sp,4
 8000fd0:	f800283a 	ret
 8000fd4:	103ffb26 	beq	r2,zero,8000fc4 <__alt_data_end+0xf8000fc4>
 8000fd8:	00c00404 	movi	r3,16
 8000fdc:	10fff926 	beq	r2,r3,8000fc4 <__alt_data_end+0xf8000fc4>
 8000fe0:	80030200 	call	8003020 <abort>
 8000fe4:	2809883a 	mov	r4,r5
 8000fe8:	dfc00017 	ldw	ra,0(sp)
 8000fec:	dec00104 	addi	sp,sp,4
 8000ff0:	8002dd01 	jmpi	8002dd0 <_Unwind_GetRegionStart>
 8000ff4:	2809883a 	mov	r4,r5
 8000ff8:	dfc00017 	ldw	ra,0(sp)
 8000ffc:	dec00104 	addi	sp,sp,4
 8001000:	8002de81 	jmpi	8002de8 <_Unwind_GetTextRelBase>

08001004 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>:
 8001004:	defffb04 	addi	sp,sp,-20
 8001008:	dcc00315 	stw	r19,12(sp)
 800100c:	dc400115 	stw	r17,4(sp)
 8001010:	dc000015 	stw	r16,0(sp)
 8001014:	dfc00415 	stw	ra,16(sp)
 8001018:	dc800215 	stw	r18,8(sp)
 800101c:	2027883a 	mov	r19,r4
 8001020:	2821883a 	mov	r16,r5
 8001024:	3023883a 	mov	r17,r6
 8001028:	20003f26 	beq	r4,zero,8001128 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x124>
 800102c:	8002dd00 	call	8002dd0 <_Unwind_GetRegionStart>
 8001030:	88800015 	stw	r2,0(r17)
 8001034:	84800003 	ldbu	r18,0(r16)
 8001038:	00c03fc4 	movi	r3,255
 800103c:	84000044 	addi	r16,r16,1
 8001040:	90c03726 	beq	r18,r3,8001120 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x11c>
 8001044:	980b883a 	mov	r5,r19
 8001048:	9009883a 	mov	r4,r18
 800104c:	8000f780 	call	8000f78 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 8001050:	800d883a 	mov	r6,r16
 8001054:	89c00104 	addi	r7,r17,4
 8001058:	100b883a 	mov	r5,r2
 800105c:	9009883a 	mov	r4,r18
 8001060:	8000d180 	call	8000d18 <_ZL28read_encoded_value_with_basehjPKhPj>
 8001064:	1021883a 	mov	r16,r2
 8001068:	80c00003 	ldbu	r3,0(r16)
 800106c:	01003fc4 	movi	r4,255
 8001070:	80800044 	addi	r2,r16,1
 8001074:	88c00505 	stb	r3,20(r17)
 8001078:	18c03fcc 	andi	r3,r3,255
 800107c:	19002c26 	beq	r3,r4,8001130 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x12c>
 8001080:	100f883a 	mov	r7,r2
 8001084:	000d883a 	mov	r6,zero
 8001088:	000b883a 	mov	r5,zero
 800108c:	38c00003 	ldbu	r3,0(r7)
 8001090:	10800044 	addi	r2,r2,1
 8001094:	100f883a 	mov	r7,r2
 8001098:	19001fcc 	andi	r4,r3,127
 800109c:	2148983a 	sll	r4,r4,r5
 80010a0:	18c03fcc 	andi	r3,r3,255
 80010a4:	18c0201c 	xori	r3,r3,128
 80010a8:	18ffe004 	addi	r3,r3,-128
 80010ac:	310cb03a 	or	r6,r6,r4
 80010b0:	294001c4 	addi	r5,r5,7
 80010b4:	183ff516 	blt	r3,zero,800108c <__alt_data_end+0xf800108c>
 80010b8:	118d883a 	add	r6,r2,r6
 80010bc:	89800315 	stw	r6,12(r17)
 80010c0:	10c00003 	ldbu	r3,0(r2)
 80010c4:	000d883a 	mov	r6,zero
 80010c8:	10800044 	addi	r2,r2,1
 80010cc:	88c00545 	stb	r3,21(r17)
 80010d0:	000b883a 	mov	r5,zero
 80010d4:	10c00003 	ldbu	r3,0(r2)
 80010d8:	10800044 	addi	r2,r2,1
 80010dc:	19001fcc 	andi	r4,r3,127
 80010e0:	2148983a 	sll	r4,r4,r5
 80010e4:	18c03fcc 	andi	r3,r3,255
 80010e8:	18c0201c 	xori	r3,r3,128
 80010ec:	18ffe004 	addi	r3,r3,-128
 80010f0:	310cb03a 	or	r6,r6,r4
 80010f4:	294001c4 	addi	r5,r5,7
 80010f8:	183ff616 	blt	r3,zero,80010d4 <__alt_data_end+0xf80010d4>
 80010fc:	118d883a 	add	r6,r2,r6
 8001100:	89800415 	stw	r6,16(r17)
 8001104:	dfc00417 	ldw	ra,16(sp)
 8001108:	dcc00317 	ldw	r19,12(sp)
 800110c:	dc800217 	ldw	r18,8(sp)
 8001110:	dc400117 	ldw	r17,4(sp)
 8001114:	dc000017 	ldw	r16,0(sp)
 8001118:	dec00504 	addi	sp,sp,20
 800111c:	f800283a 	ret
 8001120:	88800115 	stw	r2,4(r17)
 8001124:	003fd006 	br	8001068 <__alt_data_end+0xf8001068>
 8001128:	0005883a 	mov	r2,zero
 800112c:	003fc006 	br	8001030 <__alt_data_end+0xf8001030>
 8001130:	88000315 	stw	zero,12(r17)
 8001134:	003fe206 	br	80010c0 <__alt_data_end+0xf80010c0>

08001138 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv.constprop.3>:
 8001138:	28800017 	ldw	r2,0(r5)
 800113c:	30c00017 	ldw	r3,0(r6)
 8001140:	defffb04 	addi	sp,sp,-20
 8001144:	10800217 	ldw	r2,8(r2)
 8001148:	dc400315 	stw	r17,12(sp)
 800114c:	dc000215 	stw	r16,8(sp)
 8001150:	d9400115 	stw	r5,4(sp)
 8001154:	dfc00415 	stw	ra,16(sp)
 8001158:	2021883a 	mov	r16,r4
 800115c:	d8c00015 	stw	r3,0(sp)
 8001160:	2809883a 	mov	r4,r5
 8001164:	3023883a 	mov	r17,r6
 8001168:	103ee83a 	callr	r2
 800116c:	10803fcc 	andi	r2,r2,255
 8001170:	d9400117 	ldw	r5,4(sp)
 8001174:	10000326 	beq	r2,zero,8001184 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv.constprop.3+0x4c>
 8001178:	d8800017 	ldw	r2,0(sp)
 800117c:	10800017 	ldw	r2,0(r2)
 8001180:	d8800015 	stw	r2,0(sp)
 8001184:	80800017 	ldw	r2,0(r16)
 8001188:	01c00044 	movi	r7,1
 800118c:	d80d883a 	mov	r6,sp
 8001190:	10800417 	ldw	r2,16(r2)
 8001194:	8009883a 	mov	r4,r16
 8001198:	103ee83a 	callr	r2
 800119c:	10c03fcc 	andi	r3,r2,255
 80011a0:	18000226 	beq	r3,zero,80011ac <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv.constprop.3+0x74>
 80011a4:	d8c00017 	ldw	r3,0(sp)
 80011a8:	88c00015 	stw	r3,0(r17)
 80011ac:	dfc00417 	ldw	ra,16(sp)
 80011b0:	dc400317 	ldw	r17,12(sp)
 80011b4:	dc000217 	ldw	r16,8(sp)
 80011b8:	dec00504 	addi	sp,sp,20
 80011bc:	f800283a 	ret

080011c0 <_ZL28check_compact_exception_specPKSt9type_infoPvPKhij>:
 80011c0:	defff604 	addi	sp,sp,-40
 80011c4:	dc000415 	stw	r16,16(sp)
 80011c8:	3821d23a 	srai	r16,r7,8
 80011cc:	dc800615 	stw	r18,24(sp)
 80011d0:	dc400515 	stw	r17,20(sp)
 80011d4:	dfc00915 	stw	ra,36(sp)
 80011d8:	dd000815 	stw	r20,32(sp)
 80011dc:	dcc00715 	stw	r19,28(sp)
 80011e0:	d9400215 	stw	r5,8(sp)
 80011e4:	3825883a 	mov	r18,r7
 80011e8:	2023883a 	mov	r17,r4
 80011ec:	8000010e 	bge	r16,zero,80011f4 <_ZL28check_compact_exception_specPKSt9type_infoPvPKhij+0x34>
 80011f0:	0421c83a 	sub	r16,zero,r16
 80011f4:	000b883a 	mov	r5,zero
 80011f8:	01000144 	movi	r4,5
 80011fc:	d9800315 	stw	r6,12(sp)
 8001200:	8000f780 	call	8000f78 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 8001204:	d9800317 	ldw	r6,12(sp)
 8001208:	d9c00104 	addi	r7,sp,4
 800120c:	100b883a 	mov	r5,r2
 8001210:	01000144 	movi	r4,5
 8001214:	8000d180 	call	8000d18 <_ZL28read_encoded_value_with_basehjPKhPj>
 8001218:	11fffe64 	muli	r7,r2,-7
 800121c:	0007883a 	mov	r3,zero
 8001220:	11400003 	ldbu	r5,0(r2)
 8001224:	110001e4 	muli	r4,r2,7
 8001228:	10800044 	addi	r2,r2,1
 800122c:	29801fcc 	andi	r6,r5,127
 8001230:	21c9883a 	add	r4,r4,r7
 8001234:	3108983a 	sll	r4,r6,r4
 8001238:	29403fcc 	andi	r5,r5,255
 800123c:	2940201c 	xori	r5,r5,128
 8001240:	297fe004 	addi	r5,r5,-128
 8001244:	1906b03a 	or	r3,r3,r4
 8001248:	283ff516 	blt	r5,zero,8001220 <__alt_data_end+0xf8001220>
 800124c:	10c5883a 	add	r2,r2,r3
 8001250:	11fffe64 	muli	r7,r2,-7
 8001254:	0009883a 	mov	r4,zero
 8001258:	11400003 	ldbu	r5,0(r2)
 800125c:	10c001e4 	muli	r3,r2,7
 8001260:	10800044 	addi	r2,r2,1
 8001264:	29801fcc 	andi	r6,r5,127
 8001268:	19c7883a 	add	r3,r3,r7
 800126c:	30c6983a 	sll	r3,r6,r3
 8001270:	29403fcc 	andi	r5,r5,255
 8001274:	2940201c 	xori	r5,r5,128
 8001278:	297fe004 	addi	r5,r5,-128
 800127c:	20c8b03a 	or	r4,r4,r3
 8001280:	283ff516 	blt	r5,zero,8001258 <__alt_data_end+0xf8001258>
 8001284:	80c03fcc 	andi	r3,r16,255
 8001288:	18ffffc4 	addi	r3,r3,-1
 800128c:	10c7883a 	add	r3,r2,r3
 8001290:	210000c4 	addi	r4,r4,3
 8001294:	197ffe64 	muli	r5,r3,-7
 8001298:	2085883a 	add	r2,r4,r2
 800129c:	04ffff04 	movi	r19,-4
 80012a0:	14e6703a 	and	r19,r2,r19
 80012a4:	0021883a 	mov	r16,zero
 80012a8:	18800003 	ldbu	r2,0(r3)
 80012ac:	190001e4 	muli	r4,r3,7
 80012b0:	1d000044 	addi	r20,r3,1
 80012b4:	10c01fcc 	andi	r3,r2,127
 80012b8:	2149883a 	add	r4,r4,r5
 80012bc:	1908983a 	sll	r4,r3,r4
 80012c0:	10803fcc 	andi	r2,r2,255
 80012c4:	1080201c 	xori	r2,r2,128
 80012c8:	10bfe004 	addi	r2,r2,-128
 80012cc:	a007883a 	mov	r3,r20
 80012d0:	8120b03a 	or	r16,r16,r4
 80012d4:	103ff416 	blt	r2,zero,80012a8 <__alt_data_end+0xf80012a8>
 80012d8:	94803fcc 	andi	r18,r18,255
 80012dc:	80001f26 	beq	r16,zero,800135c <_ZL28check_compact_exception_specPKSt9type_infoPvPKhij+0x19c>
 80012e0:	9009883a 	mov	r4,r18
 80012e4:	8000c740 	call	8000c74 <_ZL21size_of_encoded_valueh>
 80012e8:	81bfffc4 	addi	r6,r16,-1
 80012ec:	308d383a 	mul	r6,r6,r2
 80012f0:	d9400a17 	ldw	r5,40(sp)
 80012f4:	d80f883a 	mov	r7,sp
 80012f8:	9009883a 	mov	r4,r18
 80012fc:	34cd883a 	add	r6,r6,r19
 8001300:	8000d180 	call	8000d18 <_ZL28read_encoded_value_with_basehjPKhPj>
 8001304:	d9000017 	ldw	r4,0(sp)
 8001308:	d9800204 	addi	r6,sp,8
 800130c:	880b883a 	mov	r5,r17
 8001310:	80011380 	call	8001138 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv.constprop.3>
 8001314:	10c03fcc 	andi	r3,r2,255
 8001318:	1800111e 	bne	r3,zero,8001360 <_ZL28check_compact_exception_specPKSt9type_infoPvPKhij+0x1a0>
 800131c:	a17ffe64 	muli	r5,r20,-7
 8001320:	a007883a 	mov	r3,r20
 8001324:	0021883a 	mov	r16,zero
 8001328:	19000003 	ldbu	r4,0(r3)
 800132c:	18c001e4 	muli	r3,r3,7
 8001330:	a5000044 	addi	r20,r20,1
 8001334:	20801fcc 	andi	r2,r4,127
 8001338:	1947883a 	add	r3,r3,r5
 800133c:	10c4983a 	sll	r2,r2,r3
 8001340:	21003fcc 	andi	r4,r4,255
 8001344:	2100201c 	xori	r4,r4,128
 8001348:	213fe004 	addi	r4,r4,-128
 800134c:	a007883a 	mov	r3,r20
 8001350:	80a0b03a 	or	r16,r16,r2
 8001354:	203ff416 	blt	r4,zero,8001328 <__alt_data_end+0xf8001328>
 8001358:	003fe006 	br	80012dc <__alt_data_end+0xf80012dc>
 800135c:	0005883a 	mov	r2,zero
 8001360:	dfc00917 	ldw	ra,36(sp)
 8001364:	dd000817 	ldw	r20,32(sp)
 8001368:	dcc00717 	ldw	r19,28(sp)
 800136c:	dc800617 	ldw	r18,24(sp)
 8001370:	dc400517 	ldw	r17,20(sp)
 8001374:	dc000417 	ldw	r16,16(sp)
 8001378:	dec00a04 	addi	sp,sp,40
 800137c:	f800283a 	ret

08001380 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl>:
 8001380:	defffb04 	addi	sp,sp,-20
 8001384:	dc000115 	stw	r16,4(sp)
 8001388:	24000317 	ldw	r16,12(r4)
 800138c:	01ce303a 	nor	r7,zero,r7
 8001390:	dc800315 	stw	r18,12(sp)
 8001394:	dc400215 	stw	r17,8(sp)
 8001398:	dfc00415 	stw	ra,16(sp)
 800139c:	2023883a 	mov	r17,r4
 80013a0:	2825883a 	mov	r18,r5
 80013a4:	d9800015 	stw	r6,0(sp)
 80013a8:	81e1883a 	add	r16,r16,r7
 80013ac:	800d883a 	mov	r6,r16
 80013b0:	000b883a 	mov	r5,zero
 80013b4:	0009883a 	mov	r4,zero
 80013b8:	30800003 	ldbu	r2,0(r6)
 80013bc:	84000044 	addi	r16,r16,1
 80013c0:	800d883a 	mov	r6,r16
 80013c4:	10c01fcc 	andi	r3,r2,127
 80013c8:	1906983a 	sll	r3,r3,r4
 80013cc:	10803fcc 	andi	r2,r2,255
 80013d0:	1080201c 	xori	r2,r2,128
 80013d4:	10bfe004 	addi	r2,r2,-128
 80013d8:	28cab03a 	or	r5,r5,r3
 80013dc:	210001c4 	addi	r4,r4,7
 80013e0:	103ff516 	blt	r2,zero,80013b8 <__alt_data_end+0xf80013b8>
 80013e4:	28000e26 	beq	r5,zero,8001420 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0xa0>
 80013e8:	8809883a 	mov	r4,r17
 80013ec:	8000f240 	call	8000f24 <_ZL15get_ttype_entryP16lsda_header_infom>
 80013f0:	d80d883a 	mov	r6,sp
 80013f4:	900b883a 	mov	r5,r18
 80013f8:	1009883a 	mov	r4,r2
 80013fc:	80011380 	call	8001138 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv.constprop.3>
 8001400:	10c03fcc 	andi	r3,r2,255
 8001404:	183fe926 	beq	r3,zero,80013ac <__alt_data_end+0xf80013ac>
 8001408:	dfc00417 	ldw	ra,16(sp)
 800140c:	dc800317 	ldw	r18,12(sp)
 8001410:	dc400217 	ldw	r17,8(sp)
 8001414:	dc000117 	ldw	r16,4(sp)
 8001418:	dec00504 	addi	sp,sp,20
 800141c:	f800283a 	ret
 8001420:	0005883a 	mov	r2,zero
 8001424:	003ff806 	br	8001408 <__alt_data_end+0xf8001408>

08001428 <__gxx_personality_sj0>:
 8001428:	00820034 	movhi	r2,2048
 800142c:	deffdd04 	addi	sp,sp,-140
 8001430:	10850a04 	addi	r2,r2,5160
 8001434:	d8800e15 	stw	r2,56(sp)
 8001438:	00820074 	movhi	r2,2049
 800143c:	1089d404 	addi	r2,r2,10064
 8001440:	d8800f15 	stw	r2,60(sp)
 8001444:	00820034 	movhi	r2,2048
 8001448:	10868004 	addi	r2,r2,6656
 800144c:	d9001515 	stw	r4,84(sp)
 8001450:	d9000804 	addi	r4,sp,32
 8001454:	d8801115 	stw	r2,68(sp)
 8001458:	dfc02215 	stw	ra,136(sp)
 800145c:	df002115 	stw	fp,132(sp)
 8001460:	dec01015 	stw	sp,64(sp)
 8001464:	dec01215 	stw	sp,72(sp)
 8001468:	d9401915 	stw	r5,100(sp)
 800146c:	d9801615 	stw	r6,88(sp)
 8001470:	d9c01715 	stw	r7,92(sp)
 8001474:	8002d080 	call	8002d08 <_Unwind_SjLj_Register>
 8001478:	d8c01517 	ldw	r3,84(sp)
 800147c:	d8000715 	stw	zero,28(sp)
 8001480:	d8000615 	stw	zero,24(sp)
 8001484:	00800044 	movi	r2,1
 8001488:	18800926 	beq	r3,r2,80014b0 <__gxx_personality_sj0+0x88>
 800148c:	01c000c4 	movi	r7,3
 8001490:	d9c01515 	stw	r7,84(sp)
 8001494:	d9000804 	addi	r4,sp,32
 8001498:	8002d200 	call	8002d20 <_Unwind_SjLj_Unregister>
 800149c:	d8801517 	ldw	r2,84(sp)
 80014a0:	dfc02217 	ldw	ra,136(sp)
 80014a4:	df002117 	ldw	fp,132(sp)
 80014a8:	dec02304 	addi	sp,sp,140
 80014ac:	f800283a 	ret
 80014b0:	d9001617 	ldw	r4,88(sp)
 80014b4:	00af3574 	movhi	r2,48341
 80014b8:	d9c01717 	ldw	r7,92(sp)
 80014bc:	10b54004 	addi	r2,r2,-11008
 80014c0:	00ee2cb4 	movhi	r3,47282
 80014c4:	2085883a 	add	r2,r4,r2
 80014c8:	18eaaf04 	addi	r3,r3,-21828
 80014cc:	d8801b15 	stw	r2,108(sp)
 80014d0:	38c7883a 	add	r3,r7,r3
 80014d4:	1105803a 	cmpltu	r2,r2,r4
 80014d8:	10c7883a 	add	r3,r2,r3
 80014dc:	d8c01c15 	stw	r3,112(sp)
 80014e0:	d8c01917 	ldw	r3,100(sp)
 80014e4:	00800184 	movi	r2,6
 80014e8:	18805426 	beq	r3,r2,800163c <__gxx_personality_sj0+0x214>
 80014ec:	d9002417 	ldw	r4,144(sp)
 80014f0:	00bfffc4 	movi	r2,-1
 80014f4:	d8800915 	stw	r2,36(sp)
 80014f8:	8002dc40 	call	8002dc4 <_Unwind_GetLanguageSpecificData>
 80014fc:	d8801a15 	stw	r2,104(sp)
 8001500:	1000c926 	beq	r2,zero,8001828 <__gxx_personality_sj0+0x400>
 8001504:	d9002417 	ldw	r4,144(sp)
 8001508:	d80d883a 	mov	r6,sp
 800150c:	100b883a 	mov	r5,r2
 8001510:	80010040 	call	8001004 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>
 8001514:	d9402417 	ldw	r5,144(sp)
 8001518:	d9000503 	ldbu	r4,20(sp)
 800151c:	d8801515 	stw	r2,84(sp)
 8001520:	8000f780 	call	8000f78 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 8001524:	d9002417 	ldw	r4,144(sp)
 8001528:	d9400604 	addi	r5,sp,24
 800152c:	d8800215 	stw	r2,8(sp)
 8001530:	8002d940 	call	8002d94 <_Unwind_GetIPInfo>
 8001534:	d8c00617 	ldw	r3,24(sp)
 8001538:	18006126 	beq	r3,zero,80016c0 <__gxx_personality_sj0+0x298>
 800153c:	1000ba16 	blt	r2,zero,8001828 <__gxx_personality_sj0+0x400>
 8001540:	10002f1e 	bne	r2,zero,8001600 <__gxx_personality_sj0+0x1d8>
 8001544:	d8001515 	stw	zero,84(sp)
 8001548:	d8001f15 	stw	zero,124(sp)
 800154c:	d8001815 	stw	zero,96(sp)
 8001550:	00c00044 	movi	r3,1
 8001554:	d9001917 	ldw	r4,100(sp)
 8001558:	2080004c 	andi	r2,r4,1
 800155c:	1000b51e 	bne	r2,zero,8001834 <__gxx_personality_sj0+0x40c>
 8001560:	d9001917 	ldw	r4,100(sp)
 8001564:	2080020c 	andi	r2,r4,8
 8001568:	1000b71e 	bne	r2,zero,8001848 <__gxx_personality_sj0+0x420>
 800156c:	d9c01c17 	ldw	r7,112(sp)
 8001570:	3800b826 	beq	r7,zero,8001854 <__gxx_personality_sj0+0x42c>
 8001574:	00800044 	movi	r2,1
 8001578:	1880b526 	beq	r3,r2,8001850 <__gxx_personality_sj0+0x428>
 800157c:	d9c01517 	ldw	r7,84(sp)
 8001580:	3800f516 	blt	r7,zero,8001958 <__gxx_personality_sj0+0x530>
 8001584:	d9002417 	ldw	r4,144(sp)
 8001588:	d9802317 	ldw	r6,140(sp)
 800158c:	00bfffc4 	movi	r2,-1
 8001590:	000b883a 	mov	r5,zero
 8001594:	d8800915 	stw	r2,36(sp)
 8001598:	8002d680 	call	8002d68 <_Unwind_SetGR>
 800159c:	d9801517 	ldw	r6,84(sp)
 80015a0:	d9002417 	ldw	r4,144(sp)
 80015a4:	01400044 	movi	r5,1
 80015a8:	8002d680 	call	8002d68 <_Unwind_SetGR>
 80015ac:	d9002417 	ldw	r4,144(sp)
 80015b0:	d9401f17 	ldw	r5,124(sp)
 80015b4:	8002db40 	call	8002db4 <_Unwind_SetIP>
 80015b8:	010001c4 	movi	r4,7
 80015bc:	d9001515 	stw	r4,84(sp)
 80015c0:	003fb406 	br	8001494 <__alt_data_end+0xf8001494>
 80015c4:	000f883a 	mov	r7,zero
 80015c8:	000d883a 	mov	r6,zero
 80015cc:	19000003 	ldbu	r4,0(r3)
 80015d0:	18c00044 	addi	r3,r3,1
 80015d4:	d8c01515 	stw	r3,84(sp)
 80015d8:	21401fcc 	andi	r5,r4,127
 80015dc:	298a983a 	sll	r5,r5,r6
 80015e0:	21003fcc 	andi	r4,r4,255
 80015e4:	2100201c 	xori	r4,r4,128
 80015e8:	213fe004 	addi	r4,r4,-128
 80015ec:	394eb03a 	or	r7,r7,r5
 80015f0:	318001c4 	addi	r6,r6,7
 80015f4:	203ff516 	blt	r4,zero,80015cc <__alt_data_end+0xf80015cc>
 80015f8:	10bfffc4 	addi	r2,r2,-1
 80015fc:	10003226 	beq	r2,zero,80016c8 <__gxx_personality_sj0+0x2a0>
 8001600:	d9c01517 	ldw	r7,84(sp)
 8001604:	0011883a 	mov	r8,zero
 8001608:	000d883a 	mov	r6,zero
 800160c:	39000003 	ldbu	r4,0(r7)
 8001610:	38c00044 	addi	r3,r7,1
 8001614:	180f883a 	mov	r7,r3
 8001618:	21401fcc 	andi	r5,r4,127
 800161c:	298a983a 	sll	r5,r5,r6
 8001620:	21003fcc 	andi	r4,r4,255
 8001624:	2100201c 	xori	r4,r4,128
 8001628:	213fe004 	addi	r4,r4,-128
 800162c:	4150b03a 	or	r8,r8,r5
 8001630:	318001c4 	addi	r6,r6,7
 8001634:	203ff516 	blt	r4,zero,800160c <__alt_data_end+0xf800160c>
 8001638:	003fe206 	br	80015c4 <__alt_data_end+0xf80015c4>
 800163c:	d9001c17 	ldw	r4,112(sp)
 8001640:	203faa1e 	bne	r4,zero,80014ec <__alt_data_end+0xf80014ec>
 8001644:	d9c01517 	ldw	r7,84(sp)
 8001648:	d8801b17 	ldw	r2,108(sp)
 800164c:	38bfa736 	bltu	r7,r2,80014ec <__alt_data_end+0xf80014ec>
 8001650:	d8c02317 	ldw	r3,140(sp)
 8001654:	18fffe17 	ldw	r3,-8(r3)
 8001658:	d8c01f15 	stw	r3,124(sp)
 800165c:	18008226 	beq	r3,zero,8001868 <__gxx_personality_sj0+0x440>
 8001660:	d9002317 	ldw	r4,140(sp)
 8001664:	d9c02317 	ldw	r7,140(sp)
 8001668:	213ffb17 	ldw	r4,-20(r4)
 800166c:	39fffd17 	ldw	r7,-12(r7)
 8001670:	d9001515 	stw	r4,84(sp)
 8001674:	d9c01a15 	stw	r7,104(sp)
 8001678:	d8801517 	ldw	r2,84(sp)
 800167c:	103fc10e 	bge	r2,zero,8001584 <__alt_data_end+0xf8001584>
 8001680:	d9002417 	ldw	r4,144(sp)
 8001684:	d9401a17 	ldw	r5,104(sp)
 8001688:	d80d883a 	mov	r6,sp
 800168c:	00bfffc4 	movi	r2,-1
 8001690:	d8800915 	stw	r2,36(sp)
 8001694:	80010040 	call	8001004 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>
 8001698:	d9402417 	ldw	r5,144(sp)
 800169c:	d9000503 	ldbu	r4,20(sp)
 80016a0:	8000f780 	call	8000f78 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 80016a4:	d9000503 	ldbu	r4,20(sp)
 80016a8:	d9402417 	ldw	r5,144(sp)
 80016ac:	d8800215 	stw	r2,8(sp)
 80016b0:	8000f780 	call	8000f78 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 80016b4:	d8c02317 	ldw	r3,140(sp)
 80016b8:	18bffe15 	stw	r2,-8(r3)
 80016bc:	003fb106 	br	8001584 <__alt_data_end+0xf8001584>
 80016c0:	10bfffc4 	addi	r2,r2,-1
 80016c4:	003f9d06 	br	800153c <__alt_data_end+0xf800153c>
 80016c8:	42000044 	addi	r8,r8,1
 80016cc:	da001f15 	stw	r8,124(sp)
 80016d0:	38005326 	beq	r7,zero,8001820 <__gxx_personality_sj0+0x3f8>
 80016d4:	d8800417 	ldw	r2,16(sp)
 80016d8:	39ffffc4 	addi	r7,r7,-1
 80016dc:	11c5883a 	add	r2,r2,r7
 80016e0:	d8801815 	stw	r2,96(sp)
 80016e4:	40005026 	beq	r8,zero,8001828 <__gxx_personality_sj0+0x400>
 80016e8:	10007426 	beq	r2,zero,80018bc <__gxx_personality_sj0+0x494>
 80016ec:	d8801917 	ldw	r2,100(sp)
 80016f0:	1080020c 	andi	r2,r2,8
 80016f4:	d8802015 	stw	r2,128(sp)
 80016f8:	1000a21e 	bne	r2,zero,8001984 <__gxx_personality_sj0+0x55c>
 80016fc:	d8c01c17 	ldw	r3,112(sp)
 8001700:	1800b026 	beq	r3,zero,80019c4 <__gxx_personality_sj0+0x59c>
 8001704:	01c20074 	movhi	r7,2049
 8001708:	39d3f504 	addi	r7,r7,20436
 800170c:	d9c01e15 	stw	r7,120(sp)
 8001710:	d8001d05 	stb	zero,116(sp)
 8001714:	d8c01817 	ldw	r3,96(sp)
 8001718:	d8001515 	stw	zero,84(sp)
 800171c:	0009883a 	mov	r4,zero
 8001720:	19400003 	ldbu	r5,0(r3)
 8001724:	18800044 	addi	r2,r3,1
 8001728:	d9c01517 	ldw	r7,84(sp)
 800172c:	28c01fcc 	andi	r3,r5,127
 8001730:	1906983a 	sll	r3,r3,r4
 8001734:	29803fcc 	andi	r6,r5,255
 8001738:	3180201c 	xori	r6,r6,128
 800173c:	38ceb03a 	or	r7,r7,r3
 8001740:	d8801715 	stw	r2,92(sp)
 8001744:	31bfe004 	addi	r6,r6,-128
 8001748:	d9c01515 	stw	r7,84(sp)
 800174c:	210001c4 	addi	r4,r4,7
 8001750:	1007883a 	mov	r3,r2
 8001754:	303ff216 	blt	r6,zero,8001720 <__alt_data_end+0xf8001720>
 8001758:	00c007c4 	movi	r3,31
 800175c:	19000836 	bltu	r3,r4,8001780 <__gxx_personality_sj0+0x358>
 8001760:	2940100c 	andi	r5,r5,64
 8001764:	28000626 	beq	r5,zero,8001780 <__gxx_personality_sj0+0x358>
 8001768:	01c00044 	movi	r7,1
 800176c:	3908983a 	sll	r4,r7,r4
 8001770:	d8c01517 	ldw	r3,84(sp)
 8001774:	0109c83a 	sub	r4,zero,r4
 8001778:	1906b03a 	or	r3,r3,r4
 800177c:	d8c01515 	stw	r3,84(sp)
 8001780:	d8001615 	stw	zero,88(sp)
 8001784:	0009883a 	mov	r4,zero
 8001788:	11400003 	ldbu	r5,0(r2)
 800178c:	d9c01617 	ldw	r7,88(sp)
 8001790:	10800044 	addi	r2,r2,1
 8001794:	28c01fcc 	andi	r3,r5,127
 8001798:	1906983a 	sll	r3,r3,r4
 800179c:	29803fcc 	andi	r6,r5,255
 80017a0:	3180201c 	xori	r6,r6,128
 80017a4:	38ceb03a 	or	r7,r7,r3
 80017a8:	31bfe004 	addi	r6,r6,-128
 80017ac:	d9c01615 	stw	r7,88(sp)
 80017b0:	210001c4 	addi	r4,r4,7
 80017b4:	303ff416 	blt	r6,zero,8001788 <__alt_data_end+0xf8001788>
 80017b8:	008007c4 	movi	r2,31
 80017bc:	11000736 	bltu	r2,r4,80017dc <__gxx_personality_sj0+0x3b4>
 80017c0:	2940100c 	andi	r5,r5,64
 80017c4:	28000526 	beq	r5,zero,80017dc <__gxx_personality_sj0+0x3b4>
 80017c8:	00c00044 	movi	r3,1
 80017cc:	1908983a 	sll	r4,r3,r4
 80017d0:	0109c83a 	sub	r4,zero,r4
 80017d4:	390eb03a 	or	r7,r7,r4
 80017d8:	d9c01615 	stw	r7,88(sp)
 80017dc:	d9001517 	ldw	r4,84(sp)
 80017e0:	20003c26 	beq	r4,zero,80018d4 <__gxx_personality_sj0+0x4ac>
 80017e4:	01003e0e 	bge	zero,r4,80018e0 <__gxx_personality_sj0+0x4b8>
 80017e8:	01ffffc4 	movi	r7,-1
 80017ec:	200b883a 	mov	r5,r4
 80017f0:	d809883a 	mov	r4,sp
 80017f4:	d9c00915 	stw	r7,36(sp)
 80017f8:	8000f240 	call	8000f24 <_ZL15get_ttype_entryP16lsda_header_infom>
 80017fc:	10005f26 	beq	r2,zero,800197c <__gxx_personality_sj0+0x554>
 8001800:	d8c01e17 	ldw	r3,120(sp)
 8001804:	1800571e 	bne	r3,zero,8001964 <__gxx_personality_sj0+0x53c>
 8001808:	d9001617 	ldw	r4,88(sp)
 800180c:	20002926 	beq	r4,zero,80018b4 <__gxx_personality_sj0+0x48c>
 8001810:	d9c01717 	ldw	r7,92(sp)
 8001814:	390f883a 	add	r7,r7,r4
 8001818:	d9c01815 	stw	r7,96(sp)
 800181c:	003fbd06 	br	8001714 <__alt_data_end+0xf8001714>
 8001820:	d8c01f17 	ldw	r3,124(sp)
 8001824:	1800251e 	bne	r3,zero,80018bc <__gxx_personality_sj0+0x494>
 8001828:	01000204 	movi	r4,8
 800182c:	d9001515 	stw	r4,84(sp)
 8001830:	003f1806 	br	8001494 <__alt_data_end+0xf8001494>
 8001834:	d8801c17 	ldw	r2,112(sp)
 8001838:	10000d26 	beq	r2,zero,8001870 <__gxx_personality_sj0+0x448>
 800183c:	00800184 	movi	r2,6
 8001840:	d8801515 	stw	r2,84(sp)
 8001844:	003f1306 	br	8001494 <__alt_data_end+0xf8001494>
 8001848:	00800044 	movi	r2,1
 800184c:	18bf4d1e 	bne	r3,r2,8001584 <__alt_data_end+0xf8001584>
 8001850:	8001ea80 	call	8001ea8 <_ZSt9terminatev>
 8001854:	d9001b17 	ldw	r4,108(sp)
 8001858:	00800044 	movi	r2,1
 800185c:	113f4536 	bltu	r2,r4,8001574 <__alt_data_end+0xf8001574>
 8001860:	00800044 	movi	r2,1
 8001864:	18bf841e 	bne	r3,r2,8001678 <__alt_data_end+0xf8001678>
 8001868:	d9002317 	ldw	r4,140(sp)
 800186c:	800240c0 	call	800240c <__cxa_call_terminate>
 8001870:	d8c01b17 	ldw	r3,108(sp)
 8001874:	00800044 	movi	r2,1
 8001878:	10fff036 	bltu	r2,r3,800183c <__alt_data_end+0xf800183c>
 800187c:	d9002317 	ldw	r4,140(sp)
 8001880:	d8801817 	ldw	r2,96(sp)
 8001884:	d9c01517 	ldw	r7,84(sp)
 8001888:	d8c01a17 	ldw	r3,104(sp)
 800188c:	20bffc15 	stw	r2,-16(r4)
 8001890:	d8800717 	ldw	r2,28(sp)
 8001894:	21fffb15 	stw	r7,-20(r4)
 8001898:	d9c01f17 	ldw	r7,124(sp)
 800189c:	20bfff15 	stw	r2,-4(r4)
 80018a0:	00800184 	movi	r2,6
 80018a4:	20fffd15 	stw	r3,-12(r4)
 80018a8:	21fffe15 	stw	r7,-8(r4)
 80018ac:	d8801515 	stw	r2,84(sp)
 80018b0:	003ef806 	br	8001494 <__alt_data_end+0xf8001494>
 80018b4:	d8801d03 	ldbu	r2,116(sp)
 80018b8:	103fdb26 	beq	r2,zero,8001828 <__alt_data_end+0xf8001828>
 80018bc:	d8c01917 	ldw	r3,100(sp)
 80018c0:	1880004c 	andi	r2,r3,1
 80018c4:	103fd81e 	bne	r2,zero,8001828 <__alt_data_end+0xf8001828>
 80018c8:	d8001515 	stw	zero,84(sp)
 80018cc:	00c00084 	movi	r3,2
 80018d0:	003f2306 	br	8001560 <__alt_data_end+0xf8001560>
 80018d4:	00c00044 	movi	r3,1
 80018d8:	d8c01d05 	stb	r3,116(sp)
 80018dc:	003fca06 	br	8001808 <__alt_data_end+0xf8001808>
 80018e0:	d9001e17 	ldw	r4,120(sp)
 80018e4:	20000426 	beq	r4,zero,80018f8 <__gxx_personality_sj0+0x4d0>
 80018e8:	d9c02017 	ldw	r7,128(sp)
 80018ec:	3800021e 	bne	r7,zero,80018f8 <__gxx_personality_sj0+0x4d0>
 80018f0:	d8801c17 	ldw	r2,112(sp)
 80018f4:	10002726 	beq	r2,zero,8001994 <__gxx_personality_sj0+0x56c>
 80018f8:	d8801517 	ldw	r2,84(sp)
 80018fc:	000d883a 	mov	r6,zero
 8001900:	000b883a 	mov	r5,zero
 8001904:	0088303a 	nor	r4,zero,r2
 8001908:	d8800317 	ldw	r2,12(sp)
 800190c:	1109883a 	add	r4,r2,r4
 8001910:	20800003 	ldbu	r2,0(r4)
 8001914:	21000044 	addi	r4,r4,1
 8001918:	10c01fcc 	andi	r3,r2,127
 800191c:	1946983a 	sll	r3,r3,r5
 8001920:	10803fcc 	andi	r2,r2,255
 8001924:	1080201c 	xori	r2,r2,128
 8001928:	10bfe004 	addi	r2,r2,-128
 800192c:	30ccb03a 	or	r6,r6,r3
 8001930:	294001c4 	addi	r5,r5,7
 8001934:	103ff616 	blt	r2,zero,8001910 <__alt_data_end+0xf8001910>
 8001938:	3005003a 	cmpeq	r2,r6,zero
 800193c:	10803fcc 	andi	r2,r2,255
 8001940:	103fb126 	beq	r2,zero,8001808 <__alt_data_end+0xf8001808>
 8001944:	d9c01917 	ldw	r7,100(sp)
 8001948:	3880004c 	andi	r2,r7,1
 800194c:	103fb91e 	bne	r2,zero,8001834 <__alt_data_end+0xf8001834>
 8001950:	d8802017 	ldw	r2,128(sp)
 8001954:	10002d26 	beq	r2,zero,8001a0c <__gxx_personality_sj0+0x5e4>
 8001958:	00800044 	movi	r2,1
 800195c:	d8800915 	stw	r2,36(sp)
 8001960:	8001ed00 	call	8001ed0 <_ZSt10unexpectedv>
 8001964:	d9800704 	addi	r6,sp,28
 8001968:	180b883a 	mov	r5,r3
 800196c:	1009883a 	mov	r4,r2
 8001970:	80011380 	call	8001138 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv.constprop.3>
 8001974:	10803fcc 	andi	r2,r2,255
 8001978:	103fa326 	beq	r2,zero,8001808 <__alt_data_end+0xf8001808>
 800197c:	00c000c4 	movi	r3,3
 8001980:	003ef406 	br	8001554 <__alt_data_end+0xf8001554>
 8001984:	01020074 	movhi	r4,2049
 8001988:	2113f304 	addi	r4,r4,20428
 800198c:	d9001e15 	stw	r4,120(sp)
 8001990:	003f5f06 	br	8001710 <__alt_data_end+0xf8001710>
 8001994:	d9001b17 	ldw	r4,108(sp)
 8001998:	00c00044 	movi	r3,1
 800199c:	193fd636 	bltu	r3,r4,80018f8 <__alt_data_end+0xf80018f8>
 80019a0:	01ffffc4 	movi	r7,-1
 80019a4:	d9c00915 	stw	r7,36(sp)
 80019a8:	d9800717 	ldw	r6,28(sp)
 80019ac:	d9c01517 	ldw	r7,84(sp)
 80019b0:	d9401e17 	ldw	r5,120(sp)
 80019b4:	d809883a 	mov	r4,sp
 80019b8:	80013800 	call	8001380 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl>
 80019bc:	1080005c 	xori	r2,r2,1
 80019c0:	003fde06 	br	800193c <__alt_data_end+0xf800193c>
 80019c4:	d9001b17 	ldw	r4,108(sp)
 80019c8:	00800044 	movi	r2,1
 80019cc:	113f4d36 	bltu	r2,r4,8001704 <__alt_data_end+0xf8001704>
 80019d0:	d9c02317 	ldw	r7,140(sp)
 80019d4:	38800017 	ldw	r2,0(r7)
 80019d8:	1080004c 	andi	r2,r2,1
 80019dc:	1000061e 	bne	r2,zero,80019f8 <__gxx_personality_sj0+0x5d0>
 80019e0:	d8c02317 	ldw	r3,140(sp)
 80019e4:	18800504 	addi	r2,r3,20
 80019e8:	d8800715 	stw	r2,28(sp)
 80019ec:	10bff017 	ldw	r2,-64(r2)
 80019f0:	d8801e15 	stw	r2,120(sp)
 80019f4:	003f4606 	br	8001710 <__alt_data_end+0xf8001710>
 80019f8:	38bff517 	ldw	r2,-44(r7)
 80019fc:	003ffa06 	br	80019e8 <__alt_data_end+0xf80019e8>
 8001a00:	d9000a17 	ldw	r4,40(sp)
 8001a04:	8001c600 	call	8001c60 <__cxa_begin_catch>
 8001a08:	003f9106 	br	8001850 <__alt_data_end+0xf8001850>
 8001a0c:	d9c01c17 	ldw	r7,112(sp)
 8001a10:	383eda1e 	bne	r7,zero,800157c <__alt_data_end+0xf800157c>
 8001a14:	d8c01b17 	ldw	r3,108(sp)
 8001a18:	00800044 	movi	r2,1
 8001a1c:	10fed736 	bltu	r2,r3,800157c <__alt_data_end+0xf800157c>
 8001a20:	00c000c4 	movi	r3,3
 8001a24:	003f8e06 	br	8001860 <__alt_data_end+0xf8001860>

08001a28 <__cxa_call_unexpected>:
 8001a28:	00820034 	movhi	r2,2048
 8001a2c:	deffe604 	addi	sp,sp,-104
 8001a30:	10850a04 	addi	r2,r2,5160
 8001a34:	d8800d15 	stw	r2,52(sp)
 8001a38:	00820074 	movhi	r2,2049
 8001a3c:	1089d804 	addi	r2,r2,10080
 8001a40:	d8800e15 	stw	r2,56(sp)
 8001a44:	d8800104 	addi	r2,sp,4
 8001a48:	d8800f15 	stw	r2,60(sp)
 8001a4c:	00820034 	movhi	r2,2048
 8001a50:	1086ad04 	addi	r2,r2,6836
 8001a54:	d9001415 	stw	r4,80(sp)
 8001a58:	d9000704 	addi	r4,sp,28
 8001a5c:	dfc01915 	stw	ra,100(sp)
 8001a60:	d8801015 	stw	r2,64(sp)
 8001a64:	df001815 	stw	fp,96(sp)
 8001a68:	dec01115 	stw	sp,68(sp)
 8001a6c:	8002d080 	call	8002d08 <_Unwind_SjLj_Register>
 8001a70:	d9001417 	ldw	r4,80(sp)
 8001a74:	8001c600 	call	8001c60 <__cxa_begin_catch>
 8001a78:	d8c01417 	ldw	r3,80(sp)
 8001a7c:	18bffe17 	ldw	r2,-8(r3)
 8001a80:	193ff717 	ldw	r4,-36(r3)
 8001a84:	18fffd17 	ldw	r3,-12(r3)
 8001a88:	d8800315 	stw	r2,12(sp)
 8001a8c:	d8c01615 	stw	r3,88(sp)
 8001a90:	d8c01417 	ldw	r3,80(sp)
 8001a94:	18fffb17 	ldw	r3,-20(r3)
 8001a98:	d8c01515 	stw	r3,84(sp)
 8001a9c:	d8c01417 	ldw	r3,80(sp)
 8001aa0:	18fff817 	ldw	r3,-32(r3)
 8001aa4:	d8c01415 	stw	r3,80(sp)
 8001aa8:	00c00044 	movi	r3,1
 8001aac:	d8c00815 	stw	r3,32(sp)
 8001ab0:	8001ec00 	call	8001ec0 <_ZN10__cxxabiv112__unexpectedEPFvvE>
 8001ab4:	d8c00917 	ldw	r3,36(sp)
 8001ab8:	d8800817 	ldw	r2,32(sp)
 8001abc:	d8c01715 	stw	r3,92(sp)
 8001ac0:	10000a26 	beq	r2,zero,8001aec <__cxa_call_unexpected+0xc4>
 8001ac4:	10bfffc4 	addi	r2,r2,-1
 8001ac8:	10000126 	beq	r2,zero,8001ad0 <__cxa_call_unexpected+0xa8>
 8001acc:	003b68fa 	trap	3
 8001ad0:	d8000815 	stw	zero,32(sp)
 8001ad4:	8001d140 	call	8001d14 <__cxa_end_catch>
 8001ad8:	8001d140 	call	8001d14 <__cxa_end_catch>
 8001adc:	d9001717 	ldw	r4,92(sp)
 8001ae0:	00bfffc4 	movi	r2,-1
 8001ae4:	d8800815 	stw	r2,32(sp)
 8001ae8:	8002f040 	call	8002f04 <_Unwind_SjLj_Resume>
 8001aec:	d9001717 	ldw	r4,92(sp)
 8001af0:	8001c600 	call	8001c60 <__cxa_begin_catch>
 8001af4:	8001fa00 	call	8001fa0 <__cxa_get_globals_fast>
 8001af8:	10800017 	ldw	r2,0(r2)
 8001afc:	10c00b17 	ldw	r3,44(r2)
 8001b00:	18c0004c 	andi	r3,r3,1
 8001b04:	18001e26 	beq	r3,zero,8001b80 <__cxa_call_unexpected+0x158>
 8001b08:	10800017 	ldw	r2,0(r2)
 8001b0c:	d8801715 	stw	r2,92(sp)
 8001b10:	d8801517 	ldw	r2,84(sp)
 8001b14:	00802b0e 	bge	zero,r2,8001bc4 <__cxa_call_unexpected+0x19c>
 8001b18:	d8c01717 	ldw	r3,92(sp)
 8001b1c:	d8800317 	ldw	r2,12(sp)
 8001b20:	d9c01517 	ldw	r7,84(sp)
 8001b24:	193ff017 	ldw	r4,-64(r3)
 8001b28:	d9801617 	ldw	r6,88(sp)
 8001b2c:	d8800015 	stw	r2,0(sp)
 8001b30:	180b883a 	mov	r5,r3
 8001b34:	00800084 	movi	r2,2
 8001b38:	d8800815 	stw	r2,32(sp)
 8001b3c:	80011c00 	call	80011c0 <_ZL28check_compact_exception_specPKSt9type_infoPvPKhij>
 8001b40:	10803fcc 	andi	r2,r2,255
 8001b44:	10001e1e 	bne	r2,zero,8001bc0 <__cxa_call_unexpected+0x198>
 8001b48:	d8800317 	ldw	r2,12(sp)
 8001b4c:	d9c01517 	ldw	r7,84(sp)
 8001b50:	d9801617 	ldw	r6,88(sp)
 8001b54:	01020074 	movhi	r4,2049
 8001b58:	d8800015 	stw	r2,0(sp)
 8001b5c:	210c0404 	addi	r4,r4,12304
 8001b60:	00800084 	movi	r2,2
 8001b64:	000b883a 	mov	r5,zero
 8001b68:	d8800815 	stw	r2,32(sp)
 8001b6c:	80011c00 	call	80011c0 <_ZL28check_compact_exception_specPKSt9type_infoPvPKhij>
 8001b70:	10803fcc 	andi	r2,r2,255
 8001b74:	1000051e 	bne	r2,zero,8001b8c <__cxa_call_unexpected+0x164>
 8001b78:	d9001417 	ldw	r4,80(sp)
 8001b7c:	8001de80 	call	8001de8 <_ZN10__cxxabiv111__terminateEPFvvE>
 8001b80:	10801004 	addi	r2,r2,64
 8001b84:	d8801715 	stw	r2,92(sp)
 8001b88:	003fe106 	br	8001b10 <__alt_data_end+0xf8001b10>
 8001b8c:	01000104 	movi	r4,4
 8001b90:	80021180 	call	8002118 <__cxa_allocate_exception>
 8001b94:	00c20074 	movhi	r3,2049
 8001b98:	18cc1f04 	addi	r3,r3,12412
 8001b9c:	01820034 	movhi	r6,2048
 8001ba0:	01420074 	movhi	r5,2049
 8001ba4:	10c00015 	stw	r3,0(r2)
 8001ba8:	3188a004 	addi	r6,r6,8832
 8001bac:	00c00084 	movi	r3,2
 8001bb0:	294c0404 	addi	r5,r5,12304
 8001bb4:	1009883a 	mov	r4,r2
 8001bb8:	d8c00815 	stw	r3,32(sp)
 8001bbc:	80022f80 	call	80022f8 <__cxa_throw>
 8001bc0:	80023880 	call	8002388 <__cxa_rethrow>
 8001bc4:	d9401617 	ldw	r5,88(sp)
 8001bc8:	00800084 	movi	r2,2
 8001bcc:	d9800104 	addi	r6,sp,4
 8001bd0:	0009883a 	mov	r4,zero
 8001bd4:	d8800815 	stw	r2,32(sp)
 8001bd8:	80010040 	call	8001004 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>
 8001bdc:	d9801717 	ldw	r6,92(sp)
 8001be0:	d9c01517 	ldw	r7,84(sp)
 8001be4:	d9000104 	addi	r4,sp,4
 8001be8:	317ff017 	ldw	r5,-64(r6)
 8001bec:	80013800 	call	8001380 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl>
 8001bf0:	10803fcc 	andi	r2,r2,255
 8001bf4:	1000171e 	bne	r2,zero,8001c54 <__cxa_call_unexpected+0x22c>
 8001bf8:	d9c01517 	ldw	r7,84(sp)
 8001bfc:	01420074 	movhi	r5,2049
 8001c00:	00800084 	movi	r2,2
 8001c04:	294c0404 	addi	r5,r5,12304
 8001c08:	000d883a 	mov	r6,zero
 8001c0c:	d9000104 	addi	r4,sp,4
 8001c10:	d8800815 	stw	r2,32(sp)
 8001c14:	80013800 	call	8001380 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl>
 8001c18:	10803fcc 	andi	r2,r2,255
 8001c1c:	103fd626 	beq	r2,zero,8001b78 <__alt_data_end+0xf8001b78>
 8001c20:	01000104 	movi	r4,4
 8001c24:	80021180 	call	8002118 <__cxa_allocate_exception>
 8001c28:	00c20074 	movhi	r3,2049
 8001c2c:	18cc1f04 	addi	r3,r3,12412
 8001c30:	01820034 	movhi	r6,2048
 8001c34:	01420074 	movhi	r5,2049
 8001c38:	10c00015 	stw	r3,0(r2)
 8001c3c:	3188a004 	addi	r6,r6,8832
 8001c40:	00c00084 	movi	r3,2
 8001c44:	294c0404 	addi	r5,r5,12304
 8001c48:	1009883a 	mov	r4,r2
 8001c4c:	d8c00815 	stw	r3,32(sp)
 8001c50:	80022f80 	call	80022f8 <__cxa_throw>
 8001c54:	80023880 	call	8002388 <__cxa_rethrow>

08001c58 <__cxa_get_exception_ptr>:
 8001c58:	20bfff17 	ldw	r2,-4(r4)
 8001c5c:	f800283a 	ret

08001c60 <__cxa_begin_catch>:
 8001c60:	defffe04 	addi	sp,sp,-8
 8001c64:	dc000015 	stw	r16,0(sp)
 8001c68:	dfc00115 	stw	ra,4(sp)
 8001c6c:	2021883a 	mov	r16,r4
 8001c70:	8001fac0 	call	8001fac <__cxa_get_globals>
 8001c74:	81000017 	ldw	r4,0(r16)
 8001c78:	80c00117 	ldw	r3,4(r16)
 8001c7c:	01af3574 	movhi	r6,48341
 8001c80:	31b54004 	addi	r6,r6,-11008
 8001c84:	016e2cb4 	movhi	r5,47282
 8001c88:	296aaf04 	addi	r5,r5,-21828
 8001c8c:	218d883a 	add	r6,r4,r6
 8001c90:	3109803a 	cmpltu	r4,r6,r4
 8001c94:	1947883a 	add	r3,r3,r5
 8001c98:	20c7883a 	add	r3,r4,r3
 8001c9c:	817ff504 	addi	r5,r16,-44
 8001ca0:	11000017 	ldw	r4,0(r2)
 8001ca4:	18000726 	beq	r3,zero,8001cc4 <__cxa_begin_catch+0x64>
 8001ca8:	2000191e 	bne	r4,zero,8001d10 <__cxa_begin_catch+0xb0>
 8001cac:	11400015 	stw	r5,0(r2)
 8001cb0:	0005883a 	mov	r2,zero
 8001cb4:	dfc00117 	ldw	ra,4(sp)
 8001cb8:	dc000017 	ldw	r16,0(sp)
 8001cbc:	dec00204 	addi	sp,sp,8
 8001cc0:	f800283a 	ret
 8001cc4:	01c00044 	movi	r7,1
 8001cc8:	39bff736 	bltu	r7,r6,8001ca8 <__alt_data_end+0xf8001ca8>
 8001ccc:	80fffa17 	ldw	r3,-24(r16)
 8001cd0:	18000d16 	blt	r3,zero,8001d08 <__cxa_begin_catch+0xa8>
 8001cd4:	18c00044 	addi	r3,r3,1
 8001cd8:	11800117 	ldw	r6,4(r2)
 8001cdc:	80fffa15 	stw	r3,-24(r16)
 8001ce0:	30ffffc4 	addi	r3,r6,-1
 8001ce4:	10c00115 	stw	r3,4(r2)
 8001ce8:	21400226 	beq	r4,r5,8001cf4 <__cxa_begin_catch+0x94>
 8001cec:	813ff915 	stw	r4,-28(r16)
 8001cf0:	11400015 	stw	r5,0(r2)
 8001cf4:	80bfff17 	ldw	r2,-4(r16)
 8001cf8:	dfc00117 	ldw	ra,4(sp)
 8001cfc:	dc000017 	ldw	r16,0(sp)
 8001d00:	dec00204 	addi	sp,sp,8
 8001d04:	f800283a 	ret
 8001d08:	38c7c83a 	sub	r3,r7,r3
 8001d0c:	003ff206 	br	8001cd8 <__alt_data_end+0xf8001cd8>
 8001d10:	8001ea80 	call	8001ea8 <_ZSt9terminatev>

08001d14 <__cxa_end_catch>:
 8001d14:	deffff04 	addi	sp,sp,-4
 8001d18:	dfc00015 	stw	ra,0(sp)
 8001d1c:	8001fa00 	call	8001fa0 <__cxa_get_globals_fast>
 8001d20:	11000017 	ldw	r4,0(r2)
 8001d24:	20001426 	beq	r4,zero,8001d78 <__cxa_end_catch+0x64>
 8001d28:	21400b17 	ldw	r5,44(r4)
 8001d2c:	01ef3574 	movhi	r7,48341
 8001d30:	39f54004 	addi	r7,r7,-11008
 8001d34:	29cf883a 	add	r7,r5,r7
 8001d38:	20c00c17 	ldw	r3,48(r4)
 8001d3c:	394d803a 	cmpltu	r6,r7,r5
 8001d40:	016e2cb4 	movhi	r5,47282
 8001d44:	296aaf04 	addi	r5,r5,-21828
 8001d48:	1947883a 	add	r3,r3,r5
 8001d4c:	30c7883a 	add	r3,r6,r3
 8001d50:	18000c1e 	bne	r3,zero,8001d84 <__cxa_end_catch+0x70>
 8001d54:	00c00044 	movi	r3,1
 8001d58:	19c00a36 	bltu	r3,r7,8001d84 <__cxa_end_catch+0x70>
 8001d5c:	20c00517 	ldw	r3,20(r4)
 8001d60:	18000d16 	blt	r3,zero,8001d98 <__cxa_end_catch+0x84>
 8001d64:	18ffffc4 	addi	r3,r3,-1
 8001d68:	18001026 	beq	r3,zero,8001dac <__cxa_end_catch+0x98>
 8001d6c:	00bfffc4 	movi	r2,-1
 8001d70:	18801426 	beq	r3,r2,8001dc4 <__cxa_end_catch+0xb0>
 8001d74:	20c00515 	stw	r3,20(r4)
 8001d78:	dfc00017 	ldw	ra,0(sp)
 8001d7c:	dec00104 	addi	sp,sp,4
 8001d80:	f800283a 	ret
 8001d84:	21000b04 	addi	r4,r4,44
 8001d88:	10000015 	stw	zero,0(r2)
 8001d8c:	dfc00017 	ldw	ra,0(sp)
 8001d90:	dec00104 	addi	sp,sp,4
 8001d94:	8002f941 	jmpi	8002f94 <_Unwind_DeleteException>
 8001d98:	18c00044 	addi	r3,r3,1
 8001d9c:	183ff51e 	bne	r3,zero,8001d74 <__alt_data_end+0xf8001d74>
 8001da0:	21400417 	ldw	r5,16(r4)
 8001da4:	11400015 	stw	r5,0(r2)
 8001da8:	003ff206 	br	8001d74 <__alt_data_end+0xf8001d74>
 8001dac:	20c00417 	ldw	r3,16(r4)
 8001db0:	21000b04 	addi	r4,r4,44
 8001db4:	10c00015 	stw	r3,0(r2)
 8001db8:	dfc00017 	ldw	ra,0(sp)
 8001dbc:	dec00104 	addi	sp,sp,4
 8001dc0:	8002f941 	jmpi	8002f94 <_Unwind_DeleteException>
 8001dc4:	8001ea80 	call	8001ea8 <_ZSt9terminatev>

08001dc8 <_ZSt18uncaught_exceptionv>:
 8001dc8:	deffff04 	addi	sp,sp,-4
 8001dcc:	dfc00015 	stw	ra,0(sp)
 8001dd0:	8001fac0 	call	8001fac <__cxa_get_globals>
 8001dd4:	10800117 	ldw	r2,4(r2)
 8001dd8:	1004c03a 	cmpne	r2,r2,zero
 8001ddc:	dfc00017 	ldw	ra,0(sp)
 8001de0:	dec00104 	addi	sp,sp,4
 8001de4:	f800283a 	ret

08001de8 <_ZN10__cxxabiv111__terminateEPFvvE>:
 8001de8:	00820034 	movhi	r2,2048
 8001dec:	deffef04 	addi	sp,sp,-68
 8001df0:	10850a04 	addi	r2,r2,5160
 8001df4:	d8800615 	stw	r2,24(sp)
 8001df8:	00820074 	movhi	r2,2049
 8001dfc:	1089dc04 	addi	r2,r2,10096
 8001e00:	d8800715 	stw	r2,28(sp)
 8001e04:	00820034 	movhi	r2,2048
 8001e08:	10879004 	addi	r2,r2,7744
 8001e0c:	d9000d15 	stw	r4,52(sp)
 8001e10:	d809883a 	mov	r4,sp
 8001e14:	d8800915 	stw	r2,36(sp)
 8001e18:	dfc01015 	stw	ra,64(sp)
 8001e1c:	df000f15 	stw	fp,60(sp)
 8001e20:	dec00815 	stw	sp,32(sp)
 8001e24:	dec00a15 	stw	sp,40(sp)
 8001e28:	8002d080 	call	8002d08 <_Unwind_SjLj_Register>
 8001e2c:	00800044 	movi	r2,1
 8001e30:	d8800115 	stw	r2,4(sp)
 8001e34:	d8800d17 	ldw	r2,52(sp)
 8001e38:	103ee83a 	callr	r2
 8001e3c:	80030200 	call	8003020 <abort>
 8001e40:	d8c00217 	ldw	r3,8(sp)
 8001e44:	d8800117 	ldw	r2,4(sp)
 8001e48:	d8c00d15 	stw	r3,52(sp)
 8001e4c:	d8c00317 	ldw	r3,12(sp)
 8001e50:	d8c00e15 	stw	r3,56(sp)
 8001e54:	10000b26 	beq	r2,zero,8001e84 <_ZN10__cxxabiv111__terminateEPFvvE+0x9c>
 8001e58:	10bfffc4 	addi	r2,r2,-1
 8001e5c:	10000126 	beq	r2,zero,8001e64 <_ZN10__cxxabiv111__terminateEPFvvE+0x7c>
 8001e60:	003b68fa 	trap	3
 8001e64:	d8000115 	stw	zero,4(sp)
 8001e68:	8001d140 	call	8001d14 <__cxa_end_catch>
 8001e6c:	d8c00e17 	ldw	r3,56(sp)
 8001e70:	00bfffc4 	movi	r2,-1
 8001e74:	18800826 	beq	r3,r2,8001e98 <_ZN10__cxxabiv111__terminateEPFvvE+0xb0>
 8001e78:	d9000d17 	ldw	r4,52(sp)
 8001e7c:	d8800115 	stw	r2,4(sp)
 8001e80:	8002f040 	call	8002f04 <_Unwind_SjLj_Resume>
 8001e84:	d9000d17 	ldw	r4,52(sp)
 8001e88:	8001c600 	call	8001c60 <__cxa_begin_catch>
 8001e8c:	00800084 	movi	r2,2
 8001e90:	d8800115 	stw	r2,4(sp)
 8001e94:	80030200 	call	8003020 <abort>
 8001e98:	d8800e17 	ldw	r2,56(sp)
 8001e9c:	d9000d17 	ldw	r4,52(sp)
 8001ea0:	d8800115 	stw	r2,4(sp)
 8001ea4:	8001a280 	call	8001a28 <__cxa_call_unexpected>

08001ea8 <_ZSt9terminatev>:
 8001ea8:	00820074 	movhi	r2,2049
 8001eac:	1093f904 	addi	r2,r2,20452
 8001eb0:	11000017 	ldw	r4,0(r2)
 8001eb4:	deffff04 	addi	sp,sp,-4
 8001eb8:	dfc00015 	stw	ra,0(sp)
 8001ebc:	8001de80 	call	8001de8 <_ZN10__cxxabiv111__terminateEPFvvE>

08001ec0 <_ZN10__cxxabiv112__unexpectedEPFvvE>:
 8001ec0:	deffff04 	addi	sp,sp,-4
 8001ec4:	dfc00015 	stw	ra,0(sp)
 8001ec8:	203ee83a 	callr	r4
 8001ecc:	8001ea80 	call	8001ea8 <_ZSt9terminatev>

08001ed0 <_ZSt10unexpectedv>:
 8001ed0:	00820074 	movhi	r2,2049
 8001ed4:	1093fa04 	addi	r2,r2,20456
 8001ed8:	11000017 	ldw	r4,0(r2)
 8001edc:	deffff04 	addi	sp,sp,-4
 8001ee0:	dfc00015 	stw	ra,0(sp)
 8001ee4:	8001ec00 	call	8001ec0 <_ZN10__cxxabiv112__unexpectedEPFvvE>

08001ee8 <_ZSt13set_terminatePFvvE>:
 8001ee8:	00c20074 	movhi	r3,2049
 8001eec:	18d3f904 	addi	r3,r3,20452
 8001ef0:	18800017 	ldw	r2,0(r3)
 8001ef4:	19000015 	stw	r4,0(r3)
 8001ef8:	f800283a 	ret

08001efc <_ZSt13get_terminatev>:
 8001efc:	00820074 	movhi	r2,2049
 8001f00:	1093f904 	addi	r2,r2,20452
 8001f04:	10800017 	ldw	r2,0(r2)
 8001f08:	f800283a 	ret

08001f0c <_ZSt14set_unexpectedPFvvE>:
 8001f0c:	00c20074 	movhi	r3,2049
 8001f10:	18d3fa04 	addi	r3,r3,20456
 8001f14:	18800017 	ldw	r2,0(r3)
 8001f18:	19000015 	stw	r4,0(r3)
 8001f1c:	f800283a 	ret

08001f20 <_ZSt14get_unexpectedv>:
 8001f20:	00820074 	movhi	r2,2049
 8001f24:	1093fa04 	addi	r2,r2,20456
 8001f28:	10800017 	ldw	r2,0(r2)
 8001f2c:	f800283a 	ret

08001f30 <_Znwj>:
 8001f30:	defffe04 	addi	sp,sp,-8
 8001f34:	dc000015 	stw	r16,0(sp)
 8001f38:	dfc00115 	stw	ra,4(sp)
 8001f3c:	2021883a 	mov	r16,r4
 8001f40:	2000011e 	bne	r4,zero,8001f48 <_Znwj+0x18>
 8001f44:	04000044 	movi	r16,1
 8001f48:	8009883a 	mov	r4,r16
 8001f4c:	80030380 	call	8003038 <malloc>
 8001f50:	10000426 	beq	r2,zero,8001f64 <_Znwj+0x34>
 8001f54:	dfc00117 	ldw	ra,4(sp)
 8001f58:	dc000017 	ldw	r16,0(sp)
 8001f5c:	dec00204 	addi	sp,sp,8
 8001f60:	f800283a 	ret
 8001f64:	80028280 	call	8002828 <_ZSt15get_new_handlerv>
 8001f68:	10000226 	beq	r2,zero,8001f74 <_Znwj+0x44>
 8001f6c:	103ee83a 	callr	r2
 8001f70:	003ff506 	br	8001f48 <__alt_data_end+0xf8001f48>
 8001f74:	01000104 	movi	r4,4
 8001f78:	80021180 	call	8002118 <__cxa_allocate_exception>
 8001f7c:	00c20074 	movhi	r3,2049
 8001f80:	01820034 	movhi	r6,2048
 8001f84:	01420074 	movhi	r5,2049
 8001f88:	18cc6c04 	addi	r3,r3,12720
 8001f8c:	3189f404 	addi	r6,r6,10192
 8001f90:	294c6704 	addi	r5,r5,12700
 8001f94:	1009883a 	mov	r4,r2
 8001f98:	10c00015 	stw	r3,0(r2)
 8001f9c:	80022f80 	call	80022f8 <__cxa_throw>

08001fa0 <__cxa_get_globals_fast>:
 8001fa0:	00820074 	movhi	r2,2049
 8001fa4:	109ad204 	addi	r2,r2,27464
 8001fa8:	f800283a 	ret

08001fac <__cxa_get_globals>:
 8001fac:	00820074 	movhi	r2,2049
 8001fb0:	109ad204 	addi	r2,r2,27464
 8001fb4:	f800283a 	ret

08001fb8 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4>:
 8001fb8:	01820074 	movhi	r6,2049
 8001fbc:	319ae404 	addi	r6,r6,27536
 8001fc0:	31400117 	ldw	r5,4(r6)
 8001fc4:	223fff04 	addi	r8,r4,-4
 8001fc8:	227fff17 	ldw	r9,-4(r4)
 8001fcc:	28001326 	beq	r5,zero,800201c <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x64>
 8001fd0:	424f883a 	add	r7,r8,r9
 8001fd4:	29c01426 	beq	r5,r7,8002028 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x70>
 8001fd8:	28c00117 	ldw	r3,4(r5)
 8001fdc:	18001c26 	beq	r3,zero,8002050 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x98>
 8001fe0:	38c00336 	bltu	r7,r3,8001ff0 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x38>
 8001fe4:	00001e06 	br	8002060 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0xa8>
 8001fe8:	3880052e 	bgeu	r7,r2,8002000 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x48>
 8001fec:	1007883a 	mov	r3,r2
 8001ff0:	18800117 	ldw	r2,4(r3)
 8001ff4:	29800104 	addi	r6,r5,4
 8001ff8:	180b883a 	mov	r5,r3
 8001ffc:	103ffa1e 	bne	r2,zero,8001fe8 <__alt_data_end+0xf8001fe8>
 8002000:	19400017 	ldw	r5,0(r3)
 8002004:	194f883a 	add	r7,r3,r5
 8002008:	41c00e26 	beq	r8,r7,8002044 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x8c>
 800200c:	20800015 	stw	r2,0(r4)
 8002010:	30800017 	ldw	r2,0(r6)
 8002014:	12000115 	stw	r8,4(r2)
 8002018:	f800283a 	ret
 800201c:	20000015 	stw	zero,0(r4)
 8002020:	32000115 	stw	r8,4(r6)
 8002024:	f800283a 	ret
 8002028:	28c00017 	ldw	r3,0(r5)
 800202c:	28800117 	ldw	r2,4(r5)
 8002030:	1a53883a 	add	r9,r3,r9
 8002034:	227fff15 	stw	r9,-4(r4)
 8002038:	20800015 	stw	r2,0(r4)
 800203c:	32000115 	stw	r8,4(r6)
 8002040:	f800283a 	ret
 8002044:	494b883a 	add	r5,r9,r5
 8002048:	19400015 	stw	r5,0(r3)
 800204c:	f800283a 	ret
 8002050:	0005883a 	mov	r2,zero
 8002054:	2807883a 	mov	r3,r5
 8002058:	31800104 	addi	r6,r6,4
 800205c:	003fe806 	br	8002000 <__alt_data_end+0xf8002000>
 8002060:	1805883a 	mov	r2,r3
 8002064:	31800104 	addi	r6,r6,4
 8002068:	2807883a 	mov	r3,r5
 800206c:	003fe406 	br	8002000 <__alt_data_end+0xf8002000>

08002070 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5>:
 8002070:	20800104 	addi	r2,r4,4
 8002074:	00c001c4 	movi	r3,7
 8002078:	1880112e 	bgeu	r3,r2,80020c0 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x50>
 800207c:	20c9883a 	add	r4,r4,r3
 8002080:	00bfff04 	movi	r2,-4
 8002084:	208a703a 	and	r5,r4,r2
 8002088:	01820074 	movhi	r6,2049
 800208c:	319ae404 	addi	r6,r6,27536
 8002090:	30c00117 	ldw	r3,4(r6)
 8002094:	18000826 	beq	r3,zero,80020b8 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x48>
 8002098:	19000017 	ldw	r4,0(r3)
 800209c:	21400436 	bltu	r4,r5,80020b0 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x40>
 80020a0:	00001a06 	br	800210c <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x9c>
 80020a4:	11000017 	ldw	r4,0(r2)
 80020a8:	2140072e 	bgeu	r4,r5,80020c8 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x58>
 80020ac:	1007883a 	mov	r3,r2
 80020b0:	18800117 	ldw	r2,4(r3)
 80020b4:	103ffb1e 	bne	r2,zero,80020a4 <__alt_data_end+0xf80020a4>
 80020b8:	0005883a 	mov	r2,zero
 80020bc:	f800283a 	ret
 80020c0:	01400204 	movi	r5,8
 80020c4:	003ff006 	br	8002088 <__alt_data_end+0xf8002088>
 80020c8:	18c00104 	addi	r3,r3,4
 80020cc:	2149c83a 	sub	r4,r4,r5
 80020d0:	018001c4 	movi	r6,7
 80020d4:	3100092e 	bgeu	r6,r4,80020fc <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x8c>
 80020d8:	11c00117 	ldw	r7,4(r2)
 80020dc:	114d883a 	add	r6,r2,r5
 80020e0:	31000015 	stw	r4,0(r6)
 80020e4:	31c00115 	stw	r7,4(r6)
 80020e8:	18800017 	ldw	r2,0(r3)
 80020ec:	11400015 	stw	r5,0(r2)
 80020f0:	19800015 	stw	r6,0(r3)
 80020f4:	10800104 	addi	r2,r2,4
 80020f8:	f800283a 	ret
 80020fc:	11000117 	ldw	r4,4(r2)
 8002100:	10800104 	addi	r2,r2,4
 8002104:	19000015 	stw	r4,0(r3)
 8002108:	f800283a 	ret
 800210c:	1805883a 	mov	r2,r3
 8002110:	30c00104 	addi	r3,r6,4
 8002114:	003fed06 	br	80020cc <__alt_data_end+0xf80020cc>

08002118 <__cxa_allocate_exception>:
 8002118:	defffd04 	addi	sp,sp,-12
 800211c:	dc400115 	stw	r17,4(sp)
 8002120:	24401104 	addi	r17,r4,68
 8002124:	8809883a 	mov	r4,r17
 8002128:	dc000015 	stw	r16,0(sp)
 800212c:	dfc00215 	stw	ra,8(sp)
 8002130:	80030380 	call	8003038 <malloc>
 8002134:	1021883a 	mov	r16,r2
 8002138:	10000a26 	beq	r2,zero,8002164 <__cxa_allocate_exception+0x4c>
 800213c:	01801104 	movi	r6,68
 8002140:	000b883a 	mov	r5,zero
 8002144:	8009883a 	mov	r4,r16
 8002148:	800386c0 	call	800386c <memset>
 800214c:	80801104 	addi	r2,r16,68
 8002150:	dfc00217 	ldw	ra,8(sp)
 8002154:	dc400117 	ldw	r17,4(sp)
 8002158:	dc000017 	ldw	r16,0(sp)
 800215c:	dec00304 	addi	sp,sp,12
 8002160:	f800283a 	ret
 8002164:	8809883a 	mov	r4,r17
 8002168:	80020700 	call	8002070 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5>
 800216c:	1021883a 	mov	r16,r2
 8002170:	103ff21e 	bne	r2,zero,800213c <__alt_data_end+0xf800213c>
 8002174:	8001ea80 	call	8001ea8 <_ZSt9terminatev>

08002178 <__cxa_free_exception>:
 8002178:	00c20074 	movhi	r3,2049
 800217c:	18dae404 	addi	r3,r3,27536
 8002180:	18800217 	ldw	r2,8(r3)
 8002184:	213fef04 	addi	r4,r4,-68
 8002188:	1100042e 	bgeu	r2,r4,800219c <__cxa_free_exception+0x24>
 800218c:	18c00317 	ldw	r3,12(r3)
 8002190:	10c5883a 	add	r2,r2,r3
 8002194:	2080012e 	bgeu	r4,r2,800219c <__cxa_free_exception+0x24>
 8002198:	8001fb81 	jmpi	8001fb8 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4>
 800219c:	800304c1 	jmpi	800304c <free>

080021a0 <__cxa_allocate_dependent_exception>:
 80021a0:	defffe04 	addi	sp,sp,-8
 80021a4:	01001004 	movi	r4,64
 80021a8:	dc000015 	stw	r16,0(sp)
 80021ac:	dfc00115 	stw	ra,4(sp)
 80021b0:	80030380 	call	8003038 <malloc>
 80021b4:	1021883a 	mov	r16,r2
 80021b8:	10000926 	beq	r2,zero,80021e0 <__cxa_allocate_dependent_exception+0x40>
 80021bc:	01801004 	movi	r6,64
 80021c0:	000b883a 	mov	r5,zero
 80021c4:	8009883a 	mov	r4,r16
 80021c8:	800386c0 	call	800386c <memset>
 80021cc:	8005883a 	mov	r2,r16
 80021d0:	dfc00117 	ldw	ra,4(sp)
 80021d4:	dc000017 	ldw	r16,0(sp)
 80021d8:	dec00204 	addi	sp,sp,8
 80021dc:	f800283a 	ret
 80021e0:	01001004 	movi	r4,64
 80021e4:	80020700 	call	8002070 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5>
 80021e8:	1021883a 	mov	r16,r2
 80021ec:	103ff31e 	bne	r2,zero,80021bc <__alt_data_end+0xf80021bc>
 80021f0:	8001ea80 	call	8001ea8 <_ZSt9terminatev>

080021f4 <__cxa_free_dependent_exception>:
 80021f4:	01420074 	movhi	r5,2049
 80021f8:	295ae404 	addi	r5,r5,27536
 80021fc:	28c00217 	ldw	r3,8(r5)
 8002200:	2005883a 	mov	r2,r4
 8002204:	1900042e 	bgeu	r3,r4,8002218 <__cxa_free_dependent_exception+0x24>
 8002208:	29400317 	ldw	r5,12(r5)
 800220c:	1947883a 	add	r3,r3,r5
 8002210:	20c0012e 	bgeu	r4,r3,8002218 <__cxa_free_dependent_exception+0x24>
 8002214:	8001fb81 	jmpi	8001fb8 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4>
 8002218:	1009883a 	mov	r4,r2
 800221c:	800304c1 	jmpi	800304c <free>

08002220 <_GLOBAL__sub_I___cxa_allocate_exception>:
 8002220:	defffd04 	addi	sp,sp,-12
 8002224:	dc400115 	stw	r17,4(sp)
 8002228:	dc000015 	stw	r16,0(sp)
 800222c:	04424004 	movi	r17,2304
 8002230:	04020074 	movhi	r16,2049
 8002234:	841ae404 	addi	r16,r16,27536
 8002238:	8809883a 	mov	r4,r17
 800223c:	dfc00215 	stw	ra,8(sp)
 8002240:	84400315 	stw	r17,12(r16)
 8002244:	80030380 	call	8003038 <malloc>
 8002248:	80800215 	stw	r2,8(r16)
 800224c:	10000826 	beq	r2,zero,8002270 <_GLOBAL__sub_I___cxa_allocate_exception+0x50>
 8002250:	80800115 	stw	r2,4(r16)
 8002254:	14400015 	stw	r17,0(r2)
 8002258:	10000115 	stw	zero,4(r2)
 800225c:	dfc00217 	ldw	ra,8(sp)
 8002260:	dc400117 	ldw	r17,4(sp)
 8002264:	dc000017 	ldw	r16,0(sp)
 8002268:	dec00304 	addi	sp,sp,12
 800226c:	f800283a 	ret
 8002270:	80000315 	stw	zero,12(r16)
 8002274:	80000115 	stw	zero,4(r16)
 8002278:	003ff806 	br	800225c <__alt_data_end+0xf800225c>

0800227c <_ZNSt9exceptionD1Ev>:
 800227c:	f800283a 	ret

08002280 <_ZNSt13bad_exceptionD1Ev>:
 8002280:	f800283a 	ret

08002284 <_ZNKSt9exception4whatEv>:
 8002284:	00820074 	movhi	r2,2049
 8002288:	108bf204 	addi	r2,r2,12232
 800228c:	f800283a 	ret

08002290 <_ZNKSt13bad_exception4whatEv>:
 8002290:	00820074 	movhi	r2,2049
 8002294:	108bf604 	addi	r2,r2,12248
 8002298:	f800283a 	ret

0800229c <_ZNSt9exceptionD0Ev>:
 800229c:	8000c701 	jmpi	8000c70 <_ZdlPv>

080022a0 <_ZNSt13bad_exceptionD0Ev>:
 80022a0:	8000c701 	jmpi	8000c70 <_ZdlPv>

080022a4 <_ZN10__cxxabiv115__forced_unwindD1Ev>:
 80022a4:	f800283a 	ret

080022a8 <_ZN10__cxxabiv115__forced_unwindD0Ev>:
 80022a8:	8000c701 	jmpi	8000c70 <_ZdlPv>

080022ac <_ZN10__cxxabiv119__foreign_exceptionD1Ev>:
 80022ac:	f800283a 	ret

080022b0 <_ZN10__cxxabiv119__foreign_exceptionD0Ev>:
 80022b0:	8000c701 	jmpi	8000c70 <_ZdlPv>

080022b4 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception>:
 80022b4:	defffe04 	addi	sp,sp,-8
 80022b8:	dfc00115 	stw	ra,4(sp)
 80022bc:	dc000015 	stw	r16,0(sp)
 80022c0:	00800044 	movi	r2,1
 80022c4:	11000a36 	bltu	r2,r4,80022f0 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception+0x3c>
 80022c8:	28bff617 	ldw	r2,-40(r5)
 80022cc:	2c000504 	addi	r16,r5,20
 80022d0:	10000226 	beq	r2,zero,80022dc <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception+0x28>
 80022d4:	8009883a 	mov	r4,r16
 80022d8:	103ee83a 	callr	r2
 80022dc:	8009883a 	mov	r4,r16
 80022e0:	dfc00117 	ldw	ra,4(sp)
 80022e4:	dc000017 	ldw	r16,0(sp)
 80022e8:	dec00204 	addi	sp,sp,8
 80022ec:	80021781 	jmpi	8002178 <__cxa_free_exception>
 80022f0:	293ff817 	ldw	r4,-32(r5)
 80022f4:	8001de80 	call	8001de8 <_ZN10__cxxabiv111__terminateEPFvvE>

080022f8 <__cxa_throw>:
 80022f8:	defffb04 	addi	sp,sp,-20
 80022fc:	dfc00415 	stw	ra,16(sp)
 8002300:	dcc00315 	stw	r19,12(sp)
 8002304:	dc800215 	stw	r18,8(sp)
 8002308:	2827883a 	mov	r19,r5
 800230c:	3025883a 	mov	r18,r6
 8002310:	dc400115 	stw	r17,4(sp)
 8002314:	dc000015 	stw	r16,0(sp)
 8002318:	2021883a 	mov	r16,r4
 800231c:	8001fac0 	call	8001fac <__cxa_get_globals>
 8002320:	10c00117 	ldw	r3,4(r2)
 8002324:	847ffb04 	addi	r17,r16,-20
 8002328:	18c00044 	addi	r3,r3,1
 800232c:	10c00115 	stw	r3,4(r2)
 8002330:	00800044 	movi	r2,1
 8002334:	80bfef15 	stw	r2,-68(r16)
 8002338:	84fff015 	stw	r19,-64(r16)
 800233c:	84bff115 	stw	r18,-60(r16)
 8002340:	8001f200 	call	8001f20 <_ZSt14get_unexpectedv>
 8002344:	80bff215 	stw	r2,-56(r16)
 8002348:	8001efc0 	call	8001efc <_ZSt13get_terminatev>
 800234c:	80bff315 	stw	r2,-52(r16)
 8002350:	0090caf4 	movhi	r2,17195
 8002354:	108ac004 	addi	r2,r2,11008
 8002358:	80bffb15 	stw	r2,-20(r16)
 800235c:	0091d3b4 	movhi	r2,18254
 8002360:	109550c4 	addi	r2,r2,21827
 8002364:	80bffc15 	stw	r2,-16(r16)
 8002368:	00820034 	movhi	r2,2048
 800236c:	1088ad04 	addi	r2,r2,8884
 8002370:	8809883a 	mov	r4,r17
 8002374:	80bffd15 	stw	r2,-12(r16)
 8002378:	8002df00 	call	8002df0 <_Unwind_SjLj_RaiseException>
 800237c:	8809883a 	mov	r4,r17
 8002380:	8001c600 	call	8001c60 <__cxa_begin_catch>
 8002384:	8001ea80 	call	8001ea8 <_ZSt9terminatev>

08002388 <__cxa_rethrow>:
 8002388:	defffe04 	addi	sp,sp,-8
 800238c:	dfc00115 	stw	ra,4(sp)
 8002390:	dc000015 	stw	r16,0(sp)
 8002394:	8001fac0 	call	8001fac <__cxa_get_globals>
 8002398:	10c00117 	ldw	r3,4(r2)
 800239c:	11000017 	ldw	r4,0(r2)
 80023a0:	18c00044 	addi	r3,r3,1
 80023a4:	10c00115 	stw	r3,4(r2)
 80023a8:	20001126 	beq	r4,zero,80023f0 <__cxa_rethrow+0x68>
 80023ac:	21400b17 	ldw	r5,44(r4)
 80023b0:	01ef3574 	movhi	r7,48341
 80023b4:	39f54004 	addi	r7,r7,-11008
 80023b8:	29cf883a 	add	r7,r5,r7
 80023bc:	20c00c17 	ldw	r3,48(r4)
 80023c0:	394d803a 	cmpltu	r6,r7,r5
 80023c4:	016e2cb4 	movhi	r5,47282
 80023c8:	296aaf04 	addi	r5,r5,-21828
 80023cc:	1947883a 	add	r3,r3,r5
 80023d0:	30c7883a 	add	r3,r6,r3
 80023d4:	18000726 	beq	r3,zero,80023f4 <__cxa_rethrow+0x6c>
 80023d8:	10000015 	stw	zero,0(r2)
 80023dc:	24000b04 	addi	r16,r4,44
 80023e0:	8009883a 	mov	r4,r16
 80023e4:	8002f480 	call	8002f48 <_Unwind_SjLj_Resume_or_Rethrow>
 80023e8:	8009883a 	mov	r4,r16
 80023ec:	8001c600 	call	8001c60 <__cxa_begin_catch>
 80023f0:	8001ea80 	call	8001ea8 <_ZSt9terminatev>
 80023f4:	00c00044 	movi	r3,1
 80023f8:	19fff736 	bltu	r3,r7,80023d8 <__alt_data_end+0xf80023d8>
 80023fc:	20800517 	ldw	r2,20(r4)
 8002400:	0085c83a 	sub	r2,zero,r2
 8002404:	20800515 	stw	r2,20(r4)
 8002408:	003ff406 	br	80023dc <__alt_data_end+0xf80023dc>

0800240c <__cxa_call_terminate>:
 800240c:	defffe04 	addi	sp,sp,-8
 8002410:	dfc00115 	stw	ra,4(sp)
 8002414:	dc000015 	stw	r16,0(sp)
 8002418:	20000d26 	beq	r4,zero,8002450 <__cxa_call_terminate+0x44>
 800241c:	2021883a 	mov	r16,r4
 8002420:	8001c600 	call	8001c60 <__cxa_begin_catch>
 8002424:	80c00017 	ldw	r3,0(r16)
 8002428:	016f3574 	movhi	r5,48341
 800242c:	29754004 	addi	r5,r5,-11008
 8002430:	194b883a 	add	r5,r3,r5
 8002434:	80800117 	ldw	r2,4(r16)
 8002438:	28c9803a 	cmpltu	r4,r5,r3
 800243c:	00ee2cb4 	movhi	r3,47282
 8002440:	18eaaf04 	addi	r3,r3,-21828
 8002444:	10c5883a 	add	r2,r2,r3
 8002448:	2085883a 	add	r2,r4,r2
 800244c:	10000126 	beq	r2,zero,8002454 <__cxa_call_terminate+0x48>
 8002450:	8001ea80 	call	8001ea8 <_ZSt9terminatev>
 8002454:	00800044 	movi	r2,1
 8002458:	117ffd36 	bltu	r2,r5,8002450 <__alt_data_end+0xf8002450>
 800245c:	813ff817 	ldw	r4,-32(r16)
 8002460:	8001de80 	call	8001de8 <_ZN10__cxxabiv111__terminateEPFvvE>

08002464 <_ZN10__cxxabiv120__si_class_type_infoD1Ev>:
 8002464:	00820074 	movhi	r2,2049
 8002468:	108c3b04 	addi	r2,r2,12524
 800246c:	20800015 	stw	r2,0(r4)
 8002470:	80028c81 	jmpi	80028c8 <_ZN10__cxxabiv117__class_type_infoD1Ev>

08002474 <_ZN10__cxxabiv120__si_class_type_infoD0Ev>:
 8002474:	defffe04 	addi	sp,sp,-8
 8002478:	00820074 	movhi	r2,2049
 800247c:	dc000015 	stw	r16,0(sp)
 8002480:	dfc00115 	stw	ra,4(sp)
 8002484:	108c3b04 	addi	r2,r2,12524
 8002488:	20800015 	stw	r2,0(r4)
 800248c:	2021883a 	mov	r16,r4
 8002490:	80028c80 	call	80028c8 <_ZN10__cxxabiv117__class_type_infoD1Ev>
 8002494:	8009883a 	mov	r4,r16
 8002498:	dfc00117 	ldw	ra,4(sp)
 800249c:	dc000017 	ldw	r16,0(sp)
 80024a0:	dec00204 	addi	sp,sp,8
 80024a4:	8000c701 	jmpi	8000c70 <_ZdlPv>

080024a8 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE>:
 80024a8:	defff504 	addi	sp,sp,-44
 80024ac:	dc000115 	stw	r16,4(sp)
 80024b0:	38800117 	ldw	r2,4(r7)
 80024b4:	24000117 	ldw	r16,4(r4)
 80024b8:	df000915 	stw	fp,36(sp)
 80024bc:	ddc00815 	stw	r23,32(sp)
 80024c0:	dd800715 	stw	r22,28(sp)
 80024c4:	dcc00415 	stw	r19,16(sp)
 80024c8:	dc800315 	stw	r18,12(sp)
 80024cc:	dc400215 	stw	r17,8(sp)
 80024d0:	dfc00a15 	stw	ra,40(sp)
 80024d4:	dd400615 	stw	r21,24(sp)
 80024d8:	dd000515 	stw	r20,20(sp)
 80024dc:	2823883a 	mov	r17,r5
 80024e0:	3039883a 	mov	fp,r6
 80024e4:	dcc00b17 	ldw	r19,44(sp)
 80024e8:	ddc00c17 	ldw	r23,48(sp)
 80024ec:	dd800d17 	ldw	r22,52(sp)
 80024f0:	dc800e17 	ldw	r18,56(sp)
 80024f4:	80800b26 	beq	r16,r2,8002524 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x7c>
 80024f8:	80c00007 	ldb	r3,0(r16)
 80024fc:	2029883a 	mov	r20,r4
 8002500:	01000a84 	movi	r4,42
 8002504:	382b883a 	mov	r21,r7
 8002508:	19001a26 	beq	r3,r4,8002574 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xcc>
 800250c:	100b883a 	mov	r5,r2
 8002510:	8009883a 	mov	r4,r16
 8002514:	d8c00015 	stw	r3,0(sp)
 8002518:	8003e4c0 	call	8003e4c <strcmp>
 800251c:	d8c00017 	ldw	r3,0(sp)
 8002520:	1000141e 	bne	r2,zero,8002574 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xcc>
 8002524:	94c00015 	stw	r19,0(r18)
 8002528:	97000115 	stw	fp,4(r18)
 800252c:	88002816 	blt	r17,zero,80025d0 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x128>
 8002530:	9c63883a 	add	r17,r19,r17
 8002534:	b4403226 	beq	r22,r17,8002600 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x158>
 8002538:	00800044 	movi	r2,1
 800253c:	90800315 	stw	r2,12(r18)
 8002540:	0005883a 	mov	r2,zero
 8002544:	dfc00a17 	ldw	ra,40(sp)
 8002548:	df000917 	ldw	fp,36(sp)
 800254c:	ddc00817 	ldw	r23,32(sp)
 8002550:	dd800717 	ldw	r22,28(sp)
 8002554:	dd400617 	ldw	r21,24(sp)
 8002558:	dd000517 	ldw	r20,20(sp)
 800255c:	dcc00417 	ldw	r19,16(sp)
 8002560:	dc800317 	ldw	r18,12(sp)
 8002564:	dc400217 	ldw	r17,8(sp)
 8002568:	dc000117 	ldw	r16,4(sp)
 800256c:	dec00b04 	addi	sp,sp,44
 8002570:	f800283a 	ret
 8002574:	9d801926 	beq	r19,r22,80025dc <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x134>
 8002578:	a1000217 	ldw	r4,8(r20)
 800257c:	a80f883a 	mov	r7,r21
 8002580:	e00d883a 	mov	r6,fp
 8002584:	20800017 	ldw	r2,0(r4)
 8002588:	dc800e15 	stw	r18,56(sp)
 800258c:	dd800d15 	stw	r22,52(sp)
 8002590:	ddc00c15 	stw	r23,48(sp)
 8002594:	dcc00b15 	stw	r19,44(sp)
 8002598:	10800717 	ldw	r2,28(r2)
 800259c:	880b883a 	mov	r5,r17
 80025a0:	dfc00a17 	ldw	ra,40(sp)
 80025a4:	df000917 	ldw	fp,36(sp)
 80025a8:	ddc00817 	ldw	r23,32(sp)
 80025ac:	dd800717 	ldw	r22,28(sp)
 80025b0:	dd400617 	ldw	r21,24(sp)
 80025b4:	dd000517 	ldw	r20,20(sp)
 80025b8:	dcc00417 	ldw	r19,16(sp)
 80025bc:	dc800317 	ldw	r18,12(sp)
 80025c0:	dc400217 	ldw	r17,8(sp)
 80025c4:	dc000117 	ldw	r16,4(sp)
 80025c8:	dec00b04 	addi	sp,sp,44
 80025cc:	1000683a 	jmp	r2
 80025d0:	00bfff84 	movi	r2,-2
 80025d4:	88bfda1e 	bne	r17,r2,8002540 <__alt_data_end+0xf8002540>
 80025d8:	003fd706 	br	8002538 <__alt_data_end+0xf8002538>
 80025dc:	b9400117 	ldw	r5,4(r23)
 80025e0:	81400526 	beq	r16,r5,80025f8 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x150>
 80025e4:	00800a84 	movi	r2,42
 80025e8:	18bfe326 	beq	r3,r2,8002578 <__alt_data_end+0xf8002578>
 80025ec:	8009883a 	mov	r4,r16
 80025f0:	8003e4c0 	call	8003e4c <strcmp>
 80025f4:	103fe01e 	bne	r2,zero,8002578 <__alt_data_end+0xf8002578>
 80025f8:	97000215 	stw	fp,8(r18)
 80025fc:	003fd006 	br	8002540 <__alt_data_end+0xf8002540>
 8002600:	00800184 	movi	r2,6
 8002604:	003fcd06 	br	800253c <__alt_data_end+0xf800253c>

08002608 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_>:
 8002608:	defffa04 	addi	sp,sp,-24
 800260c:	dc000215 	stw	r16,8(sp)
 8002610:	dc000617 	ldw	r16,24(sp)
 8002614:	dc800415 	stw	r18,16(sp)
 8002618:	dc400315 	stw	r17,12(sp)
 800261c:	dfc00515 	stw	ra,20(sp)
 8002620:	2023883a 	mov	r17,r4
 8002624:	2825883a 	mov	r18,r5
 8002628:	81800b26 	beq	r16,r6,8002658 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x50>
 800262c:	89000217 	ldw	r4,8(r17)
 8002630:	900b883a 	mov	r5,r18
 8002634:	20800017 	ldw	r2,0(r4)
 8002638:	dc000615 	stw	r16,24(sp)
 800263c:	10800817 	ldw	r2,32(r2)
 8002640:	dfc00517 	ldw	ra,20(sp)
 8002644:	dc800417 	ldw	r18,16(sp)
 8002648:	dc400317 	ldw	r17,12(sp)
 800264c:	dc000217 	ldw	r16,8(sp)
 8002650:	dec00604 	addi	sp,sp,24
 8002654:	1000683a 	jmp	r2
 8002658:	21000117 	ldw	r4,4(r4)
 800265c:	39400117 	ldw	r5,4(r7)
 8002660:	21400926 	beq	r4,r5,8002688 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x80>
 8002664:	20c00007 	ldb	r3,0(r4)
 8002668:	00800a84 	movi	r2,42
 800266c:	18bfef26 	beq	r3,r2,800262c <__alt_data_end+0xf800262c>
 8002670:	d9800015 	stw	r6,0(sp)
 8002674:	d9c00115 	stw	r7,4(sp)
 8002678:	8003e4c0 	call	8003e4c <strcmp>
 800267c:	d9800017 	ldw	r6,0(sp)
 8002680:	d9c00117 	ldw	r7,4(sp)
 8002684:	103fe91e 	bne	r2,zero,800262c <__alt_data_end+0xf800262c>
 8002688:	00800184 	movi	r2,6
 800268c:	dfc00517 	ldw	ra,20(sp)
 8002690:	dc800417 	ldw	r18,16(sp)
 8002694:	dc400317 	ldw	r17,12(sp)
 8002698:	dc000217 	ldw	r16,8(sp)
 800269c:	dec00604 	addi	sp,sp,24
 80026a0:	f800283a 	ret

080026a4 <_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE>:
 80026a4:	defffb04 	addi	sp,sp,-20
 80026a8:	dcc00315 	stw	r19,12(sp)
 80026ac:	dc800215 	stw	r18,8(sp)
 80026b0:	dc400115 	stw	r17,4(sp)
 80026b4:	dc000015 	stw	r16,0(sp)
 80026b8:	dfc00415 	stw	ra,16(sp)
 80026bc:	2027883a 	mov	r19,r4
 80026c0:	2821883a 	mov	r16,r5
 80026c4:	3023883a 	mov	r17,r6
 80026c8:	3825883a 	mov	r18,r7
 80026cc:	800290c0 	call	800290c <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE>
 80026d0:	10c03fcc 	andi	r3,r2,255
 80026d4:	18000726 	beq	r3,zero,80026f4 <_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x50>
 80026d8:	dfc00417 	ldw	ra,16(sp)
 80026dc:	dcc00317 	ldw	r19,12(sp)
 80026e0:	dc800217 	ldw	r18,8(sp)
 80026e4:	dc400117 	ldw	r17,4(sp)
 80026e8:	dc000017 	ldw	r16,0(sp)
 80026ec:	dec00504 	addi	sp,sp,20
 80026f0:	f800283a 	ret
 80026f4:	99000217 	ldw	r4,8(r19)
 80026f8:	900f883a 	mov	r7,r18
 80026fc:	880d883a 	mov	r6,r17
 8002700:	20800017 	ldw	r2,0(r4)
 8002704:	800b883a 	mov	r5,r16
 8002708:	10800617 	ldw	r2,24(r2)
 800270c:	dfc00417 	ldw	ra,16(sp)
 8002710:	dcc00317 	ldw	r19,12(sp)
 8002714:	dc800217 	ldw	r18,8(sp)
 8002718:	dc400117 	ldw	r17,4(sp)
 800271c:	dc000017 	ldw	r16,0(sp)
 8002720:	dec00504 	addi	sp,sp,20
 8002724:	1000683a 	jmp	r2

08002728 <_ZNSt9type_infoD1Ev>:
 8002728:	f800283a 	ret

0800272c <_ZNKSt9type_info14__is_pointer_pEv>:
 800272c:	0005883a 	mov	r2,zero
 8002730:	f800283a 	ret

08002734 <_ZNKSt9type_info11__do_upcastEPKN10__cxxabiv117__class_type_infoEPPv>:
 8002734:	0005883a 	mov	r2,zero
 8002738:	f800283a 	ret

0800273c <_ZNSt9type_infoD0Ev>:
 800273c:	8000c701 	jmpi	8000c70 <_ZdlPv>

08002740 <_ZNKSt9type_info10__do_catchEPKS_PPvj>:
 8002740:	21000117 	ldw	r4,4(r4)
 8002744:	29400117 	ldw	r5,4(r5)
 8002748:	21400c26 	beq	r4,r5,800277c <_ZNKSt9type_info10__do_catchEPKS_PPvj+0x3c>
 800274c:	20c00007 	ldb	r3,0(r4)
 8002750:	00800a84 	movi	r2,42
 8002754:	18800726 	beq	r3,r2,8002774 <_ZNKSt9type_info10__do_catchEPKS_PPvj+0x34>
 8002758:	deffff04 	addi	sp,sp,-4
 800275c:	dfc00015 	stw	ra,0(sp)
 8002760:	8003e4c0 	call	8003e4c <strcmp>
 8002764:	1005003a 	cmpeq	r2,r2,zero
 8002768:	dfc00017 	ldw	ra,0(sp)
 800276c:	dec00104 	addi	sp,sp,4
 8002770:	f800283a 	ret
 8002774:	0005883a 	mov	r2,zero
 8002778:	f800283a 	ret
 800277c:	00800044 	movi	r2,1
 8002780:	f800283a 	ret

08002784 <__cxa_pure_virtual>:
 8002784:	01420074 	movhi	r5,2049
 8002788:	deffff04 	addi	sp,sp,-4
 800278c:	294c5004 	addi	r5,r5,12608
 8002790:	018006c4 	movi	r6,27
 8002794:	01000084 	movi	r4,2
 8002798:	dfc00015 	stw	ra,0(sp)
 800279c:	80108180 	call	8010818 <write>
 80027a0:	8001ea80 	call	8001ea8 <_ZSt9terminatev>

080027a4 <__cxa_deleted_virtual>:
 80027a4:	01420074 	movhi	r5,2049
 80027a8:	deffff04 	addi	sp,sp,-4
 80027ac:	294c5704 	addi	r5,r5,12636
 80027b0:	01800784 	movi	r6,30
 80027b4:	01000084 	movi	r4,2
 80027b8:	dfc00015 	stw	ra,0(sp)
 80027bc:	80108180 	call	8010818 <write>
 80027c0:	8001ea80 	call	8001ea8 <_ZSt9terminatev>

080027c4 <_ZNKSt9bad_alloc4whatEv>:
 80027c4:	00820074 	movhi	r2,2049
 80027c8:	108c5f04 	addi	r2,r2,12668
 80027cc:	f800283a 	ret

080027d0 <_ZNSt9bad_allocD1Ev>:
 80027d0:	00820074 	movhi	r2,2049
 80027d4:	108c6c04 	addi	r2,r2,12720
 80027d8:	20800015 	stw	r2,0(r4)
 80027dc:	800227c1 	jmpi	800227c <_ZNSt9exceptionD1Ev>

080027e0 <_ZNSt9bad_allocD0Ev>:
 80027e0:	defffe04 	addi	sp,sp,-8
 80027e4:	00820074 	movhi	r2,2049
 80027e8:	dc000015 	stw	r16,0(sp)
 80027ec:	dfc00115 	stw	ra,4(sp)
 80027f0:	108c6c04 	addi	r2,r2,12720
 80027f4:	20800015 	stw	r2,0(r4)
 80027f8:	2021883a 	mov	r16,r4
 80027fc:	800227c0 	call	800227c <_ZNSt9exceptionD1Ev>
 8002800:	8009883a 	mov	r4,r16
 8002804:	dfc00117 	ldw	ra,4(sp)
 8002808:	dc000017 	ldw	r16,0(sp)
 800280c:	dec00204 	addi	sp,sp,8
 8002810:	8000c701 	jmpi	8000c70 <_ZdlPv>

08002814 <_ZSt15set_new_handlerPFvvE>:
 8002814:	00c20074 	movhi	r3,2049
 8002818:	18dad404 	addi	r3,r3,27472
 800281c:	18800017 	ldw	r2,0(r3)
 8002820:	19000015 	stw	r4,0(r3)
 8002824:	f800283a 	ret

08002828 <_ZSt15get_new_handlerv>:
 8002828:	00820074 	movhi	r2,2049
 800282c:	109ad404 	addi	r2,r2,27472
 8002830:	10800017 	ldw	r2,0(r2)
 8002834:	f800283a 	ret

08002838 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv>:
 8002838:	20800017 	ldw	r2,0(r4)
 800283c:	defffa04 	addi	sp,sp,-24
 8002840:	dc000415 	stw	r16,16(sp)
 8002844:	10800617 	ldw	r2,24(r2)
 8002848:	3021883a 	mov	r16,r6
 800284c:	31800017 	ldw	r6,0(r6)
 8002850:	00c00404 	movi	r3,16
 8002854:	d8c00215 	stw	r3,8(sp)
 8002858:	dfc00515 	stw	ra,20(sp)
 800285c:	d8000015 	stw	zero,0(sp)
 8002860:	d8000115 	stw	zero,4(sp)
 8002864:	d8000315 	stw	zero,12(sp)
 8002868:	d80f883a 	mov	r7,sp
 800286c:	103ee83a 	callr	r2
 8002870:	d8800117 	ldw	r2,4(sp)
 8002874:	00c00184 	movi	r3,6
 8002878:	1080018c 	andi	r2,r2,6
 800287c:	10c00526 	beq	r2,r3,8002894 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv+0x5c>
 8002880:	0005883a 	mov	r2,zero
 8002884:	dfc00517 	ldw	ra,20(sp)
 8002888:	dc000417 	ldw	r16,16(sp)
 800288c:	dec00604 	addi	sp,sp,24
 8002890:	f800283a 	ret
 8002894:	d8c00017 	ldw	r3,0(sp)
 8002898:	00800044 	movi	r2,1
 800289c:	80c00015 	stw	r3,0(r16)
 80028a0:	dfc00517 	ldw	ra,20(sp)
 80028a4:	dc000417 	ldw	r16,16(sp)
 80028a8:	dec00604 	addi	sp,sp,24
 80028ac:	f800283a 	ret

080028b0 <_ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_>:
 80028b0:	d8800017 	ldw	r2,0(sp)
 80028b4:	11800226 	beq	r2,r6,80028c0 <_ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_+0x10>
 80028b8:	00800044 	movi	r2,1
 80028bc:	f800283a 	ret
 80028c0:	00800184 	movi	r2,6
 80028c4:	f800283a 	ret

080028c8 <_ZN10__cxxabiv117__class_type_infoD1Ev>:
 80028c8:	00820074 	movhi	r2,2049
 80028cc:	108c7d04 	addi	r2,r2,12788
 80028d0:	20800015 	stw	r2,0(r4)
 80028d4:	80027281 	jmpi	8002728 <_ZNSt9type_infoD1Ev>

080028d8 <_ZN10__cxxabiv117__class_type_infoD0Ev>:
 80028d8:	defffe04 	addi	sp,sp,-8
 80028dc:	00820074 	movhi	r2,2049
 80028e0:	dc000015 	stw	r16,0(sp)
 80028e4:	dfc00115 	stw	ra,4(sp)
 80028e8:	108c7d04 	addi	r2,r2,12788
 80028ec:	20800015 	stw	r2,0(r4)
 80028f0:	2021883a 	mov	r16,r4
 80028f4:	80027280 	call	8002728 <_ZNSt9type_infoD1Ev>
 80028f8:	8009883a 	mov	r4,r16
 80028fc:	dfc00117 	ldw	ra,4(sp)
 8002900:	dc000017 	ldw	r16,0(sp)
 8002904:	dec00204 	addi	sp,sp,8
 8002908:	8000c701 	jmpi	8000c70 <_ZdlPv>

0800290c <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE>:
 800290c:	21000117 	ldw	r4,4(r4)
 8002910:	29400117 	ldw	r5,4(r5)
 8002914:	defffd04 	addi	sp,sp,-12
 8002918:	dc400115 	stw	r17,4(sp)
 800291c:	dc000015 	stw	r16,0(sp)
 8002920:	dfc00215 	stw	ra,8(sp)
 8002924:	3023883a 	mov	r17,r6
 8002928:	3821883a 	mov	r16,r7
 800292c:	21400526 	beq	r4,r5,8002944 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE+0x38>
 8002930:	20c00007 	ldb	r3,0(r4)
 8002934:	00800a84 	movi	r2,42
 8002938:	18800d26 	beq	r3,r2,8002970 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE+0x64>
 800293c:	8003e4c0 	call	8003e4c <strcmp>
 8002940:	10000b1e 	bne	r2,zero,8002970 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE+0x64>
 8002944:	00800204 	movi	r2,8
 8002948:	80800315 	stw	r2,12(r16)
 800294c:	00800184 	movi	r2,6
 8002950:	80800115 	stw	r2,4(r16)
 8002954:	84400015 	stw	r17,0(r16)
 8002958:	00800044 	movi	r2,1
 800295c:	dfc00217 	ldw	ra,8(sp)
 8002960:	dc400117 	ldw	r17,4(sp)
 8002964:	dc000017 	ldw	r16,0(sp)
 8002968:	dec00304 	addi	sp,sp,12
 800296c:	f800283a 	ret
 8002970:	0005883a 	mov	r2,zero
 8002974:	003ff906 	br	800295c <__alt_data_end+0xf800295c>

08002978 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE>:
 8002978:	defffa04 	addi	sp,sp,-24
 800297c:	dc800415 	stw	r18,16(sp)
 8002980:	d8800817 	ldw	r2,32(sp)
 8002984:	dc800617 	ldw	r18,24(sp)
 8002988:	dc400315 	stw	r17,12(sp)
 800298c:	dc000215 	stw	r16,8(sp)
 8002990:	dfc00515 	stw	ra,20(sp)
 8002994:	dc400917 	ldw	r17,36(sp)
 8002998:	24000117 	ldw	r16,4(r4)
 800299c:	90801526 	beq	r18,r2,80029f4 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x7c>
 80029a0:	39400117 	ldw	r5,4(r7)
 80029a4:	2c000826 	beq	r5,r16,80029c8 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x50>
 80029a8:	80c00007 	ldb	r3,0(r16)
 80029ac:	00800a84 	movi	r2,42
 80029b0:	18800926 	beq	r3,r2,80029d8 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x60>
 80029b4:	8009883a 	mov	r4,r16
 80029b8:	d9800115 	stw	r6,4(sp)
 80029bc:	8003e4c0 	call	8003e4c <strcmp>
 80029c0:	d9800117 	ldw	r6,4(sp)
 80029c4:	1000041e 	bne	r2,zero,80029d8 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x60>
 80029c8:	00800044 	movi	r2,1
 80029cc:	8c800015 	stw	r18,0(r17)
 80029d0:	89800115 	stw	r6,4(r17)
 80029d4:	88800315 	stw	r2,12(r17)
 80029d8:	0005883a 	mov	r2,zero
 80029dc:	dfc00517 	ldw	ra,20(sp)
 80029e0:	dc800417 	ldw	r18,16(sp)
 80029e4:	dc400317 	ldw	r17,12(sp)
 80029e8:	dc000217 	ldw	r16,8(sp)
 80029ec:	dec00604 	addi	sp,sp,24
 80029f0:	f800283a 	ret
 80029f4:	d8800717 	ldw	r2,28(sp)
 80029f8:	11400117 	ldw	r5,4(r2)
 80029fc:	81400a26 	beq	r16,r5,8002a28 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0xb0>
 8002a00:	80c00007 	ldb	r3,0(r16)
 8002a04:	00800a84 	movi	r2,42
 8002a08:	18800c26 	beq	r3,r2,8002a3c <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0xc4>
 8002a0c:	8009883a 	mov	r4,r16
 8002a10:	d9800115 	stw	r6,4(sp)
 8002a14:	d9c00015 	stw	r7,0(sp)
 8002a18:	8003e4c0 	call	8003e4c <strcmp>
 8002a1c:	d9800117 	ldw	r6,4(sp)
 8002a20:	d9c00017 	ldw	r7,0(sp)
 8002a24:	1000021e 	bne	r2,zero,8002a30 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0xb8>
 8002a28:	89800215 	stw	r6,8(r17)
 8002a2c:	003fea06 	br	80029d8 <__alt_data_end+0xf80029d8>
 8002a30:	39400117 	ldw	r5,4(r7)
 8002a34:	817fdf1e 	bne	r16,r5,80029b4 <__alt_data_end+0xf80029b4>
 8002a38:	003fe306 	br	80029c8 <__alt_data_end+0xf80029c8>
 8002a3c:	38800117 	ldw	r2,4(r7)
 8002a40:	80bfe51e 	bne	r16,r2,80029d8 <__alt_data_end+0xf80029d8>
 8002a44:	003fe006 	br	80029c8 <__alt_data_end+0xf80029c8>

08002a48 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj>:
 8002a48:	20800117 	ldw	r2,4(r4)
 8002a4c:	28c00117 	ldw	r3,4(r5)
 8002a50:	10c02926 	beq	r2,r3,8002af8 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0xb0>
 8002a54:	defffb04 	addi	sp,sp,-20
 8002a58:	dcc00315 	stw	r19,12(sp)
 8002a5c:	dc800215 	stw	r18,8(sp)
 8002a60:	dc400115 	stw	r17,4(sp)
 8002a64:	dc000015 	stw	r16,0(sp)
 8002a68:	dfc00415 	stw	ra,16(sp)
 8002a6c:	2821883a 	mov	r16,r5
 8002a70:	11400007 	ldb	r5,0(r2)
 8002a74:	2025883a 	mov	r18,r4
 8002a78:	01000a84 	movi	r4,42
 8002a7c:	3823883a 	mov	r17,r7
 8002a80:	3027883a 	mov	r19,r6
 8002a84:	29000626 	beq	r5,r4,8002aa0 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x58>
 8002a88:	180b883a 	mov	r5,r3
 8002a8c:	1009883a 	mov	r4,r2
 8002a90:	8003e4c0 	call	8003e4c <strcmp>
 8002a94:	1000021e 	bne	r2,zero,8002aa0 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x58>
 8002a98:	00800044 	movi	r2,1
 8002a9c:	00000306 	br	8002aac <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x64>
 8002aa0:	008000c4 	movi	r2,3
 8002aa4:	1440082e 	bgeu	r2,r17,8002ac8 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x80>
 8002aa8:	0005883a 	mov	r2,zero
 8002aac:	dfc00417 	ldw	ra,16(sp)
 8002ab0:	dcc00317 	ldw	r19,12(sp)
 8002ab4:	dc800217 	ldw	r18,8(sp)
 8002ab8:	dc400117 	ldw	r17,4(sp)
 8002abc:	dc000017 	ldw	r16,0(sp)
 8002ac0:	dec00504 	addi	sp,sp,20
 8002ac4:	f800283a 	ret
 8002ac8:	80800017 	ldw	r2,0(r16)
 8002acc:	980d883a 	mov	r6,r19
 8002ad0:	900b883a 	mov	r5,r18
 8002ad4:	10800517 	ldw	r2,20(r2)
 8002ad8:	8009883a 	mov	r4,r16
 8002adc:	dfc00417 	ldw	ra,16(sp)
 8002ae0:	dcc00317 	ldw	r19,12(sp)
 8002ae4:	dc800217 	ldw	r18,8(sp)
 8002ae8:	dc400117 	ldw	r17,4(sp)
 8002aec:	dc000017 	ldw	r16,0(sp)
 8002af0:	dec00504 	addi	sp,sp,20
 8002af4:	1000683a 	jmp	r2
 8002af8:	00800044 	movi	r2,1
 8002afc:	f800283a 	ret

08002b00 <_Unwind_ForcedUnwind_Phase2>:
 8002b00:	defff404 	addi	sp,sp,-48
 8002b04:	dd800915 	stw	r22,36(sp)
 8002b08:	05820074 	movhi	r22,2049
 8002b0c:	ddc00a15 	stw	r23,40(sp)
 8002b10:	dd400815 	stw	r21,32(sp)
 8002b14:	dd000715 	stw	r20,28(sp)
 8002b18:	dcc00615 	stw	r19,24(sp)
 8002b1c:	dc400415 	stw	r17,16(sp)
 8002b20:	dc000315 	stw	r16,12(sp)
 8002b24:	dfc00b15 	stw	ra,44(sp)
 8002b28:	dc800515 	stw	r18,20(sp)
 8002b2c:	2021883a 	mov	r16,r4
 8002b30:	2823883a 	mov	r17,r5
 8002b34:	24c00317 	ldw	r19,12(r4)
 8002b38:	25000417 	ldw	r20,16(r4)
 8002b3c:	28c00017 	ldw	r3,0(r5)
 8002b40:	b59ad504 	addi	r22,r22,27476
 8002b44:	054001c4 	movi	r21,7
 8002b48:	05c00204 	movi	r23,8
 8002b4c:	00001606 	br	8002ba8 <_Unwind_ForcedUnwind_Phase2+0xa8>
 8002b50:	81800017 	ldw	r6,0(r16)
 8002b54:	81c00117 	ldw	r7,4(r16)
 8002b58:	1c800617 	ldw	r18,24(r3)
 8002b5c:	dd000215 	stw	r20,8(sp)
 8002b60:	dc400115 	stw	r17,4(sp)
 8002b64:	dc000015 	stw	r16,0(sp)
 8002b68:	983ee83a 	callr	r19
 8002b6c:	01400284 	movi	r5,10
 8002b70:	01000044 	movi	r4,1
 8002b74:	1000241e 	bne	r2,zero,8002c08 <_Unwind_ForcedUnwind_Phase2+0x108>
 8002b78:	90000726 	beq	r18,zero,8002b98 <_Unwind_ForcedUnwind_Phase2+0x98>
 8002b7c:	81800017 	ldw	r6,0(r16)
 8002b80:	81c00117 	ldw	r7,4(r16)
 8002b84:	dc400115 	stw	r17,4(sp)
 8002b88:	dc000015 	stw	r16,0(sp)
 8002b8c:	903ee83a 	callr	r18
 8002b90:	15401f26 	beq	r2,r21,8002c10 <_Unwind_ForcedUnwind_Phase2+0x110>
 8002b94:	15c01c1e 	bne	r2,r23,8002c08 <_Unwind_ForcedUnwind_Phase2+0x108>
 8002b98:	88800017 	ldw	r2,0(r17)
 8002b9c:	10c00017 	ldw	r3,0(r2)
 8002ba0:	b0c00015 	stw	r3,0(r22)
 8002ba4:	88c00015 	stw	r3,0(r17)
 8002ba8:	01400284 	movi	r5,10
 8002bac:	01000044 	movi	r4,1
 8002bb0:	183fe71e 	bne	r3,zero,8002b50 <__alt_data_end+0xf8002b50>
 8002bb4:	81800017 	ldw	r6,0(r16)
 8002bb8:	81c00117 	ldw	r7,4(r16)
 8002bbc:	01400684 	movi	r5,26
 8002bc0:	dd000215 	stw	r20,8(sp)
 8002bc4:	dc400115 	stw	r17,4(sp)
 8002bc8:	dc000015 	stw	r16,0(sp)
 8002bcc:	01000044 	movi	r4,1
 8002bd0:	983ee83a 	callr	r19
 8002bd4:	10000c1e 	bne	r2,zero,8002c08 <_Unwind_ForcedUnwind_Phase2+0x108>
 8002bd8:	00800144 	movi	r2,5
 8002bdc:	dfc00b17 	ldw	ra,44(sp)
 8002be0:	ddc00a17 	ldw	r23,40(sp)
 8002be4:	dd800917 	ldw	r22,36(sp)
 8002be8:	dd400817 	ldw	r21,32(sp)
 8002bec:	dd000717 	ldw	r20,28(sp)
 8002bf0:	dcc00617 	ldw	r19,24(sp)
 8002bf4:	dc800517 	ldw	r18,20(sp)
 8002bf8:	dc400417 	ldw	r17,16(sp)
 8002bfc:	dc000317 	ldw	r16,12(sp)
 8002c00:	dec00c04 	addi	sp,sp,48
 8002c04:	f800283a 	ret
 8002c08:	00800084 	movi	r2,2
 8002c0c:	003ff306 	br	8002bdc <__alt_data_end+0xf8002bdc>
 8002c10:	a805883a 	mov	r2,r21
 8002c14:	003ff106 	br	8002bdc <__alt_data_end+0xf8002bdc>

08002c18 <_Unwind_RaiseException_Phase2>:
 8002c18:	28c00017 	ldw	r3,0(r5)
 8002c1c:	defff804 	addi	sp,sp,-32
 8002c20:	dcc00515 	stw	r19,20(sp)
 8002c24:	dc800415 	stw	r18,16(sp)
 8002c28:	dc400315 	stw	r17,12(sp)
 8002c2c:	dc000215 	stw	r16,8(sp)
 8002c30:	dfc00715 	stw	ra,28(sp)
 8002c34:	dd000615 	stw	r20,24(sp)
 8002c38:	2823883a 	mov	r17,r5
 8002c3c:	2021883a 	mov	r16,r4
 8002c40:	048001c4 	movi	r18,7
 8002c44:	04c00204 	movi	r19,8
 8002c48:	18001326 	beq	r3,zero,8002c98 <_Unwind_RaiseException_Phase2+0x80>
 8002c4c:	81000417 	ldw	r4,16(r16)
 8002c50:	1a000617 	ldw	r8,24(r3)
 8002c54:	19001926 	beq	r3,r4,8002cbc <_Unwind_RaiseException_Phase2+0xa4>
 8002c58:	40000c26 	beq	r8,zero,8002c8c <_Unwind_RaiseException_Phase2+0x74>
 8002c5c:	01400084 	movi	r5,2
 8002c60:	0029883a 	mov	r20,zero
 8002c64:	81800017 	ldw	r6,0(r16)
 8002c68:	81c00117 	ldw	r7,4(r16)
 8002c6c:	01000044 	movi	r4,1
 8002c70:	dc400115 	stw	r17,4(sp)
 8002c74:	dc000015 	stw	r16,0(sp)
 8002c78:	403ee83a 	callr	r8
 8002c7c:	14801326 	beq	r2,r18,8002ccc <_Unwind_RaiseException_Phase2+0xb4>
 8002c80:	14c0051e 	bne	r2,r19,8002c98 <_Unwind_RaiseException_Phase2+0x80>
 8002c84:	a000131e 	bne	r20,zero,8002cd4 <_Unwind_RaiseException_Phase2+0xbc>
 8002c88:	88c00017 	ldw	r3,0(r17)
 8002c8c:	18c00017 	ldw	r3,0(r3)
 8002c90:	88c00015 	stw	r3,0(r17)
 8002c94:	183fed1e 	bne	r3,zero,8002c4c <__alt_data_end+0xf8002c4c>
 8002c98:	00800084 	movi	r2,2
 8002c9c:	dfc00717 	ldw	ra,28(sp)
 8002ca0:	dd000617 	ldw	r20,24(sp)
 8002ca4:	dcc00517 	ldw	r19,20(sp)
 8002ca8:	dc800417 	ldw	r18,16(sp)
 8002cac:	dc400317 	ldw	r17,12(sp)
 8002cb0:	dc000217 	ldw	r16,8(sp)
 8002cb4:	dec00804 	addi	sp,sp,32
 8002cb8:	f800283a 	ret
 8002cbc:	40000526 	beq	r8,zero,8002cd4 <_Unwind_RaiseException_Phase2+0xbc>
 8002cc0:	01400184 	movi	r5,6
 8002cc4:	05000104 	movi	r20,4
 8002cc8:	003fe606 	br	8002c64 <__alt_data_end+0xf8002c64>
 8002ccc:	9005883a 	mov	r2,r18
 8002cd0:	003ff206 	br	8002c9c <__alt_data_end+0xf8002c9c>
 8002cd4:	80030200 	call	8003020 <abort>

08002cd8 <uw_install_context.isra.1>:
 8002cd8:	20c00017 	ldw	r3,0(r4)
 8002cdc:	deffff04 	addi	sp,sp,-4
 8002ce0:	01420074 	movhi	r5,2049
 8002ce4:	19000917 	ldw	r4,36(r3)
 8002ce8:	df000015 	stw	fp,0(sp)
 8002cec:	18800804 	addi	r2,r3,32
 8002cf0:	d839883a 	mov	fp,sp
 8002cf4:	295ad504 	addi	r5,r5,27476
 8002cf8:	28c00015 	stw	r3,0(r5)
 8002cfc:	17000017 	ldw	fp,0(r2)
 8002d00:	1ec00a17 	ldw	sp,40(r3)
 8002d04:	2000683a 	jmp	r4

08002d08 <_Unwind_SjLj_Register>:
 8002d08:	00820074 	movhi	r2,2049
 8002d0c:	109ad504 	addi	r2,r2,27476
 8002d10:	10c00017 	ldw	r3,0(r2)
 8002d14:	11000015 	stw	r4,0(r2)
 8002d18:	20c00015 	stw	r3,0(r4)
 8002d1c:	f800283a 	ret

08002d20 <_Unwind_SjLj_Unregister>:
 8002d20:	20c00017 	ldw	r3,0(r4)
 8002d24:	00820074 	movhi	r2,2049
 8002d28:	109ad504 	addi	r2,r2,27476
 8002d2c:	10c00015 	stw	r3,0(r2)
 8002d30:	f800283a 	ret

08002d34 <_Unwind_GetGR>:
 8002d34:	20800017 	ldw	r2,0(r4)
 8002d38:	29400084 	addi	r5,r5,2
 8002d3c:	294b883a 	add	r5,r5,r5
 8002d40:	294b883a 	add	r5,r5,r5
 8002d44:	114b883a 	add	r5,r2,r5
 8002d48:	28800017 	ldw	r2,0(r5)
 8002d4c:	f800283a 	ret

08002d50 <_Unwind_GetCFA>:
 8002d50:	20800017 	ldw	r2,0(r4)
 8002d54:	10000226 	beq	r2,zero,8002d60 <_Unwind_GetCFA+0x10>
 8002d58:	10800a17 	ldw	r2,40(r2)
 8002d5c:	f800283a 	ret
 8002d60:	0005883a 	mov	r2,zero
 8002d64:	f800283a 	ret

08002d68 <_Unwind_SetGR>:
 8002d68:	20800017 	ldw	r2,0(r4)
 8002d6c:	29400084 	addi	r5,r5,2
 8002d70:	294b883a 	add	r5,r5,r5
 8002d74:	294b883a 	add	r5,r5,r5
 8002d78:	114b883a 	add	r5,r2,r5
 8002d7c:	29800015 	stw	r6,0(r5)
 8002d80:	f800283a 	ret

08002d84 <_Unwind_GetIP>:
 8002d84:	20800017 	ldw	r2,0(r4)
 8002d88:	10800117 	ldw	r2,4(r2)
 8002d8c:	10800044 	addi	r2,r2,1
 8002d90:	f800283a 	ret

08002d94 <_Unwind_GetIPInfo>:
 8002d94:	20800017 	ldw	r2,0(r4)
 8002d98:	28000015 	stw	zero,0(r5)
 8002d9c:	10000326 	beq	r2,zero,8002dac <_Unwind_GetIPInfo+0x18>
 8002da0:	10800117 	ldw	r2,4(r2)
 8002da4:	10800044 	addi	r2,r2,1
 8002da8:	f800283a 	ret
 8002dac:	0005883a 	mov	r2,zero
 8002db0:	f800283a 	ret

08002db4 <_Unwind_SetIP>:
 8002db4:	20800017 	ldw	r2,0(r4)
 8002db8:	297fffc4 	addi	r5,r5,-1
 8002dbc:	11400115 	stw	r5,4(r2)
 8002dc0:	f800283a 	ret

08002dc4 <_Unwind_GetLanguageSpecificData>:
 8002dc4:	20800017 	ldw	r2,0(r4)
 8002dc8:	10800717 	ldw	r2,28(r2)
 8002dcc:	f800283a 	ret

08002dd0 <_Unwind_GetRegionStart>:
 8002dd0:	0005883a 	mov	r2,zero
 8002dd4:	f800283a 	ret

08002dd8 <_Unwind_FindEnclosingFunction>:
 8002dd8:	0005883a 	mov	r2,zero
 8002ddc:	f800283a 	ret

08002de0 <_Unwind_GetDataRelBase>:
 8002de0:	0005883a 	mov	r2,zero
 8002de4:	f800283a 	ret

08002de8 <_Unwind_GetTextRelBase>:
 8002de8:	0005883a 	mov	r2,zero
 8002dec:	f800283a 	ret

08002df0 <_Unwind_SjLj_RaiseException>:
 8002df0:	00820074 	movhi	r2,2049
 8002df4:	defff804 	addi	sp,sp,-32
 8002df8:	109ad504 	addi	r2,r2,27476
 8002dfc:	dc800515 	stw	r18,20(sp)
 8002e00:	14800017 	ldw	r18,0(r2)
 8002e04:	dfc00715 	stw	ra,28(sp)
 8002e08:	dcc00615 	stw	r19,24(sp)
 8002e0c:	dc400415 	stw	r17,16(sp)
 8002e10:	dc000315 	stw	r16,12(sp)
 8002e14:	dc800215 	stw	r18,8(sp)
 8002e18:	90001426 	beq	r18,zero,8002e6c <_Unwind_SjLj_RaiseException+0x7c>
 8002e1c:	2021883a 	mov	r16,r4
 8002e20:	9005883a 	mov	r2,r18
 8002e24:	04400184 	movi	r17,6
 8002e28:	04c00204 	movi	r19,8
 8002e2c:	10800617 	ldw	r2,24(r2)
 8002e30:	10000a26 	beq	r2,zero,8002e5c <_Unwind_SjLj_RaiseException+0x6c>
 8002e34:	81800017 	ldw	r6,0(r16)
 8002e38:	81c00117 	ldw	r7,4(r16)
 8002e3c:	01400044 	movi	r5,1
 8002e40:	d8c00204 	addi	r3,sp,8
 8002e44:	d8c00115 	stw	r3,4(sp)
 8002e48:	dc000015 	stw	r16,0(sp)
 8002e4c:	2809883a 	mov	r4,r5
 8002e50:	103ee83a 	callr	r2
 8002e54:	14400d26 	beq	r2,r17,8002e8c <_Unwind_SjLj_RaiseException+0x9c>
 8002e58:	14c0171e 	bne	r2,r19,8002eb8 <_Unwind_SjLj_RaiseException+0xc8>
 8002e5c:	d8800217 	ldw	r2,8(sp)
 8002e60:	10800017 	ldw	r2,0(r2)
 8002e64:	d8800215 	stw	r2,8(sp)
 8002e68:	103ff01e 	bne	r2,zero,8002e2c <__alt_data_end+0xf8002e2c>
 8002e6c:	00800144 	movi	r2,5
 8002e70:	dfc00717 	ldw	ra,28(sp)
 8002e74:	dcc00617 	ldw	r19,24(sp)
 8002e78:	dc800517 	ldw	r18,20(sp)
 8002e7c:	dc400417 	ldw	r17,16(sp)
 8002e80:	dc000317 	ldw	r16,12(sp)
 8002e84:	dec00804 	addi	sp,sp,32
 8002e88:	f800283a 	ret
 8002e8c:	d8800217 	ldw	r2,8(sp)
 8002e90:	80000315 	stw	zero,12(r16)
 8002e94:	d9400204 	addi	r5,sp,8
 8002e98:	80800415 	stw	r2,16(r16)
 8002e9c:	8009883a 	mov	r4,r16
 8002ea0:	dc800215 	stw	r18,8(sp)
 8002ea4:	8002c180 	call	8002c18 <_Unwind_RaiseException_Phase2>
 8002ea8:	00c001c4 	movi	r3,7
 8002eac:	10fff01e 	bne	r2,r3,8002e70 <__alt_data_end+0xf8002e70>
 8002eb0:	d9000204 	addi	r4,sp,8
 8002eb4:	8002cd80 	call	8002cd8 <uw_install_context.isra.1>
 8002eb8:	008000c4 	movi	r2,3
 8002ebc:	003fec06 	br	8002e70 <__alt_data_end+0xf8002e70>

08002ec0 <_Unwind_SjLj_ForcedUnwind>:
 8002ec0:	00c20074 	movhi	r3,2049
 8002ec4:	18dad504 	addi	r3,r3,27476
 8002ec8:	defffe04 	addi	sp,sp,-8
 8002ecc:	18c00017 	ldw	r3,0(r3)
 8002ed0:	dfc00115 	stw	ra,4(sp)
 8002ed4:	21400315 	stw	r5,12(r4)
 8002ed8:	21800415 	stw	r6,16(r4)
 8002edc:	d80b883a 	mov	r5,sp
 8002ee0:	d8c00015 	stw	r3,0(sp)
 8002ee4:	8002b000 	call	8002b00 <_Unwind_ForcedUnwind_Phase2>
 8002ee8:	00c001c4 	movi	r3,7
 8002eec:	10c00326 	beq	r2,r3,8002efc <_Unwind_SjLj_ForcedUnwind+0x3c>
 8002ef0:	dfc00117 	ldw	ra,4(sp)
 8002ef4:	dec00204 	addi	sp,sp,8
 8002ef8:	f800283a 	ret
 8002efc:	d809883a 	mov	r4,sp
 8002f00:	8002cd80 	call	8002cd8 <uw_install_context.isra.1>

08002f04 <_Unwind_SjLj_Resume>:
 8002f04:	00c20074 	movhi	r3,2049
 8002f08:	18dad504 	addi	r3,r3,27476
 8002f0c:	18c00017 	ldw	r3,0(r3)
 8002f10:	20800317 	ldw	r2,12(r4)
 8002f14:	defffe04 	addi	sp,sp,-8
 8002f18:	dfc00115 	stw	ra,4(sp)
 8002f1c:	d8c00015 	stw	r3,0(sp)
 8002f20:	d80b883a 	mov	r5,sp
 8002f24:	1000041e 	bne	r2,zero,8002f38 <_Unwind_SjLj_Resume+0x34>
 8002f28:	8002c180 	call	8002c18 <_Unwind_RaiseException_Phase2>
 8002f2c:	00c001c4 	movi	r3,7
 8002f30:	10c00326 	beq	r2,r3,8002f40 <_Unwind_SjLj_Resume+0x3c>
 8002f34:	80030200 	call	8003020 <abort>
 8002f38:	8002b000 	call	8002b00 <_Unwind_ForcedUnwind_Phase2>
 8002f3c:	003ffb06 	br	8002f2c <__alt_data_end+0xf8002f2c>
 8002f40:	d809883a 	mov	r4,sp
 8002f44:	8002cd80 	call	8002cd8 <uw_install_context.isra.1>

08002f48 <_Unwind_SjLj_Resume_or_Rethrow>:
 8002f48:	20800317 	ldw	r2,12(r4)
 8002f4c:	defffe04 	addi	sp,sp,-8
 8002f50:	dfc00115 	stw	ra,4(sp)
 8002f54:	1000041e 	bne	r2,zero,8002f68 <_Unwind_SjLj_Resume_or_Rethrow+0x20>
 8002f58:	8002df00 	call	8002df0 <_Unwind_SjLj_RaiseException>
 8002f5c:	dfc00117 	ldw	ra,4(sp)
 8002f60:	dec00204 	addi	sp,sp,8
 8002f64:	f800283a 	ret
 8002f68:	00820074 	movhi	r2,2049
 8002f6c:	109ad504 	addi	r2,r2,27476
 8002f70:	10800017 	ldw	r2,0(r2)
 8002f74:	d80b883a 	mov	r5,sp
 8002f78:	d8800015 	stw	r2,0(sp)
 8002f7c:	8002b000 	call	8002b00 <_Unwind_ForcedUnwind_Phase2>
 8002f80:	00c001c4 	movi	r3,7
 8002f84:	10c00126 	beq	r2,r3,8002f8c <_Unwind_SjLj_Resume_or_Rethrow+0x44>
 8002f88:	80030200 	call	8003020 <abort>
 8002f8c:	d809883a 	mov	r4,sp
 8002f90:	8002cd80 	call	8002cd8 <uw_install_context.isra.1>

08002f94 <_Unwind_DeleteException>:
 8002f94:	20800217 	ldw	r2,8(r4)
 8002f98:	10000326 	beq	r2,zero,8002fa8 <_Unwind_DeleteException+0x14>
 8002f9c:	200b883a 	mov	r5,r4
 8002fa0:	01000044 	movi	r4,1
 8002fa4:	1000683a 	jmp	r2
 8002fa8:	f800283a 	ret

08002fac <_Unwind_Backtrace>:
 8002fac:	00820074 	movhi	r2,2049
 8002fb0:	109ad504 	addi	r2,r2,27476
 8002fb4:	10800017 	ldw	r2,0(r2)
 8002fb8:	defffc04 	addi	sp,sp,-16
 8002fbc:	dc400215 	stw	r17,8(sp)
 8002fc0:	dc000115 	stw	r16,4(sp)
 8002fc4:	dfc00315 	stw	ra,12(sp)
 8002fc8:	2023883a 	mov	r17,r4
 8002fcc:	2821883a 	mov	r16,r5
 8002fd0:	d8800015 	stw	r2,0(sp)
 8002fd4:	00000506 	br	8002fec <_Unwind_Backtrace+0x40>
 8002fd8:	883ee83a 	callr	r17
 8002fdc:	10000e1e 	bne	r2,zero,8003018 <_Unwind_Backtrace+0x6c>
 8002fe0:	d8800017 	ldw	r2,0(sp)
 8002fe4:	10800017 	ldw	r2,0(r2)
 8002fe8:	d8800015 	stw	r2,0(sp)
 8002fec:	800b883a 	mov	r5,r16
 8002ff0:	d809883a 	mov	r4,sp
 8002ff4:	103ff81e 	bne	r2,zero,8002fd8 <__alt_data_end+0xf8002fd8>
 8002ff8:	883ee83a 	callr	r17
 8002ffc:	1000061e 	bne	r2,zero,8003018 <_Unwind_Backtrace+0x6c>
 8003000:	00800144 	movi	r2,5
 8003004:	dfc00317 	ldw	ra,12(sp)
 8003008:	dc400217 	ldw	r17,8(sp)
 800300c:	dc000117 	ldw	r16,4(sp)
 8003010:	dec00404 	addi	sp,sp,16
 8003014:	f800283a 	ret
 8003018:	008000c4 	movi	r2,3
 800301c:	003ff906 	br	8003004 <__alt_data_end+0xf8003004>

08003020 <abort>:
 8003020:	deffff04 	addi	sp,sp,-4
 8003024:	01000184 	movi	r4,6
 8003028:	dfc00015 	stw	ra,0(sp)
 800302c:	8003d9c0 	call	8003d9c <raise>
 8003030:	01000044 	movi	r4,1
 8003034:	800ff440 	call	800ff44 <_exit>

08003038 <malloc>:
 8003038:	00820074 	movhi	r2,2049
 800303c:	1093ff04 	addi	r2,r2,20476
 8003040:	200b883a 	mov	r5,r4
 8003044:	11000017 	ldw	r4,0(r2)
 8003048:	80030601 	jmpi	8003060 <_malloc_r>

0800304c <free>:
 800304c:	00820074 	movhi	r2,2049
 8003050:	1093ff04 	addi	r2,r2,20476
 8003054:	200b883a 	mov	r5,r4
 8003058:	11000017 	ldw	r4,0(r2)
 800305c:	80083d81 	jmpi	80083d8 <_free_r>

08003060 <_malloc_r>:
 8003060:	defff504 	addi	sp,sp,-44
 8003064:	dc800315 	stw	r18,12(sp)
 8003068:	dfc00a15 	stw	ra,40(sp)
 800306c:	df000915 	stw	fp,36(sp)
 8003070:	ddc00815 	stw	r23,32(sp)
 8003074:	dd800715 	stw	r22,28(sp)
 8003078:	dd400615 	stw	r21,24(sp)
 800307c:	dd000515 	stw	r20,20(sp)
 8003080:	dcc00415 	stw	r19,16(sp)
 8003084:	dc400215 	stw	r17,8(sp)
 8003088:	dc000115 	stw	r16,4(sp)
 800308c:	288002c4 	addi	r2,r5,11
 8003090:	00c00584 	movi	r3,22
 8003094:	2025883a 	mov	r18,r4
 8003098:	18807f2e 	bgeu	r3,r2,8003298 <_malloc_r+0x238>
 800309c:	047ffe04 	movi	r17,-8
 80030a0:	1462703a 	and	r17,r2,r17
 80030a4:	8800a316 	blt	r17,zero,8003334 <_malloc_r+0x2d4>
 80030a8:	8940a236 	bltu	r17,r5,8003334 <_malloc_r+0x2d4>
 80030ac:	80105480 	call	8010548 <__malloc_lock>
 80030b0:	00807dc4 	movi	r2,503
 80030b4:	1441e92e 	bgeu	r2,r17,800385c <_malloc_r+0x7fc>
 80030b8:	8804d27a 	srli	r2,r17,9
 80030bc:	1000a126 	beq	r2,zero,8003344 <_malloc_r+0x2e4>
 80030c0:	00c00104 	movi	r3,4
 80030c4:	18811e36 	bltu	r3,r2,8003540 <_malloc_r+0x4e0>
 80030c8:	8804d1ba 	srli	r2,r17,6
 80030cc:	12000e44 	addi	r8,r2,57
 80030d0:	11c00e04 	addi	r7,r2,56
 80030d4:	4209883a 	add	r4,r8,r8
 80030d8:	04c20074 	movhi	r19,2049
 80030dc:	2109883a 	add	r4,r4,r4
 80030e0:	9ccd4604 	addi	r19,r19,13592
 80030e4:	2109883a 	add	r4,r4,r4
 80030e8:	9909883a 	add	r4,r19,r4
 80030ec:	24000117 	ldw	r16,4(r4)
 80030f0:	213ffe04 	addi	r4,r4,-8
 80030f4:	24009726 	beq	r4,r16,8003354 <_malloc_r+0x2f4>
 80030f8:	80800117 	ldw	r2,4(r16)
 80030fc:	01bfff04 	movi	r6,-4
 8003100:	014003c4 	movi	r5,15
 8003104:	1184703a 	and	r2,r2,r6
 8003108:	1447c83a 	sub	r3,r2,r17
 800310c:	28c00716 	blt	r5,r3,800312c <_malloc_r+0xcc>
 8003110:	1800920e 	bge	r3,zero,800335c <_malloc_r+0x2fc>
 8003114:	84000317 	ldw	r16,12(r16)
 8003118:	24008e26 	beq	r4,r16,8003354 <_malloc_r+0x2f4>
 800311c:	80800117 	ldw	r2,4(r16)
 8003120:	1184703a 	and	r2,r2,r6
 8003124:	1447c83a 	sub	r3,r2,r17
 8003128:	28fff90e 	bge	r5,r3,8003110 <__alt_data_end+0xf8003110>
 800312c:	3809883a 	mov	r4,r7
 8003130:	01820074 	movhi	r6,2049
 8003134:	9c000417 	ldw	r16,16(r19)
 8003138:	318d4604 	addi	r6,r6,13592
 800313c:	32000204 	addi	r8,r6,8
 8003140:	82013426 	beq	r16,r8,8003614 <_malloc_r+0x5b4>
 8003144:	80c00117 	ldw	r3,4(r16)
 8003148:	00bfff04 	movi	r2,-4
 800314c:	188e703a 	and	r7,r3,r2
 8003150:	3c45c83a 	sub	r2,r7,r17
 8003154:	00c003c4 	movi	r3,15
 8003158:	18811f16 	blt	r3,r2,80035d8 <_malloc_r+0x578>
 800315c:	32000515 	stw	r8,20(r6)
 8003160:	32000415 	stw	r8,16(r6)
 8003164:	10007f0e 	bge	r2,zero,8003364 <_malloc_r+0x304>
 8003168:	00807fc4 	movi	r2,511
 800316c:	11c0fd36 	bltu	r2,r7,8003564 <_malloc_r+0x504>
 8003170:	3806d0fa 	srli	r3,r7,3
 8003174:	01c00044 	movi	r7,1
 8003178:	30800117 	ldw	r2,4(r6)
 800317c:	19400044 	addi	r5,r3,1
 8003180:	294b883a 	add	r5,r5,r5
 8003184:	1807d0ba 	srai	r3,r3,2
 8003188:	294b883a 	add	r5,r5,r5
 800318c:	294b883a 	add	r5,r5,r5
 8003190:	298b883a 	add	r5,r5,r6
 8003194:	38c6983a 	sll	r3,r7,r3
 8003198:	29c00017 	ldw	r7,0(r5)
 800319c:	2a7ffe04 	addi	r9,r5,-8
 80031a0:	1886b03a 	or	r3,r3,r2
 80031a4:	82400315 	stw	r9,12(r16)
 80031a8:	81c00215 	stw	r7,8(r16)
 80031ac:	30c00115 	stw	r3,4(r6)
 80031b0:	2c000015 	stw	r16,0(r5)
 80031b4:	3c000315 	stw	r16,12(r7)
 80031b8:	2005d0ba 	srai	r2,r4,2
 80031bc:	01400044 	movi	r5,1
 80031c0:	288a983a 	sll	r5,r5,r2
 80031c4:	19406f36 	bltu	r3,r5,8003384 <_malloc_r+0x324>
 80031c8:	28c4703a 	and	r2,r5,r3
 80031cc:	10000a1e 	bne	r2,zero,80031f8 <_malloc_r+0x198>
 80031d0:	00bfff04 	movi	r2,-4
 80031d4:	294b883a 	add	r5,r5,r5
 80031d8:	2088703a 	and	r4,r4,r2
 80031dc:	28c4703a 	and	r2,r5,r3
 80031e0:	21000104 	addi	r4,r4,4
 80031e4:	1000041e 	bne	r2,zero,80031f8 <_malloc_r+0x198>
 80031e8:	294b883a 	add	r5,r5,r5
 80031ec:	28c4703a 	and	r2,r5,r3
 80031f0:	21000104 	addi	r4,r4,4
 80031f4:	103ffc26 	beq	r2,zero,80031e8 <__alt_data_end+0xf80031e8>
 80031f8:	02bfff04 	movi	r10,-4
 80031fc:	024003c4 	movi	r9,15
 8003200:	21800044 	addi	r6,r4,1
 8003204:	318d883a 	add	r6,r6,r6
 8003208:	318d883a 	add	r6,r6,r6
 800320c:	318d883a 	add	r6,r6,r6
 8003210:	998d883a 	add	r6,r19,r6
 8003214:	333ffe04 	addi	r12,r6,-8
 8003218:	2017883a 	mov	r11,r4
 800321c:	31800104 	addi	r6,r6,4
 8003220:	34000017 	ldw	r16,0(r6)
 8003224:	31fffd04 	addi	r7,r6,-12
 8003228:	81c0041e 	bne	r16,r7,800323c <_malloc_r+0x1dc>
 800322c:	0000fb06 	br	800361c <_malloc_r+0x5bc>
 8003230:	1801030e 	bge	r3,zero,8003640 <_malloc_r+0x5e0>
 8003234:	84000317 	ldw	r16,12(r16)
 8003238:	81c0f826 	beq	r16,r7,800361c <_malloc_r+0x5bc>
 800323c:	80800117 	ldw	r2,4(r16)
 8003240:	1284703a 	and	r2,r2,r10
 8003244:	1447c83a 	sub	r3,r2,r17
 8003248:	48fff90e 	bge	r9,r3,8003230 <__alt_data_end+0xf8003230>
 800324c:	80800317 	ldw	r2,12(r16)
 8003250:	81000217 	ldw	r4,8(r16)
 8003254:	89400054 	ori	r5,r17,1
 8003258:	81400115 	stw	r5,4(r16)
 800325c:	20800315 	stw	r2,12(r4)
 8003260:	11000215 	stw	r4,8(r2)
 8003264:	8463883a 	add	r17,r16,r17
 8003268:	9c400515 	stw	r17,20(r19)
 800326c:	9c400415 	stw	r17,16(r19)
 8003270:	18800054 	ori	r2,r3,1
 8003274:	88800115 	stw	r2,4(r17)
 8003278:	8a000315 	stw	r8,12(r17)
 800327c:	8a000215 	stw	r8,8(r17)
 8003280:	88e3883a 	add	r17,r17,r3
 8003284:	88c00015 	stw	r3,0(r17)
 8003288:	9009883a 	mov	r4,r18
 800328c:	801056c0 	call	801056c <__malloc_unlock>
 8003290:	80800204 	addi	r2,r16,8
 8003294:	00001b06 	br	8003304 <_malloc_r+0x2a4>
 8003298:	04400404 	movi	r17,16
 800329c:	89402536 	bltu	r17,r5,8003334 <_malloc_r+0x2d4>
 80032a0:	80105480 	call	8010548 <__malloc_lock>
 80032a4:	00800184 	movi	r2,6
 80032a8:	01000084 	movi	r4,2
 80032ac:	04c20074 	movhi	r19,2049
 80032b0:	1085883a 	add	r2,r2,r2
 80032b4:	9ccd4604 	addi	r19,r19,13592
 80032b8:	1085883a 	add	r2,r2,r2
 80032bc:	9885883a 	add	r2,r19,r2
 80032c0:	14000117 	ldw	r16,4(r2)
 80032c4:	10fffe04 	addi	r3,r2,-8
 80032c8:	80c0d926 	beq	r16,r3,8003630 <_malloc_r+0x5d0>
 80032cc:	80c00117 	ldw	r3,4(r16)
 80032d0:	81000317 	ldw	r4,12(r16)
 80032d4:	00bfff04 	movi	r2,-4
 80032d8:	1884703a 	and	r2,r3,r2
 80032dc:	81400217 	ldw	r5,8(r16)
 80032e0:	8085883a 	add	r2,r16,r2
 80032e4:	10c00117 	ldw	r3,4(r2)
 80032e8:	29000315 	stw	r4,12(r5)
 80032ec:	21400215 	stw	r5,8(r4)
 80032f0:	18c00054 	ori	r3,r3,1
 80032f4:	10c00115 	stw	r3,4(r2)
 80032f8:	9009883a 	mov	r4,r18
 80032fc:	801056c0 	call	801056c <__malloc_unlock>
 8003300:	80800204 	addi	r2,r16,8
 8003304:	dfc00a17 	ldw	ra,40(sp)
 8003308:	df000917 	ldw	fp,36(sp)
 800330c:	ddc00817 	ldw	r23,32(sp)
 8003310:	dd800717 	ldw	r22,28(sp)
 8003314:	dd400617 	ldw	r21,24(sp)
 8003318:	dd000517 	ldw	r20,20(sp)
 800331c:	dcc00417 	ldw	r19,16(sp)
 8003320:	dc800317 	ldw	r18,12(sp)
 8003324:	dc400217 	ldw	r17,8(sp)
 8003328:	dc000117 	ldw	r16,4(sp)
 800332c:	dec00b04 	addi	sp,sp,44
 8003330:	f800283a 	ret
 8003334:	00800304 	movi	r2,12
 8003338:	90800015 	stw	r2,0(r18)
 800333c:	0005883a 	mov	r2,zero
 8003340:	003ff006 	br	8003304 <__alt_data_end+0xf8003304>
 8003344:	01002004 	movi	r4,128
 8003348:	02001004 	movi	r8,64
 800334c:	01c00fc4 	movi	r7,63
 8003350:	003f6106 	br	80030d8 <__alt_data_end+0xf80030d8>
 8003354:	4009883a 	mov	r4,r8
 8003358:	003f7506 	br	8003130 <__alt_data_end+0xf8003130>
 800335c:	81000317 	ldw	r4,12(r16)
 8003360:	003fde06 	br	80032dc <__alt_data_end+0xf80032dc>
 8003364:	81c5883a 	add	r2,r16,r7
 8003368:	11400117 	ldw	r5,4(r2)
 800336c:	9009883a 	mov	r4,r18
 8003370:	29400054 	ori	r5,r5,1
 8003374:	11400115 	stw	r5,4(r2)
 8003378:	801056c0 	call	801056c <__malloc_unlock>
 800337c:	80800204 	addi	r2,r16,8
 8003380:	003fe006 	br	8003304 <__alt_data_end+0xf8003304>
 8003384:	9c000217 	ldw	r16,8(r19)
 8003388:	00bfff04 	movi	r2,-4
 800338c:	85800117 	ldw	r22,4(r16)
 8003390:	b0ac703a 	and	r22,r22,r2
 8003394:	b4400336 	bltu	r22,r17,80033a4 <_malloc_r+0x344>
 8003398:	b445c83a 	sub	r2,r22,r17
 800339c:	00c003c4 	movi	r3,15
 80033a0:	18805d16 	blt	r3,r2,8003518 <_malloc_r+0x4b8>
 80033a4:	05c20074 	movhi	r23,2049
 80033a8:	00820074 	movhi	r2,2049
 80033ac:	109ad804 	addi	r2,r2,27488
 80033b0:	bdd3fc04 	addi	r23,r23,20464
 80033b4:	15400017 	ldw	r21,0(r2)
 80033b8:	b8c00017 	ldw	r3,0(r23)
 80033bc:	00bfffc4 	movi	r2,-1
 80033c0:	858d883a 	add	r6,r16,r22
 80033c4:	8d6b883a 	add	r21,r17,r21
 80033c8:	1880ea26 	beq	r3,r2,8003774 <_malloc_r+0x714>
 80033cc:	ad4403c4 	addi	r21,r21,4111
 80033d0:	00bc0004 	movi	r2,-4096
 80033d4:	a8aa703a 	and	r21,r21,r2
 80033d8:	a80b883a 	mov	r5,r21
 80033dc:	9009883a 	mov	r4,r18
 80033e0:	d9800015 	stw	r6,0(sp)
 80033e4:	8003af40 	call	8003af4 <_sbrk_r>
 80033e8:	1029883a 	mov	r20,r2
 80033ec:	00bfffc4 	movi	r2,-1
 80033f0:	d9800017 	ldw	r6,0(sp)
 80033f4:	a080e826 	beq	r20,r2,8003798 <_malloc_r+0x738>
 80033f8:	a180a636 	bltu	r20,r6,8003694 <_malloc_r+0x634>
 80033fc:	07020074 	movhi	fp,2049
 8003400:	e71ae804 	addi	fp,fp,27552
 8003404:	e0800017 	ldw	r2,0(fp)
 8003408:	a887883a 	add	r3,r21,r2
 800340c:	e0c00015 	stw	r3,0(fp)
 8003410:	3500e626 	beq	r6,r20,80037ac <_malloc_r+0x74c>
 8003414:	b9000017 	ldw	r4,0(r23)
 8003418:	00bfffc4 	movi	r2,-1
 800341c:	2080ee26 	beq	r4,r2,80037d8 <_malloc_r+0x778>
 8003420:	a185c83a 	sub	r2,r20,r6
 8003424:	10c5883a 	add	r2,r2,r3
 8003428:	e0800015 	stw	r2,0(fp)
 800342c:	a0c001cc 	andi	r3,r20,7
 8003430:	1800bc26 	beq	r3,zero,8003724 <_malloc_r+0x6c4>
 8003434:	a0e9c83a 	sub	r20,r20,r3
 8003438:	00840204 	movi	r2,4104
 800343c:	a5000204 	addi	r20,r20,8
 8003440:	10c7c83a 	sub	r3,r2,r3
 8003444:	a545883a 	add	r2,r20,r21
 8003448:	1083ffcc 	andi	r2,r2,4095
 800344c:	18abc83a 	sub	r21,r3,r2
 8003450:	a80b883a 	mov	r5,r21
 8003454:	9009883a 	mov	r4,r18
 8003458:	8003af40 	call	8003af4 <_sbrk_r>
 800345c:	00ffffc4 	movi	r3,-1
 8003460:	10c0e126 	beq	r2,r3,80037e8 <_malloc_r+0x788>
 8003464:	1505c83a 	sub	r2,r2,r20
 8003468:	1545883a 	add	r2,r2,r21
 800346c:	10800054 	ori	r2,r2,1
 8003470:	e0c00017 	ldw	r3,0(fp)
 8003474:	9d000215 	stw	r20,8(r19)
 8003478:	a0800115 	stw	r2,4(r20)
 800347c:	a8c7883a 	add	r3,r21,r3
 8003480:	e0c00015 	stw	r3,0(fp)
 8003484:	84c00e26 	beq	r16,r19,80034c0 <_malloc_r+0x460>
 8003488:	018003c4 	movi	r6,15
 800348c:	3580a72e 	bgeu	r6,r22,800372c <_malloc_r+0x6cc>
 8003490:	81400117 	ldw	r5,4(r16)
 8003494:	013ffe04 	movi	r4,-8
 8003498:	b0bffd04 	addi	r2,r22,-12
 800349c:	1104703a 	and	r2,r2,r4
 80034a0:	2900004c 	andi	r4,r5,1
 80034a4:	2088b03a 	or	r4,r4,r2
 80034a8:	81000115 	stw	r4,4(r16)
 80034ac:	01400144 	movi	r5,5
 80034b0:	8089883a 	add	r4,r16,r2
 80034b4:	21400115 	stw	r5,4(r4)
 80034b8:	21400215 	stw	r5,8(r4)
 80034bc:	3080cd36 	bltu	r6,r2,80037f4 <_malloc_r+0x794>
 80034c0:	00820074 	movhi	r2,2049
 80034c4:	109ad704 	addi	r2,r2,27484
 80034c8:	11000017 	ldw	r4,0(r2)
 80034cc:	20c0012e 	bgeu	r4,r3,80034d4 <_malloc_r+0x474>
 80034d0:	10c00015 	stw	r3,0(r2)
 80034d4:	00820074 	movhi	r2,2049
 80034d8:	109ad604 	addi	r2,r2,27480
 80034dc:	11000017 	ldw	r4,0(r2)
 80034e0:	9c000217 	ldw	r16,8(r19)
 80034e4:	20c0012e 	bgeu	r4,r3,80034ec <_malloc_r+0x48c>
 80034e8:	10c00015 	stw	r3,0(r2)
 80034ec:	80c00117 	ldw	r3,4(r16)
 80034f0:	00bfff04 	movi	r2,-4
 80034f4:	1886703a 	and	r3,r3,r2
 80034f8:	1c45c83a 	sub	r2,r3,r17
 80034fc:	1c400236 	bltu	r3,r17,8003508 <_malloc_r+0x4a8>
 8003500:	00c003c4 	movi	r3,15
 8003504:	18800416 	blt	r3,r2,8003518 <_malloc_r+0x4b8>
 8003508:	9009883a 	mov	r4,r18
 800350c:	801056c0 	call	801056c <__malloc_unlock>
 8003510:	0005883a 	mov	r2,zero
 8003514:	003f7b06 	br	8003304 <__alt_data_end+0xf8003304>
 8003518:	88c00054 	ori	r3,r17,1
 800351c:	80c00115 	stw	r3,4(r16)
 8003520:	8463883a 	add	r17,r16,r17
 8003524:	10800054 	ori	r2,r2,1
 8003528:	9c400215 	stw	r17,8(r19)
 800352c:	88800115 	stw	r2,4(r17)
 8003530:	9009883a 	mov	r4,r18
 8003534:	801056c0 	call	801056c <__malloc_unlock>
 8003538:	80800204 	addi	r2,r16,8
 800353c:	003f7106 	br	8003304 <__alt_data_end+0xf8003304>
 8003540:	00c00504 	movi	r3,20
 8003544:	18804a2e 	bgeu	r3,r2,8003670 <_malloc_r+0x610>
 8003548:	00c01504 	movi	r3,84
 800354c:	18806e36 	bltu	r3,r2,8003708 <_malloc_r+0x6a8>
 8003550:	8804d33a 	srli	r2,r17,12
 8003554:	12001bc4 	addi	r8,r2,111
 8003558:	11c01b84 	addi	r7,r2,110
 800355c:	4209883a 	add	r4,r8,r8
 8003560:	003edd06 	br	80030d8 <__alt_data_end+0xf80030d8>
 8003564:	3804d27a 	srli	r2,r7,9
 8003568:	00c00104 	movi	r3,4
 800356c:	1880442e 	bgeu	r3,r2,8003680 <_malloc_r+0x620>
 8003570:	00c00504 	movi	r3,20
 8003574:	18808136 	bltu	r3,r2,800377c <_malloc_r+0x71c>
 8003578:	11401704 	addi	r5,r2,92
 800357c:	10c016c4 	addi	r3,r2,91
 8003580:	294b883a 	add	r5,r5,r5
 8003584:	294b883a 	add	r5,r5,r5
 8003588:	294b883a 	add	r5,r5,r5
 800358c:	994b883a 	add	r5,r19,r5
 8003590:	28800017 	ldw	r2,0(r5)
 8003594:	01820074 	movhi	r6,2049
 8003598:	297ffe04 	addi	r5,r5,-8
 800359c:	318d4604 	addi	r6,r6,13592
 80035a0:	28806526 	beq	r5,r2,8003738 <_malloc_r+0x6d8>
 80035a4:	01bfff04 	movi	r6,-4
 80035a8:	10c00117 	ldw	r3,4(r2)
 80035ac:	1986703a 	and	r3,r3,r6
 80035b0:	38c0022e 	bgeu	r7,r3,80035bc <_malloc_r+0x55c>
 80035b4:	10800217 	ldw	r2,8(r2)
 80035b8:	28bffb1e 	bne	r5,r2,80035a8 <__alt_data_end+0xf80035a8>
 80035bc:	11400317 	ldw	r5,12(r2)
 80035c0:	98c00117 	ldw	r3,4(r19)
 80035c4:	81400315 	stw	r5,12(r16)
 80035c8:	80800215 	stw	r2,8(r16)
 80035cc:	2c000215 	stw	r16,8(r5)
 80035d0:	14000315 	stw	r16,12(r2)
 80035d4:	003ef806 	br	80031b8 <__alt_data_end+0xf80031b8>
 80035d8:	88c00054 	ori	r3,r17,1
 80035dc:	80c00115 	stw	r3,4(r16)
 80035e0:	8463883a 	add	r17,r16,r17
 80035e4:	34400515 	stw	r17,20(r6)
 80035e8:	34400415 	stw	r17,16(r6)
 80035ec:	10c00054 	ori	r3,r2,1
 80035f0:	8a000315 	stw	r8,12(r17)
 80035f4:	8a000215 	stw	r8,8(r17)
 80035f8:	88c00115 	stw	r3,4(r17)
 80035fc:	88a3883a 	add	r17,r17,r2
 8003600:	88800015 	stw	r2,0(r17)
 8003604:	9009883a 	mov	r4,r18
 8003608:	801056c0 	call	801056c <__malloc_unlock>
 800360c:	80800204 	addi	r2,r16,8
 8003610:	003f3c06 	br	8003304 <__alt_data_end+0xf8003304>
 8003614:	30c00117 	ldw	r3,4(r6)
 8003618:	003ee706 	br	80031b8 <__alt_data_end+0xf80031b8>
 800361c:	5ac00044 	addi	r11,r11,1
 8003620:	588000cc 	andi	r2,r11,3
 8003624:	31800204 	addi	r6,r6,8
 8003628:	103efd1e 	bne	r2,zero,8003220 <__alt_data_end+0xf8003220>
 800362c:	00002406 	br	80036c0 <_malloc_r+0x660>
 8003630:	14000317 	ldw	r16,12(r2)
 8003634:	143f251e 	bne	r2,r16,80032cc <__alt_data_end+0xf80032cc>
 8003638:	21000084 	addi	r4,r4,2
 800363c:	003ebc06 	br	8003130 <__alt_data_end+0xf8003130>
 8003640:	8085883a 	add	r2,r16,r2
 8003644:	10c00117 	ldw	r3,4(r2)
 8003648:	81000317 	ldw	r4,12(r16)
 800364c:	81400217 	ldw	r5,8(r16)
 8003650:	18c00054 	ori	r3,r3,1
 8003654:	10c00115 	stw	r3,4(r2)
 8003658:	29000315 	stw	r4,12(r5)
 800365c:	21400215 	stw	r5,8(r4)
 8003660:	9009883a 	mov	r4,r18
 8003664:	801056c0 	call	801056c <__malloc_unlock>
 8003668:	80800204 	addi	r2,r16,8
 800366c:	003f2506 	br	8003304 <__alt_data_end+0xf8003304>
 8003670:	12001704 	addi	r8,r2,92
 8003674:	11c016c4 	addi	r7,r2,91
 8003678:	4209883a 	add	r4,r8,r8
 800367c:	003e9606 	br	80030d8 <__alt_data_end+0xf80030d8>
 8003680:	3804d1ba 	srli	r2,r7,6
 8003684:	11400e44 	addi	r5,r2,57
 8003688:	10c00e04 	addi	r3,r2,56
 800368c:	294b883a 	add	r5,r5,r5
 8003690:	003fbc06 	br	8003584 <__alt_data_end+0xf8003584>
 8003694:	84ff5926 	beq	r16,r19,80033fc <__alt_data_end+0xf80033fc>
 8003698:	00820074 	movhi	r2,2049
 800369c:	108d4604 	addi	r2,r2,13592
 80036a0:	14000217 	ldw	r16,8(r2)
 80036a4:	00bfff04 	movi	r2,-4
 80036a8:	80c00117 	ldw	r3,4(r16)
 80036ac:	1886703a 	and	r3,r3,r2
 80036b0:	003f9106 	br	80034f8 <__alt_data_end+0xf80034f8>
 80036b4:	60800217 	ldw	r2,8(r12)
 80036b8:	213fffc4 	addi	r4,r4,-1
 80036bc:	1300651e 	bne	r2,r12,8003854 <_malloc_r+0x7f4>
 80036c0:	208000cc 	andi	r2,r4,3
 80036c4:	633ffe04 	addi	r12,r12,-8
 80036c8:	103ffa1e 	bne	r2,zero,80036b4 <__alt_data_end+0xf80036b4>
 80036cc:	98800117 	ldw	r2,4(r19)
 80036d0:	0146303a 	nor	r3,zero,r5
 80036d4:	1884703a 	and	r2,r3,r2
 80036d8:	98800115 	stw	r2,4(r19)
 80036dc:	294b883a 	add	r5,r5,r5
 80036e0:	117f2836 	bltu	r2,r5,8003384 <__alt_data_end+0xf8003384>
 80036e4:	283f2726 	beq	r5,zero,8003384 <__alt_data_end+0xf8003384>
 80036e8:	2886703a 	and	r3,r5,r2
 80036ec:	5809883a 	mov	r4,r11
 80036f0:	183ec31e 	bne	r3,zero,8003200 <__alt_data_end+0xf8003200>
 80036f4:	294b883a 	add	r5,r5,r5
 80036f8:	2886703a 	and	r3,r5,r2
 80036fc:	21000104 	addi	r4,r4,4
 8003700:	183ffc26 	beq	r3,zero,80036f4 <__alt_data_end+0xf80036f4>
 8003704:	003ebe06 	br	8003200 <__alt_data_end+0xf8003200>
 8003708:	00c05504 	movi	r3,340
 800370c:	18801236 	bltu	r3,r2,8003758 <_malloc_r+0x6f8>
 8003710:	8804d3fa 	srli	r2,r17,15
 8003714:	12001e04 	addi	r8,r2,120
 8003718:	11c01dc4 	addi	r7,r2,119
 800371c:	4209883a 	add	r4,r8,r8
 8003720:	003e6d06 	br	80030d8 <__alt_data_end+0xf80030d8>
 8003724:	00c40004 	movi	r3,4096
 8003728:	003f4606 	br	8003444 <__alt_data_end+0xf8003444>
 800372c:	00800044 	movi	r2,1
 8003730:	a0800115 	stw	r2,4(r20)
 8003734:	003f7406 	br	8003508 <__alt_data_end+0xf8003508>
 8003738:	1805d0ba 	srai	r2,r3,2
 800373c:	01c00044 	movi	r7,1
 8003740:	30c00117 	ldw	r3,4(r6)
 8003744:	388e983a 	sll	r7,r7,r2
 8003748:	2805883a 	mov	r2,r5
 800374c:	38c6b03a 	or	r3,r7,r3
 8003750:	30c00115 	stw	r3,4(r6)
 8003754:	003f9b06 	br	80035c4 <__alt_data_end+0xf80035c4>
 8003758:	00c15504 	movi	r3,1364
 800375c:	18801a36 	bltu	r3,r2,80037c8 <_malloc_r+0x768>
 8003760:	8804d4ba 	srli	r2,r17,18
 8003764:	12001f44 	addi	r8,r2,125
 8003768:	11c01f04 	addi	r7,r2,124
 800376c:	4209883a 	add	r4,r8,r8
 8003770:	003e5906 	br	80030d8 <__alt_data_end+0xf80030d8>
 8003774:	ad400404 	addi	r21,r21,16
 8003778:	003f1706 	br	80033d8 <__alt_data_end+0xf80033d8>
 800377c:	00c01504 	movi	r3,84
 8003780:	18802336 	bltu	r3,r2,8003810 <_malloc_r+0x7b0>
 8003784:	3804d33a 	srli	r2,r7,12
 8003788:	11401bc4 	addi	r5,r2,111
 800378c:	10c01b84 	addi	r3,r2,110
 8003790:	294b883a 	add	r5,r5,r5
 8003794:	003f7b06 	br	8003584 <__alt_data_end+0xf8003584>
 8003798:	9c000217 	ldw	r16,8(r19)
 800379c:	00bfff04 	movi	r2,-4
 80037a0:	80c00117 	ldw	r3,4(r16)
 80037a4:	1886703a 	and	r3,r3,r2
 80037a8:	003f5306 	br	80034f8 <__alt_data_end+0xf80034f8>
 80037ac:	3083ffcc 	andi	r2,r6,4095
 80037b0:	103f181e 	bne	r2,zero,8003414 <__alt_data_end+0xf8003414>
 80037b4:	99000217 	ldw	r4,8(r19)
 80037b8:	b545883a 	add	r2,r22,r21
 80037bc:	10800054 	ori	r2,r2,1
 80037c0:	20800115 	stw	r2,4(r4)
 80037c4:	003f3e06 	br	80034c0 <__alt_data_end+0xf80034c0>
 80037c8:	01003f84 	movi	r4,254
 80037cc:	02001fc4 	movi	r8,127
 80037d0:	01c01f84 	movi	r7,126
 80037d4:	003e4006 	br	80030d8 <__alt_data_end+0xf80030d8>
 80037d8:	00820074 	movhi	r2,2049
 80037dc:	1093fc04 	addi	r2,r2,20464
 80037e0:	15000015 	stw	r20,0(r2)
 80037e4:	003f1106 	br	800342c <__alt_data_end+0xf800342c>
 80037e8:	00800044 	movi	r2,1
 80037ec:	002b883a 	mov	r21,zero
 80037f0:	003f1f06 	br	8003470 <__alt_data_end+0xf8003470>
 80037f4:	81400204 	addi	r5,r16,8
 80037f8:	9009883a 	mov	r4,r18
 80037fc:	80083d80 	call	80083d8 <_free_r>
 8003800:	00820074 	movhi	r2,2049
 8003804:	109ae804 	addi	r2,r2,27552
 8003808:	10c00017 	ldw	r3,0(r2)
 800380c:	003f2c06 	br	80034c0 <__alt_data_end+0xf80034c0>
 8003810:	00c05504 	movi	r3,340
 8003814:	18800536 	bltu	r3,r2,800382c <_malloc_r+0x7cc>
 8003818:	3804d3fa 	srli	r2,r7,15
 800381c:	11401e04 	addi	r5,r2,120
 8003820:	10c01dc4 	addi	r3,r2,119
 8003824:	294b883a 	add	r5,r5,r5
 8003828:	003f5606 	br	8003584 <__alt_data_end+0xf8003584>
 800382c:	00c15504 	movi	r3,1364
 8003830:	18800536 	bltu	r3,r2,8003848 <_malloc_r+0x7e8>
 8003834:	3804d4ba 	srli	r2,r7,18
 8003838:	11401f44 	addi	r5,r2,125
 800383c:	10c01f04 	addi	r3,r2,124
 8003840:	294b883a 	add	r5,r5,r5
 8003844:	003f4f06 	br	8003584 <__alt_data_end+0xf8003584>
 8003848:	01403f84 	movi	r5,254
 800384c:	00c01f84 	movi	r3,126
 8003850:	003f4c06 	br	8003584 <__alt_data_end+0xf8003584>
 8003854:	98800117 	ldw	r2,4(r19)
 8003858:	003fa006 	br	80036dc <__alt_data_end+0xf80036dc>
 800385c:	8808d0fa 	srli	r4,r17,3
 8003860:	20800044 	addi	r2,r4,1
 8003864:	1085883a 	add	r2,r2,r2
 8003868:	003e9006 	br	80032ac <__alt_data_end+0xf80032ac>

0800386c <memset>:
 800386c:	20c000cc 	andi	r3,r4,3
 8003870:	2005883a 	mov	r2,r4
 8003874:	18004426 	beq	r3,zero,8003988 <memset+0x11c>
 8003878:	31ffffc4 	addi	r7,r6,-1
 800387c:	30004026 	beq	r6,zero,8003980 <memset+0x114>
 8003880:	2813883a 	mov	r9,r5
 8003884:	200d883a 	mov	r6,r4
 8003888:	2007883a 	mov	r3,r4
 800388c:	00000406 	br	80038a0 <memset+0x34>
 8003890:	3a3fffc4 	addi	r8,r7,-1
 8003894:	31800044 	addi	r6,r6,1
 8003898:	38003926 	beq	r7,zero,8003980 <memset+0x114>
 800389c:	400f883a 	mov	r7,r8
 80038a0:	18c00044 	addi	r3,r3,1
 80038a4:	32400005 	stb	r9,0(r6)
 80038a8:	1a0000cc 	andi	r8,r3,3
 80038ac:	403ff81e 	bne	r8,zero,8003890 <__alt_data_end+0xf8003890>
 80038b0:	010000c4 	movi	r4,3
 80038b4:	21c02d2e 	bgeu	r4,r7,800396c <memset+0x100>
 80038b8:	29003fcc 	andi	r4,r5,255
 80038bc:	200c923a 	slli	r6,r4,8
 80038c0:	3108b03a 	or	r4,r6,r4
 80038c4:	200c943a 	slli	r6,r4,16
 80038c8:	218cb03a 	or	r6,r4,r6
 80038cc:	010003c4 	movi	r4,15
 80038d0:	21c0182e 	bgeu	r4,r7,8003934 <memset+0xc8>
 80038d4:	3b3ffc04 	addi	r12,r7,-16
 80038d8:	6018d13a 	srli	r12,r12,4
 80038dc:	1a000104 	addi	r8,r3,4
 80038e0:	1ac00204 	addi	r11,r3,8
 80038e4:	6008913a 	slli	r4,r12,4
 80038e8:	1a800304 	addi	r10,r3,12
 80038ec:	1813883a 	mov	r9,r3
 80038f0:	21000504 	addi	r4,r4,20
 80038f4:	1909883a 	add	r4,r3,r4
 80038f8:	49800015 	stw	r6,0(r9)
 80038fc:	41800015 	stw	r6,0(r8)
 8003900:	59800015 	stw	r6,0(r11)
 8003904:	51800015 	stw	r6,0(r10)
 8003908:	42000404 	addi	r8,r8,16
 800390c:	4a400404 	addi	r9,r9,16
 8003910:	5ac00404 	addi	r11,r11,16
 8003914:	52800404 	addi	r10,r10,16
 8003918:	413ff71e 	bne	r8,r4,80038f8 <__alt_data_end+0xf80038f8>
 800391c:	63000044 	addi	r12,r12,1
 8003920:	6018913a 	slli	r12,r12,4
 8003924:	39c003cc 	andi	r7,r7,15
 8003928:	010000c4 	movi	r4,3
 800392c:	1b07883a 	add	r3,r3,r12
 8003930:	21c00e2e 	bgeu	r4,r7,800396c <memset+0x100>
 8003934:	1813883a 	mov	r9,r3
 8003938:	3811883a 	mov	r8,r7
 800393c:	010000c4 	movi	r4,3
 8003940:	49800015 	stw	r6,0(r9)
 8003944:	423fff04 	addi	r8,r8,-4
 8003948:	4a400104 	addi	r9,r9,4
 800394c:	223ffc36 	bltu	r4,r8,8003940 <__alt_data_end+0xf8003940>
 8003950:	393fff04 	addi	r4,r7,-4
 8003954:	2008d0ba 	srli	r4,r4,2
 8003958:	39c000cc 	andi	r7,r7,3
 800395c:	21000044 	addi	r4,r4,1
 8003960:	2109883a 	add	r4,r4,r4
 8003964:	2109883a 	add	r4,r4,r4
 8003968:	1907883a 	add	r3,r3,r4
 800396c:	38000526 	beq	r7,zero,8003984 <memset+0x118>
 8003970:	19cf883a 	add	r7,r3,r7
 8003974:	19400005 	stb	r5,0(r3)
 8003978:	18c00044 	addi	r3,r3,1
 800397c:	38fffd1e 	bne	r7,r3,8003974 <__alt_data_end+0xf8003974>
 8003980:	f800283a 	ret
 8003984:	f800283a 	ret
 8003988:	2007883a 	mov	r3,r4
 800398c:	300f883a 	mov	r7,r6
 8003990:	003fc706 	br	80038b0 <__alt_data_end+0xf80038b0>

08003994 <_printf_r>:
 8003994:	defffd04 	addi	sp,sp,-12
 8003998:	2805883a 	mov	r2,r5
 800399c:	dfc00015 	stw	ra,0(sp)
 80039a0:	d9800115 	stw	r6,4(sp)
 80039a4:	d9c00215 	stw	r7,8(sp)
 80039a8:	21400217 	ldw	r5,8(r4)
 80039ac:	d9c00104 	addi	r7,sp,4
 80039b0:	100d883a 	mov	r6,r2
 80039b4:	8003fc00 	call	8003fc0 <___vfprintf_internal_r>
 80039b8:	dfc00017 	ldw	ra,0(sp)
 80039bc:	dec00304 	addi	sp,sp,12
 80039c0:	f800283a 	ret

080039c4 <printf>:
 80039c4:	defffc04 	addi	sp,sp,-16
 80039c8:	dfc00015 	stw	ra,0(sp)
 80039cc:	d9400115 	stw	r5,4(sp)
 80039d0:	d9800215 	stw	r6,8(sp)
 80039d4:	d9c00315 	stw	r7,12(sp)
 80039d8:	00820074 	movhi	r2,2049
 80039dc:	1093ff04 	addi	r2,r2,20476
 80039e0:	10800017 	ldw	r2,0(r2)
 80039e4:	200b883a 	mov	r5,r4
 80039e8:	d9800104 	addi	r6,sp,4
 80039ec:	11000217 	ldw	r4,8(r2)
 80039f0:	80061b80 	call	80061b8 <__vfprintf_internal>
 80039f4:	dfc00017 	ldw	ra,0(sp)
 80039f8:	dec00404 	addi	sp,sp,16
 80039fc:	f800283a 	ret

08003a00 <_putchar_r>:
 8003a00:	21800217 	ldw	r6,8(r4)
 8003a04:	800a3481 	jmpi	800a348 <_putc_r>

08003a08 <putchar>:
 8003a08:	00820074 	movhi	r2,2049
 8003a0c:	1093ff04 	addi	r2,r2,20476
 8003a10:	200b883a 	mov	r5,r4
 8003a14:	11000017 	ldw	r4,0(r2)
 8003a18:	21800217 	ldw	r6,8(r4)
 8003a1c:	800a3481 	jmpi	800a348 <_putc_r>

08003a20 <_puts_r>:
 8003a20:	defff604 	addi	sp,sp,-40
 8003a24:	dc000715 	stw	r16,28(sp)
 8003a28:	2021883a 	mov	r16,r4
 8003a2c:	2809883a 	mov	r4,r5
 8003a30:	dc400815 	stw	r17,32(sp)
 8003a34:	dfc00915 	stw	ra,36(sp)
 8003a38:	2823883a 	mov	r17,r5
 8003a3c:	8003f280 	call	8003f28 <strlen>
 8003a40:	10c00044 	addi	r3,r2,1
 8003a44:	d8800115 	stw	r2,4(sp)
 8003a48:	00820074 	movhi	r2,2049
 8003a4c:	108c8604 	addi	r2,r2,12824
 8003a50:	d8800215 	stw	r2,8(sp)
 8003a54:	00800044 	movi	r2,1
 8003a58:	d8800315 	stw	r2,12(sp)
 8003a5c:	00800084 	movi	r2,2
 8003a60:	dc400015 	stw	r17,0(sp)
 8003a64:	d8c00615 	stw	r3,24(sp)
 8003a68:	dec00415 	stw	sp,16(sp)
 8003a6c:	d8800515 	stw	r2,20(sp)
 8003a70:	80000226 	beq	r16,zero,8003a7c <_puts_r+0x5c>
 8003a74:	80800e17 	ldw	r2,56(r16)
 8003a78:	10001426 	beq	r2,zero,8003acc <_puts_r+0xac>
 8003a7c:	81400217 	ldw	r5,8(r16)
 8003a80:	2880030b 	ldhu	r2,12(r5)
 8003a84:	10c8000c 	andi	r3,r2,8192
 8003a88:	1800061e 	bne	r3,zero,8003aa4 <_puts_r+0x84>
 8003a8c:	29001917 	ldw	r4,100(r5)
 8003a90:	00f7ffc4 	movi	r3,-8193
 8003a94:	10880014 	ori	r2,r2,8192
 8003a98:	20c6703a 	and	r3,r4,r3
 8003a9c:	2880030d 	sth	r2,12(r5)
 8003aa0:	28c01915 	stw	r3,100(r5)
 8003aa4:	d9800404 	addi	r6,sp,16
 8003aa8:	8009883a 	mov	r4,r16
 8003aac:	80086e80 	call	80086e8 <__sfvwrite_r>
 8003ab0:	1000091e 	bne	r2,zero,8003ad8 <_puts_r+0xb8>
 8003ab4:	00800284 	movi	r2,10
 8003ab8:	dfc00917 	ldw	ra,36(sp)
 8003abc:	dc400817 	ldw	r17,32(sp)
 8003ac0:	dc000717 	ldw	r16,28(sp)
 8003ac4:	dec00a04 	addi	sp,sp,40
 8003ac8:	f800283a 	ret
 8003acc:	8009883a 	mov	r4,r16
 8003ad0:	80082640 	call	8008264 <__sinit>
 8003ad4:	003fe906 	br	8003a7c <__alt_data_end+0xf8003a7c>
 8003ad8:	00bfffc4 	movi	r2,-1
 8003adc:	003ff606 	br	8003ab8 <__alt_data_end+0xf8003ab8>

08003ae0 <puts>:
 8003ae0:	00820074 	movhi	r2,2049
 8003ae4:	1093ff04 	addi	r2,r2,20476
 8003ae8:	200b883a 	mov	r5,r4
 8003aec:	11000017 	ldw	r4,0(r2)
 8003af0:	8003a201 	jmpi	8003a20 <_puts_r>

08003af4 <_sbrk_r>:
 8003af4:	defffd04 	addi	sp,sp,-12
 8003af8:	dc000015 	stw	r16,0(sp)
 8003afc:	04020074 	movhi	r16,2049
 8003b00:	dc400115 	stw	r17,4(sp)
 8003b04:	841ad904 	addi	r16,r16,27492
 8003b08:	2023883a 	mov	r17,r4
 8003b0c:	2809883a 	mov	r4,r5
 8003b10:	dfc00215 	stw	ra,8(sp)
 8003b14:	80000015 	stw	zero,0(r16)
 8003b18:	801072c0 	call	801072c <sbrk>
 8003b1c:	00ffffc4 	movi	r3,-1
 8003b20:	10c00526 	beq	r2,r3,8003b38 <_sbrk_r+0x44>
 8003b24:	dfc00217 	ldw	ra,8(sp)
 8003b28:	dc400117 	ldw	r17,4(sp)
 8003b2c:	dc000017 	ldw	r16,0(sp)
 8003b30:	dec00304 	addi	sp,sp,12
 8003b34:	f800283a 	ret
 8003b38:	80c00017 	ldw	r3,0(r16)
 8003b3c:	183ff926 	beq	r3,zero,8003b24 <__alt_data_end+0xf8003b24>
 8003b40:	88c00015 	stw	r3,0(r17)
 8003b44:	003ff706 	br	8003b24 <__alt_data_end+0xf8003b24>

08003b48 <_init_signal_r>:
 8003b48:	2080b717 	ldw	r2,732(r4)
 8003b4c:	10000226 	beq	r2,zero,8003b58 <_init_signal_r+0x10>
 8003b50:	0005883a 	mov	r2,zero
 8003b54:	f800283a 	ret
 8003b58:	defffe04 	addi	sp,sp,-8
 8003b5c:	01402004 	movi	r5,128
 8003b60:	dc000015 	stw	r16,0(sp)
 8003b64:	dfc00115 	stw	ra,4(sp)
 8003b68:	2021883a 	mov	r16,r4
 8003b6c:	80030600 	call	8003060 <_malloc_r>
 8003b70:	8080b715 	stw	r2,732(r16)
 8003b74:	10000d26 	beq	r2,zero,8003bac <_init_signal_r+0x64>
 8003b78:	0007883a 	mov	r3,zero
 8003b7c:	01002004 	movi	r4,128
 8003b80:	00000106 	br	8003b88 <_init_signal_r+0x40>
 8003b84:	8080b717 	ldw	r2,732(r16)
 8003b88:	10c5883a 	add	r2,r2,r3
 8003b8c:	10000015 	stw	zero,0(r2)
 8003b90:	18c00104 	addi	r3,r3,4
 8003b94:	193ffb1e 	bne	r3,r4,8003b84 <__alt_data_end+0xf8003b84>
 8003b98:	0005883a 	mov	r2,zero
 8003b9c:	dfc00117 	ldw	ra,4(sp)
 8003ba0:	dc000017 	ldw	r16,0(sp)
 8003ba4:	dec00204 	addi	sp,sp,8
 8003ba8:	f800283a 	ret
 8003bac:	00bfffc4 	movi	r2,-1
 8003bb0:	003ffa06 	br	8003b9c <__alt_data_end+0xf8003b9c>

08003bb4 <_signal_r>:
 8003bb4:	00c007c4 	movi	r3,31
 8003bb8:	19401536 	bltu	r3,r5,8003c10 <_signal_r+0x5c>
 8003bbc:	2080b717 	ldw	r2,732(r4)
 8003bc0:	defffc04 	addi	sp,sp,-16
 8003bc4:	dc800215 	stw	r18,8(sp)
 8003bc8:	dc400115 	stw	r17,4(sp)
 8003bcc:	dc000015 	stw	r16,0(sp)
 8003bd0:	dfc00315 	stw	ra,12(sp)
 8003bd4:	3023883a 	mov	r17,r6
 8003bd8:	2021883a 	mov	r16,r4
 8003bdc:	2825883a 	mov	r18,r5
 8003be0:	10000f26 	beq	r2,zero,8003c20 <_signal_r+0x6c>
 8003be4:	948b883a 	add	r5,r18,r18
 8003be8:	294b883a 	add	r5,r5,r5
 8003bec:	114b883a 	add	r5,r2,r5
 8003bf0:	28800017 	ldw	r2,0(r5)
 8003bf4:	2c400015 	stw	r17,0(r5)
 8003bf8:	dfc00317 	ldw	ra,12(sp)
 8003bfc:	dc800217 	ldw	r18,8(sp)
 8003c00:	dc400117 	ldw	r17,4(sp)
 8003c04:	dc000017 	ldw	r16,0(sp)
 8003c08:	dec00404 	addi	sp,sp,16
 8003c0c:	f800283a 	ret
 8003c10:	00c00584 	movi	r3,22
 8003c14:	20c00015 	stw	r3,0(r4)
 8003c18:	00bfffc4 	movi	r2,-1
 8003c1c:	f800283a 	ret
 8003c20:	8003b480 	call	8003b48 <_init_signal_r>
 8003c24:	1000021e 	bne	r2,zero,8003c30 <_signal_r+0x7c>
 8003c28:	8080b717 	ldw	r2,732(r16)
 8003c2c:	003fed06 	br	8003be4 <__alt_data_end+0xf8003be4>
 8003c30:	00bfffc4 	movi	r2,-1
 8003c34:	003ff006 	br	8003bf8 <__alt_data_end+0xf8003bf8>

08003c38 <_raise_r>:
 8003c38:	008007c4 	movi	r2,31
 8003c3c:	11402936 	bltu	r2,r5,8003ce4 <_raise_r+0xac>
 8003c40:	20c0b717 	ldw	r3,732(r4)
 8003c44:	defffd04 	addi	sp,sp,-12
 8003c48:	dc400115 	stw	r17,4(sp)
 8003c4c:	dc000015 	stw	r16,0(sp)
 8003c50:	dfc00215 	stw	ra,8(sp)
 8003c54:	2021883a 	mov	r16,r4
 8003c58:	2823883a 	mov	r17,r5
 8003c5c:	18001726 	beq	r3,zero,8003cbc <_raise_r+0x84>
 8003c60:	2945883a 	add	r2,r5,r5
 8003c64:	1085883a 	add	r2,r2,r2
 8003c68:	1887883a 	add	r3,r3,r2
 8003c6c:	19800017 	ldw	r6,0(r3)
 8003c70:	30001226 	beq	r6,zero,8003cbc <_raise_r+0x84>
 8003c74:	00800044 	movi	r2,1
 8003c78:	30800e26 	beq	r6,r2,8003cb4 <_raise_r+0x7c>
 8003c7c:	013fffc4 	movi	r4,-1
 8003c80:	31000926 	beq	r6,r4,8003ca8 <_raise_r+0x70>
 8003c84:	18000015 	stw	zero,0(r3)
 8003c88:	2809883a 	mov	r4,r5
 8003c8c:	303ee83a 	callr	r6
 8003c90:	0005883a 	mov	r2,zero
 8003c94:	dfc00217 	ldw	ra,8(sp)
 8003c98:	dc400117 	ldw	r17,4(sp)
 8003c9c:	dc000017 	ldw	r16,0(sp)
 8003ca0:	dec00304 	addi	sp,sp,12
 8003ca4:	f800283a 	ret
 8003ca8:	00c00584 	movi	r3,22
 8003cac:	80c00015 	stw	r3,0(r16)
 8003cb0:	003ff806 	br	8003c94 <__alt_data_end+0xf8003c94>
 8003cb4:	0005883a 	mov	r2,zero
 8003cb8:	003ff606 	br	8003c94 <__alt_data_end+0xf8003c94>
 8003cbc:	8009883a 	mov	r4,r16
 8003cc0:	8003e480 	call	8003e48 <_getpid_r>
 8003cc4:	880d883a 	mov	r6,r17
 8003cc8:	100b883a 	mov	r5,r2
 8003ccc:	8009883a 	mov	r4,r16
 8003cd0:	dfc00217 	ldw	ra,8(sp)
 8003cd4:	dc400117 	ldw	r17,4(sp)
 8003cd8:	dc000017 	ldw	r16,0(sp)
 8003cdc:	dec00304 	addi	sp,sp,12
 8003ce0:	8003dec1 	jmpi	8003dec <_kill_r>
 8003ce4:	00800584 	movi	r2,22
 8003ce8:	20800015 	stw	r2,0(r4)
 8003cec:	00bfffc4 	movi	r2,-1
 8003cf0:	f800283a 	ret

08003cf4 <__sigtramp_r>:
 8003cf4:	008007c4 	movi	r2,31
 8003cf8:	11402436 	bltu	r2,r5,8003d8c <__sigtramp_r+0x98>
 8003cfc:	20c0b717 	ldw	r3,732(r4)
 8003d00:	defffd04 	addi	sp,sp,-12
 8003d04:	dc400115 	stw	r17,4(sp)
 8003d08:	dc000015 	stw	r16,0(sp)
 8003d0c:	dfc00215 	stw	ra,8(sp)
 8003d10:	2021883a 	mov	r16,r4
 8003d14:	2823883a 	mov	r17,r5
 8003d18:	18001826 	beq	r3,zero,8003d7c <__sigtramp_r+0x88>
 8003d1c:	8c45883a 	add	r2,r17,r17
 8003d20:	1085883a 	add	r2,r2,r2
 8003d24:	1885883a 	add	r2,r3,r2
 8003d28:	10c00017 	ldw	r3,0(r2)
 8003d2c:	18001126 	beq	r3,zero,8003d74 <__sigtramp_r+0x80>
 8003d30:	013fffc4 	movi	r4,-1
 8003d34:	19000d26 	beq	r3,r4,8003d6c <__sigtramp_r+0x78>
 8003d38:	01000044 	movi	r4,1
 8003d3c:	19000926 	beq	r3,r4,8003d64 <__sigtramp_r+0x70>
 8003d40:	10000015 	stw	zero,0(r2)
 8003d44:	8809883a 	mov	r4,r17
 8003d48:	183ee83a 	callr	r3
 8003d4c:	0005883a 	mov	r2,zero
 8003d50:	dfc00217 	ldw	ra,8(sp)
 8003d54:	dc400117 	ldw	r17,4(sp)
 8003d58:	dc000017 	ldw	r16,0(sp)
 8003d5c:	dec00304 	addi	sp,sp,12
 8003d60:	f800283a 	ret
 8003d64:	008000c4 	movi	r2,3
 8003d68:	003ff906 	br	8003d50 <__alt_data_end+0xf8003d50>
 8003d6c:	00800084 	movi	r2,2
 8003d70:	003ff706 	br	8003d50 <__alt_data_end+0xf8003d50>
 8003d74:	00800044 	movi	r2,1
 8003d78:	003ff506 	br	8003d50 <__alt_data_end+0xf8003d50>
 8003d7c:	8003b480 	call	8003b48 <_init_signal_r>
 8003d80:	1000041e 	bne	r2,zero,8003d94 <__sigtramp_r+0xa0>
 8003d84:	80c0b717 	ldw	r3,732(r16)
 8003d88:	003fe406 	br	8003d1c <__alt_data_end+0xf8003d1c>
 8003d8c:	00bfffc4 	movi	r2,-1
 8003d90:	f800283a 	ret
 8003d94:	00bfffc4 	movi	r2,-1
 8003d98:	003fed06 	br	8003d50 <__alt_data_end+0xf8003d50>

08003d9c <raise>:
 8003d9c:	00820074 	movhi	r2,2049
 8003da0:	1093ff04 	addi	r2,r2,20476
 8003da4:	200b883a 	mov	r5,r4
 8003da8:	11000017 	ldw	r4,0(r2)
 8003dac:	8003c381 	jmpi	8003c38 <_raise_r>

08003db0 <signal>:
 8003db0:	00820074 	movhi	r2,2049
 8003db4:	1093ff04 	addi	r2,r2,20476
 8003db8:	280d883a 	mov	r6,r5
 8003dbc:	200b883a 	mov	r5,r4
 8003dc0:	11000017 	ldw	r4,0(r2)
 8003dc4:	8003bb41 	jmpi	8003bb4 <_signal_r>

08003dc8 <_init_signal>:
 8003dc8:	00820074 	movhi	r2,2049
 8003dcc:	1093ff04 	addi	r2,r2,20476
 8003dd0:	11000017 	ldw	r4,0(r2)
 8003dd4:	8003b481 	jmpi	8003b48 <_init_signal_r>

08003dd8 <__sigtramp>:
 8003dd8:	00820074 	movhi	r2,2049
 8003ddc:	1093ff04 	addi	r2,r2,20476
 8003de0:	200b883a 	mov	r5,r4
 8003de4:	11000017 	ldw	r4,0(r2)
 8003de8:	8003cf41 	jmpi	8003cf4 <__sigtramp_r>

08003dec <_kill_r>:
 8003dec:	defffd04 	addi	sp,sp,-12
 8003df0:	2805883a 	mov	r2,r5
 8003df4:	dc000015 	stw	r16,0(sp)
 8003df8:	04020074 	movhi	r16,2049
 8003dfc:	dc400115 	stw	r17,4(sp)
 8003e00:	841ad904 	addi	r16,r16,27492
 8003e04:	2023883a 	mov	r17,r4
 8003e08:	300b883a 	mov	r5,r6
 8003e0c:	1009883a 	mov	r4,r2
 8003e10:	dfc00215 	stw	ra,8(sp)
 8003e14:	80000015 	stw	zero,0(r16)
 8003e18:	80101a00 	call	80101a0 <kill>
 8003e1c:	00ffffc4 	movi	r3,-1
 8003e20:	10c00526 	beq	r2,r3,8003e38 <_kill_r+0x4c>
 8003e24:	dfc00217 	ldw	ra,8(sp)
 8003e28:	dc400117 	ldw	r17,4(sp)
 8003e2c:	dc000017 	ldw	r16,0(sp)
 8003e30:	dec00304 	addi	sp,sp,12
 8003e34:	f800283a 	ret
 8003e38:	80c00017 	ldw	r3,0(r16)
 8003e3c:	183ff926 	beq	r3,zero,8003e24 <__alt_data_end+0xf8003e24>
 8003e40:	88c00015 	stw	r3,0(r17)
 8003e44:	003ff706 	br	8003e24 <__alt_data_end+0xf8003e24>

08003e48 <_getpid_r>:
 8003e48:	80100641 	jmpi	8010064 <getpid>

08003e4c <strcmp>:
 8003e4c:	2144b03a 	or	r2,r4,r5
 8003e50:	108000cc 	andi	r2,r2,3
 8003e54:	1000171e 	bne	r2,zero,8003eb4 <strcmp+0x68>
 8003e58:	20800017 	ldw	r2,0(r4)
 8003e5c:	28c00017 	ldw	r3,0(r5)
 8003e60:	10c0141e 	bne	r2,r3,8003eb4 <strcmp+0x68>
 8003e64:	027fbff4 	movhi	r9,65279
 8003e68:	4a7fbfc4 	addi	r9,r9,-257
 8003e6c:	0086303a 	nor	r3,zero,r2
 8003e70:	02202074 	movhi	r8,32897
 8003e74:	1245883a 	add	r2,r2,r9
 8003e78:	42202004 	addi	r8,r8,-32640
 8003e7c:	10c4703a 	and	r2,r2,r3
 8003e80:	1204703a 	and	r2,r2,r8
 8003e84:	10000226 	beq	r2,zero,8003e90 <strcmp+0x44>
 8003e88:	00002306 	br	8003f18 <strcmp+0xcc>
 8003e8c:	1000221e 	bne	r2,zero,8003f18 <strcmp+0xcc>
 8003e90:	21000104 	addi	r4,r4,4
 8003e94:	20c00017 	ldw	r3,0(r4)
 8003e98:	29400104 	addi	r5,r5,4
 8003e9c:	29800017 	ldw	r6,0(r5)
 8003ea0:	1a4f883a 	add	r7,r3,r9
 8003ea4:	00c4303a 	nor	r2,zero,r3
 8003ea8:	3884703a 	and	r2,r7,r2
 8003eac:	1204703a 	and	r2,r2,r8
 8003eb0:	19bff626 	beq	r3,r6,8003e8c <__alt_data_end+0xf8003e8c>
 8003eb4:	20800003 	ldbu	r2,0(r4)
 8003eb8:	10c03fcc 	andi	r3,r2,255
 8003ebc:	18c0201c 	xori	r3,r3,128
 8003ec0:	18ffe004 	addi	r3,r3,-128
 8003ec4:	18000c26 	beq	r3,zero,8003ef8 <strcmp+0xac>
 8003ec8:	29800007 	ldb	r6,0(r5)
 8003ecc:	19800326 	beq	r3,r6,8003edc <strcmp+0x90>
 8003ed0:	00001306 	br	8003f20 <strcmp+0xd4>
 8003ed4:	29800007 	ldb	r6,0(r5)
 8003ed8:	11800b1e 	bne	r2,r6,8003f08 <strcmp+0xbc>
 8003edc:	21000044 	addi	r4,r4,1
 8003ee0:	20c00003 	ldbu	r3,0(r4)
 8003ee4:	29400044 	addi	r5,r5,1
 8003ee8:	18803fcc 	andi	r2,r3,255
 8003eec:	1080201c 	xori	r2,r2,128
 8003ef0:	10bfe004 	addi	r2,r2,-128
 8003ef4:	103ff71e 	bne	r2,zero,8003ed4 <__alt_data_end+0xf8003ed4>
 8003ef8:	0007883a 	mov	r3,zero
 8003efc:	28800003 	ldbu	r2,0(r5)
 8003f00:	1885c83a 	sub	r2,r3,r2
 8003f04:	f800283a 	ret
 8003f08:	28800003 	ldbu	r2,0(r5)
 8003f0c:	18c03fcc 	andi	r3,r3,255
 8003f10:	1885c83a 	sub	r2,r3,r2
 8003f14:	f800283a 	ret
 8003f18:	0005883a 	mov	r2,zero
 8003f1c:	f800283a 	ret
 8003f20:	10c03fcc 	andi	r3,r2,255
 8003f24:	003ff506 	br	8003efc <__alt_data_end+0xf8003efc>

08003f28 <strlen>:
 8003f28:	208000cc 	andi	r2,r4,3
 8003f2c:	10002026 	beq	r2,zero,8003fb0 <strlen+0x88>
 8003f30:	20800007 	ldb	r2,0(r4)
 8003f34:	10002026 	beq	r2,zero,8003fb8 <strlen+0x90>
 8003f38:	2005883a 	mov	r2,r4
 8003f3c:	00000206 	br	8003f48 <strlen+0x20>
 8003f40:	10c00007 	ldb	r3,0(r2)
 8003f44:	18001826 	beq	r3,zero,8003fa8 <strlen+0x80>
 8003f48:	10800044 	addi	r2,r2,1
 8003f4c:	10c000cc 	andi	r3,r2,3
 8003f50:	183ffb1e 	bne	r3,zero,8003f40 <__alt_data_end+0xf8003f40>
 8003f54:	10c00017 	ldw	r3,0(r2)
 8003f58:	01ffbff4 	movhi	r7,65279
 8003f5c:	39ffbfc4 	addi	r7,r7,-257
 8003f60:	00ca303a 	nor	r5,zero,r3
 8003f64:	01a02074 	movhi	r6,32897
 8003f68:	19c7883a 	add	r3,r3,r7
 8003f6c:	31a02004 	addi	r6,r6,-32640
 8003f70:	1946703a 	and	r3,r3,r5
 8003f74:	1986703a 	and	r3,r3,r6
 8003f78:	1800091e 	bne	r3,zero,8003fa0 <strlen+0x78>
 8003f7c:	10800104 	addi	r2,r2,4
 8003f80:	10c00017 	ldw	r3,0(r2)
 8003f84:	19cb883a 	add	r5,r3,r7
 8003f88:	00c6303a 	nor	r3,zero,r3
 8003f8c:	28c6703a 	and	r3,r5,r3
 8003f90:	1986703a 	and	r3,r3,r6
 8003f94:	183ff926 	beq	r3,zero,8003f7c <__alt_data_end+0xf8003f7c>
 8003f98:	00000106 	br	8003fa0 <strlen+0x78>
 8003f9c:	10800044 	addi	r2,r2,1
 8003fa0:	10c00007 	ldb	r3,0(r2)
 8003fa4:	183ffd1e 	bne	r3,zero,8003f9c <__alt_data_end+0xf8003f9c>
 8003fa8:	1105c83a 	sub	r2,r2,r4
 8003fac:	f800283a 	ret
 8003fb0:	2005883a 	mov	r2,r4
 8003fb4:	003fe706 	br	8003f54 <__alt_data_end+0xf8003f54>
 8003fb8:	0005883a 	mov	r2,zero
 8003fbc:	f800283a 	ret

08003fc0 <___vfprintf_internal_r>:
 8003fc0:	deffb804 	addi	sp,sp,-288
 8003fc4:	dfc04715 	stw	ra,284(sp)
 8003fc8:	ddc04515 	stw	r23,276(sp)
 8003fcc:	dd404315 	stw	r21,268(sp)
 8003fd0:	d9002c15 	stw	r4,176(sp)
 8003fd4:	282f883a 	mov	r23,r5
 8003fd8:	302b883a 	mov	r21,r6
 8003fdc:	d9c02d15 	stw	r7,180(sp)
 8003fe0:	df004615 	stw	fp,280(sp)
 8003fe4:	dd804415 	stw	r22,272(sp)
 8003fe8:	dd004215 	stw	r20,264(sp)
 8003fec:	dcc04115 	stw	r19,260(sp)
 8003ff0:	dc804015 	stw	r18,256(sp)
 8003ff4:	dc403f15 	stw	r17,252(sp)
 8003ff8:	dc003e15 	stw	r16,248(sp)
 8003ffc:	8008dd80 	call	8008dd8 <_localeconv_r>
 8004000:	10800017 	ldw	r2,0(r2)
 8004004:	1009883a 	mov	r4,r2
 8004008:	d8803415 	stw	r2,208(sp)
 800400c:	8003f280 	call	8003f28 <strlen>
 8004010:	d8803715 	stw	r2,220(sp)
 8004014:	d8802c17 	ldw	r2,176(sp)
 8004018:	10000226 	beq	r2,zero,8004024 <___vfprintf_internal_r+0x64>
 800401c:	10800e17 	ldw	r2,56(r2)
 8004020:	1000f926 	beq	r2,zero,8004408 <___vfprintf_internal_r+0x448>
 8004024:	b880030b 	ldhu	r2,12(r23)
 8004028:	10c8000c 	andi	r3,r2,8192
 800402c:	1800061e 	bne	r3,zero,8004048 <___vfprintf_internal_r+0x88>
 8004030:	b9001917 	ldw	r4,100(r23)
 8004034:	00f7ffc4 	movi	r3,-8193
 8004038:	10880014 	ori	r2,r2,8192
 800403c:	20c6703a 	and	r3,r4,r3
 8004040:	b880030d 	sth	r2,12(r23)
 8004044:	b8c01915 	stw	r3,100(r23)
 8004048:	10c0020c 	andi	r3,r2,8
 800404c:	1800c126 	beq	r3,zero,8004354 <___vfprintf_internal_r+0x394>
 8004050:	b8c00417 	ldw	r3,16(r23)
 8004054:	1800bf26 	beq	r3,zero,8004354 <___vfprintf_internal_r+0x394>
 8004058:	1080068c 	andi	r2,r2,26
 800405c:	00c00284 	movi	r3,10
 8004060:	10c0c426 	beq	r2,r3,8004374 <___vfprintf_internal_r+0x3b4>
 8004064:	d8c00404 	addi	r3,sp,16
 8004068:	05020074 	movhi	r20,2049
 800406c:	d9001e04 	addi	r4,sp,120
 8004070:	a50c9784 	addi	r20,r20,12894
 8004074:	d8c01e15 	stw	r3,120(sp)
 8004078:	d8002015 	stw	zero,128(sp)
 800407c:	d8001f15 	stw	zero,124(sp)
 8004080:	d8003315 	stw	zero,204(sp)
 8004084:	d8003615 	stw	zero,216(sp)
 8004088:	d8003815 	stw	zero,224(sp)
 800408c:	1811883a 	mov	r8,r3
 8004090:	d8003915 	stw	zero,228(sp)
 8004094:	d8003a15 	stw	zero,232(sp)
 8004098:	d8002f15 	stw	zero,188(sp)
 800409c:	d9002815 	stw	r4,160(sp)
 80040a0:	a8800007 	ldb	r2,0(r21)
 80040a4:	10027b26 	beq	r2,zero,8004a94 <___vfprintf_internal_r+0xad4>
 80040a8:	00c00944 	movi	r3,37
 80040ac:	a821883a 	mov	r16,r21
 80040b0:	10c0021e 	bne	r2,r3,80040bc <___vfprintf_internal_r+0xfc>
 80040b4:	00001406 	br	8004108 <___vfprintf_internal_r+0x148>
 80040b8:	10c00326 	beq	r2,r3,80040c8 <___vfprintf_internal_r+0x108>
 80040bc:	84000044 	addi	r16,r16,1
 80040c0:	80800007 	ldb	r2,0(r16)
 80040c4:	103ffc1e 	bne	r2,zero,80040b8 <__alt_data_end+0xf80040b8>
 80040c8:	8563c83a 	sub	r17,r16,r21
 80040cc:	88000e26 	beq	r17,zero,8004108 <___vfprintf_internal_r+0x148>
 80040d0:	d8c02017 	ldw	r3,128(sp)
 80040d4:	d8801f17 	ldw	r2,124(sp)
 80040d8:	45400015 	stw	r21,0(r8)
 80040dc:	1c47883a 	add	r3,r3,r17
 80040e0:	10800044 	addi	r2,r2,1
 80040e4:	d8c02015 	stw	r3,128(sp)
 80040e8:	44400115 	stw	r17,4(r8)
 80040ec:	d8801f15 	stw	r2,124(sp)
 80040f0:	00c001c4 	movi	r3,7
 80040f4:	1880a716 	blt	r3,r2,8004394 <___vfprintf_internal_r+0x3d4>
 80040f8:	42000204 	addi	r8,r8,8
 80040fc:	d9402f17 	ldw	r5,188(sp)
 8004100:	2c4b883a 	add	r5,r5,r17
 8004104:	d9402f15 	stw	r5,188(sp)
 8004108:	80800007 	ldb	r2,0(r16)
 800410c:	1000a826 	beq	r2,zero,80043b0 <___vfprintf_internal_r+0x3f0>
 8004110:	84400047 	ldb	r17,1(r16)
 8004114:	00bfffc4 	movi	r2,-1
 8004118:	85400044 	addi	r21,r16,1
 800411c:	d8002785 	stb	zero,158(sp)
 8004120:	0007883a 	mov	r3,zero
 8004124:	000f883a 	mov	r7,zero
 8004128:	d8802915 	stw	r2,164(sp)
 800412c:	d8003115 	stw	zero,196(sp)
 8004130:	0025883a 	mov	r18,zero
 8004134:	01401604 	movi	r5,88
 8004138:	01800244 	movi	r6,9
 800413c:	02800a84 	movi	r10,42
 8004140:	02401b04 	movi	r9,108
 8004144:	ad400044 	addi	r21,r21,1
 8004148:	88bff804 	addi	r2,r17,-32
 800414c:	28830436 	bltu	r5,r2,8004d60 <___vfprintf_internal_r+0xda0>
 8004150:	100490ba 	slli	r2,r2,2
 8004154:	01020034 	movhi	r4,2048
 8004158:	21105a04 	addi	r4,r4,16744
 800415c:	1105883a 	add	r2,r2,r4
 8004160:	10800017 	ldw	r2,0(r2)
 8004164:	1000683a 	jmp	r2
 8004168:	08004c80 	call	8004c8 <__alt_mem_sdram-0x77ffb38>
 800416c:	08004d60 	cmpeqi	zero,at,309
 8004170:	08004d60 	cmpeqi	zero,at,309
 8004174:	08004ca0 	cmpeqi	zero,at,306
 8004178:	08004d60 	cmpeqi	zero,at,309
 800417c:	08004d60 	cmpeqi	zero,at,309
 8004180:	08004d60 	cmpeqi	zero,at,309
 8004184:	08004d60 	cmpeqi	zero,at,309
 8004188:	08004d60 	cmpeqi	zero,at,309
 800418c:	08004d60 	cmpeqi	zero,at,309
 8004190:	08004414 	ori	zero,at,272
 8004194:	08004bbc 	xorhi	zero,at,302
 8004198:	08004d60 	cmpeqi	zero,at,309
 800419c:	080042dc 	xori	zero,at,267
 80041a0:	0800443c 	xorhi	zero,at,272
 80041a4:	08004d60 	cmpeqi	zero,at,309
 80041a8:	0800447c 	xorhi	zero,at,273
 80041ac:	08004488 	cmpgei	zero,at,274
 80041b0:	08004488 	cmpgei	zero,at,274
 80041b4:	08004488 	cmpgei	zero,at,274
 80041b8:	08004488 	cmpgei	zero,at,274
 80041bc:	08004488 	cmpgei	zero,at,274
 80041c0:	08004488 	cmpgei	zero,at,274
 80041c4:	08004488 	cmpgei	zero,at,274
 80041c8:	08004488 	cmpgei	zero,at,274
 80041cc:	08004488 	cmpgei	zero,at,274
 80041d0:	08004d60 	cmpeqi	zero,at,309
 80041d4:	08004d60 	cmpeqi	zero,at,309
 80041d8:	08004d60 	cmpeqi	zero,at,309
 80041dc:	08004d60 	cmpeqi	zero,at,309
 80041e0:	08004d60 	cmpeqi	zero,at,309
 80041e4:	08004d60 	cmpeqi	zero,at,309
 80041e8:	08004d60 	cmpeqi	zero,at,309
 80041ec:	08004d60 	cmpeqi	zero,at,309
 80041f0:	08004d60 	cmpeqi	zero,at,309
 80041f4:	08004d60 	cmpeqi	zero,at,309
 80041f8:	080044bc 	xorhi	zero,at,274
 80041fc:	08004578 	rdprs	zero,at,277
 8004200:	08004d60 	cmpeqi	zero,at,309
 8004204:	08004578 	rdprs	zero,at,277
 8004208:	08004d60 	cmpeqi	zero,at,309
 800420c:	08004d60 	cmpeqi	zero,at,309
 8004210:	08004d60 	cmpeqi	zero,at,309
 8004214:	08004d60 	cmpeqi	zero,at,309
 8004218:	08004618 	cmpnei	zero,at,280
 800421c:	08004d60 	cmpeqi	zero,at,309
 8004220:	08004d60 	cmpeqi	zero,at,309
 8004224:	08004624 	muli	zero,at,280
 8004228:	08004d60 	cmpeqi	zero,at,309
 800422c:	08004d60 	cmpeqi	zero,at,309
 8004230:	08004d60 	cmpeqi	zero,at,309
 8004234:	08004d60 	cmpeqi	zero,at,309
 8004238:	08004d60 	cmpeqi	zero,at,309
 800423c:	08004a9c 	xori	zero,at,298
 8004240:	08004d60 	cmpeqi	zero,at,309
 8004244:	08004d60 	cmpeqi	zero,at,309
 8004248:	08004afc 	xorhi	zero,at,299
 800424c:	08004d60 	cmpeqi	zero,at,309
 8004250:	08004d60 	cmpeqi	zero,at,309
 8004254:	08004d60 	cmpeqi	zero,at,309
 8004258:	08004d60 	cmpeqi	zero,at,309
 800425c:	08004d60 	cmpeqi	zero,at,309
 8004260:	08004d60 	cmpeqi	zero,at,309
 8004264:	08004d60 	cmpeqi	zero,at,309
 8004268:	08004d60 	cmpeqi	zero,at,309
 800426c:	08004d60 	cmpeqi	zero,at,309
 8004270:	08004d60 	cmpeqi	zero,at,309
 8004274:	08004d0c 	andi	zero,at,308
 8004278:	08004cac 	andhi	zero,at,306
 800427c:	08004578 	rdprs	zero,at,277
 8004280:	08004578 	rdprs	zero,at,277
 8004284:	08004578 	rdprs	zero,at,277
 8004288:	08004cbc 	xorhi	zero,at,306
 800428c:	08004cac 	andhi	zero,at,306
 8004290:	08004d60 	cmpeqi	zero,at,309
 8004294:	08004d60 	cmpeqi	zero,at,309
 8004298:	08004cc8 	cmpgei	zero,at,307
 800429c:	08004d60 	cmpeqi	zero,at,309
 80042a0:	08004cd8 	cmpnei	zero,at,307
 80042a4:	08004bac 	andhi	zero,at,302
 80042a8:	080042e8 	cmpgeui	zero,at,267
 80042ac:	08004bcc 	andi	zero,at,303
 80042b0:	08004d60 	cmpeqi	zero,at,309
 80042b4:	08004bd8 	cmpnei	zero,at,303
 80042b8:	08004d60 	cmpeqi	zero,at,309
 80042bc:	08004c34 	orhi	zero,at,304
 80042c0:	08004d60 	cmpeqi	zero,at,309
 80042c4:	08004d60 	cmpeqi	zero,at,309
 80042c8:	08004c44 	addi	zero,at,305
 80042cc:	d9003117 	ldw	r4,196(sp)
 80042d0:	d8802d15 	stw	r2,180(sp)
 80042d4:	0109c83a 	sub	r4,zero,r4
 80042d8:	d9003115 	stw	r4,196(sp)
 80042dc:	94800114 	ori	r18,r18,4
 80042e0:	ac400007 	ldb	r17,0(r21)
 80042e4:	003f9706 	br	8004144 <__alt_data_end+0xf8004144>
 80042e8:	00800c04 	movi	r2,48
 80042ec:	d9002d17 	ldw	r4,180(sp)
 80042f0:	d9402917 	ldw	r5,164(sp)
 80042f4:	d8802705 	stb	r2,156(sp)
 80042f8:	00801e04 	movi	r2,120
 80042fc:	d8802745 	stb	r2,157(sp)
 8004300:	d8002785 	stb	zero,158(sp)
 8004304:	20c00104 	addi	r3,r4,4
 8004308:	24c00017 	ldw	r19,0(r4)
 800430c:	002d883a 	mov	r22,zero
 8004310:	90800094 	ori	r2,r18,2
 8004314:	28029a16 	blt	r5,zero,8004d80 <___vfprintf_internal_r+0xdc0>
 8004318:	00bfdfc4 	movi	r2,-129
 800431c:	90a4703a 	and	r18,r18,r2
 8004320:	d8c02d15 	stw	r3,180(sp)
 8004324:	94800094 	ori	r18,r18,2
 8004328:	9802871e 	bne	r19,zero,8004d48 <___vfprintf_internal_r+0xd88>
 800432c:	00820074 	movhi	r2,2049
 8004330:	108c9004 	addi	r2,r2,12864
 8004334:	d8803915 	stw	r2,228(sp)
 8004338:	04401e04 	movi	r17,120
 800433c:	d8802917 	ldw	r2,164(sp)
 8004340:	0039883a 	mov	fp,zero
 8004344:	1001e926 	beq	r2,zero,8004aec <___vfprintf_internal_r+0xb2c>
 8004348:	0027883a 	mov	r19,zero
 800434c:	002d883a 	mov	r22,zero
 8004350:	00020506 	br	8004b68 <___vfprintf_internal_r+0xba8>
 8004354:	d9002c17 	ldw	r4,176(sp)
 8004358:	b80b883a 	mov	r5,r23
 800435c:	80062900 	call	8006290 <__swsetup_r>
 8004360:	1005ac1e 	bne	r2,zero,8005a14 <___vfprintf_internal_r+0x1a54>
 8004364:	b880030b 	ldhu	r2,12(r23)
 8004368:	00c00284 	movi	r3,10
 800436c:	1080068c 	andi	r2,r2,26
 8004370:	10ff3c1e 	bne	r2,r3,8004064 <__alt_data_end+0xf8004064>
 8004374:	b880038f 	ldh	r2,14(r23)
 8004378:	103f3a16 	blt	r2,zero,8004064 <__alt_data_end+0xf8004064>
 800437c:	d9c02d17 	ldw	r7,180(sp)
 8004380:	d9002c17 	ldw	r4,176(sp)
 8004384:	a80d883a 	mov	r6,r21
 8004388:	b80b883a 	mov	r5,r23
 800438c:	80061d40 	call	80061d4 <__sbprintf>
 8004390:	00001106 	br	80043d8 <___vfprintf_internal_r+0x418>
 8004394:	d9002c17 	ldw	r4,176(sp)
 8004398:	d9801e04 	addi	r6,sp,120
 800439c:	b80b883a 	mov	r5,r23
 80043a0:	800acc00 	call	800acc0 <__sprint_r>
 80043a4:	1000081e 	bne	r2,zero,80043c8 <___vfprintf_internal_r+0x408>
 80043a8:	da000404 	addi	r8,sp,16
 80043ac:	003f5306 	br	80040fc <__alt_data_end+0xf80040fc>
 80043b0:	d8802017 	ldw	r2,128(sp)
 80043b4:	10000426 	beq	r2,zero,80043c8 <___vfprintf_internal_r+0x408>
 80043b8:	d9002c17 	ldw	r4,176(sp)
 80043bc:	d9801e04 	addi	r6,sp,120
 80043c0:	b80b883a 	mov	r5,r23
 80043c4:	800acc00 	call	800acc0 <__sprint_r>
 80043c8:	b880030b 	ldhu	r2,12(r23)
 80043cc:	1080100c 	andi	r2,r2,64
 80043d0:	1005901e 	bne	r2,zero,8005a14 <___vfprintf_internal_r+0x1a54>
 80043d4:	d8802f17 	ldw	r2,188(sp)
 80043d8:	dfc04717 	ldw	ra,284(sp)
 80043dc:	df004617 	ldw	fp,280(sp)
 80043e0:	ddc04517 	ldw	r23,276(sp)
 80043e4:	dd804417 	ldw	r22,272(sp)
 80043e8:	dd404317 	ldw	r21,268(sp)
 80043ec:	dd004217 	ldw	r20,264(sp)
 80043f0:	dcc04117 	ldw	r19,260(sp)
 80043f4:	dc804017 	ldw	r18,256(sp)
 80043f8:	dc403f17 	ldw	r17,252(sp)
 80043fc:	dc003e17 	ldw	r16,248(sp)
 8004400:	dec04804 	addi	sp,sp,288
 8004404:	f800283a 	ret
 8004408:	d9002c17 	ldw	r4,176(sp)
 800440c:	80082640 	call	8008264 <__sinit>
 8004410:	003f0406 	br	8004024 <__alt_data_end+0xf8004024>
 8004414:	d8802d17 	ldw	r2,180(sp)
 8004418:	d9002d17 	ldw	r4,180(sp)
 800441c:	10800017 	ldw	r2,0(r2)
 8004420:	d8803115 	stw	r2,196(sp)
 8004424:	20800104 	addi	r2,r4,4
 8004428:	d9003117 	ldw	r4,196(sp)
 800442c:	203fa716 	blt	r4,zero,80042cc <__alt_data_end+0xf80042cc>
 8004430:	d8802d15 	stw	r2,180(sp)
 8004434:	ac400007 	ldb	r17,0(r21)
 8004438:	003f4206 	br	8004144 <__alt_data_end+0xf8004144>
 800443c:	ac400007 	ldb	r17,0(r21)
 8004440:	aac00044 	addi	r11,r21,1
 8004444:	8a872826 	beq	r17,r10,80060e8 <___vfprintf_internal_r+0x2128>
 8004448:	88bff404 	addi	r2,r17,-48
 800444c:	0009883a 	mov	r4,zero
 8004450:	30867d36 	bltu	r6,r2,8005e48 <___vfprintf_internal_r+0x1e88>
 8004454:	5c400007 	ldb	r17,0(r11)
 8004458:	210002a4 	muli	r4,r4,10
 800445c:	5d400044 	addi	r21,r11,1
 8004460:	a817883a 	mov	r11,r21
 8004464:	2089883a 	add	r4,r4,r2
 8004468:	88bff404 	addi	r2,r17,-48
 800446c:	30bff92e 	bgeu	r6,r2,8004454 <__alt_data_end+0xf8004454>
 8004470:	2005c916 	blt	r4,zero,8005b98 <___vfprintf_internal_r+0x1bd8>
 8004474:	d9002915 	stw	r4,164(sp)
 8004478:	003f3306 	br	8004148 <__alt_data_end+0xf8004148>
 800447c:	94802014 	ori	r18,r18,128
 8004480:	ac400007 	ldb	r17,0(r21)
 8004484:	003f2f06 	br	8004144 <__alt_data_end+0xf8004144>
 8004488:	a809883a 	mov	r4,r21
 800448c:	d8003115 	stw	zero,196(sp)
 8004490:	88bff404 	addi	r2,r17,-48
 8004494:	0017883a 	mov	r11,zero
 8004498:	24400007 	ldb	r17,0(r4)
 800449c:	5ac002a4 	muli	r11,r11,10
 80044a0:	ad400044 	addi	r21,r21,1
 80044a4:	a809883a 	mov	r4,r21
 80044a8:	12d7883a 	add	r11,r2,r11
 80044ac:	88bff404 	addi	r2,r17,-48
 80044b0:	30bff92e 	bgeu	r6,r2,8004498 <__alt_data_end+0xf8004498>
 80044b4:	dac03115 	stw	r11,196(sp)
 80044b8:	003f2306 	br	8004148 <__alt_data_end+0xf8004148>
 80044bc:	18c03fcc 	andi	r3,r3,255
 80044c0:	18072b1e 	bne	r3,zero,8006170 <___vfprintf_internal_r+0x21b0>
 80044c4:	94800414 	ori	r18,r18,16
 80044c8:	9080080c 	andi	r2,r18,32
 80044cc:	10037b26 	beq	r2,zero,80052bc <___vfprintf_internal_r+0x12fc>
 80044d0:	d9402d17 	ldw	r5,180(sp)
 80044d4:	28800117 	ldw	r2,4(r5)
 80044d8:	2cc00017 	ldw	r19,0(r5)
 80044dc:	29400204 	addi	r5,r5,8
 80044e0:	d9402d15 	stw	r5,180(sp)
 80044e4:	102d883a 	mov	r22,r2
 80044e8:	10044b16 	blt	r2,zero,8005618 <___vfprintf_internal_r+0x1658>
 80044ec:	d9402917 	ldw	r5,164(sp)
 80044f0:	df002783 	ldbu	fp,158(sp)
 80044f4:	2803bc16 	blt	r5,zero,80053e8 <___vfprintf_internal_r+0x1428>
 80044f8:	00ffdfc4 	movi	r3,-129
 80044fc:	9d84b03a 	or	r2,r19,r22
 8004500:	90e4703a 	and	r18,r18,r3
 8004504:	10017726 	beq	r2,zero,8004ae4 <___vfprintf_internal_r+0xb24>
 8004508:	b0038326 	beq	r22,zero,8005318 <___vfprintf_internal_r+0x1358>
 800450c:	dc402a15 	stw	r17,168(sp)
 8004510:	dc001e04 	addi	r16,sp,120
 8004514:	b023883a 	mov	r17,r22
 8004518:	402d883a 	mov	r22,r8
 800451c:	9809883a 	mov	r4,r19
 8004520:	880b883a 	mov	r5,r17
 8004524:	01800284 	movi	r6,10
 8004528:	000f883a 	mov	r7,zero
 800452c:	800d0b80 	call	800d0b8 <__umoddi3>
 8004530:	10800c04 	addi	r2,r2,48
 8004534:	843fffc4 	addi	r16,r16,-1
 8004538:	9809883a 	mov	r4,r19
 800453c:	880b883a 	mov	r5,r17
 8004540:	80800005 	stb	r2,0(r16)
 8004544:	01800284 	movi	r6,10
 8004548:	000f883a 	mov	r7,zero
 800454c:	800cb400 	call	800cb40 <__udivdi3>
 8004550:	1027883a 	mov	r19,r2
 8004554:	10c4b03a 	or	r2,r2,r3
 8004558:	1823883a 	mov	r17,r3
 800455c:	103fef1e 	bne	r2,zero,800451c <__alt_data_end+0xf800451c>
 8004560:	d8c02817 	ldw	r3,160(sp)
 8004564:	dc402a17 	ldw	r17,168(sp)
 8004568:	b011883a 	mov	r8,r22
 800456c:	1c07c83a 	sub	r3,r3,r16
 8004570:	d8c02e15 	stw	r3,184(sp)
 8004574:	00005906 	br	80046dc <___vfprintf_internal_r+0x71c>
 8004578:	18c03fcc 	andi	r3,r3,255
 800457c:	1806fa1e 	bne	r3,zero,8006168 <___vfprintf_internal_r+0x21a8>
 8004580:	9080020c 	andi	r2,r18,8
 8004584:	10048a26 	beq	r2,zero,80057b0 <___vfprintf_internal_r+0x17f0>
 8004588:	d8c02d17 	ldw	r3,180(sp)
 800458c:	d9002d17 	ldw	r4,180(sp)
 8004590:	d9402d17 	ldw	r5,180(sp)
 8004594:	18c00017 	ldw	r3,0(r3)
 8004598:	21000117 	ldw	r4,4(r4)
 800459c:	29400204 	addi	r5,r5,8
 80045a0:	d8c03615 	stw	r3,216(sp)
 80045a4:	d9003815 	stw	r4,224(sp)
 80045a8:	d9402d15 	stw	r5,180(sp)
 80045ac:	d9003617 	ldw	r4,216(sp)
 80045b0:	d9403817 	ldw	r5,224(sp)
 80045b4:	da003d15 	stw	r8,244(sp)
 80045b8:	04000044 	movi	r16,1
 80045bc:	800aa140 	call	800aa14 <__fpclassifyd>
 80045c0:	da003d17 	ldw	r8,244(sp)
 80045c4:	14041f1e 	bne	r2,r16,8005644 <___vfprintf_internal_r+0x1684>
 80045c8:	d9003617 	ldw	r4,216(sp)
 80045cc:	d9403817 	ldw	r5,224(sp)
 80045d0:	000d883a 	mov	r6,zero
 80045d4:	000f883a 	mov	r7,zero
 80045d8:	800ea9c0 	call	800ea9c <__ledf2>
 80045dc:	da003d17 	ldw	r8,244(sp)
 80045e0:	1005be16 	blt	r2,zero,8005cdc <___vfprintf_internal_r+0x1d1c>
 80045e4:	df002783 	ldbu	fp,158(sp)
 80045e8:	008011c4 	movi	r2,71
 80045ec:	1445330e 	bge	r2,r17,8005abc <___vfprintf_internal_r+0x1afc>
 80045f0:	04020074 	movhi	r16,2049
 80045f4:	840c8804 	addi	r16,r16,12832
 80045f8:	00c000c4 	movi	r3,3
 80045fc:	00bfdfc4 	movi	r2,-129
 8004600:	d8c02a15 	stw	r3,168(sp)
 8004604:	90a4703a 	and	r18,r18,r2
 8004608:	d8c02e15 	stw	r3,184(sp)
 800460c:	d8002915 	stw	zero,164(sp)
 8004610:	d8003215 	stw	zero,200(sp)
 8004614:	00003706 	br	80046f4 <___vfprintf_internal_r+0x734>
 8004618:	94800214 	ori	r18,r18,8
 800461c:	ac400007 	ldb	r17,0(r21)
 8004620:	003ec806 	br	8004144 <__alt_data_end+0xf8004144>
 8004624:	18c03fcc 	andi	r3,r3,255
 8004628:	1806db1e 	bne	r3,zero,8006198 <___vfprintf_internal_r+0x21d8>
 800462c:	94800414 	ori	r18,r18,16
 8004630:	9080080c 	andi	r2,r18,32
 8004634:	1002d826 	beq	r2,zero,8005198 <___vfprintf_internal_r+0x11d8>
 8004638:	d9402d17 	ldw	r5,180(sp)
 800463c:	d8c02917 	ldw	r3,164(sp)
 8004640:	d8002785 	stb	zero,158(sp)
 8004644:	28800204 	addi	r2,r5,8
 8004648:	2cc00017 	ldw	r19,0(r5)
 800464c:	2d800117 	ldw	r22,4(r5)
 8004650:	18048f16 	blt	r3,zero,8005890 <___vfprintf_internal_r+0x18d0>
 8004654:	013fdfc4 	movi	r4,-129
 8004658:	9d86b03a 	or	r3,r19,r22
 800465c:	d8802d15 	stw	r2,180(sp)
 8004660:	9124703a 	and	r18,r18,r4
 8004664:	1802d91e 	bne	r3,zero,80051cc <___vfprintf_internal_r+0x120c>
 8004668:	d8c02917 	ldw	r3,164(sp)
 800466c:	0039883a 	mov	fp,zero
 8004670:	1805c326 	beq	r3,zero,8005d80 <___vfprintf_internal_r+0x1dc0>
 8004674:	0027883a 	mov	r19,zero
 8004678:	002d883a 	mov	r22,zero
 800467c:	dc001e04 	addi	r16,sp,120
 8004680:	9806d0fa 	srli	r3,r19,3
 8004684:	b008977a 	slli	r4,r22,29
 8004688:	b02cd0fa 	srli	r22,r22,3
 800468c:	9cc001cc 	andi	r19,r19,7
 8004690:	98800c04 	addi	r2,r19,48
 8004694:	843fffc4 	addi	r16,r16,-1
 8004698:	20e6b03a 	or	r19,r4,r3
 800469c:	80800005 	stb	r2,0(r16)
 80046a0:	9d86b03a 	or	r3,r19,r22
 80046a4:	183ff61e 	bne	r3,zero,8004680 <__alt_data_end+0xf8004680>
 80046a8:	90c0004c 	andi	r3,r18,1
 80046ac:	18013b26 	beq	r3,zero,8004b9c <___vfprintf_internal_r+0xbdc>
 80046b0:	10803fcc 	andi	r2,r2,255
 80046b4:	1080201c 	xori	r2,r2,128
 80046b8:	10bfe004 	addi	r2,r2,-128
 80046bc:	00c00c04 	movi	r3,48
 80046c0:	10c13626 	beq	r2,r3,8004b9c <___vfprintf_internal_r+0xbdc>
 80046c4:	80ffffc5 	stb	r3,-1(r16)
 80046c8:	d8c02817 	ldw	r3,160(sp)
 80046cc:	80bfffc4 	addi	r2,r16,-1
 80046d0:	1021883a 	mov	r16,r2
 80046d4:	1887c83a 	sub	r3,r3,r2
 80046d8:	d8c02e15 	stw	r3,184(sp)
 80046dc:	d8802e17 	ldw	r2,184(sp)
 80046e0:	d9002917 	ldw	r4,164(sp)
 80046e4:	1100010e 	bge	r2,r4,80046ec <___vfprintf_internal_r+0x72c>
 80046e8:	2005883a 	mov	r2,r4
 80046ec:	d8802a15 	stw	r2,168(sp)
 80046f0:	d8003215 	stw	zero,200(sp)
 80046f4:	e7003fcc 	andi	fp,fp,255
 80046f8:	e700201c 	xori	fp,fp,128
 80046fc:	e73fe004 	addi	fp,fp,-128
 8004700:	e0000326 	beq	fp,zero,8004710 <___vfprintf_internal_r+0x750>
 8004704:	d8c02a17 	ldw	r3,168(sp)
 8004708:	18c00044 	addi	r3,r3,1
 800470c:	d8c02a15 	stw	r3,168(sp)
 8004710:	90c0008c 	andi	r3,r18,2
 8004714:	d8c02b15 	stw	r3,172(sp)
 8004718:	18000326 	beq	r3,zero,8004728 <___vfprintf_internal_r+0x768>
 800471c:	d8c02a17 	ldw	r3,168(sp)
 8004720:	18c00084 	addi	r3,r3,2
 8004724:	d8c02a15 	stw	r3,168(sp)
 8004728:	90c0210c 	andi	r3,r18,132
 800472c:	d8c03015 	stw	r3,192(sp)
 8004730:	1801a31e 	bne	r3,zero,8004dc0 <___vfprintf_internal_r+0xe00>
 8004734:	d9003117 	ldw	r4,196(sp)
 8004738:	d8c02a17 	ldw	r3,168(sp)
 800473c:	20e7c83a 	sub	r19,r4,r3
 8004740:	04c19f0e 	bge	zero,r19,8004dc0 <___vfprintf_internal_r+0xe00>
 8004744:	02400404 	movi	r9,16
 8004748:	d8c02017 	ldw	r3,128(sp)
 800474c:	d8801f17 	ldw	r2,124(sp)
 8004750:	4cc50d0e 	bge	r9,r19,8005b88 <___vfprintf_internal_r+0x1bc8>
 8004754:	01420074 	movhi	r5,2049
 8004758:	294c9b84 	addi	r5,r5,12910
 800475c:	dc403b15 	stw	r17,236(sp)
 8004760:	d9403515 	stw	r5,212(sp)
 8004764:	9823883a 	mov	r17,r19
 8004768:	482d883a 	mov	r22,r9
 800476c:	9027883a 	mov	r19,r18
 8004770:	070001c4 	movi	fp,7
 8004774:	8025883a 	mov	r18,r16
 8004778:	dc002c17 	ldw	r16,176(sp)
 800477c:	00000306 	br	800478c <___vfprintf_internal_r+0x7cc>
 8004780:	8c7ffc04 	addi	r17,r17,-16
 8004784:	42000204 	addi	r8,r8,8
 8004788:	b440130e 	bge	r22,r17,80047d8 <___vfprintf_internal_r+0x818>
 800478c:	01020074 	movhi	r4,2049
 8004790:	18c00404 	addi	r3,r3,16
 8004794:	10800044 	addi	r2,r2,1
 8004798:	210c9b84 	addi	r4,r4,12910
 800479c:	41000015 	stw	r4,0(r8)
 80047a0:	45800115 	stw	r22,4(r8)
 80047a4:	d8c02015 	stw	r3,128(sp)
 80047a8:	d8801f15 	stw	r2,124(sp)
 80047ac:	e0bff40e 	bge	fp,r2,8004780 <__alt_data_end+0xf8004780>
 80047b0:	d9801e04 	addi	r6,sp,120
 80047b4:	b80b883a 	mov	r5,r23
 80047b8:	8009883a 	mov	r4,r16
 80047bc:	800acc00 	call	800acc0 <__sprint_r>
 80047c0:	103f011e 	bne	r2,zero,80043c8 <__alt_data_end+0xf80043c8>
 80047c4:	8c7ffc04 	addi	r17,r17,-16
 80047c8:	d8c02017 	ldw	r3,128(sp)
 80047cc:	d8801f17 	ldw	r2,124(sp)
 80047d0:	da000404 	addi	r8,sp,16
 80047d4:	b47fed16 	blt	r22,r17,800478c <__alt_data_end+0xf800478c>
 80047d8:	9021883a 	mov	r16,r18
 80047dc:	9825883a 	mov	r18,r19
 80047e0:	8827883a 	mov	r19,r17
 80047e4:	dc403b17 	ldw	r17,236(sp)
 80047e8:	d9403517 	ldw	r5,212(sp)
 80047ec:	98c7883a 	add	r3,r19,r3
 80047f0:	10800044 	addi	r2,r2,1
 80047f4:	41400015 	stw	r5,0(r8)
 80047f8:	44c00115 	stw	r19,4(r8)
 80047fc:	d8c02015 	stw	r3,128(sp)
 8004800:	d8801f15 	stw	r2,124(sp)
 8004804:	010001c4 	movi	r4,7
 8004808:	2082a316 	blt	r4,r2,8005298 <___vfprintf_internal_r+0x12d8>
 800480c:	df002787 	ldb	fp,158(sp)
 8004810:	42000204 	addi	r8,r8,8
 8004814:	e0000c26 	beq	fp,zero,8004848 <___vfprintf_internal_r+0x888>
 8004818:	d8801f17 	ldw	r2,124(sp)
 800481c:	d9002784 	addi	r4,sp,158
 8004820:	18c00044 	addi	r3,r3,1
 8004824:	10800044 	addi	r2,r2,1
 8004828:	41000015 	stw	r4,0(r8)
 800482c:	01000044 	movi	r4,1
 8004830:	41000115 	stw	r4,4(r8)
 8004834:	d8c02015 	stw	r3,128(sp)
 8004838:	d8801f15 	stw	r2,124(sp)
 800483c:	010001c4 	movi	r4,7
 8004840:	20823c16 	blt	r4,r2,8005134 <___vfprintf_internal_r+0x1174>
 8004844:	42000204 	addi	r8,r8,8
 8004848:	d8802b17 	ldw	r2,172(sp)
 800484c:	10000c26 	beq	r2,zero,8004880 <___vfprintf_internal_r+0x8c0>
 8004850:	d8801f17 	ldw	r2,124(sp)
 8004854:	d9002704 	addi	r4,sp,156
 8004858:	18c00084 	addi	r3,r3,2
 800485c:	10800044 	addi	r2,r2,1
 8004860:	41000015 	stw	r4,0(r8)
 8004864:	01000084 	movi	r4,2
 8004868:	41000115 	stw	r4,4(r8)
 800486c:	d8c02015 	stw	r3,128(sp)
 8004870:	d8801f15 	stw	r2,124(sp)
 8004874:	010001c4 	movi	r4,7
 8004878:	20823616 	blt	r4,r2,8005154 <___vfprintf_internal_r+0x1194>
 800487c:	42000204 	addi	r8,r8,8
 8004880:	d9003017 	ldw	r4,192(sp)
 8004884:	00802004 	movi	r2,128
 8004888:	20819926 	beq	r4,r2,8004ef0 <___vfprintf_internal_r+0xf30>
 800488c:	d9402917 	ldw	r5,164(sp)
 8004890:	d8802e17 	ldw	r2,184(sp)
 8004894:	28adc83a 	sub	r22,r5,r2
 8004898:	0580310e 	bge	zero,r22,8004960 <___vfprintf_internal_r+0x9a0>
 800489c:	07000404 	movi	fp,16
 80048a0:	d8801f17 	ldw	r2,124(sp)
 80048a4:	e584140e 	bge	fp,r22,80058f8 <___vfprintf_internal_r+0x1938>
 80048a8:	01420074 	movhi	r5,2049
 80048ac:	294c9784 	addi	r5,r5,12894
 80048b0:	dc402915 	stw	r17,164(sp)
 80048b4:	d9402b15 	stw	r5,172(sp)
 80048b8:	b023883a 	mov	r17,r22
 80048bc:	04c001c4 	movi	r19,7
 80048c0:	a82d883a 	mov	r22,r21
 80048c4:	902b883a 	mov	r21,r18
 80048c8:	8025883a 	mov	r18,r16
 80048cc:	dc002c17 	ldw	r16,176(sp)
 80048d0:	00000306 	br	80048e0 <___vfprintf_internal_r+0x920>
 80048d4:	8c7ffc04 	addi	r17,r17,-16
 80048d8:	42000204 	addi	r8,r8,8
 80048dc:	e440110e 	bge	fp,r17,8004924 <___vfprintf_internal_r+0x964>
 80048e0:	18c00404 	addi	r3,r3,16
 80048e4:	10800044 	addi	r2,r2,1
 80048e8:	45000015 	stw	r20,0(r8)
 80048ec:	47000115 	stw	fp,4(r8)
 80048f0:	d8c02015 	stw	r3,128(sp)
 80048f4:	d8801f15 	stw	r2,124(sp)
 80048f8:	98bff60e 	bge	r19,r2,80048d4 <__alt_data_end+0xf80048d4>
 80048fc:	d9801e04 	addi	r6,sp,120
 8004900:	b80b883a 	mov	r5,r23
 8004904:	8009883a 	mov	r4,r16
 8004908:	800acc00 	call	800acc0 <__sprint_r>
 800490c:	103eae1e 	bne	r2,zero,80043c8 <__alt_data_end+0xf80043c8>
 8004910:	8c7ffc04 	addi	r17,r17,-16
 8004914:	d8c02017 	ldw	r3,128(sp)
 8004918:	d8801f17 	ldw	r2,124(sp)
 800491c:	da000404 	addi	r8,sp,16
 8004920:	e47fef16 	blt	fp,r17,80048e0 <__alt_data_end+0xf80048e0>
 8004924:	9021883a 	mov	r16,r18
 8004928:	a825883a 	mov	r18,r21
 800492c:	b02b883a 	mov	r21,r22
 8004930:	882d883a 	mov	r22,r17
 8004934:	dc402917 	ldw	r17,164(sp)
 8004938:	d9002b17 	ldw	r4,172(sp)
 800493c:	1d87883a 	add	r3,r3,r22
 8004940:	10800044 	addi	r2,r2,1
 8004944:	41000015 	stw	r4,0(r8)
 8004948:	45800115 	stw	r22,4(r8)
 800494c:	d8c02015 	stw	r3,128(sp)
 8004950:	d8801f15 	stw	r2,124(sp)
 8004954:	010001c4 	movi	r4,7
 8004958:	2081ee16 	blt	r4,r2,8005114 <___vfprintf_internal_r+0x1154>
 800495c:	42000204 	addi	r8,r8,8
 8004960:	9080400c 	andi	r2,r18,256
 8004964:	1001181e 	bne	r2,zero,8004dc8 <___vfprintf_internal_r+0xe08>
 8004968:	d9402e17 	ldw	r5,184(sp)
 800496c:	d8801f17 	ldw	r2,124(sp)
 8004970:	44000015 	stw	r16,0(r8)
 8004974:	1947883a 	add	r3,r3,r5
 8004978:	10800044 	addi	r2,r2,1
 800497c:	41400115 	stw	r5,4(r8)
 8004980:	d8c02015 	stw	r3,128(sp)
 8004984:	d8801f15 	stw	r2,124(sp)
 8004988:	010001c4 	movi	r4,7
 800498c:	2081d316 	blt	r4,r2,80050dc <___vfprintf_internal_r+0x111c>
 8004990:	42000204 	addi	r8,r8,8
 8004994:	9480010c 	andi	r18,r18,4
 8004998:	90003226 	beq	r18,zero,8004a64 <___vfprintf_internal_r+0xaa4>
 800499c:	d9403117 	ldw	r5,196(sp)
 80049a0:	d8802a17 	ldw	r2,168(sp)
 80049a4:	28a1c83a 	sub	r16,r5,r2
 80049a8:	04002e0e 	bge	zero,r16,8004a64 <___vfprintf_internal_r+0xaa4>
 80049ac:	04400404 	movi	r17,16
 80049b0:	d8801f17 	ldw	r2,124(sp)
 80049b4:	8c04a20e 	bge	r17,r16,8005c40 <___vfprintf_internal_r+0x1c80>
 80049b8:	01420074 	movhi	r5,2049
 80049bc:	294c9b84 	addi	r5,r5,12910
 80049c0:	d9403515 	stw	r5,212(sp)
 80049c4:	048001c4 	movi	r18,7
 80049c8:	dcc02c17 	ldw	r19,176(sp)
 80049cc:	00000306 	br	80049dc <___vfprintf_internal_r+0xa1c>
 80049d0:	843ffc04 	addi	r16,r16,-16
 80049d4:	42000204 	addi	r8,r8,8
 80049d8:	8c00130e 	bge	r17,r16,8004a28 <___vfprintf_internal_r+0xa68>
 80049dc:	01020074 	movhi	r4,2049
 80049e0:	18c00404 	addi	r3,r3,16
 80049e4:	10800044 	addi	r2,r2,1
 80049e8:	210c9b84 	addi	r4,r4,12910
 80049ec:	41000015 	stw	r4,0(r8)
 80049f0:	44400115 	stw	r17,4(r8)
 80049f4:	d8c02015 	stw	r3,128(sp)
 80049f8:	d8801f15 	stw	r2,124(sp)
 80049fc:	90bff40e 	bge	r18,r2,80049d0 <__alt_data_end+0xf80049d0>
 8004a00:	d9801e04 	addi	r6,sp,120
 8004a04:	b80b883a 	mov	r5,r23
 8004a08:	9809883a 	mov	r4,r19
 8004a0c:	800acc00 	call	800acc0 <__sprint_r>
 8004a10:	103e6d1e 	bne	r2,zero,80043c8 <__alt_data_end+0xf80043c8>
 8004a14:	843ffc04 	addi	r16,r16,-16
 8004a18:	d8c02017 	ldw	r3,128(sp)
 8004a1c:	d8801f17 	ldw	r2,124(sp)
 8004a20:	da000404 	addi	r8,sp,16
 8004a24:	8c3fed16 	blt	r17,r16,80049dc <__alt_data_end+0xf80049dc>
 8004a28:	d9403517 	ldw	r5,212(sp)
 8004a2c:	1c07883a 	add	r3,r3,r16
 8004a30:	10800044 	addi	r2,r2,1
 8004a34:	41400015 	stw	r5,0(r8)
 8004a38:	44000115 	stw	r16,4(r8)
 8004a3c:	d8c02015 	stw	r3,128(sp)
 8004a40:	d8801f15 	stw	r2,124(sp)
 8004a44:	010001c4 	movi	r4,7
 8004a48:	2080060e 	bge	r4,r2,8004a64 <___vfprintf_internal_r+0xaa4>
 8004a4c:	d9002c17 	ldw	r4,176(sp)
 8004a50:	d9801e04 	addi	r6,sp,120
 8004a54:	b80b883a 	mov	r5,r23
 8004a58:	800acc00 	call	800acc0 <__sprint_r>
 8004a5c:	103e5a1e 	bne	r2,zero,80043c8 <__alt_data_end+0xf80043c8>
 8004a60:	d8c02017 	ldw	r3,128(sp)
 8004a64:	d8803117 	ldw	r2,196(sp)
 8004a68:	d9002a17 	ldw	r4,168(sp)
 8004a6c:	1100010e 	bge	r2,r4,8004a74 <___vfprintf_internal_r+0xab4>
 8004a70:	2005883a 	mov	r2,r4
 8004a74:	d9402f17 	ldw	r5,188(sp)
 8004a78:	288b883a 	add	r5,r5,r2
 8004a7c:	d9402f15 	stw	r5,188(sp)
 8004a80:	18019e1e 	bne	r3,zero,80050fc <___vfprintf_internal_r+0x113c>
 8004a84:	a8800007 	ldb	r2,0(r21)
 8004a88:	d8001f15 	stw	zero,124(sp)
 8004a8c:	da000404 	addi	r8,sp,16
 8004a90:	103d851e 	bne	r2,zero,80040a8 <__alt_data_end+0xf80040a8>
 8004a94:	a821883a 	mov	r16,r21
 8004a98:	003d9b06 	br	8004108 <__alt_data_end+0xf8004108>
 8004a9c:	18c03fcc 	andi	r3,r3,255
 8004aa0:	1805c11e 	bne	r3,zero,80061a8 <___vfprintf_internal_r+0x21e8>
 8004aa4:	94800414 	ori	r18,r18,16
 8004aa8:	9080080c 	andi	r2,r18,32
 8004aac:	10020c26 	beq	r2,zero,80052e0 <___vfprintf_internal_r+0x1320>
 8004ab0:	d8802d17 	ldw	r2,180(sp)
 8004ab4:	d9002917 	ldw	r4,164(sp)
 8004ab8:	d8002785 	stb	zero,158(sp)
 8004abc:	10c00204 	addi	r3,r2,8
 8004ac0:	14c00017 	ldw	r19,0(r2)
 8004ac4:	15800117 	ldw	r22,4(r2)
 8004ac8:	20040f16 	blt	r4,zero,8005b08 <___vfprintf_internal_r+0x1b48>
 8004acc:	013fdfc4 	movi	r4,-129
 8004ad0:	9d84b03a 	or	r2,r19,r22
 8004ad4:	d8c02d15 	stw	r3,180(sp)
 8004ad8:	9124703a 	and	r18,r18,r4
 8004adc:	0039883a 	mov	fp,zero
 8004ae0:	103e891e 	bne	r2,zero,8004508 <__alt_data_end+0xf8004508>
 8004ae4:	d9002917 	ldw	r4,164(sp)
 8004ae8:	2002c11e 	bne	r4,zero,80055f0 <___vfprintf_internal_r+0x1630>
 8004aec:	d8002915 	stw	zero,164(sp)
 8004af0:	d8002e15 	stw	zero,184(sp)
 8004af4:	dc001e04 	addi	r16,sp,120
 8004af8:	003ef806 	br	80046dc <__alt_data_end+0xf80046dc>
 8004afc:	18c03fcc 	andi	r3,r3,255
 8004b00:	18059d1e 	bne	r3,zero,8006178 <___vfprintf_internal_r+0x21b8>
 8004b04:	01420074 	movhi	r5,2049
 8004b08:	294c8b04 	addi	r5,r5,12844
 8004b0c:	d9403915 	stw	r5,228(sp)
 8004b10:	9080080c 	andi	r2,r18,32
 8004b14:	10005226 	beq	r2,zero,8004c60 <___vfprintf_internal_r+0xca0>
 8004b18:	d8802d17 	ldw	r2,180(sp)
 8004b1c:	14c00017 	ldw	r19,0(r2)
 8004b20:	15800117 	ldw	r22,4(r2)
 8004b24:	10800204 	addi	r2,r2,8
 8004b28:	d8802d15 	stw	r2,180(sp)
 8004b2c:	9080004c 	andi	r2,r18,1
 8004b30:	10019026 	beq	r2,zero,8005174 <___vfprintf_internal_r+0x11b4>
 8004b34:	9d84b03a 	or	r2,r19,r22
 8004b38:	10036926 	beq	r2,zero,80058e0 <___vfprintf_internal_r+0x1920>
 8004b3c:	d8c02917 	ldw	r3,164(sp)
 8004b40:	00800c04 	movi	r2,48
 8004b44:	d8802705 	stb	r2,156(sp)
 8004b48:	dc402745 	stb	r17,157(sp)
 8004b4c:	d8002785 	stb	zero,158(sp)
 8004b50:	90800094 	ori	r2,r18,2
 8004b54:	18045d16 	blt	r3,zero,8005ccc <___vfprintf_internal_r+0x1d0c>
 8004b58:	00bfdfc4 	movi	r2,-129
 8004b5c:	90a4703a 	and	r18,r18,r2
 8004b60:	94800094 	ori	r18,r18,2
 8004b64:	0039883a 	mov	fp,zero
 8004b68:	d9003917 	ldw	r4,228(sp)
 8004b6c:	dc001e04 	addi	r16,sp,120
 8004b70:	988003cc 	andi	r2,r19,15
 8004b74:	b006973a 	slli	r3,r22,28
 8004b78:	2085883a 	add	r2,r4,r2
 8004b7c:	9826d13a 	srli	r19,r19,4
 8004b80:	10800003 	ldbu	r2,0(r2)
 8004b84:	b02cd13a 	srli	r22,r22,4
 8004b88:	843fffc4 	addi	r16,r16,-1
 8004b8c:	1ce6b03a 	or	r19,r3,r19
 8004b90:	80800005 	stb	r2,0(r16)
 8004b94:	9d84b03a 	or	r2,r19,r22
 8004b98:	103ff51e 	bne	r2,zero,8004b70 <__alt_data_end+0xf8004b70>
 8004b9c:	d8c02817 	ldw	r3,160(sp)
 8004ba0:	1c07c83a 	sub	r3,r3,r16
 8004ba4:	d8c02e15 	stw	r3,184(sp)
 8004ba8:	003ecc06 	br	80046dc <__alt_data_end+0xf80046dc>
 8004bac:	18c03fcc 	andi	r3,r3,255
 8004bb0:	183e9f26 	beq	r3,zero,8004630 <__alt_data_end+0xf8004630>
 8004bb4:	d9c02785 	stb	r7,158(sp)
 8004bb8:	003e9d06 	br	8004630 <__alt_data_end+0xf8004630>
 8004bbc:	00c00044 	movi	r3,1
 8004bc0:	01c00ac4 	movi	r7,43
 8004bc4:	ac400007 	ldb	r17,0(r21)
 8004bc8:	003d5e06 	br	8004144 <__alt_data_end+0xf8004144>
 8004bcc:	94800814 	ori	r18,r18,32
 8004bd0:	ac400007 	ldb	r17,0(r21)
 8004bd4:	003d5b06 	br	8004144 <__alt_data_end+0xf8004144>
 8004bd8:	d8c02d17 	ldw	r3,180(sp)
 8004bdc:	d8002785 	stb	zero,158(sp)
 8004be0:	1c000017 	ldw	r16,0(r3)
 8004be4:	1cc00104 	addi	r19,r3,4
 8004be8:	80041926 	beq	r16,zero,8005c50 <___vfprintf_internal_r+0x1c90>
 8004bec:	d9002917 	ldw	r4,164(sp)
 8004bf0:	2003d016 	blt	r4,zero,8005b34 <___vfprintf_internal_r+0x1b74>
 8004bf4:	200d883a 	mov	r6,r4
 8004bf8:	000b883a 	mov	r5,zero
 8004bfc:	8009883a 	mov	r4,r16
 8004c00:	da003d15 	stw	r8,244(sp)
 8004c04:	8008fc40 	call	8008fc4 <memchr>
 8004c08:	da003d17 	ldw	r8,244(sp)
 8004c0c:	10045426 	beq	r2,zero,8005d60 <___vfprintf_internal_r+0x1da0>
 8004c10:	1405c83a 	sub	r2,r2,r16
 8004c14:	d8802e15 	stw	r2,184(sp)
 8004c18:	1003cc16 	blt	r2,zero,8005b4c <___vfprintf_internal_r+0x1b8c>
 8004c1c:	df002783 	ldbu	fp,158(sp)
 8004c20:	d8802a15 	stw	r2,168(sp)
 8004c24:	dcc02d15 	stw	r19,180(sp)
 8004c28:	d8002915 	stw	zero,164(sp)
 8004c2c:	d8003215 	stw	zero,200(sp)
 8004c30:	003eb006 	br	80046f4 <__alt_data_end+0xf80046f4>
 8004c34:	18c03fcc 	andi	r3,r3,255
 8004c38:	183f9b26 	beq	r3,zero,8004aa8 <__alt_data_end+0xf8004aa8>
 8004c3c:	d9c02785 	stb	r7,158(sp)
 8004c40:	003f9906 	br	8004aa8 <__alt_data_end+0xf8004aa8>
 8004c44:	18c03fcc 	andi	r3,r3,255
 8004c48:	1805551e 	bne	r3,zero,80061a0 <___vfprintf_internal_r+0x21e0>
 8004c4c:	01420074 	movhi	r5,2049
 8004c50:	294c9004 	addi	r5,r5,12864
 8004c54:	d9403915 	stw	r5,228(sp)
 8004c58:	9080080c 	andi	r2,r18,32
 8004c5c:	103fae1e 	bne	r2,zero,8004b18 <__alt_data_end+0xf8004b18>
 8004c60:	9080040c 	andi	r2,r18,16
 8004c64:	1002de26 	beq	r2,zero,80057e0 <___vfprintf_internal_r+0x1820>
 8004c68:	d8c02d17 	ldw	r3,180(sp)
 8004c6c:	002d883a 	mov	r22,zero
 8004c70:	1cc00017 	ldw	r19,0(r3)
 8004c74:	18c00104 	addi	r3,r3,4
 8004c78:	d8c02d15 	stw	r3,180(sp)
 8004c7c:	003fab06 	br	8004b2c <__alt_data_end+0xf8004b2c>
 8004c80:	38803fcc 	andi	r2,r7,255
 8004c84:	1080201c 	xori	r2,r2,128
 8004c88:	10bfe004 	addi	r2,r2,-128
 8004c8c:	1002d21e 	bne	r2,zero,80057d8 <___vfprintf_internal_r+0x1818>
 8004c90:	00c00044 	movi	r3,1
 8004c94:	01c00804 	movi	r7,32
 8004c98:	ac400007 	ldb	r17,0(r21)
 8004c9c:	003d2906 	br	8004144 <__alt_data_end+0xf8004144>
 8004ca0:	94800054 	ori	r18,r18,1
 8004ca4:	ac400007 	ldb	r17,0(r21)
 8004ca8:	003d2606 	br	8004144 <__alt_data_end+0xf8004144>
 8004cac:	18c03fcc 	andi	r3,r3,255
 8004cb0:	183e0526 	beq	r3,zero,80044c8 <__alt_data_end+0xf80044c8>
 8004cb4:	d9c02785 	stb	r7,158(sp)
 8004cb8:	003e0306 	br	80044c8 <__alt_data_end+0xf80044c8>
 8004cbc:	94801014 	ori	r18,r18,64
 8004cc0:	ac400007 	ldb	r17,0(r21)
 8004cc4:	003d1f06 	br	8004144 <__alt_data_end+0xf8004144>
 8004cc8:	ac400007 	ldb	r17,0(r21)
 8004ccc:	8a438726 	beq	r17,r9,8005aec <___vfprintf_internal_r+0x1b2c>
 8004cd0:	94800414 	ori	r18,r18,16
 8004cd4:	003d1b06 	br	8004144 <__alt_data_end+0xf8004144>
 8004cd8:	18c03fcc 	andi	r3,r3,255
 8004cdc:	1805341e 	bne	r3,zero,80061b0 <___vfprintf_internal_r+0x21f0>
 8004ce0:	9080080c 	andi	r2,r18,32
 8004ce4:	1002cd26 	beq	r2,zero,800581c <___vfprintf_internal_r+0x185c>
 8004ce8:	d9402d17 	ldw	r5,180(sp)
 8004cec:	d9002f17 	ldw	r4,188(sp)
 8004cf0:	28800017 	ldw	r2,0(r5)
 8004cf4:	2007d7fa 	srai	r3,r4,31
 8004cf8:	29400104 	addi	r5,r5,4
 8004cfc:	d9402d15 	stw	r5,180(sp)
 8004d00:	11000015 	stw	r4,0(r2)
 8004d04:	10c00115 	stw	r3,4(r2)
 8004d08:	003ce506 	br	80040a0 <__alt_data_end+0xf80040a0>
 8004d0c:	d8c02d17 	ldw	r3,180(sp)
 8004d10:	d9002d17 	ldw	r4,180(sp)
 8004d14:	d8002785 	stb	zero,158(sp)
 8004d18:	18800017 	ldw	r2,0(r3)
 8004d1c:	21000104 	addi	r4,r4,4
 8004d20:	00c00044 	movi	r3,1
 8004d24:	d8c02a15 	stw	r3,168(sp)
 8004d28:	d8801405 	stb	r2,80(sp)
 8004d2c:	d9002d15 	stw	r4,180(sp)
 8004d30:	d8c02e15 	stw	r3,184(sp)
 8004d34:	d8002915 	stw	zero,164(sp)
 8004d38:	d8003215 	stw	zero,200(sp)
 8004d3c:	dc001404 	addi	r16,sp,80
 8004d40:	0039883a 	mov	fp,zero
 8004d44:	003e7206 	br	8004710 <__alt_data_end+0xf8004710>
 8004d48:	01020074 	movhi	r4,2049
 8004d4c:	210c9004 	addi	r4,r4,12864
 8004d50:	0039883a 	mov	fp,zero
 8004d54:	d9003915 	stw	r4,228(sp)
 8004d58:	04401e04 	movi	r17,120
 8004d5c:	003f8206 	br	8004b68 <__alt_data_end+0xf8004b68>
 8004d60:	18c03fcc 	andi	r3,r3,255
 8004d64:	1805061e 	bne	r3,zero,8006180 <___vfprintf_internal_r+0x21c0>
 8004d68:	883d9126 	beq	r17,zero,80043b0 <__alt_data_end+0xf80043b0>
 8004d6c:	00c00044 	movi	r3,1
 8004d70:	d8c02a15 	stw	r3,168(sp)
 8004d74:	dc401405 	stb	r17,80(sp)
 8004d78:	d8002785 	stb	zero,158(sp)
 8004d7c:	003fec06 	br	8004d30 <__alt_data_end+0xf8004d30>
 8004d80:	01420074 	movhi	r5,2049
 8004d84:	294c9004 	addi	r5,r5,12864
 8004d88:	d9403915 	stw	r5,228(sp)
 8004d8c:	d8c02d15 	stw	r3,180(sp)
 8004d90:	1025883a 	mov	r18,r2
 8004d94:	04401e04 	movi	r17,120
 8004d98:	9d84b03a 	or	r2,r19,r22
 8004d9c:	1000fc1e 	bne	r2,zero,8005190 <___vfprintf_internal_r+0x11d0>
 8004da0:	0039883a 	mov	fp,zero
 8004da4:	00800084 	movi	r2,2
 8004da8:	10803fcc 	andi	r2,r2,255
 8004dac:	00c00044 	movi	r3,1
 8004db0:	10c20f26 	beq	r2,r3,80055f0 <___vfprintf_internal_r+0x1630>
 8004db4:	00c00084 	movi	r3,2
 8004db8:	10fd6326 	beq	r2,r3,8004348 <__alt_data_end+0xf8004348>
 8004dbc:	003e2d06 	br	8004674 <__alt_data_end+0xf8004674>
 8004dc0:	d8c02017 	ldw	r3,128(sp)
 8004dc4:	003e9306 	br	8004814 <__alt_data_end+0xf8004814>
 8004dc8:	00801944 	movi	r2,101
 8004dcc:	14407e0e 	bge	r2,r17,8004fc8 <___vfprintf_internal_r+0x1008>
 8004dd0:	d9003617 	ldw	r4,216(sp)
 8004dd4:	d9403817 	ldw	r5,224(sp)
 8004dd8:	000d883a 	mov	r6,zero
 8004ddc:	000f883a 	mov	r7,zero
 8004de0:	d8c03c15 	stw	r3,240(sp)
 8004de4:	da003d15 	stw	r8,244(sp)
 8004de8:	800e9380 	call	800e938 <__eqdf2>
 8004dec:	d8c03c17 	ldw	r3,240(sp)
 8004df0:	da003d17 	ldw	r8,244(sp)
 8004df4:	1000f71e 	bne	r2,zero,80051d4 <___vfprintf_internal_r+0x1214>
 8004df8:	d8801f17 	ldw	r2,124(sp)
 8004dfc:	01020074 	movhi	r4,2049
 8004e00:	210c9704 	addi	r4,r4,12892
 8004e04:	18c00044 	addi	r3,r3,1
 8004e08:	10800044 	addi	r2,r2,1
 8004e0c:	41000015 	stw	r4,0(r8)
 8004e10:	01000044 	movi	r4,1
 8004e14:	41000115 	stw	r4,4(r8)
 8004e18:	d8c02015 	stw	r3,128(sp)
 8004e1c:	d8801f15 	stw	r2,124(sp)
 8004e20:	010001c4 	movi	r4,7
 8004e24:	2082b816 	blt	r4,r2,8005908 <___vfprintf_internal_r+0x1948>
 8004e28:	42000204 	addi	r8,r8,8
 8004e2c:	d8802617 	ldw	r2,152(sp)
 8004e30:	d9403317 	ldw	r5,204(sp)
 8004e34:	11400216 	blt	r2,r5,8004e40 <___vfprintf_internal_r+0xe80>
 8004e38:	9080004c 	andi	r2,r18,1
 8004e3c:	103ed526 	beq	r2,zero,8004994 <__alt_data_end+0xf8004994>
 8004e40:	d8803717 	ldw	r2,220(sp)
 8004e44:	d9003417 	ldw	r4,208(sp)
 8004e48:	d9403717 	ldw	r5,220(sp)
 8004e4c:	1887883a 	add	r3,r3,r2
 8004e50:	d8801f17 	ldw	r2,124(sp)
 8004e54:	41000015 	stw	r4,0(r8)
 8004e58:	41400115 	stw	r5,4(r8)
 8004e5c:	10800044 	addi	r2,r2,1
 8004e60:	d8c02015 	stw	r3,128(sp)
 8004e64:	d8801f15 	stw	r2,124(sp)
 8004e68:	010001c4 	movi	r4,7
 8004e6c:	20832916 	blt	r4,r2,8005b14 <___vfprintf_internal_r+0x1b54>
 8004e70:	42000204 	addi	r8,r8,8
 8004e74:	d8803317 	ldw	r2,204(sp)
 8004e78:	143fffc4 	addi	r16,r2,-1
 8004e7c:	043ec50e 	bge	zero,r16,8004994 <__alt_data_end+0xf8004994>
 8004e80:	04400404 	movi	r17,16
 8004e84:	d8801f17 	ldw	r2,124(sp)
 8004e88:	8c00880e 	bge	r17,r16,80050ac <___vfprintf_internal_r+0x10ec>
 8004e8c:	01420074 	movhi	r5,2049
 8004e90:	294c9784 	addi	r5,r5,12894
 8004e94:	d9402b15 	stw	r5,172(sp)
 8004e98:	058001c4 	movi	r22,7
 8004e9c:	dcc02c17 	ldw	r19,176(sp)
 8004ea0:	00000306 	br	8004eb0 <___vfprintf_internal_r+0xef0>
 8004ea4:	42000204 	addi	r8,r8,8
 8004ea8:	843ffc04 	addi	r16,r16,-16
 8004eac:	8c00820e 	bge	r17,r16,80050b8 <___vfprintf_internal_r+0x10f8>
 8004eb0:	18c00404 	addi	r3,r3,16
 8004eb4:	10800044 	addi	r2,r2,1
 8004eb8:	45000015 	stw	r20,0(r8)
 8004ebc:	44400115 	stw	r17,4(r8)
 8004ec0:	d8c02015 	stw	r3,128(sp)
 8004ec4:	d8801f15 	stw	r2,124(sp)
 8004ec8:	b0bff60e 	bge	r22,r2,8004ea4 <__alt_data_end+0xf8004ea4>
 8004ecc:	d9801e04 	addi	r6,sp,120
 8004ed0:	b80b883a 	mov	r5,r23
 8004ed4:	9809883a 	mov	r4,r19
 8004ed8:	800acc00 	call	800acc0 <__sprint_r>
 8004edc:	103d3a1e 	bne	r2,zero,80043c8 <__alt_data_end+0xf80043c8>
 8004ee0:	d8c02017 	ldw	r3,128(sp)
 8004ee4:	d8801f17 	ldw	r2,124(sp)
 8004ee8:	da000404 	addi	r8,sp,16
 8004eec:	003fee06 	br	8004ea8 <__alt_data_end+0xf8004ea8>
 8004ef0:	d9403117 	ldw	r5,196(sp)
 8004ef4:	d8802a17 	ldw	r2,168(sp)
 8004ef8:	28adc83a 	sub	r22,r5,r2
 8004efc:	05be630e 	bge	zero,r22,800488c <__alt_data_end+0xf800488c>
 8004f00:	07000404 	movi	fp,16
 8004f04:	d8801f17 	ldw	r2,124(sp)
 8004f08:	e5838f0e 	bge	fp,r22,8005d48 <___vfprintf_internal_r+0x1d88>
 8004f0c:	01420074 	movhi	r5,2049
 8004f10:	294c9784 	addi	r5,r5,12894
 8004f14:	dc403015 	stw	r17,192(sp)
 8004f18:	d9402b15 	stw	r5,172(sp)
 8004f1c:	b023883a 	mov	r17,r22
 8004f20:	04c001c4 	movi	r19,7
 8004f24:	a82d883a 	mov	r22,r21
 8004f28:	902b883a 	mov	r21,r18
 8004f2c:	8025883a 	mov	r18,r16
 8004f30:	dc002c17 	ldw	r16,176(sp)
 8004f34:	00000306 	br	8004f44 <___vfprintf_internal_r+0xf84>
 8004f38:	8c7ffc04 	addi	r17,r17,-16
 8004f3c:	42000204 	addi	r8,r8,8
 8004f40:	e440110e 	bge	fp,r17,8004f88 <___vfprintf_internal_r+0xfc8>
 8004f44:	18c00404 	addi	r3,r3,16
 8004f48:	10800044 	addi	r2,r2,1
 8004f4c:	45000015 	stw	r20,0(r8)
 8004f50:	47000115 	stw	fp,4(r8)
 8004f54:	d8c02015 	stw	r3,128(sp)
 8004f58:	d8801f15 	stw	r2,124(sp)
 8004f5c:	98bff60e 	bge	r19,r2,8004f38 <__alt_data_end+0xf8004f38>
 8004f60:	d9801e04 	addi	r6,sp,120
 8004f64:	b80b883a 	mov	r5,r23
 8004f68:	8009883a 	mov	r4,r16
 8004f6c:	800acc00 	call	800acc0 <__sprint_r>
 8004f70:	103d151e 	bne	r2,zero,80043c8 <__alt_data_end+0xf80043c8>
 8004f74:	8c7ffc04 	addi	r17,r17,-16
 8004f78:	d8c02017 	ldw	r3,128(sp)
 8004f7c:	d8801f17 	ldw	r2,124(sp)
 8004f80:	da000404 	addi	r8,sp,16
 8004f84:	e47fef16 	blt	fp,r17,8004f44 <__alt_data_end+0xf8004f44>
 8004f88:	9021883a 	mov	r16,r18
 8004f8c:	a825883a 	mov	r18,r21
 8004f90:	b02b883a 	mov	r21,r22
 8004f94:	882d883a 	mov	r22,r17
 8004f98:	dc403017 	ldw	r17,192(sp)
 8004f9c:	d9002b17 	ldw	r4,172(sp)
 8004fa0:	1d87883a 	add	r3,r3,r22
 8004fa4:	10800044 	addi	r2,r2,1
 8004fa8:	41000015 	stw	r4,0(r8)
 8004fac:	45800115 	stw	r22,4(r8)
 8004fb0:	d8c02015 	stw	r3,128(sp)
 8004fb4:	d8801f15 	stw	r2,124(sp)
 8004fb8:	010001c4 	movi	r4,7
 8004fbc:	20818e16 	blt	r4,r2,80055f8 <___vfprintf_internal_r+0x1638>
 8004fc0:	42000204 	addi	r8,r8,8
 8004fc4:	003e3106 	br	800488c <__alt_data_end+0xf800488c>
 8004fc8:	d9403317 	ldw	r5,204(sp)
 8004fcc:	00800044 	movi	r2,1
 8004fd0:	18c00044 	addi	r3,r3,1
 8004fd4:	1141530e 	bge	r2,r5,8005524 <___vfprintf_internal_r+0x1564>
 8004fd8:	dc401f17 	ldw	r17,124(sp)
 8004fdc:	00800044 	movi	r2,1
 8004fe0:	40800115 	stw	r2,4(r8)
 8004fe4:	8c400044 	addi	r17,r17,1
 8004fe8:	44000015 	stw	r16,0(r8)
 8004fec:	d8c02015 	stw	r3,128(sp)
 8004ff0:	dc401f15 	stw	r17,124(sp)
 8004ff4:	008001c4 	movi	r2,7
 8004ff8:	14416b16 	blt	r2,r17,80055a8 <___vfprintf_internal_r+0x15e8>
 8004ffc:	42000204 	addi	r8,r8,8
 8005000:	d8803717 	ldw	r2,220(sp)
 8005004:	d9003417 	ldw	r4,208(sp)
 8005008:	8c400044 	addi	r17,r17,1
 800500c:	10c7883a 	add	r3,r2,r3
 8005010:	40800115 	stw	r2,4(r8)
 8005014:	41000015 	stw	r4,0(r8)
 8005018:	d8c02015 	stw	r3,128(sp)
 800501c:	dc401f15 	stw	r17,124(sp)
 8005020:	008001c4 	movi	r2,7
 8005024:	14416916 	blt	r2,r17,80055cc <___vfprintf_internal_r+0x160c>
 8005028:	45800204 	addi	r22,r8,8
 800502c:	d9003617 	ldw	r4,216(sp)
 8005030:	d9403817 	ldw	r5,224(sp)
 8005034:	000d883a 	mov	r6,zero
 8005038:	000f883a 	mov	r7,zero
 800503c:	d8c03c15 	stw	r3,240(sp)
 8005040:	800e9380 	call	800e938 <__eqdf2>
 8005044:	d8c03c17 	ldw	r3,240(sp)
 8005048:	1000bc26 	beq	r2,zero,800533c <___vfprintf_internal_r+0x137c>
 800504c:	d9403317 	ldw	r5,204(sp)
 8005050:	84000044 	addi	r16,r16,1
 8005054:	8c400044 	addi	r17,r17,1
 8005058:	28bfffc4 	addi	r2,r5,-1
 800505c:	1887883a 	add	r3,r3,r2
 8005060:	b0800115 	stw	r2,4(r22)
 8005064:	b4000015 	stw	r16,0(r22)
 8005068:	d8c02015 	stw	r3,128(sp)
 800506c:	dc401f15 	stw	r17,124(sp)
 8005070:	008001c4 	movi	r2,7
 8005074:	14414316 	blt	r2,r17,8005584 <___vfprintf_internal_r+0x15c4>
 8005078:	b5800204 	addi	r22,r22,8
 800507c:	d9003a17 	ldw	r4,232(sp)
 8005080:	df0022c4 	addi	fp,sp,139
 8005084:	8c400044 	addi	r17,r17,1
 8005088:	20c7883a 	add	r3,r4,r3
 800508c:	b7000015 	stw	fp,0(r22)
 8005090:	b1000115 	stw	r4,4(r22)
 8005094:	d8c02015 	stw	r3,128(sp)
 8005098:	dc401f15 	stw	r17,124(sp)
 800509c:	008001c4 	movi	r2,7
 80050a0:	14400e16 	blt	r2,r17,80050dc <___vfprintf_internal_r+0x111c>
 80050a4:	b2000204 	addi	r8,r22,8
 80050a8:	003e3a06 	br	8004994 <__alt_data_end+0xf8004994>
 80050ac:	01020074 	movhi	r4,2049
 80050b0:	210c9784 	addi	r4,r4,12894
 80050b4:	d9002b15 	stw	r4,172(sp)
 80050b8:	d9002b17 	ldw	r4,172(sp)
 80050bc:	1c07883a 	add	r3,r3,r16
 80050c0:	44000115 	stw	r16,4(r8)
 80050c4:	41000015 	stw	r4,0(r8)
 80050c8:	10800044 	addi	r2,r2,1
 80050cc:	d8c02015 	stw	r3,128(sp)
 80050d0:	d8801f15 	stw	r2,124(sp)
 80050d4:	010001c4 	movi	r4,7
 80050d8:	20be2d0e 	bge	r4,r2,8004990 <__alt_data_end+0xf8004990>
 80050dc:	d9002c17 	ldw	r4,176(sp)
 80050e0:	d9801e04 	addi	r6,sp,120
 80050e4:	b80b883a 	mov	r5,r23
 80050e8:	800acc00 	call	800acc0 <__sprint_r>
 80050ec:	103cb61e 	bne	r2,zero,80043c8 <__alt_data_end+0xf80043c8>
 80050f0:	d8c02017 	ldw	r3,128(sp)
 80050f4:	da000404 	addi	r8,sp,16
 80050f8:	003e2606 	br	8004994 <__alt_data_end+0xf8004994>
 80050fc:	d9002c17 	ldw	r4,176(sp)
 8005100:	d9801e04 	addi	r6,sp,120
 8005104:	b80b883a 	mov	r5,r23
 8005108:	800acc00 	call	800acc0 <__sprint_r>
 800510c:	103e5d26 	beq	r2,zero,8004a84 <__alt_data_end+0xf8004a84>
 8005110:	003cad06 	br	80043c8 <__alt_data_end+0xf80043c8>
 8005114:	d9002c17 	ldw	r4,176(sp)
 8005118:	d9801e04 	addi	r6,sp,120
 800511c:	b80b883a 	mov	r5,r23
 8005120:	800acc00 	call	800acc0 <__sprint_r>
 8005124:	103ca81e 	bne	r2,zero,80043c8 <__alt_data_end+0xf80043c8>
 8005128:	d8c02017 	ldw	r3,128(sp)
 800512c:	da000404 	addi	r8,sp,16
 8005130:	003e0b06 	br	8004960 <__alt_data_end+0xf8004960>
 8005134:	d9002c17 	ldw	r4,176(sp)
 8005138:	d9801e04 	addi	r6,sp,120
 800513c:	b80b883a 	mov	r5,r23
 8005140:	800acc00 	call	800acc0 <__sprint_r>
 8005144:	103ca01e 	bne	r2,zero,80043c8 <__alt_data_end+0xf80043c8>
 8005148:	d8c02017 	ldw	r3,128(sp)
 800514c:	da000404 	addi	r8,sp,16
 8005150:	003dbd06 	br	8004848 <__alt_data_end+0xf8004848>
 8005154:	d9002c17 	ldw	r4,176(sp)
 8005158:	d9801e04 	addi	r6,sp,120
 800515c:	b80b883a 	mov	r5,r23
 8005160:	800acc00 	call	800acc0 <__sprint_r>
 8005164:	103c981e 	bne	r2,zero,80043c8 <__alt_data_end+0xf80043c8>
 8005168:	d8c02017 	ldw	r3,128(sp)
 800516c:	da000404 	addi	r8,sp,16
 8005170:	003dc306 	br	8004880 <__alt_data_end+0xf8004880>
 8005174:	d8802917 	ldw	r2,164(sp)
 8005178:	d8002785 	stb	zero,158(sp)
 800517c:	103f0616 	blt	r2,zero,8004d98 <__alt_data_end+0xf8004d98>
 8005180:	00ffdfc4 	movi	r3,-129
 8005184:	9d84b03a 	or	r2,r19,r22
 8005188:	90e4703a 	and	r18,r18,r3
 800518c:	103c6b26 	beq	r2,zero,800433c <__alt_data_end+0xf800433c>
 8005190:	0039883a 	mov	fp,zero
 8005194:	003e7406 	br	8004b68 <__alt_data_end+0xf8004b68>
 8005198:	9080040c 	andi	r2,r18,16
 800519c:	1001b326 	beq	r2,zero,800586c <___vfprintf_internal_r+0x18ac>
 80051a0:	d9002d17 	ldw	r4,180(sp)
 80051a4:	d9402917 	ldw	r5,164(sp)
 80051a8:	d8002785 	stb	zero,158(sp)
 80051ac:	20800104 	addi	r2,r4,4
 80051b0:	24c00017 	ldw	r19,0(r4)
 80051b4:	002d883a 	mov	r22,zero
 80051b8:	2801b516 	blt	r5,zero,8005890 <___vfprintf_internal_r+0x18d0>
 80051bc:	00ffdfc4 	movi	r3,-129
 80051c0:	d8802d15 	stw	r2,180(sp)
 80051c4:	90e4703a 	and	r18,r18,r3
 80051c8:	983d2726 	beq	r19,zero,8004668 <__alt_data_end+0xf8004668>
 80051cc:	0039883a 	mov	fp,zero
 80051d0:	003d2a06 	br	800467c <__alt_data_end+0xf800467c>
 80051d4:	dc402617 	ldw	r17,152(sp)
 80051d8:	0441d30e 	bge	zero,r17,8005928 <___vfprintf_internal_r+0x1968>
 80051dc:	dc403217 	ldw	r17,200(sp)
 80051e0:	d8803317 	ldw	r2,204(sp)
 80051e4:	1440010e 	bge	r2,r17,80051ec <___vfprintf_internal_r+0x122c>
 80051e8:	1023883a 	mov	r17,r2
 80051ec:	04400a0e 	bge	zero,r17,8005218 <___vfprintf_internal_r+0x1258>
 80051f0:	d8801f17 	ldw	r2,124(sp)
 80051f4:	1c47883a 	add	r3,r3,r17
 80051f8:	44000015 	stw	r16,0(r8)
 80051fc:	10800044 	addi	r2,r2,1
 8005200:	44400115 	stw	r17,4(r8)
 8005204:	d8c02015 	stw	r3,128(sp)
 8005208:	d8801f15 	stw	r2,124(sp)
 800520c:	010001c4 	movi	r4,7
 8005210:	20826516 	blt	r4,r2,8005ba8 <___vfprintf_internal_r+0x1be8>
 8005214:	42000204 	addi	r8,r8,8
 8005218:	88026116 	blt	r17,zero,8005ba0 <___vfprintf_internal_r+0x1be0>
 800521c:	d9003217 	ldw	r4,200(sp)
 8005220:	2463c83a 	sub	r17,r4,r17
 8005224:	04407b0e 	bge	zero,r17,8005414 <___vfprintf_internal_r+0x1454>
 8005228:	05800404 	movi	r22,16
 800522c:	d8801f17 	ldw	r2,124(sp)
 8005230:	b4419d0e 	bge	r22,r17,80058a8 <___vfprintf_internal_r+0x18e8>
 8005234:	01020074 	movhi	r4,2049
 8005238:	210c9784 	addi	r4,r4,12894
 800523c:	d9002b15 	stw	r4,172(sp)
 8005240:	070001c4 	movi	fp,7
 8005244:	dcc02c17 	ldw	r19,176(sp)
 8005248:	00000306 	br	8005258 <___vfprintf_internal_r+0x1298>
 800524c:	42000204 	addi	r8,r8,8
 8005250:	8c7ffc04 	addi	r17,r17,-16
 8005254:	b441970e 	bge	r22,r17,80058b4 <___vfprintf_internal_r+0x18f4>
 8005258:	18c00404 	addi	r3,r3,16
 800525c:	10800044 	addi	r2,r2,1
 8005260:	45000015 	stw	r20,0(r8)
 8005264:	45800115 	stw	r22,4(r8)
 8005268:	d8c02015 	stw	r3,128(sp)
 800526c:	d8801f15 	stw	r2,124(sp)
 8005270:	e0bff60e 	bge	fp,r2,800524c <__alt_data_end+0xf800524c>
 8005274:	d9801e04 	addi	r6,sp,120
 8005278:	b80b883a 	mov	r5,r23
 800527c:	9809883a 	mov	r4,r19
 8005280:	800acc00 	call	800acc0 <__sprint_r>
 8005284:	103c501e 	bne	r2,zero,80043c8 <__alt_data_end+0xf80043c8>
 8005288:	d8c02017 	ldw	r3,128(sp)
 800528c:	d8801f17 	ldw	r2,124(sp)
 8005290:	da000404 	addi	r8,sp,16
 8005294:	003fee06 	br	8005250 <__alt_data_end+0xf8005250>
 8005298:	d9002c17 	ldw	r4,176(sp)
 800529c:	d9801e04 	addi	r6,sp,120
 80052a0:	b80b883a 	mov	r5,r23
 80052a4:	800acc00 	call	800acc0 <__sprint_r>
 80052a8:	103c471e 	bne	r2,zero,80043c8 <__alt_data_end+0xf80043c8>
 80052ac:	d8c02017 	ldw	r3,128(sp)
 80052b0:	df002787 	ldb	fp,158(sp)
 80052b4:	da000404 	addi	r8,sp,16
 80052b8:	003d5606 	br	8004814 <__alt_data_end+0xf8004814>
 80052bc:	9080040c 	andi	r2,r18,16
 80052c0:	10016126 	beq	r2,zero,8005848 <___vfprintf_internal_r+0x1888>
 80052c4:	d8802d17 	ldw	r2,180(sp)
 80052c8:	14c00017 	ldw	r19,0(r2)
 80052cc:	10800104 	addi	r2,r2,4
 80052d0:	d8802d15 	stw	r2,180(sp)
 80052d4:	982dd7fa 	srai	r22,r19,31
 80052d8:	b005883a 	mov	r2,r22
 80052dc:	003c8206 	br	80044e8 <__alt_data_end+0xf80044e8>
 80052e0:	9080040c 	andi	r2,r18,16
 80052e4:	10003526 	beq	r2,zero,80053bc <___vfprintf_internal_r+0x13fc>
 80052e8:	d9402d17 	ldw	r5,180(sp)
 80052ec:	d8c02917 	ldw	r3,164(sp)
 80052f0:	d8002785 	stb	zero,158(sp)
 80052f4:	28800104 	addi	r2,r5,4
 80052f8:	2cc00017 	ldw	r19,0(r5)
 80052fc:	002d883a 	mov	r22,zero
 8005300:	18003716 	blt	r3,zero,80053e0 <___vfprintf_internal_r+0x1420>
 8005304:	00ffdfc4 	movi	r3,-129
 8005308:	d8802d15 	stw	r2,180(sp)
 800530c:	90e4703a 	and	r18,r18,r3
 8005310:	0039883a 	mov	fp,zero
 8005314:	983df326 	beq	r19,zero,8004ae4 <__alt_data_end+0xf8004ae4>
 8005318:	00800244 	movi	r2,9
 800531c:	14fc7b36 	bltu	r2,r19,800450c <__alt_data_end+0xf800450c>
 8005320:	d8c02817 	ldw	r3,160(sp)
 8005324:	dc001dc4 	addi	r16,sp,119
 8005328:	9cc00c04 	addi	r19,r19,48
 800532c:	1c07c83a 	sub	r3,r3,r16
 8005330:	dcc01dc5 	stb	r19,119(sp)
 8005334:	d8c02e15 	stw	r3,184(sp)
 8005338:	003ce806 	br	80046dc <__alt_data_end+0xf80046dc>
 800533c:	d8803317 	ldw	r2,204(sp)
 8005340:	143fffc4 	addi	r16,r2,-1
 8005344:	043f4d0e 	bge	zero,r16,800507c <__alt_data_end+0xf800507c>
 8005348:	07000404 	movi	fp,16
 800534c:	e400810e 	bge	fp,r16,8005554 <___vfprintf_internal_r+0x1594>
 8005350:	01420074 	movhi	r5,2049
 8005354:	294c9784 	addi	r5,r5,12894
 8005358:	d9402b15 	stw	r5,172(sp)
 800535c:	01c001c4 	movi	r7,7
 8005360:	dcc02c17 	ldw	r19,176(sp)
 8005364:	00000306 	br	8005374 <___vfprintf_internal_r+0x13b4>
 8005368:	b5800204 	addi	r22,r22,8
 800536c:	843ffc04 	addi	r16,r16,-16
 8005370:	e4007b0e 	bge	fp,r16,8005560 <___vfprintf_internal_r+0x15a0>
 8005374:	18c00404 	addi	r3,r3,16
 8005378:	8c400044 	addi	r17,r17,1
 800537c:	b5000015 	stw	r20,0(r22)
 8005380:	b7000115 	stw	fp,4(r22)
 8005384:	d8c02015 	stw	r3,128(sp)
 8005388:	dc401f15 	stw	r17,124(sp)
 800538c:	3c7ff60e 	bge	r7,r17,8005368 <__alt_data_end+0xf8005368>
 8005390:	d9801e04 	addi	r6,sp,120
 8005394:	b80b883a 	mov	r5,r23
 8005398:	9809883a 	mov	r4,r19
 800539c:	d9c03c15 	stw	r7,240(sp)
 80053a0:	800acc00 	call	800acc0 <__sprint_r>
 80053a4:	d9c03c17 	ldw	r7,240(sp)
 80053a8:	103c071e 	bne	r2,zero,80043c8 <__alt_data_end+0xf80043c8>
 80053ac:	d8c02017 	ldw	r3,128(sp)
 80053b0:	dc401f17 	ldw	r17,124(sp)
 80053b4:	dd800404 	addi	r22,sp,16
 80053b8:	003fec06 	br	800536c <__alt_data_end+0xf800536c>
 80053bc:	9080100c 	andi	r2,r18,64
 80053c0:	d8002785 	stb	zero,158(sp)
 80053c4:	10010e26 	beq	r2,zero,8005800 <___vfprintf_internal_r+0x1840>
 80053c8:	d9002d17 	ldw	r4,180(sp)
 80053cc:	d9402917 	ldw	r5,164(sp)
 80053d0:	002d883a 	mov	r22,zero
 80053d4:	20800104 	addi	r2,r4,4
 80053d8:	24c0000b 	ldhu	r19,0(r4)
 80053dc:	283fc90e 	bge	r5,zero,8005304 <__alt_data_end+0xf8005304>
 80053e0:	d8802d15 	stw	r2,180(sp)
 80053e4:	0039883a 	mov	fp,zero
 80053e8:	9d84b03a 	or	r2,r19,r22
 80053ec:	103c461e 	bne	r2,zero,8004508 <__alt_data_end+0xf8004508>
 80053f0:	00800044 	movi	r2,1
 80053f4:	003e6c06 	br	8004da8 <__alt_data_end+0xf8004da8>
 80053f8:	d9002c17 	ldw	r4,176(sp)
 80053fc:	d9801e04 	addi	r6,sp,120
 8005400:	b80b883a 	mov	r5,r23
 8005404:	800acc00 	call	800acc0 <__sprint_r>
 8005408:	103bef1e 	bne	r2,zero,80043c8 <__alt_data_end+0xf80043c8>
 800540c:	d8c02017 	ldw	r3,128(sp)
 8005410:	da000404 	addi	r8,sp,16
 8005414:	d9003217 	ldw	r4,200(sp)
 8005418:	d8802617 	ldw	r2,152(sp)
 800541c:	d9403317 	ldw	r5,204(sp)
 8005420:	8123883a 	add	r17,r16,r4
 8005424:	11400216 	blt	r2,r5,8005430 <___vfprintf_internal_r+0x1470>
 8005428:	9100004c 	andi	r4,r18,1
 800542c:	20000d26 	beq	r4,zero,8005464 <___vfprintf_internal_r+0x14a4>
 8005430:	d9003717 	ldw	r4,220(sp)
 8005434:	d9403417 	ldw	r5,208(sp)
 8005438:	1907883a 	add	r3,r3,r4
 800543c:	d9001f17 	ldw	r4,124(sp)
 8005440:	41400015 	stw	r5,0(r8)
 8005444:	d9403717 	ldw	r5,220(sp)
 8005448:	21000044 	addi	r4,r4,1
 800544c:	d8c02015 	stw	r3,128(sp)
 8005450:	41400115 	stw	r5,4(r8)
 8005454:	d9001f15 	stw	r4,124(sp)
 8005458:	014001c4 	movi	r5,7
 800545c:	2901e816 	blt	r5,r4,8005c00 <___vfprintf_internal_r+0x1c40>
 8005460:	42000204 	addi	r8,r8,8
 8005464:	d9003317 	ldw	r4,204(sp)
 8005468:	8121883a 	add	r16,r16,r4
 800546c:	2085c83a 	sub	r2,r4,r2
 8005470:	8461c83a 	sub	r16,r16,r17
 8005474:	1400010e 	bge	r2,r16,800547c <___vfprintf_internal_r+0x14bc>
 8005478:	1021883a 	mov	r16,r2
 800547c:	04000a0e 	bge	zero,r16,80054a8 <___vfprintf_internal_r+0x14e8>
 8005480:	d9001f17 	ldw	r4,124(sp)
 8005484:	1c07883a 	add	r3,r3,r16
 8005488:	44400015 	stw	r17,0(r8)
 800548c:	21000044 	addi	r4,r4,1
 8005490:	44000115 	stw	r16,4(r8)
 8005494:	d8c02015 	stw	r3,128(sp)
 8005498:	d9001f15 	stw	r4,124(sp)
 800549c:	014001c4 	movi	r5,7
 80054a0:	2901fb16 	blt	r5,r4,8005c90 <___vfprintf_internal_r+0x1cd0>
 80054a4:	42000204 	addi	r8,r8,8
 80054a8:	8001f716 	blt	r16,zero,8005c88 <___vfprintf_internal_r+0x1cc8>
 80054ac:	1421c83a 	sub	r16,r2,r16
 80054b0:	043d380e 	bge	zero,r16,8004994 <__alt_data_end+0xf8004994>
 80054b4:	04400404 	movi	r17,16
 80054b8:	d8801f17 	ldw	r2,124(sp)
 80054bc:	8c3efb0e 	bge	r17,r16,80050ac <__alt_data_end+0xf80050ac>
 80054c0:	01420074 	movhi	r5,2049
 80054c4:	294c9784 	addi	r5,r5,12894
 80054c8:	d9402b15 	stw	r5,172(sp)
 80054cc:	058001c4 	movi	r22,7
 80054d0:	dcc02c17 	ldw	r19,176(sp)
 80054d4:	00000306 	br	80054e4 <___vfprintf_internal_r+0x1524>
 80054d8:	42000204 	addi	r8,r8,8
 80054dc:	843ffc04 	addi	r16,r16,-16
 80054e0:	8c3ef50e 	bge	r17,r16,80050b8 <__alt_data_end+0xf80050b8>
 80054e4:	18c00404 	addi	r3,r3,16
 80054e8:	10800044 	addi	r2,r2,1
 80054ec:	45000015 	stw	r20,0(r8)
 80054f0:	44400115 	stw	r17,4(r8)
 80054f4:	d8c02015 	stw	r3,128(sp)
 80054f8:	d8801f15 	stw	r2,124(sp)
 80054fc:	b0bff60e 	bge	r22,r2,80054d8 <__alt_data_end+0xf80054d8>
 8005500:	d9801e04 	addi	r6,sp,120
 8005504:	b80b883a 	mov	r5,r23
 8005508:	9809883a 	mov	r4,r19
 800550c:	800acc00 	call	800acc0 <__sprint_r>
 8005510:	103bad1e 	bne	r2,zero,80043c8 <__alt_data_end+0xf80043c8>
 8005514:	d8c02017 	ldw	r3,128(sp)
 8005518:	d8801f17 	ldw	r2,124(sp)
 800551c:	da000404 	addi	r8,sp,16
 8005520:	003fee06 	br	80054dc <__alt_data_end+0xf80054dc>
 8005524:	9088703a 	and	r4,r18,r2
 8005528:	203eab1e 	bne	r4,zero,8004fd8 <__alt_data_end+0xf8004fd8>
 800552c:	dc401f17 	ldw	r17,124(sp)
 8005530:	40800115 	stw	r2,4(r8)
 8005534:	44000015 	stw	r16,0(r8)
 8005538:	8c400044 	addi	r17,r17,1
 800553c:	d8c02015 	stw	r3,128(sp)
 8005540:	dc401f15 	stw	r17,124(sp)
 8005544:	008001c4 	movi	r2,7
 8005548:	14400e16 	blt	r2,r17,8005584 <___vfprintf_internal_r+0x15c4>
 800554c:	45800204 	addi	r22,r8,8
 8005550:	003eca06 	br	800507c <__alt_data_end+0xf800507c>
 8005554:	01020074 	movhi	r4,2049
 8005558:	210c9784 	addi	r4,r4,12894
 800555c:	d9002b15 	stw	r4,172(sp)
 8005560:	d8802b17 	ldw	r2,172(sp)
 8005564:	1c07883a 	add	r3,r3,r16
 8005568:	8c400044 	addi	r17,r17,1
 800556c:	b0800015 	stw	r2,0(r22)
 8005570:	b4000115 	stw	r16,4(r22)
 8005574:	d8c02015 	stw	r3,128(sp)
 8005578:	dc401f15 	stw	r17,124(sp)
 800557c:	008001c4 	movi	r2,7
 8005580:	147ebd0e 	bge	r2,r17,8005078 <__alt_data_end+0xf8005078>
 8005584:	d9002c17 	ldw	r4,176(sp)
 8005588:	d9801e04 	addi	r6,sp,120
 800558c:	b80b883a 	mov	r5,r23
 8005590:	800acc00 	call	800acc0 <__sprint_r>
 8005594:	103b8c1e 	bne	r2,zero,80043c8 <__alt_data_end+0xf80043c8>
 8005598:	d8c02017 	ldw	r3,128(sp)
 800559c:	dc401f17 	ldw	r17,124(sp)
 80055a0:	dd800404 	addi	r22,sp,16
 80055a4:	003eb506 	br	800507c <__alt_data_end+0xf800507c>
 80055a8:	d9002c17 	ldw	r4,176(sp)
 80055ac:	d9801e04 	addi	r6,sp,120
 80055b0:	b80b883a 	mov	r5,r23
 80055b4:	800acc00 	call	800acc0 <__sprint_r>
 80055b8:	103b831e 	bne	r2,zero,80043c8 <__alt_data_end+0xf80043c8>
 80055bc:	d8c02017 	ldw	r3,128(sp)
 80055c0:	dc401f17 	ldw	r17,124(sp)
 80055c4:	da000404 	addi	r8,sp,16
 80055c8:	003e8d06 	br	8005000 <__alt_data_end+0xf8005000>
 80055cc:	d9002c17 	ldw	r4,176(sp)
 80055d0:	d9801e04 	addi	r6,sp,120
 80055d4:	b80b883a 	mov	r5,r23
 80055d8:	800acc00 	call	800acc0 <__sprint_r>
 80055dc:	103b7a1e 	bne	r2,zero,80043c8 <__alt_data_end+0xf80043c8>
 80055e0:	d8c02017 	ldw	r3,128(sp)
 80055e4:	dc401f17 	ldw	r17,124(sp)
 80055e8:	dd800404 	addi	r22,sp,16
 80055ec:	003e8f06 	br	800502c <__alt_data_end+0xf800502c>
 80055f0:	0027883a 	mov	r19,zero
 80055f4:	003f4a06 	br	8005320 <__alt_data_end+0xf8005320>
 80055f8:	d9002c17 	ldw	r4,176(sp)
 80055fc:	d9801e04 	addi	r6,sp,120
 8005600:	b80b883a 	mov	r5,r23
 8005604:	800acc00 	call	800acc0 <__sprint_r>
 8005608:	103b6f1e 	bne	r2,zero,80043c8 <__alt_data_end+0xf80043c8>
 800560c:	d8c02017 	ldw	r3,128(sp)
 8005610:	da000404 	addi	r8,sp,16
 8005614:	003c9d06 	br	800488c <__alt_data_end+0xf800488c>
 8005618:	04e7c83a 	sub	r19,zero,r19
 800561c:	9804c03a 	cmpne	r2,r19,zero
 8005620:	05adc83a 	sub	r22,zero,r22
 8005624:	b0adc83a 	sub	r22,r22,r2
 8005628:	d8802917 	ldw	r2,164(sp)
 800562c:	07000b44 	movi	fp,45
 8005630:	df002785 	stb	fp,158(sp)
 8005634:	10017b16 	blt	r2,zero,8005c24 <___vfprintf_internal_r+0x1c64>
 8005638:	00bfdfc4 	movi	r2,-129
 800563c:	90a4703a 	and	r18,r18,r2
 8005640:	003bb106 	br	8004508 <__alt_data_end+0xf8004508>
 8005644:	d9003617 	ldw	r4,216(sp)
 8005648:	d9403817 	ldw	r5,224(sp)
 800564c:	da003d15 	stw	r8,244(sp)
 8005650:	800aa140 	call	800aa14 <__fpclassifyd>
 8005654:	da003d17 	ldw	r8,244(sp)
 8005658:	1000f026 	beq	r2,zero,8005a1c <___vfprintf_internal_r+0x1a5c>
 800565c:	d9002917 	ldw	r4,164(sp)
 8005660:	05bff7c4 	movi	r22,-33
 8005664:	00bfffc4 	movi	r2,-1
 8005668:	8dac703a 	and	r22,r17,r22
 800566c:	20820026 	beq	r4,r2,8005e70 <___vfprintf_internal_r+0x1eb0>
 8005670:	008011c4 	movi	r2,71
 8005674:	b081f726 	beq	r22,r2,8005e54 <___vfprintf_internal_r+0x1e94>
 8005678:	d9003817 	ldw	r4,224(sp)
 800567c:	90c04014 	ori	r3,r18,256
 8005680:	d8c02b15 	stw	r3,172(sp)
 8005684:	20021516 	blt	r4,zero,8005edc <___vfprintf_internal_r+0x1f1c>
 8005688:	dcc03817 	ldw	r19,224(sp)
 800568c:	d8002a05 	stb	zero,168(sp)
 8005690:	00801984 	movi	r2,102
 8005694:	8881f926 	beq	r17,r2,8005e7c <___vfprintf_internal_r+0x1ebc>
 8005698:	00801184 	movi	r2,70
 800569c:	88821c26 	beq	r17,r2,8005f10 <___vfprintf_internal_r+0x1f50>
 80056a0:	00801144 	movi	r2,69
 80056a4:	b081ef26 	beq	r22,r2,8005e64 <___vfprintf_internal_r+0x1ea4>
 80056a8:	d8c02917 	ldw	r3,164(sp)
 80056ac:	d8802104 	addi	r2,sp,132
 80056b0:	d8800315 	stw	r2,12(sp)
 80056b4:	d9403617 	ldw	r5,216(sp)
 80056b8:	d8802504 	addi	r2,sp,148
 80056bc:	d9002c17 	ldw	r4,176(sp)
 80056c0:	d8800215 	stw	r2,8(sp)
 80056c4:	d8802604 	addi	r2,sp,152
 80056c8:	d8c00015 	stw	r3,0(sp)
 80056cc:	d8800115 	stw	r2,4(sp)
 80056d0:	01c00084 	movi	r7,2
 80056d4:	980d883a 	mov	r6,r19
 80056d8:	d8c03c15 	stw	r3,240(sp)
 80056dc:	da003d15 	stw	r8,244(sp)
 80056e0:	80065e40 	call	80065e4 <_dtoa_r>
 80056e4:	1021883a 	mov	r16,r2
 80056e8:	008019c4 	movi	r2,103
 80056ec:	d8c03c17 	ldw	r3,240(sp)
 80056f0:	da003d17 	ldw	r8,244(sp)
 80056f4:	88817126 	beq	r17,r2,8005cbc <___vfprintf_internal_r+0x1cfc>
 80056f8:	008011c4 	movi	r2,71
 80056fc:	88829226 	beq	r17,r2,8006148 <___vfprintf_internal_r+0x2188>
 8005700:	80f9883a 	add	fp,r16,r3
 8005704:	d9003617 	ldw	r4,216(sp)
 8005708:	000d883a 	mov	r6,zero
 800570c:	000f883a 	mov	r7,zero
 8005710:	980b883a 	mov	r5,r19
 8005714:	da003d15 	stw	r8,244(sp)
 8005718:	800e9380 	call	800e938 <__eqdf2>
 800571c:	da003d17 	ldw	r8,244(sp)
 8005720:	10018d26 	beq	r2,zero,8005d58 <___vfprintf_internal_r+0x1d98>
 8005724:	d8802117 	ldw	r2,132(sp)
 8005728:	1700062e 	bgeu	r2,fp,8005744 <___vfprintf_internal_r+0x1784>
 800572c:	01000c04 	movi	r4,48
 8005730:	10c00044 	addi	r3,r2,1
 8005734:	d8c02115 	stw	r3,132(sp)
 8005738:	11000005 	stb	r4,0(r2)
 800573c:	d8802117 	ldw	r2,132(sp)
 8005740:	173ffb36 	bltu	r2,fp,8005730 <__alt_data_end+0xf8005730>
 8005744:	1405c83a 	sub	r2,r2,r16
 8005748:	d8803315 	stw	r2,204(sp)
 800574c:	008011c4 	movi	r2,71
 8005750:	b0817626 	beq	r22,r2,8005d2c <___vfprintf_internal_r+0x1d6c>
 8005754:	00801944 	movi	r2,101
 8005758:	1442810e 	bge	r2,r17,8006160 <___vfprintf_internal_r+0x21a0>
 800575c:	d8c02617 	ldw	r3,152(sp)
 8005760:	00801984 	movi	r2,102
 8005764:	d8c03215 	stw	r3,200(sp)
 8005768:	8881fe26 	beq	r17,r2,8005f64 <___vfprintf_internal_r+0x1fa4>
 800576c:	d8c03217 	ldw	r3,200(sp)
 8005770:	d9003317 	ldw	r4,204(sp)
 8005774:	1901dd16 	blt	r3,r4,8005eec <___vfprintf_internal_r+0x1f2c>
 8005778:	9480004c 	andi	r18,r18,1
 800577c:	90022b1e 	bne	r18,zero,800602c <___vfprintf_internal_r+0x206c>
 8005780:	1805883a 	mov	r2,r3
 8005784:	18028016 	blt	r3,zero,8006188 <___vfprintf_internal_r+0x21c8>
 8005788:	d8c03217 	ldw	r3,200(sp)
 800578c:	044019c4 	movi	r17,103
 8005790:	d8c02e15 	stw	r3,184(sp)
 8005794:	df002a07 	ldb	fp,168(sp)
 8005798:	e001531e 	bne	fp,zero,8005ce8 <___vfprintf_internal_r+0x1d28>
 800579c:	df002783 	ldbu	fp,158(sp)
 80057a0:	d8802a15 	stw	r2,168(sp)
 80057a4:	dc802b17 	ldw	r18,172(sp)
 80057a8:	d8002915 	stw	zero,164(sp)
 80057ac:	003bd106 	br	80046f4 <__alt_data_end+0xf80046f4>
 80057b0:	d8802d17 	ldw	r2,180(sp)
 80057b4:	d8c02d17 	ldw	r3,180(sp)
 80057b8:	d9002d17 	ldw	r4,180(sp)
 80057bc:	10800017 	ldw	r2,0(r2)
 80057c0:	18c00117 	ldw	r3,4(r3)
 80057c4:	21000204 	addi	r4,r4,8
 80057c8:	d8803615 	stw	r2,216(sp)
 80057cc:	d8c03815 	stw	r3,224(sp)
 80057d0:	d9002d15 	stw	r4,180(sp)
 80057d4:	003b7506 	br	80045ac <__alt_data_end+0xf80045ac>
 80057d8:	ac400007 	ldb	r17,0(r21)
 80057dc:	003a5906 	br	8004144 <__alt_data_end+0xf8004144>
 80057e0:	9080100c 	andi	r2,r18,64
 80057e4:	1000a826 	beq	r2,zero,8005a88 <___vfprintf_internal_r+0x1ac8>
 80057e8:	d9002d17 	ldw	r4,180(sp)
 80057ec:	002d883a 	mov	r22,zero
 80057f0:	24c0000b 	ldhu	r19,0(r4)
 80057f4:	21000104 	addi	r4,r4,4
 80057f8:	d9002d15 	stw	r4,180(sp)
 80057fc:	003ccb06 	br	8004b2c <__alt_data_end+0xf8004b2c>
 8005800:	d8c02d17 	ldw	r3,180(sp)
 8005804:	d9002917 	ldw	r4,164(sp)
 8005808:	002d883a 	mov	r22,zero
 800580c:	18800104 	addi	r2,r3,4
 8005810:	1cc00017 	ldw	r19,0(r3)
 8005814:	203ebb0e 	bge	r4,zero,8005304 <__alt_data_end+0xf8005304>
 8005818:	003ef106 	br	80053e0 <__alt_data_end+0xf80053e0>
 800581c:	9080040c 	andi	r2,r18,16
 8005820:	1000921e 	bne	r2,zero,8005a6c <___vfprintf_internal_r+0x1aac>
 8005824:	9480100c 	andi	r18,r18,64
 8005828:	90013926 	beq	r18,zero,8005d10 <___vfprintf_internal_r+0x1d50>
 800582c:	d9002d17 	ldw	r4,180(sp)
 8005830:	d9402f17 	ldw	r5,188(sp)
 8005834:	20800017 	ldw	r2,0(r4)
 8005838:	21000104 	addi	r4,r4,4
 800583c:	d9002d15 	stw	r4,180(sp)
 8005840:	1140000d 	sth	r5,0(r2)
 8005844:	003a1606 	br	80040a0 <__alt_data_end+0xf80040a0>
 8005848:	9080100c 	andi	r2,r18,64
 800584c:	10008026 	beq	r2,zero,8005a50 <___vfprintf_internal_r+0x1a90>
 8005850:	d8c02d17 	ldw	r3,180(sp)
 8005854:	1cc0000f 	ldh	r19,0(r3)
 8005858:	18c00104 	addi	r3,r3,4
 800585c:	d8c02d15 	stw	r3,180(sp)
 8005860:	982dd7fa 	srai	r22,r19,31
 8005864:	b005883a 	mov	r2,r22
 8005868:	003b1f06 	br	80044e8 <__alt_data_end+0xf80044e8>
 800586c:	9080100c 	andi	r2,r18,64
 8005870:	d8002785 	stb	zero,158(sp)
 8005874:	10008a1e 	bne	r2,zero,8005aa0 <___vfprintf_internal_r+0x1ae0>
 8005878:	d9402d17 	ldw	r5,180(sp)
 800587c:	d8c02917 	ldw	r3,164(sp)
 8005880:	002d883a 	mov	r22,zero
 8005884:	28800104 	addi	r2,r5,4
 8005888:	2cc00017 	ldw	r19,0(r5)
 800588c:	183e4b0e 	bge	r3,zero,80051bc <__alt_data_end+0xf80051bc>
 8005890:	9d86b03a 	or	r3,r19,r22
 8005894:	d8802d15 	stw	r2,180(sp)
 8005898:	183e4c1e 	bne	r3,zero,80051cc <__alt_data_end+0xf80051cc>
 800589c:	0039883a 	mov	fp,zero
 80058a0:	0005883a 	mov	r2,zero
 80058a4:	003d4006 	br	8004da8 <__alt_data_end+0xf8004da8>
 80058a8:	01420074 	movhi	r5,2049
 80058ac:	294c9784 	addi	r5,r5,12894
 80058b0:	d9402b15 	stw	r5,172(sp)
 80058b4:	d9402b17 	ldw	r5,172(sp)
 80058b8:	1c47883a 	add	r3,r3,r17
 80058bc:	10800044 	addi	r2,r2,1
 80058c0:	41400015 	stw	r5,0(r8)
 80058c4:	44400115 	stw	r17,4(r8)
 80058c8:	d8c02015 	stw	r3,128(sp)
 80058cc:	d8801f15 	stw	r2,124(sp)
 80058d0:	010001c4 	movi	r4,7
 80058d4:	20bec816 	blt	r4,r2,80053f8 <__alt_data_end+0xf80053f8>
 80058d8:	42000204 	addi	r8,r8,8
 80058dc:	003ecd06 	br	8005414 <__alt_data_end+0xf8005414>
 80058e0:	d9002917 	ldw	r4,164(sp)
 80058e4:	d8002785 	stb	zero,158(sp)
 80058e8:	203d2d16 	blt	r4,zero,8004da0 <__alt_data_end+0xf8004da0>
 80058ec:	00bfdfc4 	movi	r2,-129
 80058f0:	90a4703a 	and	r18,r18,r2
 80058f4:	003a9106 	br	800433c <__alt_data_end+0xf800433c>
 80058f8:	01020074 	movhi	r4,2049
 80058fc:	210c9784 	addi	r4,r4,12894
 8005900:	d9002b15 	stw	r4,172(sp)
 8005904:	003c0c06 	br	8004938 <__alt_data_end+0xf8004938>
 8005908:	d9002c17 	ldw	r4,176(sp)
 800590c:	d9801e04 	addi	r6,sp,120
 8005910:	b80b883a 	mov	r5,r23
 8005914:	800acc00 	call	800acc0 <__sprint_r>
 8005918:	103aab1e 	bne	r2,zero,80043c8 <__alt_data_end+0xf80043c8>
 800591c:	d8c02017 	ldw	r3,128(sp)
 8005920:	da000404 	addi	r8,sp,16
 8005924:	003d4106 	br	8004e2c <__alt_data_end+0xf8004e2c>
 8005928:	d8801f17 	ldw	r2,124(sp)
 800592c:	01420074 	movhi	r5,2049
 8005930:	01000044 	movi	r4,1
 8005934:	18c00044 	addi	r3,r3,1
 8005938:	10800044 	addi	r2,r2,1
 800593c:	294c9704 	addi	r5,r5,12892
 8005940:	41000115 	stw	r4,4(r8)
 8005944:	41400015 	stw	r5,0(r8)
 8005948:	d8c02015 	stw	r3,128(sp)
 800594c:	d8801f15 	stw	r2,124(sp)
 8005950:	010001c4 	movi	r4,7
 8005954:	20805c16 	blt	r4,r2,8005ac8 <___vfprintf_internal_r+0x1b08>
 8005958:	42000204 	addi	r8,r8,8
 800595c:	8800041e 	bne	r17,zero,8005970 <___vfprintf_internal_r+0x19b0>
 8005960:	d8803317 	ldw	r2,204(sp)
 8005964:	1000021e 	bne	r2,zero,8005970 <___vfprintf_internal_r+0x19b0>
 8005968:	9080004c 	andi	r2,r18,1
 800596c:	103c0926 	beq	r2,zero,8004994 <__alt_data_end+0xf8004994>
 8005970:	d9003717 	ldw	r4,220(sp)
 8005974:	d8801f17 	ldw	r2,124(sp)
 8005978:	d9403417 	ldw	r5,208(sp)
 800597c:	20c7883a 	add	r3,r4,r3
 8005980:	10800044 	addi	r2,r2,1
 8005984:	41000115 	stw	r4,4(r8)
 8005988:	41400015 	stw	r5,0(r8)
 800598c:	d8c02015 	stw	r3,128(sp)
 8005990:	d8801f15 	stw	r2,124(sp)
 8005994:	010001c4 	movi	r4,7
 8005998:	20812116 	blt	r4,r2,8005e20 <___vfprintf_internal_r+0x1e60>
 800599c:	42000204 	addi	r8,r8,8
 80059a0:	0463c83a 	sub	r17,zero,r17
 80059a4:	0440730e 	bge	zero,r17,8005b74 <___vfprintf_internal_r+0x1bb4>
 80059a8:	05800404 	movi	r22,16
 80059ac:	b440860e 	bge	r22,r17,8005bc8 <___vfprintf_internal_r+0x1c08>
 80059b0:	01420074 	movhi	r5,2049
 80059b4:	294c9784 	addi	r5,r5,12894
 80059b8:	d9402b15 	stw	r5,172(sp)
 80059bc:	070001c4 	movi	fp,7
 80059c0:	dcc02c17 	ldw	r19,176(sp)
 80059c4:	00000306 	br	80059d4 <___vfprintf_internal_r+0x1a14>
 80059c8:	42000204 	addi	r8,r8,8
 80059cc:	8c7ffc04 	addi	r17,r17,-16
 80059d0:	b440800e 	bge	r22,r17,8005bd4 <___vfprintf_internal_r+0x1c14>
 80059d4:	18c00404 	addi	r3,r3,16
 80059d8:	10800044 	addi	r2,r2,1
 80059dc:	45000015 	stw	r20,0(r8)
 80059e0:	45800115 	stw	r22,4(r8)
 80059e4:	d8c02015 	stw	r3,128(sp)
 80059e8:	d8801f15 	stw	r2,124(sp)
 80059ec:	e0bff60e 	bge	fp,r2,80059c8 <__alt_data_end+0xf80059c8>
 80059f0:	d9801e04 	addi	r6,sp,120
 80059f4:	b80b883a 	mov	r5,r23
 80059f8:	9809883a 	mov	r4,r19
 80059fc:	800acc00 	call	800acc0 <__sprint_r>
 8005a00:	103a711e 	bne	r2,zero,80043c8 <__alt_data_end+0xf80043c8>
 8005a04:	d8c02017 	ldw	r3,128(sp)
 8005a08:	d8801f17 	ldw	r2,124(sp)
 8005a0c:	da000404 	addi	r8,sp,16
 8005a10:	003fee06 	br	80059cc <__alt_data_end+0xf80059cc>
 8005a14:	00bfffc4 	movi	r2,-1
 8005a18:	003a6f06 	br	80043d8 <__alt_data_end+0xf80043d8>
 8005a1c:	008011c4 	movi	r2,71
 8005a20:	1440b816 	blt	r2,r17,8005d04 <___vfprintf_internal_r+0x1d44>
 8005a24:	04020074 	movhi	r16,2049
 8005a28:	840c8904 	addi	r16,r16,12836
 8005a2c:	00c000c4 	movi	r3,3
 8005a30:	00bfdfc4 	movi	r2,-129
 8005a34:	d8c02a15 	stw	r3,168(sp)
 8005a38:	90a4703a 	and	r18,r18,r2
 8005a3c:	df002783 	ldbu	fp,158(sp)
 8005a40:	d8c02e15 	stw	r3,184(sp)
 8005a44:	d8002915 	stw	zero,164(sp)
 8005a48:	d8003215 	stw	zero,200(sp)
 8005a4c:	003b2906 	br	80046f4 <__alt_data_end+0xf80046f4>
 8005a50:	d9002d17 	ldw	r4,180(sp)
 8005a54:	24c00017 	ldw	r19,0(r4)
 8005a58:	21000104 	addi	r4,r4,4
 8005a5c:	d9002d15 	stw	r4,180(sp)
 8005a60:	982dd7fa 	srai	r22,r19,31
 8005a64:	b005883a 	mov	r2,r22
 8005a68:	003a9f06 	br	80044e8 <__alt_data_end+0xf80044e8>
 8005a6c:	d9402d17 	ldw	r5,180(sp)
 8005a70:	d8c02f17 	ldw	r3,188(sp)
 8005a74:	28800017 	ldw	r2,0(r5)
 8005a78:	29400104 	addi	r5,r5,4
 8005a7c:	d9402d15 	stw	r5,180(sp)
 8005a80:	10c00015 	stw	r3,0(r2)
 8005a84:	00398606 	br	80040a0 <__alt_data_end+0xf80040a0>
 8005a88:	d9402d17 	ldw	r5,180(sp)
 8005a8c:	002d883a 	mov	r22,zero
 8005a90:	2cc00017 	ldw	r19,0(r5)
 8005a94:	29400104 	addi	r5,r5,4
 8005a98:	d9402d15 	stw	r5,180(sp)
 8005a9c:	003c2306 	br	8004b2c <__alt_data_end+0xf8004b2c>
 8005aa0:	d8c02d17 	ldw	r3,180(sp)
 8005aa4:	d9002917 	ldw	r4,164(sp)
 8005aa8:	002d883a 	mov	r22,zero
 8005aac:	18800104 	addi	r2,r3,4
 8005ab0:	1cc0000b 	ldhu	r19,0(r3)
 8005ab4:	203dc10e 	bge	r4,zero,80051bc <__alt_data_end+0xf80051bc>
 8005ab8:	003f7506 	br	8005890 <__alt_data_end+0xf8005890>
 8005abc:	04020074 	movhi	r16,2049
 8005ac0:	840c8704 	addi	r16,r16,12828
 8005ac4:	003acc06 	br	80045f8 <__alt_data_end+0xf80045f8>
 8005ac8:	d9002c17 	ldw	r4,176(sp)
 8005acc:	d9801e04 	addi	r6,sp,120
 8005ad0:	b80b883a 	mov	r5,r23
 8005ad4:	800acc00 	call	800acc0 <__sprint_r>
 8005ad8:	103a3b1e 	bne	r2,zero,80043c8 <__alt_data_end+0xf80043c8>
 8005adc:	dc402617 	ldw	r17,152(sp)
 8005ae0:	d8c02017 	ldw	r3,128(sp)
 8005ae4:	da000404 	addi	r8,sp,16
 8005ae8:	003f9c06 	br	800595c <__alt_data_end+0xf800595c>
 8005aec:	ac400043 	ldbu	r17,1(r21)
 8005af0:	94800814 	ori	r18,r18,32
 8005af4:	ad400044 	addi	r21,r21,1
 8005af8:	8c403fcc 	andi	r17,r17,255
 8005afc:	8c40201c 	xori	r17,r17,128
 8005b00:	8c7fe004 	addi	r17,r17,-128
 8005b04:	00398f06 	br	8004144 <__alt_data_end+0xf8004144>
 8005b08:	d8c02d15 	stw	r3,180(sp)
 8005b0c:	0039883a 	mov	fp,zero
 8005b10:	003e3506 	br	80053e8 <__alt_data_end+0xf80053e8>
 8005b14:	d9002c17 	ldw	r4,176(sp)
 8005b18:	d9801e04 	addi	r6,sp,120
 8005b1c:	b80b883a 	mov	r5,r23
 8005b20:	800acc00 	call	800acc0 <__sprint_r>
 8005b24:	103a281e 	bne	r2,zero,80043c8 <__alt_data_end+0xf80043c8>
 8005b28:	d8c02017 	ldw	r3,128(sp)
 8005b2c:	da000404 	addi	r8,sp,16
 8005b30:	003cd006 	br	8004e74 <__alt_data_end+0xf8004e74>
 8005b34:	8009883a 	mov	r4,r16
 8005b38:	da003d15 	stw	r8,244(sp)
 8005b3c:	8003f280 	call	8003f28 <strlen>
 8005b40:	d8802e15 	stw	r2,184(sp)
 8005b44:	da003d17 	ldw	r8,244(sp)
 8005b48:	103c340e 	bge	r2,zero,8004c1c <__alt_data_end+0xf8004c1c>
 8005b4c:	0005883a 	mov	r2,zero
 8005b50:	003c3206 	br	8004c1c <__alt_data_end+0xf8004c1c>
 8005b54:	d9002c17 	ldw	r4,176(sp)
 8005b58:	d9801e04 	addi	r6,sp,120
 8005b5c:	b80b883a 	mov	r5,r23
 8005b60:	800acc00 	call	800acc0 <__sprint_r>
 8005b64:	103a181e 	bne	r2,zero,80043c8 <__alt_data_end+0xf80043c8>
 8005b68:	d8c02017 	ldw	r3,128(sp)
 8005b6c:	d8801f17 	ldw	r2,124(sp)
 8005b70:	da000404 	addi	r8,sp,16
 8005b74:	d9403317 	ldw	r5,204(sp)
 8005b78:	10800044 	addi	r2,r2,1
 8005b7c:	44000015 	stw	r16,0(r8)
 8005b80:	28c7883a 	add	r3,r5,r3
 8005b84:	003b7d06 	br	800497c <__alt_data_end+0xf800497c>
 8005b88:	01020074 	movhi	r4,2049
 8005b8c:	210c9b84 	addi	r4,r4,12910
 8005b90:	d9003515 	stw	r4,212(sp)
 8005b94:	003b1406 	br	80047e8 <__alt_data_end+0xf80047e8>
 8005b98:	013fffc4 	movi	r4,-1
 8005b9c:	003a3506 	br	8004474 <__alt_data_end+0xf8004474>
 8005ba0:	0023883a 	mov	r17,zero
 8005ba4:	003d9d06 	br	800521c <__alt_data_end+0xf800521c>
 8005ba8:	d9002c17 	ldw	r4,176(sp)
 8005bac:	d9801e04 	addi	r6,sp,120
 8005bb0:	b80b883a 	mov	r5,r23
 8005bb4:	800acc00 	call	800acc0 <__sprint_r>
 8005bb8:	103a031e 	bne	r2,zero,80043c8 <__alt_data_end+0xf80043c8>
 8005bbc:	d8c02017 	ldw	r3,128(sp)
 8005bc0:	da000404 	addi	r8,sp,16
 8005bc4:	003d9406 	br	8005218 <__alt_data_end+0xf8005218>
 8005bc8:	01020074 	movhi	r4,2049
 8005bcc:	210c9784 	addi	r4,r4,12894
 8005bd0:	d9002b15 	stw	r4,172(sp)
 8005bd4:	d9002b17 	ldw	r4,172(sp)
 8005bd8:	1c47883a 	add	r3,r3,r17
 8005bdc:	10800044 	addi	r2,r2,1
 8005be0:	41000015 	stw	r4,0(r8)
 8005be4:	44400115 	stw	r17,4(r8)
 8005be8:	d8c02015 	stw	r3,128(sp)
 8005bec:	d8801f15 	stw	r2,124(sp)
 8005bf0:	010001c4 	movi	r4,7
 8005bf4:	20bfd716 	blt	r4,r2,8005b54 <__alt_data_end+0xf8005b54>
 8005bf8:	42000204 	addi	r8,r8,8
 8005bfc:	003fdd06 	br	8005b74 <__alt_data_end+0xf8005b74>
 8005c00:	d9002c17 	ldw	r4,176(sp)
 8005c04:	d9801e04 	addi	r6,sp,120
 8005c08:	b80b883a 	mov	r5,r23
 8005c0c:	800acc00 	call	800acc0 <__sprint_r>
 8005c10:	1039ed1e 	bne	r2,zero,80043c8 <__alt_data_end+0xf80043c8>
 8005c14:	d8802617 	ldw	r2,152(sp)
 8005c18:	d8c02017 	ldw	r3,128(sp)
 8005c1c:	da000404 	addi	r8,sp,16
 8005c20:	003e1006 	br	8005464 <__alt_data_end+0xf8005464>
 8005c24:	00800044 	movi	r2,1
 8005c28:	10803fcc 	andi	r2,r2,255
 8005c2c:	00c00044 	movi	r3,1
 8005c30:	10fa3526 	beq	r2,r3,8004508 <__alt_data_end+0xf8004508>
 8005c34:	00c00084 	movi	r3,2
 8005c38:	10fbcb26 	beq	r2,r3,8004b68 <__alt_data_end+0xf8004b68>
 8005c3c:	003a8f06 	br	800467c <__alt_data_end+0xf800467c>
 8005c40:	01020074 	movhi	r4,2049
 8005c44:	210c9b84 	addi	r4,r4,12910
 8005c48:	d9003515 	stw	r4,212(sp)
 8005c4c:	003b7606 	br	8004a28 <__alt_data_end+0xf8004a28>
 8005c50:	d8802917 	ldw	r2,164(sp)
 8005c54:	00c00184 	movi	r3,6
 8005c58:	1880012e 	bgeu	r3,r2,8005c60 <___vfprintf_internal_r+0x1ca0>
 8005c5c:	1805883a 	mov	r2,r3
 8005c60:	d8802e15 	stw	r2,184(sp)
 8005c64:	1000ef16 	blt	r2,zero,8006024 <___vfprintf_internal_r+0x2064>
 8005c68:	04020074 	movhi	r16,2049
 8005c6c:	d8802a15 	stw	r2,168(sp)
 8005c70:	dcc02d15 	stw	r19,180(sp)
 8005c74:	d8002915 	stw	zero,164(sp)
 8005c78:	d8003215 	stw	zero,200(sp)
 8005c7c:	840c9504 	addi	r16,r16,12884
 8005c80:	0039883a 	mov	fp,zero
 8005c84:	003aa206 	br	8004710 <__alt_data_end+0xf8004710>
 8005c88:	0021883a 	mov	r16,zero
 8005c8c:	003e0706 	br	80054ac <__alt_data_end+0xf80054ac>
 8005c90:	d9002c17 	ldw	r4,176(sp)
 8005c94:	d9801e04 	addi	r6,sp,120
 8005c98:	b80b883a 	mov	r5,r23
 8005c9c:	800acc00 	call	800acc0 <__sprint_r>
 8005ca0:	1039c91e 	bne	r2,zero,80043c8 <__alt_data_end+0xf80043c8>
 8005ca4:	d8802617 	ldw	r2,152(sp)
 8005ca8:	d9403317 	ldw	r5,204(sp)
 8005cac:	d8c02017 	ldw	r3,128(sp)
 8005cb0:	da000404 	addi	r8,sp,16
 8005cb4:	2885c83a 	sub	r2,r5,r2
 8005cb8:	003dfb06 	br	80054a8 <__alt_data_end+0xf80054a8>
 8005cbc:	9080004c 	andi	r2,r18,1
 8005cc0:	103e8f1e 	bne	r2,zero,8005700 <__alt_data_end+0xf8005700>
 8005cc4:	d8802117 	ldw	r2,132(sp)
 8005cc8:	003e9e06 	br	8005744 <__alt_data_end+0xf8005744>
 8005ccc:	1025883a 	mov	r18,r2
 8005cd0:	0039883a 	mov	fp,zero
 8005cd4:	00800084 	movi	r2,2
 8005cd8:	003fd306 	br	8005c28 <__alt_data_end+0xf8005c28>
 8005cdc:	07000b44 	movi	fp,45
 8005ce0:	df002785 	stb	fp,158(sp)
 8005ce4:	003a4006 	br	80045e8 <__alt_data_end+0xf80045e8>
 8005ce8:	00c00b44 	movi	r3,45
 8005cec:	d8c02785 	stb	r3,158(sp)
 8005cf0:	d8802a15 	stw	r2,168(sp)
 8005cf4:	dc802b17 	ldw	r18,172(sp)
 8005cf8:	d8002915 	stw	zero,164(sp)
 8005cfc:	07000b44 	movi	fp,45
 8005d00:	003a8006 	br	8004704 <__alt_data_end+0xf8004704>
 8005d04:	04020074 	movhi	r16,2049
 8005d08:	840c8a04 	addi	r16,r16,12840
 8005d0c:	003f4706 	br	8005a2c <__alt_data_end+0xf8005a2c>
 8005d10:	d8c02d17 	ldw	r3,180(sp)
 8005d14:	d9002f17 	ldw	r4,188(sp)
 8005d18:	18800017 	ldw	r2,0(r3)
 8005d1c:	18c00104 	addi	r3,r3,4
 8005d20:	d8c02d15 	stw	r3,180(sp)
 8005d24:	11000015 	stw	r4,0(r2)
 8005d28:	0038dd06 	br	80040a0 <__alt_data_end+0xf80040a0>
 8005d2c:	dd802617 	ldw	r22,152(sp)
 8005d30:	00bfff44 	movi	r2,-3
 8005d34:	b0801c16 	blt	r22,r2,8005da8 <___vfprintf_internal_r+0x1de8>
 8005d38:	d9402917 	ldw	r5,164(sp)
 8005d3c:	2d801a16 	blt	r5,r22,8005da8 <___vfprintf_internal_r+0x1de8>
 8005d40:	dd803215 	stw	r22,200(sp)
 8005d44:	003e8906 	br	800576c <__alt_data_end+0xf800576c>
 8005d48:	01020074 	movhi	r4,2049
 8005d4c:	210c9784 	addi	r4,r4,12894
 8005d50:	d9002b15 	stw	r4,172(sp)
 8005d54:	003c9106 	br	8004f9c <__alt_data_end+0xf8004f9c>
 8005d58:	e005883a 	mov	r2,fp
 8005d5c:	003e7906 	br	8005744 <__alt_data_end+0xf8005744>
 8005d60:	d9402917 	ldw	r5,164(sp)
 8005d64:	df002783 	ldbu	fp,158(sp)
 8005d68:	dcc02d15 	stw	r19,180(sp)
 8005d6c:	d9402a15 	stw	r5,168(sp)
 8005d70:	d9402e15 	stw	r5,184(sp)
 8005d74:	d8002915 	stw	zero,164(sp)
 8005d78:	d8003215 	stw	zero,200(sp)
 8005d7c:	003a5d06 	br	80046f4 <__alt_data_end+0xf80046f4>
 8005d80:	9080004c 	andi	r2,r18,1
 8005d84:	0039883a 	mov	fp,zero
 8005d88:	10000426 	beq	r2,zero,8005d9c <___vfprintf_internal_r+0x1ddc>
 8005d8c:	00800c04 	movi	r2,48
 8005d90:	dc001dc4 	addi	r16,sp,119
 8005d94:	d8801dc5 	stb	r2,119(sp)
 8005d98:	003b8006 	br	8004b9c <__alt_data_end+0xf8004b9c>
 8005d9c:	d8002e15 	stw	zero,184(sp)
 8005da0:	dc001e04 	addi	r16,sp,120
 8005da4:	003a4d06 	br	80046dc <__alt_data_end+0xf80046dc>
 8005da8:	8c7fff84 	addi	r17,r17,-2
 8005dac:	b5bfffc4 	addi	r22,r22,-1
 8005db0:	dd802615 	stw	r22,152(sp)
 8005db4:	dc4022c5 	stb	r17,139(sp)
 8005db8:	b000bf16 	blt	r22,zero,80060b8 <___vfprintf_internal_r+0x20f8>
 8005dbc:	00800ac4 	movi	r2,43
 8005dc0:	d8802305 	stb	r2,140(sp)
 8005dc4:	00800244 	movi	r2,9
 8005dc8:	15807016 	blt	r2,r22,8005f8c <___vfprintf_internal_r+0x1fcc>
 8005dcc:	00800c04 	movi	r2,48
 8005dd0:	b5800c04 	addi	r22,r22,48
 8005dd4:	d8802345 	stb	r2,141(sp)
 8005dd8:	dd802385 	stb	r22,142(sp)
 8005ddc:	d88023c4 	addi	r2,sp,143
 8005de0:	df0022c4 	addi	fp,sp,139
 8005de4:	d8c03317 	ldw	r3,204(sp)
 8005de8:	1739c83a 	sub	fp,r2,fp
 8005dec:	d9003317 	ldw	r4,204(sp)
 8005df0:	e0c7883a 	add	r3,fp,r3
 8005df4:	df003a15 	stw	fp,232(sp)
 8005df8:	d8c02e15 	stw	r3,184(sp)
 8005dfc:	00800044 	movi	r2,1
 8005e00:	1100b30e 	bge	r2,r4,80060d0 <___vfprintf_internal_r+0x2110>
 8005e04:	d8c02e17 	ldw	r3,184(sp)
 8005e08:	18c00044 	addi	r3,r3,1
 8005e0c:	d8c02e15 	stw	r3,184(sp)
 8005e10:	1805883a 	mov	r2,r3
 8005e14:	1800ac16 	blt	r3,zero,80060c8 <___vfprintf_internal_r+0x2108>
 8005e18:	d8003215 	stw	zero,200(sp)
 8005e1c:	003e5d06 	br	8005794 <__alt_data_end+0xf8005794>
 8005e20:	d9002c17 	ldw	r4,176(sp)
 8005e24:	d9801e04 	addi	r6,sp,120
 8005e28:	b80b883a 	mov	r5,r23
 8005e2c:	800acc00 	call	800acc0 <__sprint_r>
 8005e30:	1039651e 	bne	r2,zero,80043c8 <__alt_data_end+0xf80043c8>
 8005e34:	dc402617 	ldw	r17,152(sp)
 8005e38:	d8c02017 	ldw	r3,128(sp)
 8005e3c:	d8801f17 	ldw	r2,124(sp)
 8005e40:	da000404 	addi	r8,sp,16
 8005e44:	003ed606 	br	80059a0 <__alt_data_end+0xf80059a0>
 8005e48:	582b883a 	mov	r21,r11
 8005e4c:	d8002915 	stw	zero,164(sp)
 8005e50:	0038bd06 	br	8004148 <__alt_data_end+0xf8004148>
 8005e54:	d8802917 	ldw	r2,164(sp)
 8005e58:	103e071e 	bne	r2,zero,8005678 <__alt_data_end+0xf8005678>
 8005e5c:	dc002915 	stw	r16,164(sp)
 8005e60:	003e0506 	br	8005678 <__alt_data_end+0xf8005678>
 8005e64:	d9002917 	ldw	r4,164(sp)
 8005e68:	20c00044 	addi	r3,r4,1
 8005e6c:	003e0f06 	br	80056ac <__alt_data_end+0xf80056ac>
 8005e70:	01400184 	movi	r5,6
 8005e74:	d9402915 	stw	r5,164(sp)
 8005e78:	003dff06 	br	8005678 <__alt_data_end+0xf8005678>
 8005e7c:	d8802104 	addi	r2,sp,132
 8005e80:	d8800315 	stw	r2,12(sp)
 8005e84:	d8802504 	addi	r2,sp,148
 8005e88:	d8800215 	stw	r2,8(sp)
 8005e8c:	d8802604 	addi	r2,sp,152
 8005e90:	d8800115 	stw	r2,4(sp)
 8005e94:	d8802917 	ldw	r2,164(sp)
 8005e98:	d9403617 	ldw	r5,216(sp)
 8005e9c:	d9002c17 	ldw	r4,176(sp)
 8005ea0:	d8800015 	stw	r2,0(sp)
 8005ea4:	01c000c4 	movi	r7,3
 8005ea8:	980d883a 	mov	r6,r19
 8005eac:	da003d15 	stw	r8,244(sp)
 8005eb0:	80065e40 	call	80065e4 <_dtoa_r>
 8005eb4:	d8c02917 	ldw	r3,164(sp)
 8005eb8:	da003d17 	ldw	r8,244(sp)
 8005ebc:	1021883a 	mov	r16,r2
 8005ec0:	10f9883a 	add	fp,r2,r3
 8005ec4:	81000007 	ldb	r4,0(r16)
 8005ec8:	00800c04 	movi	r2,48
 8005ecc:	20805e26 	beq	r4,r2,8006048 <___vfprintf_internal_r+0x2088>
 8005ed0:	d8c02617 	ldw	r3,152(sp)
 8005ed4:	e0f9883a 	add	fp,fp,r3
 8005ed8:	003e0a06 	br	8005704 <__alt_data_end+0xf8005704>
 8005edc:	00c00b44 	movi	r3,45
 8005ee0:	24e0003c 	xorhi	r19,r4,32768
 8005ee4:	d8c02a05 	stb	r3,168(sp)
 8005ee8:	003de906 	br	8005690 <__alt_data_end+0xf8005690>
 8005eec:	d8c03217 	ldw	r3,200(sp)
 8005ef0:	00c07a0e 	bge	zero,r3,80060dc <___vfprintf_internal_r+0x211c>
 8005ef4:	00800044 	movi	r2,1
 8005ef8:	d9003317 	ldw	r4,204(sp)
 8005efc:	1105883a 	add	r2,r2,r4
 8005f00:	d8802e15 	stw	r2,184(sp)
 8005f04:	10004e16 	blt	r2,zero,8006040 <___vfprintf_internal_r+0x2080>
 8005f08:	044019c4 	movi	r17,103
 8005f0c:	003e2106 	br	8005794 <__alt_data_end+0xf8005794>
 8005f10:	d9002917 	ldw	r4,164(sp)
 8005f14:	d8802104 	addi	r2,sp,132
 8005f18:	d8800315 	stw	r2,12(sp)
 8005f1c:	d9000015 	stw	r4,0(sp)
 8005f20:	d8802504 	addi	r2,sp,148
 8005f24:	d9403617 	ldw	r5,216(sp)
 8005f28:	d9002c17 	ldw	r4,176(sp)
 8005f2c:	d8800215 	stw	r2,8(sp)
 8005f30:	d8802604 	addi	r2,sp,152
 8005f34:	d8800115 	stw	r2,4(sp)
 8005f38:	01c000c4 	movi	r7,3
 8005f3c:	980d883a 	mov	r6,r19
 8005f40:	da003d15 	stw	r8,244(sp)
 8005f44:	80065e40 	call	80065e4 <_dtoa_r>
 8005f48:	d8c02917 	ldw	r3,164(sp)
 8005f4c:	da003d17 	ldw	r8,244(sp)
 8005f50:	1021883a 	mov	r16,r2
 8005f54:	00801184 	movi	r2,70
 8005f58:	80f9883a 	add	fp,r16,r3
 8005f5c:	88bfd926 	beq	r17,r2,8005ec4 <__alt_data_end+0xf8005ec4>
 8005f60:	003de806 	br	8005704 <__alt_data_end+0xf8005704>
 8005f64:	d9002917 	ldw	r4,164(sp)
 8005f68:	00c04d0e 	bge	zero,r3,80060a0 <___vfprintf_internal_r+0x20e0>
 8005f6c:	2000441e 	bne	r4,zero,8006080 <___vfprintf_internal_r+0x20c0>
 8005f70:	9480004c 	andi	r18,r18,1
 8005f74:	9000421e 	bne	r18,zero,8006080 <___vfprintf_internal_r+0x20c0>
 8005f78:	1805883a 	mov	r2,r3
 8005f7c:	18007016 	blt	r3,zero,8006140 <___vfprintf_internal_r+0x2180>
 8005f80:	d8c03217 	ldw	r3,200(sp)
 8005f84:	d8c02e15 	stw	r3,184(sp)
 8005f88:	003e0206 	br	8005794 <__alt_data_end+0xf8005794>
 8005f8c:	df0022c4 	addi	fp,sp,139
 8005f90:	dc002915 	stw	r16,164(sp)
 8005f94:	4027883a 	mov	r19,r8
 8005f98:	e021883a 	mov	r16,fp
 8005f9c:	b009883a 	mov	r4,r22
 8005fa0:	01400284 	movi	r5,10
 8005fa4:	800d6740 	call	800d674 <__modsi3>
 8005fa8:	10800c04 	addi	r2,r2,48
 8005fac:	843fffc4 	addi	r16,r16,-1
 8005fb0:	b009883a 	mov	r4,r22
 8005fb4:	01400284 	movi	r5,10
 8005fb8:	80800005 	stb	r2,0(r16)
 8005fbc:	800d5f00 	call	800d5f0 <__divsi3>
 8005fc0:	102d883a 	mov	r22,r2
 8005fc4:	00800244 	movi	r2,9
 8005fc8:	15bff416 	blt	r2,r22,8005f9c <__alt_data_end+0xf8005f9c>
 8005fcc:	9811883a 	mov	r8,r19
 8005fd0:	b0800c04 	addi	r2,r22,48
 8005fd4:	8027883a 	mov	r19,r16
 8005fd8:	997fffc4 	addi	r5,r19,-1
 8005fdc:	98bfffc5 	stb	r2,-1(r19)
 8005fe0:	dc002917 	ldw	r16,164(sp)
 8005fe4:	2f006a2e 	bgeu	r5,fp,8006190 <___vfprintf_internal_r+0x21d0>
 8005fe8:	d9c02384 	addi	r7,sp,142
 8005fec:	3ccfc83a 	sub	r7,r7,r19
 8005ff0:	d9002344 	addi	r4,sp,141
 8005ff4:	e1cf883a 	add	r7,fp,r7
 8005ff8:	00000106 	br	8006000 <___vfprintf_internal_r+0x2040>
 8005ffc:	28800003 	ldbu	r2,0(r5)
 8006000:	20800005 	stb	r2,0(r4)
 8006004:	21000044 	addi	r4,r4,1
 8006008:	29400044 	addi	r5,r5,1
 800600c:	393ffb1e 	bne	r7,r4,8005ffc <__alt_data_end+0xf8005ffc>
 8006010:	d8802304 	addi	r2,sp,140
 8006014:	14c5c83a 	sub	r2,r2,r19
 8006018:	d8c02344 	addi	r3,sp,141
 800601c:	1885883a 	add	r2,r3,r2
 8006020:	003f7006 	br	8005de4 <__alt_data_end+0xf8005de4>
 8006024:	0005883a 	mov	r2,zero
 8006028:	003f0f06 	br	8005c68 <__alt_data_end+0xf8005c68>
 800602c:	d8c03217 	ldw	r3,200(sp)
 8006030:	18c00044 	addi	r3,r3,1
 8006034:	d8c02e15 	stw	r3,184(sp)
 8006038:	1805883a 	mov	r2,r3
 800603c:	183fb20e 	bge	r3,zero,8005f08 <__alt_data_end+0xf8005f08>
 8006040:	0005883a 	mov	r2,zero
 8006044:	003fb006 	br	8005f08 <__alt_data_end+0xf8005f08>
 8006048:	d9003617 	ldw	r4,216(sp)
 800604c:	000d883a 	mov	r6,zero
 8006050:	000f883a 	mov	r7,zero
 8006054:	980b883a 	mov	r5,r19
 8006058:	d8c03c15 	stw	r3,240(sp)
 800605c:	da003d15 	stw	r8,244(sp)
 8006060:	800e9380 	call	800e938 <__eqdf2>
 8006064:	d8c03c17 	ldw	r3,240(sp)
 8006068:	da003d17 	ldw	r8,244(sp)
 800606c:	103f9826 	beq	r2,zero,8005ed0 <__alt_data_end+0xf8005ed0>
 8006070:	00800044 	movi	r2,1
 8006074:	10c7c83a 	sub	r3,r2,r3
 8006078:	d8c02615 	stw	r3,152(sp)
 800607c:	003f9506 	br	8005ed4 <__alt_data_end+0xf8005ed4>
 8006080:	d9002917 	ldw	r4,164(sp)
 8006084:	d8c03217 	ldw	r3,200(sp)
 8006088:	20800044 	addi	r2,r4,1
 800608c:	1885883a 	add	r2,r3,r2
 8006090:	d8802e15 	stw	r2,184(sp)
 8006094:	103dbf0e 	bge	r2,zero,8005794 <__alt_data_end+0xf8005794>
 8006098:	0005883a 	mov	r2,zero
 800609c:	003dbd06 	br	8005794 <__alt_data_end+0xf8005794>
 80060a0:	2000211e 	bne	r4,zero,8006128 <___vfprintf_internal_r+0x2168>
 80060a4:	9480004c 	andi	r18,r18,1
 80060a8:	90001f1e 	bne	r18,zero,8006128 <___vfprintf_internal_r+0x2168>
 80060ac:	00800044 	movi	r2,1
 80060b0:	d8802e15 	stw	r2,184(sp)
 80060b4:	003db706 	br	8005794 <__alt_data_end+0xf8005794>
 80060b8:	00800b44 	movi	r2,45
 80060bc:	05adc83a 	sub	r22,zero,r22
 80060c0:	d8802305 	stb	r2,140(sp)
 80060c4:	003f3f06 	br	8005dc4 <__alt_data_end+0xf8005dc4>
 80060c8:	0005883a 	mov	r2,zero
 80060cc:	003f5206 	br	8005e18 <__alt_data_end+0xf8005e18>
 80060d0:	90a4703a 	and	r18,r18,r2
 80060d4:	903f4e26 	beq	r18,zero,8005e10 <__alt_data_end+0xf8005e10>
 80060d8:	003f4a06 	br	8005e04 <__alt_data_end+0xf8005e04>
 80060dc:	00800084 	movi	r2,2
 80060e0:	10c5c83a 	sub	r2,r2,r3
 80060e4:	003f8406 	br	8005ef8 <__alt_data_end+0xf8005ef8>
 80060e8:	d8802d17 	ldw	r2,180(sp)
 80060ec:	d9002d17 	ldw	r4,180(sp)
 80060f0:	ac400043 	ldbu	r17,1(r21)
 80060f4:	10800017 	ldw	r2,0(r2)
 80060f8:	582b883a 	mov	r21,r11
 80060fc:	d8802915 	stw	r2,164(sp)
 8006100:	20800104 	addi	r2,r4,4
 8006104:	d9002917 	ldw	r4,164(sp)
 8006108:	d8802d15 	stw	r2,180(sp)
 800610c:	203e7a0e 	bge	r4,zero,8005af8 <__alt_data_end+0xf8005af8>
 8006110:	8c403fcc 	andi	r17,r17,255
 8006114:	00bfffc4 	movi	r2,-1
 8006118:	8c40201c 	xori	r17,r17,128
 800611c:	d8802915 	stw	r2,164(sp)
 8006120:	8c7fe004 	addi	r17,r17,-128
 8006124:	00380706 	br	8004144 <__alt_data_end+0xf8004144>
 8006128:	d8c02917 	ldw	r3,164(sp)
 800612c:	18c00084 	addi	r3,r3,2
 8006130:	d8c02e15 	stw	r3,184(sp)
 8006134:	1805883a 	mov	r2,r3
 8006138:	183d960e 	bge	r3,zero,8005794 <__alt_data_end+0xf8005794>
 800613c:	003fd606 	br	8006098 <__alt_data_end+0xf8006098>
 8006140:	0005883a 	mov	r2,zero
 8006144:	003f8e06 	br	8005f80 <__alt_data_end+0xf8005f80>
 8006148:	9080004c 	andi	r2,r18,1
 800614c:	103f811e 	bne	r2,zero,8005f54 <__alt_data_end+0xf8005f54>
 8006150:	d8802117 	ldw	r2,132(sp)
 8006154:	1405c83a 	sub	r2,r2,r16
 8006158:	d8803315 	stw	r2,204(sp)
 800615c:	b47ef326 	beq	r22,r17,8005d2c <__alt_data_end+0xf8005d2c>
 8006160:	dd802617 	ldw	r22,152(sp)
 8006164:	003f1106 	br	8005dac <__alt_data_end+0xf8005dac>
 8006168:	d9c02785 	stb	r7,158(sp)
 800616c:	00390406 	br	8004580 <__alt_data_end+0xf8004580>
 8006170:	d9c02785 	stb	r7,158(sp)
 8006174:	0038d306 	br	80044c4 <__alt_data_end+0xf80044c4>
 8006178:	d9c02785 	stb	r7,158(sp)
 800617c:	003a6106 	br	8004b04 <__alt_data_end+0xf8004b04>
 8006180:	d9c02785 	stb	r7,158(sp)
 8006184:	003af806 	br	8004d68 <__alt_data_end+0xf8004d68>
 8006188:	0005883a 	mov	r2,zero
 800618c:	003d7e06 	br	8005788 <__alt_data_end+0xf8005788>
 8006190:	d8802344 	addi	r2,sp,141
 8006194:	003f1306 	br	8005de4 <__alt_data_end+0xf8005de4>
 8006198:	d9c02785 	stb	r7,158(sp)
 800619c:	00392306 	br	800462c <__alt_data_end+0xf800462c>
 80061a0:	d9c02785 	stb	r7,158(sp)
 80061a4:	003aa906 	br	8004c4c <__alt_data_end+0xf8004c4c>
 80061a8:	d9c02785 	stb	r7,158(sp)
 80061ac:	003a3d06 	br	8004aa4 <__alt_data_end+0xf8004aa4>
 80061b0:	d9c02785 	stb	r7,158(sp)
 80061b4:	003aca06 	br	8004ce0 <__alt_data_end+0xf8004ce0>

080061b8 <__vfprintf_internal>:
 80061b8:	00820074 	movhi	r2,2049
 80061bc:	1093ff04 	addi	r2,r2,20476
 80061c0:	300f883a 	mov	r7,r6
 80061c4:	280d883a 	mov	r6,r5
 80061c8:	200b883a 	mov	r5,r4
 80061cc:	11000017 	ldw	r4,0(r2)
 80061d0:	8003fc01 	jmpi	8003fc0 <___vfprintf_internal_r>

080061d4 <__sbprintf>:
 80061d4:	2880030b 	ldhu	r2,12(r5)
 80061d8:	2ac01917 	ldw	r11,100(r5)
 80061dc:	2a80038b 	ldhu	r10,14(r5)
 80061e0:	2a400717 	ldw	r9,28(r5)
 80061e4:	2a000917 	ldw	r8,36(r5)
 80061e8:	defee204 	addi	sp,sp,-1144
 80061ec:	00c10004 	movi	r3,1024
 80061f0:	dc011a15 	stw	r16,1128(sp)
 80061f4:	10bfff4c 	andi	r2,r2,65533
 80061f8:	2821883a 	mov	r16,r5
 80061fc:	d8cb883a 	add	r5,sp,r3
 8006200:	dc811c15 	stw	r18,1136(sp)
 8006204:	dc411b15 	stw	r17,1132(sp)
 8006208:	dfc11d15 	stw	ra,1140(sp)
 800620c:	2025883a 	mov	r18,r4
 8006210:	d881030d 	sth	r2,1036(sp)
 8006214:	dac11915 	stw	r11,1124(sp)
 8006218:	da81038d 	sth	r10,1038(sp)
 800621c:	da410715 	stw	r9,1052(sp)
 8006220:	da010915 	stw	r8,1060(sp)
 8006224:	dec10015 	stw	sp,1024(sp)
 8006228:	dec10415 	stw	sp,1040(sp)
 800622c:	d8c10215 	stw	r3,1032(sp)
 8006230:	d8c10515 	stw	r3,1044(sp)
 8006234:	d8010615 	stw	zero,1048(sp)
 8006238:	8003fc00 	call	8003fc0 <___vfprintf_internal_r>
 800623c:	1023883a 	mov	r17,r2
 8006240:	10000416 	blt	r2,zero,8006254 <__sbprintf+0x80>
 8006244:	d9410004 	addi	r5,sp,1024
 8006248:	9009883a 	mov	r4,r18
 800624c:	8007e880 	call	8007e88 <_fflush_r>
 8006250:	10000d1e 	bne	r2,zero,8006288 <__sbprintf+0xb4>
 8006254:	d881030b 	ldhu	r2,1036(sp)
 8006258:	1080100c 	andi	r2,r2,64
 800625c:	10000326 	beq	r2,zero,800626c <__sbprintf+0x98>
 8006260:	8080030b 	ldhu	r2,12(r16)
 8006264:	10801014 	ori	r2,r2,64
 8006268:	8080030d 	sth	r2,12(r16)
 800626c:	8805883a 	mov	r2,r17
 8006270:	dfc11d17 	ldw	ra,1140(sp)
 8006274:	dc811c17 	ldw	r18,1136(sp)
 8006278:	dc411b17 	ldw	r17,1132(sp)
 800627c:	dc011a17 	ldw	r16,1128(sp)
 8006280:	dec11e04 	addi	sp,sp,1144
 8006284:	f800283a 	ret
 8006288:	047fffc4 	movi	r17,-1
 800628c:	003ff106 	br	8006254 <__alt_data_end+0xf8006254>

08006290 <__swsetup_r>:
 8006290:	00820074 	movhi	r2,2049
 8006294:	defffd04 	addi	sp,sp,-12
 8006298:	1093ff04 	addi	r2,r2,20476
 800629c:	dc400115 	stw	r17,4(sp)
 80062a0:	2023883a 	mov	r17,r4
 80062a4:	11000017 	ldw	r4,0(r2)
 80062a8:	dc000015 	stw	r16,0(sp)
 80062ac:	dfc00215 	stw	ra,8(sp)
 80062b0:	2821883a 	mov	r16,r5
 80062b4:	20000226 	beq	r4,zero,80062c0 <__swsetup_r+0x30>
 80062b8:	20800e17 	ldw	r2,56(r4)
 80062bc:	10003126 	beq	r2,zero,8006384 <__swsetup_r+0xf4>
 80062c0:	8080030b 	ldhu	r2,12(r16)
 80062c4:	10c0020c 	andi	r3,r2,8
 80062c8:	1009883a 	mov	r4,r2
 80062cc:	18000f26 	beq	r3,zero,800630c <__swsetup_r+0x7c>
 80062d0:	80c00417 	ldw	r3,16(r16)
 80062d4:	18001526 	beq	r3,zero,800632c <__swsetup_r+0x9c>
 80062d8:	1100004c 	andi	r4,r2,1
 80062dc:	20001c1e 	bne	r4,zero,8006350 <__swsetup_r+0xc0>
 80062e0:	1080008c 	andi	r2,r2,2
 80062e4:	1000291e 	bne	r2,zero,800638c <__swsetup_r+0xfc>
 80062e8:	80800517 	ldw	r2,20(r16)
 80062ec:	80800215 	stw	r2,8(r16)
 80062f0:	18001c26 	beq	r3,zero,8006364 <__swsetup_r+0xd4>
 80062f4:	0005883a 	mov	r2,zero
 80062f8:	dfc00217 	ldw	ra,8(sp)
 80062fc:	dc400117 	ldw	r17,4(sp)
 8006300:	dc000017 	ldw	r16,0(sp)
 8006304:	dec00304 	addi	sp,sp,12
 8006308:	f800283a 	ret
 800630c:	2080040c 	andi	r2,r4,16
 8006310:	10002e26 	beq	r2,zero,80063cc <__swsetup_r+0x13c>
 8006314:	2080010c 	andi	r2,r4,4
 8006318:	10001e1e 	bne	r2,zero,8006394 <__swsetup_r+0x104>
 800631c:	80c00417 	ldw	r3,16(r16)
 8006320:	20800214 	ori	r2,r4,8
 8006324:	8080030d 	sth	r2,12(r16)
 8006328:	183feb1e 	bne	r3,zero,80062d8 <__alt_data_end+0xf80062d8>
 800632c:	1100a00c 	andi	r4,r2,640
 8006330:	01408004 	movi	r5,512
 8006334:	217fe826 	beq	r4,r5,80062d8 <__alt_data_end+0xf80062d8>
 8006338:	800b883a 	mov	r5,r16
 800633c:	8809883a 	mov	r4,r17
 8006340:	8008e080 	call	8008e08 <__smakebuf_r>
 8006344:	8080030b 	ldhu	r2,12(r16)
 8006348:	80c00417 	ldw	r3,16(r16)
 800634c:	003fe206 	br	80062d8 <__alt_data_end+0xf80062d8>
 8006350:	80800517 	ldw	r2,20(r16)
 8006354:	80000215 	stw	zero,8(r16)
 8006358:	0085c83a 	sub	r2,zero,r2
 800635c:	80800615 	stw	r2,24(r16)
 8006360:	183fe41e 	bne	r3,zero,80062f4 <__alt_data_end+0xf80062f4>
 8006364:	80c0030b 	ldhu	r3,12(r16)
 8006368:	0005883a 	mov	r2,zero
 800636c:	1900200c 	andi	r4,r3,128
 8006370:	203fe126 	beq	r4,zero,80062f8 <__alt_data_end+0xf80062f8>
 8006374:	18c01014 	ori	r3,r3,64
 8006378:	80c0030d 	sth	r3,12(r16)
 800637c:	00bfffc4 	movi	r2,-1
 8006380:	003fdd06 	br	80062f8 <__alt_data_end+0xf80062f8>
 8006384:	80082640 	call	8008264 <__sinit>
 8006388:	003fcd06 	br	80062c0 <__alt_data_end+0xf80062c0>
 800638c:	0005883a 	mov	r2,zero
 8006390:	003fd606 	br	80062ec <__alt_data_end+0xf80062ec>
 8006394:	81400c17 	ldw	r5,48(r16)
 8006398:	28000626 	beq	r5,zero,80063b4 <__swsetup_r+0x124>
 800639c:	80801004 	addi	r2,r16,64
 80063a0:	28800326 	beq	r5,r2,80063b0 <__swsetup_r+0x120>
 80063a4:	8809883a 	mov	r4,r17
 80063a8:	80083d80 	call	80083d8 <_free_r>
 80063ac:	8100030b 	ldhu	r4,12(r16)
 80063b0:	80000c15 	stw	zero,48(r16)
 80063b4:	80c00417 	ldw	r3,16(r16)
 80063b8:	00bff6c4 	movi	r2,-37
 80063bc:	1108703a 	and	r4,r2,r4
 80063c0:	80000115 	stw	zero,4(r16)
 80063c4:	80c00015 	stw	r3,0(r16)
 80063c8:	003fd506 	br	8006320 <__alt_data_end+0xf8006320>
 80063cc:	00800244 	movi	r2,9
 80063d0:	88800015 	stw	r2,0(r17)
 80063d4:	20801014 	ori	r2,r4,64
 80063d8:	8080030d 	sth	r2,12(r16)
 80063dc:	00bfffc4 	movi	r2,-1
 80063e0:	003fc506 	br	80062f8 <__alt_data_end+0xf80062f8>

080063e4 <quorem>:
 80063e4:	defff704 	addi	sp,sp,-36
 80063e8:	dc800215 	stw	r18,8(sp)
 80063ec:	20800417 	ldw	r2,16(r4)
 80063f0:	2c800417 	ldw	r18,16(r5)
 80063f4:	dfc00815 	stw	ra,32(sp)
 80063f8:	ddc00715 	stw	r23,28(sp)
 80063fc:	dd800615 	stw	r22,24(sp)
 8006400:	dd400515 	stw	r21,20(sp)
 8006404:	dd000415 	stw	r20,16(sp)
 8006408:	dcc00315 	stw	r19,12(sp)
 800640c:	dc400115 	stw	r17,4(sp)
 8006410:	dc000015 	stw	r16,0(sp)
 8006414:	14807116 	blt	r2,r18,80065dc <quorem+0x1f8>
 8006418:	94bfffc4 	addi	r18,r18,-1
 800641c:	94ad883a 	add	r22,r18,r18
 8006420:	b5ad883a 	add	r22,r22,r22
 8006424:	2c400504 	addi	r17,r5,20
 8006428:	8da9883a 	add	r20,r17,r22
 800642c:	25400504 	addi	r21,r4,20
 8006430:	282f883a 	mov	r23,r5
 8006434:	adad883a 	add	r22,r21,r22
 8006438:	a1400017 	ldw	r5,0(r20)
 800643c:	2021883a 	mov	r16,r4
 8006440:	b1000017 	ldw	r4,0(r22)
 8006444:	29400044 	addi	r5,r5,1
 8006448:	800d6e80 	call	800d6e8 <__udivsi3>
 800644c:	1027883a 	mov	r19,r2
 8006450:	10002c26 	beq	r2,zero,8006504 <quorem+0x120>
 8006454:	a813883a 	mov	r9,r21
 8006458:	880b883a 	mov	r5,r17
 800645c:	0009883a 	mov	r4,zero
 8006460:	000d883a 	mov	r6,zero
 8006464:	2a000017 	ldw	r8,0(r5)
 8006468:	49c00017 	ldw	r7,0(r9)
 800646c:	29400104 	addi	r5,r5,4
 8006470:	40bfffcc 	andi	r2,r8,65535
 8006474:	14c5383a 	mul	r2,r2,r19
 8006478:	4010d43a 	srli	r8,r8,16
 800647c:	38ffffcc 	andi	r3,r7,65535
 8006480:	1105883a 	add	r2,r2,r4
 8006484:	1008d43a 	srli	r4,r2,16
 8006488:	44d1383a 	mul	r8,r8,r19
 800648c:	198d883a 	add	r6,r3,r6
 8006490:	10ffffcc 	andi	r3,r2,65535
 8006494:	30c7c83a 	sub	r3,r6,r3
 8006498:	380ed43a 	srli	r7,r7,16
 800649c:	4105883a 	add	r2,r8,r4
 80064a0:	180dd43a 	srai	r6,r3,16
 80064a4:	113fffcc 	andi	r4,r2,65535
 80064a8:	390fc83a 	sub	r7,r7,r4
 80064ac:	398d883a 	add	r6,r7,r6
 80064b0:	300e943a 	slli	r7,r6,16
 80064b4:	18ffffcc 	andi	r3,r3,65535
 80064b8:	1008d43a 	srli	r4,r2,16
 80064bc:	38ceb03a 	or	r7,r7,r3
 80064c0:	49c00015 	stw	r7,0(r9)
 80064c4:	300dd43a 	srai	r6,r6,16
 80064c8:	4a400104 	addi	r9,r9,4
 80064cc:	a17fe52e 	bgeu	r20,r5,8006464 <__alt_data_end+0xf8006464>
 80064d0:	b0800017 	ldw	r2,0(r22)
 80064d4:	10000b1e 	bne	r2,zero,8006504 <quorem+0x120>
 80064d8:	b0bfff04 	addi	r2,r22,-4
 80064dc:	a880082e 	bgeu	r21,r2,8006500 <quorem+0x11c>
 80064e0:	b0ffff17 	ldw	r3,-4(r22)
 80064e4:	18000326 	beq	r3,zero,80064f4 <quorem+0x110>
 80064e8:	00000506 	br	8006500 <quorem+0x11c>
 80064ec:	10c00017 	ldw	r3,0(r2)
 80064f0:	1800031e 	bne	r3,zero,8006500 <quorem+0x11c>
 80064f4:	10bfff04 	addi	r2,r2,-4
 80064f8:	94bfffc4 	addi	r18,r18,-1
 80064fc:	a8bffb36 	bltu	r21,r2,80064ec <__alt_data_end+0xf80064ec>
 8006500:	84800415 	stw	r18,16(r16)
 8006504:	b80b883a 	mov	r5,r23
 8006508:	8009883a 	mov	r4,r16
 800650c:	8009c140 	call	8009c14 <__mcmp>
 8006510:	10002616 	blt	r2,zero,80065ac <quorem+0x1c8>
 8006514:	9cc00044 	addi	r19,r19,1
 8006518:	a805883a 	mov	r2,r21
 800651c:	000b883a 	mov	r5,zero
 8006520:	11000017 	ldw	r4,0(r2)
 8006524:	89800017 	ldw	r6,0(r17)
 8006528:	10800104 	addi	r2,r2,4
 800652c:	20ffffcc 	andi	r3,r4,65535
 8006530:	194b883a 	add	r5,r3,r5
 8006534:	30ffffcc 	andi	r3,r6,65535
 8006538:	28c7c83a 	sub	r3,r5,r3
 800653c:	300cd43a 	srli	r6,r6,16
 8006540:	2008d43a 	srli	r4,r4,16
 8006544:	180bd43a 	srai	r5,r3,16
 8006548:	18ffffcc 	andi	r3,r3,65535
 800654c:	2189c83a 	sub	r4,r4,r6
 8006550:	2149883a 	add	r4,r4,r5
 8006554:	200c943a 	slli	r6,r4,16
 8006558:	8c400104 	addi	r17,r17,4
 800655c:	200bd43a 	srai	r5,r4,16
 8006560:	30c6b03a 	or	r3,r6,r3
 8006564:	10ffff15 	stw	r3,-4(r2)
 8006568:	a47fed2e 	bgeu	r20,r17,8006520 <__alt_data_end+0xf8006520>
 800656c:	9485883a 	add	r2,r18,r18
 8006570:	1085883a 	add	r2,r2,r2
 8006574:	a887883a 	add	r3,r21,r2
 8006578:	18800017 	ldw	r2,0(r3)
 800657c:	10000b1e 	bne	r2,zero,80065ac <quorem+0x1c8>
 8006580:	18bfff04 	addi	r2,r3,-4
 8006584:	a880082e 	bgeu	r21,r2,80065a8 <quorem+0x1c4>
 8006588:	18ffff17 	ldw	r3,-4(r3)
 800658c:	18000326 	beq	r3,zero,800659c <quorem+0x1b8>
 8006590:	00000506 	br	80065a8 <quorem+0x1c4>
 8006594:	10c00017 	ldw	r3,0(r2)
 8006598:	1800031e 	bne	r3,zero,80065a8 <quorem+0x1c4>
 800659c:	10bfff04 	addi	r2,r2,-4
 80065a0:	94bfffc4 	addi	r18,r18,-1
 80065a4:	a8bffb36 	bltu	r21,r2,8006594 <__alt_data_end+0xf8006594>
 80065a8:	84800415 	stw	r18,16(r16)
 80065ac:	9805883a 	mov	r2,r19
 80065b0:	dfc00817 	ldw	ra,32(sp)
 80065b4:	ddc00717 	ldw	r23,28(sp)
 80065b8:	dd800617 	ldw	r22,24(sp)
 80065bc:	dd400517 	ldw	r21,20(sp)
 80065c0:	dd000417 	ldw	r20,16(sp)
 80065c4:	dcc00317 	ldw	r19,12(sp)
 80065c8:	dc800217 	ldw	r18,8(sp)
 80065cc:	dc400117 	ldw	r17,4(sp)
 80065d0:	dc000017 	ldw	r16,0(sp)
 80065d4:	dec00904 	addi	sp,sp,36
 80065d8:	f800283a 	ret
 80065dc:	0005883a 	mov	r2,zero
 80065e0:	003ff306 	br	80065b0 <__alt_data_end+0xf80065b0>

080065e4 <_dtoa_r>:
 80065e4:	20801017 	ldw	r2,64(r4)
 80065e8:	deffde04 	addi	sp,sp,-136
 80065ec:	df002015 	stw	fp,128(sp)
 80065f0:	dcc01b15 	stw	r19,108(sp)
 80065f4:	dc801a15 	stw	r18,104(sp)
 80065f8:	dc401915 	stw	r17,100(sp)
 80065fc:	dc001815 	stw	r16,96(sp)
 8006600:	dfc02115 	stw	ra,132(sp)
 8006604:	ddc01f15 	stw	r23,124(sp)
 8006608:	dd801e15 	stw	r22,120(sp)
 800660c:	dd401d15 	stw	r21,116(sp)
 8006610:	dd001c15 	stw	r20,112(sp)
 8006614:	d9c00315 	stw	r7,12(sp)
 8006618:	2039883a 	mov	fp,r4
 800661c:	3023883a 	mov	r17,r6
 8006620:	2825883a 	mov	r18,r5
 8006624:	dc002417 	ldw	r16,144(sp)
 8006628:	3027883a 	mov	r19,r6
 800662c:	10000826 	beq	r2,zero,8006650 <_dtoa_r+0x6c>
 8006630:	21801117 	ldw	r6,68(r4)
 8006634:	00c00044 	movi	r3,1
 8006638:	100b883a 	mov	r5,r2
 800663c:	1986983a 	sll	r3,r3,r6
 8006640:	11800115 	stw	r6,4(r2)
 8006644:	10c00215 	stw	r3,8(r2)
 8006648:	80093f40 	call	80093f4 <_Bfree>
 800664c:	e0001015 	stw	zero,64(fp)
 8006650:	88002e16 	blt	r17,zero,800670c <_dtoa_r+0x128>
 8006654:	80000015 	stw	zero,0(r16)
 8006658:	889ffc2c 	andhi	r2,r17,32752
 800665c:	00dffc34 	movhi	r3,32752
 8006660:	10c01c26 	beq	r2,r3,80066d4 <_dtoa_r+0xf0>
 8006664:	000d883a 	mov	r6,zero
 8006668:	000f883a 	mov	r7,zero
 800666c:	9009883a 	mov	r4,r18
 8006670:	980b883a 	mov	r5,r19
 8006674:	800e9380 	call	800e938 <__eqdf2>
 8006678:	10002b1e 	bne	r2,zero,8006728 <_dtoa_r+0x144>
 800667c:	d9c02317 	ldw	r7,140(sp)
 8006680:	00800044 	movi	r2,1
 8006684:	38800015 	stw	r2,0(r7)
 8006688:	d8802517 	ldw	r2,148(sp)
 800668c:	10019e26 	beq	r2,zero,8006d08 <_dtoa_r+0x724>
 8006690:	d8c02517 	ldw	r3,148(sp)
 8006694:	00820074 	movhi	r2,2049
 8006698:	108c9744 	addi	r2,r2,12893
 800669c:	18800015 	stw	r2,0(r3)
 80066a0:	10bfffc4 	addi	r2,r2,-1
 80066a4:	dfc02117 	ldw	ra,132(sp)
 80066a8:	df002017 	ldw	fp,128(sp)
 80066ac:	ddc01f17 	ldw	r23,124(sp)
 80066b0:	dd801e17 	ldw	r22,120(sp)
 80066b4:	dd401d17 	ldw	r21,116(sp)
 80066b8:	dd001c17 	ldw	r20,112(sp)
 80066bc:	dcc01b17 	ldw	r19,108(sp)
 80066c0:	dc801a17 	ldw	r18,104(sp)
 80066c4:	dc401917 	ldw	r17,100(sp)
 80066c8:	dc001817 	ldw	r16,96(sp)
 80066cc:	dec02204 	addi	sp,sp,136
 80066d0:	f800283a 	ret
 80066d4:	d8c02317 	ldw	r3,140(sp)
 80066d8:	0089c3c4 	movi	r2,9999
 80066dc:	18800015 	stw	r2,0(r3)
 80066e0:	90017726 	beq	r18,zero,8006cc0 <_dtoa_r+0x6dc>
 80066e4:	00820074 	movhi	r2,2049
 80066e8:	108ca304 	addi	r2,r2,12940
 80066ec:	d9002517 	ldw	r4,148(sp)
 80066f0:	203fec26 	beq	r4,zero,80066a4 <__alt_data_end+0xf80066a4>
 80066f4:	10c000c7 	ldb	r3,3(r2)
 80066f8:	1801781e 	bne	r3,zero,8006cdc <_dtoa_r+0x6f8>
 80066fc:	10c000c4 	addi	r3,r2,3
 8006700:	d9802517 	ldw	r6,148(sp)
 8006704:	30c00015 	stw	r3,0(r6)
 8006708:	003fe606 	br	80066a4 <__alt_data_end+0xf80066a4>
 800670c:	04e00034 	movhi	r19,32768
 8006710:	9cffffc4 	addi	r19,r19,-1
 8006714:	00800044 	movi	r2,1
 8006718:	8ce6703a 	and	r19,r17,r19
 800671c:	80800015 	stw	r2,0(r16)
 8006720:	9823883a 	mov	r17,r19
 8006724:	003fcc06 	br	8006658 <__alt_data_end+0xf8006658>
 8006728:	d8800204 	addi	r2,sp,8
 800672c:	d8800015 	stw	r2,0(sp)
 8006730:	d9c00104 	addi	r7,sp,4
 8006734:	900b883a 	mov	r5,r18
 8006738:	980d883a 	mov	r6,r19
 800673c:	e009883a 	mov	r4,fp
 8006740:	8820d53a 	srli	r16,r17,20
 8006744:	8009fe00 	call	8009fe0 <__d2b>
 8006748:	d8800915 	stw	r2,36(sp)
 800674c:	8001651e 	bne	r16,zero,8006ce4 <_dtoa_r+0x700>
 8006750:	dd800217 	ldw	r22,8(sp)
 8006754:	dc000117 	ldw	r16,4(sp)
 8006758:	00800804 	movi	r2,32
 800675c:	b421883a 	add	r16,r22,r16
 8006760:	80c10c84 	addi	r3,r16,1074
 8006764:	10c2d10e 	bge	r2,r3,80072ac <_dtoa_r+0xcc8>
 8006768:	00801004 	movi	r2,64
 800676c:	81010484 	addi	r4,r16,1042
 8006770:	10c7c83a 	sub	r3,r2,r3
 8006774:	9108d83a 	srl	r4,r18,r4
 8006778:	88e2983a 	sll	r17,r17,r3
 800677c:	2448b03a 	or	r4,r4,r17
 8006780:	800fd000 	call	800fd00 <__floatunsidf>
 8006784:	017f8434 	movhi	r5,65040
 8006788:	01800044 	movi	r6,1
 800678c:	1009883a 	mov	r4,r2
 8006790:	194b883a 	add	r5,r3,r5
 8006794:	843fffc4 	addi	r16,r16,-1
 8006798:	d9801115 	stw	r6,68(sp)
 800679c:	000d883a 	mov	r6,zero
 80067a0:	01cffe34 	movhi	r7,16376
 80067a4:	800f2a80 	call	800f2a8 <__subdf3>
 80067a8:	0198dbf4 	movhi	r6,25455
 80067ac:	01cff4f4 	movhi	r7,16339
 80067b0:	3190d844 	addi	r6,r6,17249
 80067b4:	39e1e9c4 	addi	r7,r7,-30809
 80067b8:	1009883a 	mov	r4,r2
 80067bc:	180b883a 	mov	r5,r3
 80067c0:	800eb900 	call	800eb90 <__muldf3>
 80067c4:	01a2d874 	movhi	r6,35681
 80067c8:	01cff1f4 	movhi	r7,16327
 80067cc:	31b22cc4 	addi	r6,r6,-14157
 80067d0:	39e28a04 	addi	r7,r7,-30168
 80067d4:	180b883a 	mov	r5,r3
 80067d8:	1009883a 	mov	r4,r2
 80067dc:	800d7a40 	call	800d7a4 <__adddf3>
 80067e0:	8009883a 	mov	r4,r16
 80067e4:	1029883a 	mov	r20,r2
 80067e8:	1823883a 	mov	r17,r3
 80067ec:	800fc240 	call	800fc24 <__floatsidf>
 80067f0:	019427f4 	movhi	r6,20639
 80067f4:	01cff4f4 	movhi	r7,16339
 80067f8:	319e7ec4 	addi	r6,r6,31227
 80067fc:	39d104c4 	addi	r7,r7,17427
 8006800:	1009883a 	mov	r4,r2
 8006804:	180b883a 	mov	r5,r3
 8006808:	800eb900 	call	800eb90 <__muldf3>
 800680c:	100d883a 	mov	r6,r2
 8006810:	180f883a 	mov	r7,r3
 8006814:	a009883a 	mov	r4,r20
 8006818:	880b883a 	mov	r5,r17
 800681c:	800d7a40 	call	800d7a4 <__adddf3>
 8006820:	1009883a 	mov	r4,r2
 8006824:	180b883a 	mov	r5,r3
 8006828:	1029883a 	mov	r20,r2
 800682c:	1823883a 	mov	r17,r3
 8006830:	800fba40 	call	800fba4 <__fixdfsi>
 8006834:	000d883a 	mov	r6,zero
 8006838:	000f883a 	mov	r7,zero
 800683c:	a009883a 	mov	r4,r20
 8006840:	880b883a 	mov	r5,r17
 8006844:	d8800515 	stw	r2,20(sp)
 8006848:	800ea9c0 	call	800ea9c <__ledf2>
 800684c:	10028716 	blt	r2,zero,800726c <_dtoa_r+0xc88>
 8006850:	d8c00517 	ldw	r3,20(sp)
 8006854:	00800584 	movi	r2,22
 8006858:	10c27536 	bltu	r2,r3,8007230 <_dtoa_r+0xc4c>
 800685c:	180490fa 	slli	r2,r3,3
 8006860:	00c20074 	movhi	r3,2049
 8006864:	18ccbf04 	addi	r3,r3,13052
 8006868:	1885883a 	add	r2,r3,r2
 800686c:	11000017 	ldw	r4,0(r2)
 8006870:	11400117 	ldw	r5,4(r2)
 8006874:	900d883a 	mov	r6,r18
 8006878:	980f883a 	mov	r7,r19
 800687c:	800e9c00 	call	800e9c0 <__gedf2>
 8006880:	00828d0e 	bge	zero,r2,80072b8 <_dtoa_r+0xcd4>
 8006884:	d9000517 	ldw	r4,20(sp)
 8006888:	d8000e15 	stw	zero,56(sp)
 800688c:	213fffc4 	addi	r4,r4,-1
 8006890:	d9000515 	stw	r4,20(sp)
 8006894:	b42dc83a 	sub	r22,r22,r16
 8006898:	b5bfffc4 	addi	r22,r22,-1
 800689c:	b0026f16 	blt	r22,zero,800725c <_dtoa_r+0xc78>
 80068a0:	d8000815 	stw	zero,32(sp)
 80068a4:	d9c00517 	ldw	r7,20(sp)
 80068a8:	38026416 	blt	r7,zero,800723c <_dtoa_r+0xc58>
 80068ac:	b1ed883a 	add	r22,r22,r7
 80068b0:	d9c00d15 	stw	r7,52(sp)
 80068b4:	d8000a15 	stw	zero,40(sp)
 80068b8:	d9800317 	ldw	r6,12(sp)
 80068bc:	00800244 	movi	r2,9
 80068c0:	11811436 	bltu	r2,r6,8006d14 <_dtoa_r+0x730>
 80068c4:	00800144 	movi	r2,5
 80068c8:	1184e10e 	bge	r2,r6,8007c50 <_dtoa_r+0x166c>
 80068cc:	31bfff04 	addi	r6,r6,-4
 80068d0:	d9800315 	stw	r6,12(sp)
 80068d4:	0023883a 	mov	r17,zero
 80068d8:	d9800317 	ldw	r6,12(sp)
 80068dc:	008000c4 	movi	r2,3
 80068e0:	30836726 	beq	r6,r2,8007680 <_dtoa_r+0x109c>
 80068e4:	1183410e 	bge	r2,r6,80075ec <_dtoa_r+0x1008>
 80068e8:	d9c00317 	ldw	r7,12(sp)
 80068ec:	00800104 	movi	r2,4
 80068f0:	38827c26 	beq	r7,r2,80072e4 <_dtoa_r+0xd00>
 80068f4:	00800144 	movi	r2,5
 80068f8:	3884c41e 	bne	r7,r2,8007c0c <_dtoa_r+0x1628>
 80068fc:	00800044 	movi	r2,1
 8006900:	d8800b15 	stw	r2,44(sp)
 8006904:	d8c00517 	ldw	r3,20(sp)
 8006908:	d9002217 	ldw	r4,136(sp)
 800690c:	1907883a 	add	r3,r3,r4
 8006910:	19800044 	addi	r6,r3,1
 8006914:	d8c00c15 	stw	r3,48(sp)
 8006918:	d9800615 	stw	r6,24(sp)
 800691c:	0183a40e 	bge	zero,r6,80077b0 <_dtoa_r+0x11cc>
 8006920:	d9800617 	ldw	r6,24(sp)
 8006924:	3021883a 	mov	r16,r6
 8006928:	e0001115 	stw	zero,68(fp)
 800692c:	008005c4 	movi	r2,23
 8006930:	1184c92e 	bgeu	r2,r6,8007c58 <_dtoa_r+0x1674>
 8006934:	00c00044 	movi	r3,1
 8006938:	00800104 	movi	r2,4
 800693c:	1085883a 	add	r2,r2,r2
 8006940:	11000504 	addi	r4,r2,20
 8006944:	180b883a 	mov	r5,r3
 8006948:	18c00044 	addi	r3,r3,1
 800694c:	313ffb2e 	bgeu	r6,r4,800693c <__alt_data_end+0xf800693c>
 8006950:	e1401115 	stw	r5,68(fp)
 8006954:	e009883a 	mov	r4,fp
 8006958:	800934c0 	call	800934c <_Balloc>
 800695c:	d8800715 	stw	r2,28(sp)
 8006960:	e0801015 	stw	r2,64(fp)
 8006964:	00800384 	movi	r2,14
 8006968:	1400f736 	bltu	r2,r16,8006d48 <_dtoa_r+0x764>
 800696c:	8800f626 	beq	r17,zero,8006d48 <_dtoa_r+0x764>
 8006970:	d9c00517 	ldw	r7,20(sp)
 8006974:	01c39a0e 	bge	zero,r7,80077e0 <_dtoa_r+0x11fc>
 8006978:	388003cc 	andi	r2,r7,15
 800697c:	100490fa 	slli	r2,r2,3
 8006980:	382bd13a 	srai	r21,r7,4
 8006984:	00c20074 	movhi	r3,2049
 8006988:	18ccbf04 	addi	r3,r3,13052
 800698c:	1885883a 	add	r2,r3,r2
 8006990:	a8c0040c 	andi	r3,r21,16
 8006994:	12400017 	ldw	r9,0(r2)
 8006998:	12000117 	ldw	r8,4(r2)
 800699c:	18037926 	beq	r3,zero,8007784 <_dtoa_r+0x11a0>
 80069a0:	00820074 	movhi	r2,2049
 80069a4:	108cb504 	addi	r2,r2,13012
 80069a8:	11800817 	ldw	r6,32(r2)
 80069ac:	11c00917 	ldw	r7,36(r2)
 80069b0:	9009883a 	mov	r4,r18
 80069b4:	980b883a 	mov	r5,r19
 80069b8:	da001715 	stw	r8,92(sp)
 80069bc:	da401615 	stw	r9,88(sp)
 80069c0:	800e0500 	call	800e050 <__divdf3>
 80069c4:	da001717 	ldw	r8,92(sp)
 80069c8:	da401617 	ldw	r9,88(sp)
 80069cc:	ad4003cc 	andi	r21,r21,15
 80069d0:	040000c4 	movi	r16,3
 80069d4:	1023883a 	mov	r17,r2
 80069d8:	1829883a 	mov	r20,r3
 80069dc:	a8001126 	beq	r21,zero,8006a24 <_dtoa_r+0x440>
 80069e0:	05c20074 	movhi	r23,2049
 80069e4:	bdccb504 	addi	r23,r23,13012
 80069e8:	4805883a 	mov	r2,r9
 80069ec:	4007883a 	mov	r3,r8
 80069f0:	a980004c 	andi	r6,r21,1
 80069f4:	1009883a 	mov	r4,r2
 80069f8:	a82bd07a 	srai	r21,r21,1
 80069fc:	180b883a 	mov	r5,r3
 8006a00:	30000426 	beq	r6,zero,8006a14 <_dtoa_r+0x430>
 8006a04:	b9800017 	ldw	r6,0(r23)
 8006a08:	b9c00117 	ldw	r7,4(r23)
 8006a0c:	84000044 	addi	r16,r16,1
 8006a10:	800eb900 	call	800eb90 <__muldf3>
 8006a14:	bdc00204 	addi	r23,r23,8
 8006a18:	a83ff51e 	bne	r21,zero,80069f0 <__alt_data_end+0xf80069f0>
 8006a1c:	1013883a 	mov	r9,r2
 8006a20:	1811883a 	mov	r8,r3
 8006a24:	480d883a 	mov	r6,r9
 8006a28:	400f883a 	mov	r7,r8
 8006a2c:	8809883a 	mov	r4,r17
 8006a30:	a00b883a 	mov	r5,r20
 8006a34:	800e0500 	call	800e050 <__divdf3>
 8006a38:	d8800f15 	stw	r2,60(sp)
 8006a3c:	d8c01015 	stw	r3,64(sp)
 8006a40:	d8c00e17 	ldw	r3,56(sp)
 8006a44:	18000626 	beq	r3,zero,8006a60 <_dtoa_r+0x47c>
 8006a48:	d9000f17 	ldw	r4,60(sp)
 8006a4c:	d9401017 	ldw	r5,64(sp)
 8006a50:	000d883a 	mov	r6,zero
 8006a54:	01cffc34 	movhi	r7,16368
 8006a58:	800ea9c0 	call	800ea9c <__ledf2>
 8006a5c:	10040b16 	blt	r2,zero,8007a8c <_dtoa_r+0x14a8>
 8006a60:	8009883a 	mov	r4,r16
 8006a64:	800fc240 	call	800fc24 <__floatsidf>
 8006a68:	d9800f17 	ldw	r6,60(sp)
 8006a6c:	d9c01017 	ldw	r7,64(sp)
 8006a70:	1009883a 	mov	r4,r2
 8006a74:	180b883a 	mov	r5,r3
 8006a78:	800eb900 	call	800eb90 <__muldf3>
 8006a7c:	000d883a 	mov	r6,zero
 8006a80:	01d00734 	movhi	r7,16412
 8006a84:	1009883a 	mov	r4,r2
 8006a88:	180b883a 	mov	r5,r3
 8006a8c:	800d7a40 	call	800d7a4 <__adddf3>
 8006a90:	1021883a 	mov	r16,r2
 8006a94:	d8800617 	ldw	r2,24(sp)
 8006a98:	047f3034 	movhi	r17,64704
 8006a9c:	1c63883a 	add	r17,r3,r17
 8006aa0:	10031826 	beq	r2,zero,8007704 <_dtoa_r+0x1120>
 8006aa4:	d8c00517 	ldw	r3,20(sp)
 8006aa8:	db000617 	ldw	r12,24(sp)
 8006aac:	d8c01315 	stw	r3,76(sp)
 8006ab0:	d9000b17 	ldw	r4,44(sp)
 8006ab4:	20038f26 	beq	r4,zero,80078f4 <_dtoa_r+0x1310>
 8006ab8:	60bfffc4 	addi	r2,r12,-1
 8006abc:	100490fa 	slli	r2,r2,3
 8006ac0:	00c20074 	movhi	r3,2049
 8006ac4:	18ccbf04 	addi	r3,r3,13052
 8006ac8:	1885883a 	add	r2,r3,r2
 8006acc:	11800017 	ldw	r6,0(r2)
 8006ad0:	11c00117 	ldw	r7,4(r2)
 8006ad4:	d8800717 	ldw	r2,28(sp)
 8006ad8:	0009883a 	mov	r4,zero
 8006adc:	014ff834 	movhi	r5,16352
 8006ae0:	db001615 	stw	r12,88(sp)
 8006ae4:	15c00044 	addi	r23,r2,1
 8006ae8:	800e0500 	call	800e050 <__divdf3>
 8006aec:	800d883a 	mov	r6,r16
 8006af0:	880f883a 	mov	r7,r17
 8006af4:	1009883a 	mov	r4,r2
 8006af8:	180b883a 	mov	r5,r3
 8006afc:	800f2a80 	call	800f2a8 <__subdf3>
 8006b00:	d9401017 	ldw	r5,64(sp)
 8006b04:	d9000f17 	ldw	r4,60(sp)
 8006b08:	102b883a 	mov	r21,r2
 8006b0c:	d8c01215 	stw	r3,72(sp)
 8006b10:	800fba40 	call	800fba4 <__fixdfsi>
 8006b14:	1009883a 	mov	r4,r2
 8006b18:	1029883a 	mov	r20,r2
 8006b1c:	800fc240 	call	800fc24 <__floatsidf>
 8006b20:	d9000f17 	ldw	r4,60(sp)
 8006b24:	d9401017 	ldw	r5,64(sp)
 8006b28:	100d883a 	mov	r6,r2
 8006b2c:	180f883a 	mov	r7,r3
 8006b30:	800f2a80 	call	800f2a8 <__subdf3>
 8006b34:	1823883a 	mov	r17,r3
 8006b38:	d8c00717 	ldw	r3,28(sp)
 8006b3c:	d9401217 	ldw	r5,72(sp)
 8006b40:	a2000c04 	addi	r8,r20,48
 8006b44:	1021883a 	mov	r16,r2
 8006b48:	1a000005 	stb	r8,0(r3)
 8006b4c:	800d883a 	mov	r6,r16
 8006b50:	880f883a 	mov	r7,r17
 8006b54:	a809883a 	mov	r4,r21
 8006b58:	4029883a 	mov	r20,r8
 8006b5c:	800e9c00 	call	800e9c0 <__gedf2>
 8006b60:	00841d16 	blt	zero,r2,8007bd8 <_dtoa_r+0x15f4>
 8006b64:	800d883a 	mov	r6,r16
 8006b68:	880f883a 	mov	r7,r17
 8006b6c:	0009883a 	mov	r4,zero
 8006b70:	014ffc34 	movhi	r5,16368
 8006b74:	800f2a80 	call	800f2a8 <__subdf3>
 8006b78:	d9401217 	ldw	r5,72(sp)
 8006b7c:	100d883a 	mov	r6,r2
 8006b80:	180f883a 	mov	r7,r3
 8006b84:	a809883a 	mov	r4,r21
 8006b88:	800e9c00 	call	800e9c0 <__gedf2>
 8006b8c:	db001617 	ldw	r12,88(sp)
 8006b90:	00840e16 	blt	zero,r2,8007bcc <_dtoa_r+0x15e8>
 8006b94:	00800044 	movi	r2,1
 8006b98:	13006b0e 	bge	r2,r12,8006d48 <_dtoa_r+0x764>
 8006b9c:	d9000717 	ldw	r4,28(sp)
 8006ba0:	dd800f15 	stw	r22,60(sp)
 8006ba4:	dcc01015 	stw	r19,64(sp)
 8006ba8:	2319883a 	add	r12,r4,r12
 8006bac:	dcc01217 	ldw	r19,72(sp)
 8006bb0:	602d883a 	mov	r22,r12
 8006bb4:	dc801215 	stw	r18,72(sp)
 8006bb8:	b825883a 	mov	r18,r23
 8006bbc:	00000906 	br	8006be4 <_dtoa_r+0x600>
 8006bc0:	800f2a80 	call	800f2a8 <__subdf3>
 8006bc4:	a80d883a 	mov	r6,r21
 8006bc8:	980f883a 	mov	r7,r19
 8006bcc:	1009883a 	mov	r4,r2
 8006bd0:	180b883a 	mov	r5,r3
 8006bd4:	800ea9c0 	call	800ea9c <__ledf2>
 8006bd8:	1003e816 	blt	r2,zero,8007b7c <_dtoa_r+0x1598>
 8006bdc:	b825883a 	mov	r18,r23
 8006be0:	bd83e926 	beq	r23,r22,8007b88 <_dtoa_r+0x15a4>
 8006be4:	a809883a 	mov	r4,r21
 8006be8:	980b883a 	mov	r5,r19
 8006bec:	000d883a 	mov	r6,zero
 8006bf0:	01d00934 	movhi	r7,16420
 8006bf4:	800eb900 	call	800eb90 <__muldf3>
 8006bf8:	000d883a 	mov	r6,zero
 8006bfc:	01d00934 	movhi	r7,16420
 8006c00:	8009883a 	mov	r4,r16
 8006c04:	880b883a 	mov	r5,r17
 8006c08:	102b883a 	mov	r21,r2
 8006c0c:	1827883a 	mov	r19,r3
 8006c10:	800eb900 	call	800eb90 <__muldf3>
 8006c14:	180b883a 	mov	r5,r3
 8006c18:	1009883a 	mov	r4,r2
 8006c1c:	1821883a 	mov	r16,r3
 8006c20:	1023883a 	mov	r17,r2
 8006c24:	800fba40 	call	800fba4 <__fixdfsi>
 8006c28:	1009883a 	mov	r4,r2
 8006c2c:	1029883a 	mov	r20,r2
 8006c30:	800fc240 	call	800fc24 <__floatsidf>
 8006c34:	8809883a 	mov	r4,r17
 8006c38:	800b883a 	mov	r5,r16
 8006c3c:	100d883a 	mov	r6,r2
 8006c40:	180f883a 	mov	r7,r3
 8006c44:	800f2a80 	call	800f2a8 <__subdf3>
 8006c48:	a5000c04 	addi	r20,r20,48
 8006c4c:	a80d883a 	mov	r6,r21
 8006c50:	980f883a 	mov	r7,r19
 8006c54:	1009883a 	mov	r4,r2
 8006c58:	180b883a 	mov	r5,r3
 8006c5c:	95000005 	stb	r20,0(r18)
 8006c60:	1021883a 	mov	r16,r2
 8006c64:	1823883a 	mov	r17,r3
 8006c68:	800ea9c0 	call	800ea9c <__ledf2>
 8006c6c:	bdc00044 	addi	r23,r23,1
 8006c70:	800d883a 	mov	r6,r16
 8006c74:	880f883a 	mov	r7,r17
 8006c78:	0009883a 	mov	r4,zero
 8006c7c:	014ffc34 	movhi	r5,16368
 8006c80:	103fcf0e 	bge	r2,zero,8006bc0 <__alt_data_end+0xf8006bc0>
 8006c84:	d8c01317 	ldw	r3,76(sp)
 8006c88:	d8c00515 	stw	r3,20(sp)
 8006c8c:	d9400917 	ldw	r5,36(sp)
 8006c90:	e009883a 	mov	r4,fp
 8006c94:	80093f40 	call	80093f4 <_Bfree>
 8006c98:	d9000517 	ldw	r4,20(sp)
 8006c9c:	d9802317 	ldw	r6,140(sp)
 8006ca0:	d9c02517 	ldw	r7,148(sp)
 8006ca4:	b8000005 	stb	zero,0(r23)
 8006ca8:	20800044 	addi	r2,r4,1
 8006cac:	30800015 	stw	r2,0(r6)
 8006cb0:	3802aa26 	beq	r7,zero,800775c <_dtoa_r+0x1178>
 8006cb4:	3dc00015 	stw	r23,0(r7)
 8006cb8:	d8800717 	ldw	r2,28(sp)
 8006cbc:	003e7906 	br	80066a4 <__alt_data_end+0xf80066a4>
 8006cc0:	00800434 	movhi	r2,16
 8006cc4:	10bfffc4 	addi	r2,r2,-1
 8006cc8:	88a2703a 	and	r17,r17,r2
 8006ccc:	883e851e 	bne	r17,zero,80066e4 <__alt_data_end+0xf80066e4>
 8006cd0:	00820074 	movhi	r2,2049
 8006cd4:	108ca004 	addi	r2,r2,12928
 8006cd8:	003e8406 	br	80066ec <__alt_data_end+0xf80066ec>
 8006cdc:	10c00204 	addi	r3,r2,8
 8006ce0:	003e8706 	br	8006700 <__alt_data_end+0xf8006700>
 8006ce4:	01400434 	movhi	r5,16
 8006ce8:	297fffc4 	addi	r5,r5,-1
 8006cec:	994a703a 	and	r5,r19,r5
 8006cf0:	9009883a 	mov	r4,r18
 8006cf4:	843f0044 	addi	r16,r16,-1023
 8006cf8:	294ffc34 	orhi	r5,r5,16368
 8006cfc:	dd800217 	ldw	r22,8(sp)
 8006d00:	d8001115 	stw	zero,68(sp)
 8006d04:	003ea506 	br	800679c <__alt_data_end+0xf800679c>
 8006d08:	00820074 	movhi	r2,2049
 8006d0c:	108c9704 	addi	r2,r2,12892
 8006d10:	003e6406 	br	80066a4 <__alt_data_end+0xf80066a4>
 8006d14:	e0001115 	stw	zero,68(fp)
 8006d18:	000b883a 	mov	r5,zero
 8006d1c:	e009883a 	mov	r4,fp
 8006d20:	800934c0 	call	800934c <_Balloc>
 8006d24:	01bfffc4 	movi	r6,-1
 8006d28:	01c00044 	movi	r7,1
 8006d2c:	d8800715 	stw	r2,28(sp)
 8006d30:	d9800c15 	stw	r6,48(sp)
 8006d34:	e0801015 	stw	r2,64(fp)
 8006d38:	d8000315 	stw	zero,12(sp)
 8006d3c:	d9c00b15 	stw	r7,44(sp)
 8006d40:	d9800615 	stw	r6,24(sp)
 8006d44:	d8002215 	stw	zero,136(sp)
 8006d48:	d8800117 	ldw	r2,4(sp)
 8006d4c:	10008916 	blt	r2,zero,8006f74 <_dtoa_r+0x990>
 8006d50:	d9000517 	ldw	r4,20(sp)
 8006d54:	00c00384 	movi	r3,14
 8006d58:	19008616 	blt	r3,r4,8006f74 <_dtoa_r+0x990>
 8006d5c:	200490fa 	slli	r2,r4,3
 8006d60:	00c20074 	movhi	r3,2049
 8006d64:	d9802217 	ldw	r6,136(sp)
 8006d68:	18ccbf04 	addi	r3,r3,13052
 8006d6c:	1885883a 	add	r2,r3,r2
 8006d70:	14000017 	ldw	r16,0(r2)
 8006d74:	14400117 	ldw	r17,4(r2)
 8006d78:	30016316 	blt	r6,zero,8007308 <_dtoa_r+0xd24>
 8006d7c:	800d883a 	mov	r6,r16
 8006d80:	880f883a 	mov	r7,r17
 8006d84:	9009883a 	mov	r4,r18
 8006d88:	980b883a 	mov	r5,r19
 8006d8c:	800e0500 	call	800e050 <__divdf3>
 8006d90:	180b883a 	mov	r5,r3
 8006d94:	1009883a 	mov	r4,r2
 8006d98:	800fba40 	call	800fba4 <__fixdfsi>
 8006d9c:	1009883a 	mov	r4,r2
 8006da0:	102b883a 	mov	r21,r2
 8006da4:	800fc240 	call	800fc24 <__floatsidf>
 8006da8:	800d883a 	mov	r6,r16
 8006dac:	880f883a 	mov	r7,r17
 8006db0:	1009883a 	mov	r4,r2
 8006db4:	180b883a 	mov	r5,r3
 8006db8:	800eb900 	call	800eb90 <__muldf3>
 8006dbc:	100d883a 	mov	r6,r2
 8006dc0:	180f883a 	mov	r7,r3
 8006dc4:	9009883a 	mov	r4,r18
 8006dc8:	980b883a 	mov	r5,r19
 8006dcc:	800f2a80 	call	800f2a8 <__subdf3>
 8006dd0:	d9c00717 	ldw	r7,28(sp)
 8006dd4:	1009883a 	mov	r4,r2
 8006dd8:	a8800c04 	addi	r2,r21,48
 8006ddc:	38800005 	stb	r2,0(r7)
 8006de0:	3dc00044 	addi	r23,r7,1
 8006de4:	d9c00617 	ldw	r7,24(sp)
 8006de8:	01800044 	movi	r6,1
 8006dec:	180b883a 	mov	r5,r3
 8006df0:	2005883a 	mov	r2,r4
 8006df4:	39803826 	beq	r7,r6,8006ed8 <_dtoa_r+0x8f4>
 8006df8:	000d883a 	mov	r6,zero
 8006dfc:	01d00934 	movhi	r7,16420
 8006e00:	800eb900 	call	800eb90 <__muldf3>
 8006e04:	000d883a 	mov	r6,zero
 8006e08:	000f883a 	mov	r7,zero
 8006e0c:	1009883a 	mov	r4,r2
 8006e10:	180b883a 	mov	r5,r3
 8006e14:	1025883a 	mov	r18,r2
 8006e18:	1827883a 	mov	r19,r3
 8006e1c:	800e9380 	call	800e938 <__eqdf2>
 8006e20:	103f9a26 	beq	r2,zero,8006c8c <__alt_data_end+0xf8006c8c>
 8006e24:	d9c00617 	ldw	r7,24(sp)
 8006e28:	d8c00717 	ldw	r3,28(sp)
 8006e2c:	b829883a 	mov	r20,r23
 8006e30:	38bfffc4 	addi	r2,r7,-1
 8006e34:	18ad883a 	add	r22,r3,r2
 8006e38:	00000a06 	br	8006e64 <_dtoa_r+0x880>
 8006e3c:	800eb900 	call	800eb90 <__muldf3>
 8006e40:	000d883a 	mov	r6,zero
 8006e44:	000f883a 	mov	r7,zero
 8006e48:	1009883a 	mov	r4,r2
 8006e4c:	180b883a 	mov	r5,r3
 8006e50:	1025883a 	mov	r18,r2
 8006e54:	1827883a 	mov	r19,r3
 8006e58:	b829883a 	mov	r20,r23
 8006e5c:	800e9380 	call	800e938 <__eqdf2>
 8006e60:	103f8a26 	beq	r2,zero,8006c8c <__alt_data_end+0xf8006c8c>
 8006e64:	800d883a 	mov	r6,r16
 8006e68:	880f883a 	mov	r7,r17
 8006e6c:	9009883a 	mov	r4,r18
 8006e70:	980b883a 	mov	r5,r19
 8006e74:	800e0500 	call	800e050 <__divdf3>
 8006e78:	180b883a 	mov	r5,r3
 8006e7c:	1009883a 	mov	r4,r2
 8006e80:	800fba40 	call	800fba4 <__fixdfsi>
 8006e84:	1009883a 	mov	r4,r2
 8006e88:	102b883a 	mov	r21,r2
 8006e8c:	800fc240 	call	800fc24 <__floatsidf>
 8006e90:	800d883a 	mov	r6,r16
 8006e94:	880f883a 	mov	r7,r17
 8006e98:	1009883a 	mov	r4,r2
 8006e9c:	180b883a 	mov	r5,r3
 8006ea0:	800eb900 	call	800eb90 <__muldf3>
 8006ea4:	100d883a 	mov	r6,r2
 8006ea8:	180f883a 	mov	r7,r3
 8006eac:	9009883a 	mov	r4,r18
 8006eb0:	980b883a 	mov	r5,r19
 8006eb4:	800f2a80 	call	800f2a8 <__subdf3>
 8006eb8:	aa000c04 	addi	r8,r21,48
 8006ebc:	a2000005 	stb	r8,0(r20)
 8006ec0:	000d883a 	mov	r6,zero
 8006ec4:	01d00934 	movhi	r7,16420
 8006ec8:	1009883a 	mov	r4,r2
 8006ecc:	180b883a 	mov	r5,r3
 8006ed0:	a5c00044 	addi	r23,r20,1
 8006ed4:	b53fd91e 	bne	r22,r20,8006e3c <__alt_data_end+0xf8006e3c>
 8006ed8:	100d883a 	mov	r6,r2
 8006edc:	180f883a 	mov	r7,r3
 8006ee0:	1009883a 	mov	r4,r2
 8006ee4:	180b883a 	mov	r5,r3
 8006ee8:	800d7a40 	call	800d7a4 <__adddf3>
 8006eec:	100d883a 	mov	r6,r2
 8006ef0:	180f883a 	mov	r7,r3
 8006ef4:	8009883a 	mov	r4,r16
 8006ef8:	880b883a 	mov	r5,r17
 8006efc:	1027883a 	mov	r19,r2
 8006f00:	1825883a 	mov	r18,r3
 8006f04:	800ea9c0 	call	800ea9c <__ledf2>
 8006f08:	10000816 	blt	r2,zero,8006f2c <_dtoa_r+0x948>
 8006f0c:	980d883a 	mov	r6,r19
 8006f10:	900f883a 	mov	r7,r18
 8006f14:	8009883a 	mov	r4,r16
 8006f18:	880b883a 	mov	r5,r17
 8006f1c:	800e9380 	call	800e938 <__eqdf2>
 8006f20:	103f5a1e 	bne	r2,zero,8006c8c <__alt_data_end+0xf8006c8c>
 8006f24:	ad40004c 	andi	r21,r21,1
 8006f28:	a83f5826 	beq	r21,zero,8006c8c <__alt_data_end+0xf8006c8c>
 8006f2c:	bd3fffc3 	ldbu	r20,-1(r23)
 8006f30:	b8bfffc4 	addi	r2,r23,-1
 8006f34:	1007883a 	mov	r3,r2
 8006f38:	01400e44 	movi	r5,57
 8006f3c:	d9800717 	ldw	r6,28(sp)
 8006f40:	00000506 	br	8006f58 <_dtoa_r+0x974>
 8006f44:	18ffffc4 	addi	r3,r3,-1
 8006f48:	11824726 	beq	r2,r6,8007868 <_dtoa_r+0x1284>
 8006f4c:	1d000003 	ldbu	r20,0(r3)
 8006f50:	102f883a 	mov	r23,r2
 8006f54:	10bfffc4 	addi	r2,r2,-1
 8006f58:	a1003fcc 	andi	r4,r20,255
 8006f5c:	2100201c 	xori	r4,r4,128
 8006f60:	213fe004 	addi	r4,r4,-128
 8006f64:	217ff726 	beq	r4,r5,8006f44 <__alt_data_end+0xf8006f44>
 8006f68:	a2000044 	addi	r8,r20,1
 8006f6c:	12000005 	stb	r8,0(r2)
 8006f70:	003f4606 	br	8006c8c <__alt_data_end+0xf8006c8c>
 8006f74:	d9000b17 	ldw	r4,44(sp)
 8006f78:	2000c826 	beq	r4,zero,800729c <_dtoa_r+0xcb8>
 8006f7c:	d9800317 	ldw	r6,12(sp)
 8006f80:	00c00044 	movi	r3,1
 8006f84:	1980f90e 	bge	r3,r6,800736c <_dtoa_r+0xd88>
 8006f88:	d8800617 	ldw	r2,24(sp)
 8006f8c:	d8c00a17 	ldw	r3,40(sp)
 8006f90:	157fffc4 	addi	r21,r2,-1
 8006f94:	1d41f316 	blt	r3,r21,8007764 <_dtoa_r+0x1180>
 8006f98:	1d6bc83a 	sub	r21,r3,r21
 8006f9c:	d9c00617 	ldw	r7,24(sp)
 8006fa0:	3802aa16 	blt	r7,zero,8007a4c <_dtoa_r+0x1468>
 8006fa4:	dd000817 	ldw	r20,32(sp)
 8006fa8:	d8800617 	ldw	r2,24(sp)
 8006fac:	d8c00817 	ldw	r3,32(sp)
 8006fb0:	01400044 	movi	r5,1
 8006fb4:	e009883a 	mov	r4,fp
 8006fb8:	1887883a 	add	r3,r3,r2
 8006fbc:	d8c00815 	stw	r3,32(sp)
 8006fc0:	b0ad883a 	add	r22,r22,r2
 8006fc4:	80097580 	call	8009758 <__i2b>
 8006fc8:	1023883a 	mov	r17,r2
 8006fcc:	a0000826 	beq	r20,zero,8006ff0 <_dtoa_r+0xa0c>
 8006fd0:	0580070e 	bge	zero,r22,8006ff0 <_dtoa_r+0xa0c>
 8006fd4:	a005883a 	mov	r2,r20
 8006fd8:	b500b916 	blt	r22,r20,80072c0 <_dtoa_r+0xcdc>
 8006fdc:	d9000817 	ldw	r4,32(sp)
 8006fe0:	a0a9c83a 	sub	r20,r20,r2
 8006fe4:	b0adc83a 	sub	r22,r22,r2
 8006fe8:	2089c83a 	sub	r4,r4,r2
 8006fec:	d9000815 	stw	r4,32(sp)
 8006ff0:	d9800a17 	ldw	r6,40(sp)
 8006ff4:	0181810e 	bge	zero,r6,80075fc <_dtoa_r+0x1018>
 8006ff8:	d9c00b17 	ldw	r7,44(sp)
 8006ffc:	3800b326 	beq	r7,zero,80072cc <_dtoa_r+0xce8>
 8007000:	a800b226 	beq	r21,zero,80072cc <_dtoa_r+0xce8>
 8007004:	880b883a 	mov	r5,r17
 8007008:	a80d883a 	mov	r6,r21
 800700c:	e009883a 	mov	r4,fp
 8007010:	800998c0 	call	800998c <__pow5mult>
 8007014:	d9800917 	ldw	r6,36(sp)
 8007018:	100b883a 	mov	r5,r2
 800701c:	e009883a 	mov	r4,fp
 8007020:	1023883a 	mov	r17,r2
 8007024:	80097940 	call	8009794 <__multiply>
 8007028:	1021883a 	mov	r16,r2
 800702c:	d8800a17 	ldw	r2,40(sp)
 8007030:	d9400917 	ldw	r5,36(sp)
 8007034:	e009883a 	mov	r4,fp
 8007038:	1545c83a 	sub	r2,r2,r21
 800703c:	d8800a15 	stw	r2,40(sp)
 8007040:	80093f40 	call	80093f4 <_Bfree>
 8007044:	d8c00a17 	ldw	r3,40(sp)
 8007048:	18009f1e 	bne	r3,zero,80072c8 <_dtoa_r+0xce4>
 800704c:	05c00044 	movi	r23,1
 8007050:	e009883a 	mov	r4,fp
 8007054:	b80b883a 	mov	r5,r23
 8007058:	80097580 	call	8009758 <__i2b>
 800705c:	d9000d17 	ldw	r4,52(sp)
 8007060:	102b883a 	mov	r21,r2
 8007064:	2000ce26 	beq	r4,zero,80073a0 <_dtoa_r+0xdbc>
 8007068:	200d883a 	mov	r6,r4
 800706c:	100b883a 	mov	r5,r2
 8007070:	e009883a 	mov	r4,fp
 8007074:	800998c0 	call	800998c <__pow5mult>
 8007078:	d9800317 	ldw	r6,12(sp)
 800707c:	102b883a 	mov	r21,r2
 8007080:	b981810e 	bge	r23,r6,8007688 <_dtoa_r+0x10a4>
 8007084:	0027883a 	mov	r19,zero
 8007088:	a8800417 	ldw	r2,16(r21)
 800708c:	05c00804 	movi	r23,32
 8007090:	10800104 	addi	r2,r2,4
 8007094:	1085883a 	add	r2,r2,r2
 8007098:	1085883a 	add	r2,r2,r2
 800709c:	a885883a 	add	r2,r21,r2
 80070a0:	11000017 	ldw	r4,0(r2)
 80070a4:	80096400 	call	8009640 <__hi0bits>
 80070a8:	b885c83a 	sub	r2,r23,r2
 80070ac:	1585883a 	add	r2,r2,r22
 80070b0:	108007cc 	andi	r2,r2,31
 80070b4:	1000b326 	beq	r2,zero,8007384 <_dtoa_r+0xda0>
 80070b8:	00c00804 	movi	r3,32
 80070bc:	1887c83a 	sub	r3,r3,r2
 80070c0:	01000104 	movi	r4,4
 80070c4:	20c2cd0e 	bge	r4,r3,8007bfc <_dtoa_r+0x1618>
 80070c8:	00c00704 	movi	r3,28
 80070cc:	1885c83a 	sub	r2,r3,r2
 80070d0:	d8c00817 	ldw	r3,32(sp)
 80070d4:	a0a9883a 	add	r20,r20,r2
 80070d8:	b0ad883a 	add	r22,r22,r2
 80070dc:	1887883a 	add	r3,r3,r2
 80070e0:	d8c00815 	stw	r3,32(sp)
 80070e4:	d9800817 	ldw	r6,32(sp)
 80070e8:	0180040e 	bge	zero,r6,80070fc <_dtoa_r+0xb18>
 80070ec:	800b883a 	mov	r5,r16
 80070f0:	e009883a 	mov	r4,fp
 80070f4:	8009acc0 	call	8009acc <__lshift>
 80070f8:	1021883a 	mov	r16,r2
 80070fc:	0580050e 	bge	zero,r22,8007114 <_dtoa_r+0xb30>
 8007100:	a80b883a 	mov	r5,r21
 8007104:	b00d883a 	mov	r6,r22
 8007108:	e009883a 	mov	r4,fp
 800710c:	8009acc0 	call	8009acc <__lshift>
 8007110:	102b883a 	mov	r21,r2
 8007114:	d9c00e17 	ldw	r7,56(sp)
 8007118:	3801211e 	bne	r7,zero,80075a0 <_dtoa_r+0xfbc>
 800711c:	d9800617 	ldw	r6,24(sp)
 8007120:	0181380e 	bge	zero,r6,8007604 <_dtoa_r+0x1020>
 8007124:	d8c00b17 	ldw	r3,44(sp)
 8007128:	1800ab1e 	bne	r3,zero,80073d8 <_dtoa_r+0xdf4>
 800712c:	dc800717 	ldw	r18,28(sp)
 8007130:	dcc00617 	ldw	r19,24(sp)
 8007134:	9029883a 	mov	r20,r18
 8007138:	00000206 	br	8007144 <_dtoa_r+0xb60>
 800713c:	800941c0 	call	800941c <__multadd>
 8007140:	1021883a 	mov	r16,r2
 8007144:	a80b883a 	mov	r5,r21
 8007148:	8009883a 	mov	r4,r16
 800714c:	80063e40 	call	80063e4 <quorem>
 8007150:	10800c04 	addi	r2,r2,48
 8007154:	90800005 	stb	r2,0(r18)
 8007158:	94800044 	addi	r18,r18,1
 800715c:	9507c83a 	sub	r3,r18,r20
 8007160:	000f883a 	mov	r7,zero
 8007164:	01800284 	movi	r6,10
 8007168:	800b883a 	mov	r5,r16
 800716c:	e009883a 	mov	r4,fp
 8007170:	1cfff216 	blt	r3,r19,800713c <__alt_data_end+0xf800713c>
 8007174:	1011883a 	mov	r8,r2
 8007178:	d8800617 	ldw	r2,24(sp)
 800717c:	0082370e 	bge	zero,r2,8007a5c <_dtoa_r+0x1478>
 8007180:	d9000717 	ldw	r4,28(sp)
 8007184:	0025883a 	mov	r18,zero
 8007188:	20af883a 	add	r23,r4,r2
 800718c:	01800044 	movi	r6,1
 8007190:	800b883a 	mov	r5,r16
 8007194:	e009883a 	mov	r4,fp
 8007198:	da001715 	stw	r8,92(sp)
 800719c:	8009acc0 	call	8009acc <__lshift>
 80071a0:	a80b883a 	mov	r5,r21
 80071a4:	1009883a 	mov	r4,r2
 80071a8:	d8800915 	stw	r2,36(sp)
 80071ac:	8009c140 	call	8009c14 <__mcmp>
 80071b0:	da001717 	ldw	r8,92(sp)
 80071b4:	0081800e 	bge	zero,r2,80077b8 <_dtoa_r+0x11d4>
 80071b8:	b93fffc3 	ldbu	r4,-1(r23)
 80071bc:	b8bfffc4 	addi	r2,r23,-1
 80071c0:	1007883a 	mov	r3,r2
 80071c4:	01800e44 	movi	r6,57
 80071c8:	d9c00717 	ldw	r7,28(sp)
 80071cc:	00000506 	br	80071e4 <_dtoa_r+0xc00>
 80071d0:	18ffffc4 	addi	r3,r3,-1
 80071d4:	11c12326 	beq	r2,r7,8007664 <_dtoa_r+0x1080>
 80071d8:	19000003 	ldbu	r4,0(r3)
 80071dc:	102f883a 	mov	r23,r2
 80071e0:	10bfffc4 	addi	r2,r2,-1
 80071e4:	21403fcc 	andi	r5,r4,255
 80071e8:	2940201c 	xori	r5,r5,128
 80071ec:	297fe004 	addi	r5,r5,-128
 80071f0:	29bff726 	beq	r5,r6,80071d0 <__alt_data_end+0xf80071d0>
 80071f4:	21000044 	addi	r4,r4,1
 80071f8:	11000005 	stb	r4,0(r2)
 80071fc:	a80b883a 	mov	r5,r21
 8007200:	e009883a 	mov	r4,fp
 8007204:	80093f40 	call	80093f4 <_Bfree>
 8007208:	883ea026 	beq	r17,zero,8006c8c <__alt_data_end+0xf8006c8c>
 800720c:	90000426 	beq	r18,zero,8007220 <_dtoa_r+0xc3c>
 8007210:	94400326 	beq	r18,r17,8007220 <_dtoa_r+0xc3c>
 8007214:	900b883a 	mov	r5,r18
 8007218:	e009883a 	mov	r4,fp
 800721c:	80093f40 	call	80093f4 <_Bfree>
 8007220:	880b883a 	mov	r5,r17
 8007224:	e009883a 	mov	r4,fp
 8007228:	80093f40 	call	80093f4 <_Bfree>
 800722c:	003e9706 	br	8006c8c <__alt_data_end+0xf8006c8c>
 8007230:	01800044 	movi	r6,1
 8007234:	d9800e15 	stw	r6,56(sp)
 8007238:	003d9606 	br	8006894 <__alt_data_end+0xf8006894>
 800723c:	d8800817 	ldw	r2,32(sp)
 8007240:	d8c00517 	ldw	r3,20(sp)
 8007244:	d8000d15 	stw	zero,52(sp)
 8007248:	10c5c83a 	sub	r2,r2,r3
 800724c:	00c9c83a 	sub	r4,zero,r3
 8007250:	d8800815 	stw	r2,32(sp)
 8007254:	d9000a15 	stw	r4,40(sp)
 8007258:	003d9706 	br	80068b8 <__alt_data_end+0xf80068b8>
 800725c:	05adc83a 	sub	r22,zero,r22
 8007260:	dd800815 	stw	r22,32(sp)
 8007264:	002d883a 	mov	r22,zero
 8007268:	003d8e06 	br	80068a4 <__alt_data_end+0xf80068a4>
 800726c:	d9000517 	ldw	r4,20(sp)
 8007270:	800fc240 	call	800fc24 <__floatsidf>
 8007274:	100d883a 	mov	r6,r2
 8007278:	180f883a 	mov	r7,r3
 800727c:	a009883a 	mov	r4,r20
 8007280:	880b883a 	mov	r5,r17
 8007284:	800e9380 	call	800e938 <__eqdf2>
 8007288:	103d7126 	beq	r2,zero,8006850 <__alt_data_end+0xf8006850>
 800728c:	d9c00517 	ldw	r7,20(sp)
 8007290:	39ffffc4 	addi	r7,r7,-1
 8007294:	d9c00515 	stw	r7,20(sp)
 8007298:	003d6d06 	br	8006850 <__alt_data_end+0xf8006850>
 800729c:	dd400a17 	ldw	r21,40(sp)
 80072a0:	dd000817 	ldw	r20,32(sp)
 80072a4:	0023883a 	mov	r17,zero
 80072a8:	003f4806 	br	8006fcc <__alt_data_end+0xf8006fcc>
 80072ac:	10e3c83a 	sub	r17,r2,r3
 80072b0:	9448983a 	sll	r4,r18,r17
 80072b4:	003d3206 	br	8006780 <__alt_data_end+0xf8006780>
 80072b8:	d8000e15 	stw	zero,56(sp)
 80072bc:	003d7506 	br	8006894 <__alt_data_end+0xf8006894>
 80072c0:	b005883a 	mov	r2,r22
 80072c4:	003f4506 	br	8006fdc <__alt_data_end+0xf8006fdc>
 80072c8:	dc000915 	stw	r16,36(sp)
 80072cc:	d9800a17 	ldw	r6,40(sp)
 80072d0:	d9400917 	ldw	r5,36(sp)
 80072d4:	e009883a 	mov	r4,fp
 80072d8:	800998c0 	call	800998c <__pow5mult>
 80072dc:	1021883a 	mov	r16,r2
 80072e0:	003f5a06 	br	800704c <__alt_data_end+0xf800704c>
 80072e4:	01c00044 	movi	r7,1
 80072e8:	d9c00b15 	stw	r7,44(sp)
 80072ec:	d8802217 	ldw	r2,136(sp)
 80072f0:	0081280e 	bge	zero,r2,8007794 <_dtoa_r+0x11b0>
 80072f4:	100d883a 	mov	r6,r2
 80072f8:	1021883a 	mov	r16,r2
 80072fc:	d8800c15 	stw	r2,48(sp)
 8007300:	d8800615 	stw	r2,24(sp)
 8007304:	003d8806 	br	8006928 <__alt_data_end+0xf8006928>
 8007308:	d8800617 	ldw	r2,24(sp)
 800730c:	00be9b16 	blt	zero,r2,8006d7c <__alt_data_end+0xf8006d7c>
 8007310:	10010f1e 	bne	r2,zero,8007750 <_dtoa_r+0x116c>
 8007314:	880b883a 	mov	r5,r17
 8007318:	000d883a 	mov	r6,zero
 800731c:	01d00534 	movhi	r7,16404
 8007320:	8009883a 	mov	r4,r16
 8007324:	800eb900 	call	800eb90 <__muldf3>
 8007328:	900d883a 	mov	r6,r18
 800732c:	980f883a 	mov	r7,r19
 8007330:	1009883a 	mov	r4,r2
 8007334:	180b883a 	mov	r5,r3
 8007338:	800e9c00 	call	800e9c0 <__gedf2>
 800733c:	002b883a 	mov	r21,zero
 8007340:	0023883a 	mov	r17,zero
 8007344:	1000bf16 	blt	r2,zero,8007644 <_dtoa_r+0x1060>
 8007348:	d9802217 	ldw	r6,136(sp)
 800734c:	ddc00717 	ldw	r23,28(sp)
 8007350:	018c303a 	nor	r6,zero,r6
 8007354:	d9800515 	stw	r6,20(sp)
 8007358:	a80b883a 	mov	r5,r21
 800735c:	e009883a 	mov	r4,fp
 8007360:	80093f40 	call	80093f4 <_Bfree>
 8007364:	883e4926 	beq	r17,zero,8006c8c <__alt_data_end+0xf8006c8c>
 8007368:	003fad06 	br	8007220 <__alt_data_end+0xf8007220>
 800736c:	d9c01117 	ldw	r7,68(sp)
 8007370:	3801bc26 	beq	r7,zero,8007a64 <_dtoa_r+0x1480>
 8007374:	10810cc4 	addi	r2,r2,1075
 8007378:	dd400a17 	ldw	r21,40(sp)
 800737c:	dd000817 	ldw	r20,32(sp)
 8007380:	003f0a06 	br	8006fac <__alt_data_end+0xf8006fac>
 8007384:	00800704 	movi	r2,28
 8007388:	d9000817 	ldw	r4,32(sp)
 800738c:	a0a9883a 	add	r20,r20,r2
 8007390:	b0ad883a 	add	r22,r22,r2
 8007394:	2089883a 	add	r4,r4,r2
 8007398:	d9000815 	stw	r4,32(sp)
 800739c:	003f5106 	br	80070e4 <__alt_data_end+0xf80070e4>
 80073a0:	d8c00317 	ldw	r3,12(sp)
 80073a4:	b8c1fc0e 	bge	r23,r3,8007b98 <_dtoa_r+0x15b4>
 80073a8:	0027883a 	mov	r19,zero
 80073ac:	b805883a 	mov	r2,r23
 80073b0:	003f3e06 	br	80070ac <__alt_data_end+0xf80070ac>
 80073b4:	880b883a 	mov	r5,r17
 80073b8:	e009883a 	mov	r4,fp
 80073bc:	000f883a 	mov	r7,zero
 80073c0:	01800284 	movi	r6,10
 80073c4:	800941c0 	call	800941c <__multadd>
 80073c8:	d9000c17 	ldw	r4,48(sp)
 80073cc:	1023883a 	mov	r17,r2
 80073d0:	0102040e 	bge	zero,r4,8007be4 <_dtoa_r+0x1600>
 80073d4:	d9000615 	stw	r4,24(sp)
 80073d8:	0500050e 	bge	zero,r20,80073f0 <_dtoa_r+0xe0c>
 80073dc:	880b883a 	mov	r5,r17
 80073e0:	a00d883a 	mov	r6,r20
 80073e4:	e009883a 	mov	r4,fp
 80073e8:	8009acc0 	call	8009acc <__lshift>
 80073ec:	1023883a 	mov	r17,r2
 80073f0:	9801241e 	bne	r19,zero,8007884 <_dtoa_r+0x12a0>
 80073f4:	8829883a 	mov	r20,r17
 80073f8:	d9000617 	ldw	r4,24(sp)
 80073fc:	dcc00717 	ldw	r19,28(sp)
 8007400:	9480004c 	andi	r18,r18,1
 8007404:	20bfffc4 	addi	r2,r4,-1
 8007408:	9885883a 	add	r2,r19,r2
 800740c:	d8800415 	stw	r2,16(sp)
 8007410:	dc800615 	stw	r18,24(sp)
 8007414:	a80b883a 	mov	r5,r21
 8007418:	8009883a 	mov	r4,r16
 800741c:	80063e40 	call	80063e4 <quorem>
 8007420:	880b883a 	mov	r5,r17
 8007424:	8009883a 	mov	r4,r16
 8007428:	102f883a 	mov	r23,r2
 800742c:	8009c140 	call	8009c14 <__mcmp>
 8007430:	a80b883a 	mov	r5,r21
 8007434:	a00d883a 	mov	r6,r20
 8007438:	e009883a 	mov	r4,fp
 800743c:	102d883a 	mov	r22,r2
 8007440:	8009c740 	call	8009c74 <__mdiff>
 8007444:	1007883a 	mov	r3,r2
 8007448:	10800317 	ldw	r2,12(r2)
 800744c:	bc800c04 	addi	r18,r23,48
 8007450:	180b883a 	mov	r5,r3
 8007454:	10004e1e 	bne	r2,zero,8007590 <_dtoa_r+0xfac>
 8007458:	8009883a 	mov	r4,r16
 800745c:	d8c01615 	stw	r3,88(sp)
 8007460:	8009c140 	call	8009c14 <__mcmp>
 8007464:	d8c01617 	ldw	r3,88(sp)
 8007468:	e009883a 	mov	r4,fp
 800746c:	d8801615 	stw	r2,88(sp)
 8007470:	180b883a 	mov	r5,r3
 8007474:	80093f40 	call	80093f4 <_Bfree>
 8007478:	d8801617 	ldw	r2,88(sp)
 800747c:	1000041e 	bne	r2,zero,8007490 <_dtoa_r+0xeac>
 8007480:	d9800317 	ldw	r6,12(sp)
 8007484:	3000021e 	bne	r6,zero,8007490 <_dtoa_r+0xeac>
 8007488:	d8c00617 	ldw	r3,24(sp)
 800748c:	18003726 	beq	r3,zero,800756c <_dtoa_r+0xf88>
 8007490:	b0002016 	blt	r22,zero,8007514 <_dtoa_r+0xf30>
 8007494:	b000041e 	bne	r22,zero,80074a8 <_dtoa_r+0xec4>
 8007498:	d9000317 	ldw	r4,12(sp)
 800749c:	2000021e 	bne	r4,zero,80074a8 <_dtoa_r+0xec4>
 80074a0:	d8c00617 	ldw	r3,24(sp)
 80074a4:	18001b26 	beq	r3,zero,8007514 <_dtoa_r+0xf30>
 80074a8:	00810716 	blt	zero,r2,80078c8 <_dtoa_r+0x12e4>
 80074ac:	d8c00417 	ldw	r3,16(sp)
 80074b0:	9d800044 	addi	r22,r19,1
 80074b4:	9c800005 	stb	r18,0(r19)
 80074b8:	b02f883a 	mov	r23,r22
 80074bc:	98c10626 	beq	r19,r3,80078d8 <_dtoa_r+0x12f4>
 80074c0:	800b883a 	mov	r5,r16
 80074c4:	000f883a 	mov	r7,zero
 80074c8:	01800284 	movi	r6,10
 80074cc:	e009883a 	mov	r4,fp
 80074d0:	800941c0 	call	800941c <__multadd>
 80074d4:	1021883a 	mov	r16,r2
 80074d8:	000f883a 	mov	r7,zero
 80074dc:	01800284 	movi	r6,10
 80074e0:	880b883a 	mov	r5,r17
 80074e4:	e009883a 	mov	r4,fp
 80074e8:	8d002526 	beq	r17,r20,8007580 <_dtoa_r+0xf9c>
 80074ec:	800941c0 	call	800941c <__multadd>
 80074f0:	a00b883a 	mov	r5,r20
 80074f4:	000f883a 	mov	r7,zero
 80074f8:	01800284 	movi	r6,10
 80074fc:	e009883a 	mov	r4,fp
 8007500:	1023883a 	mov	r17,r2
 8007504:	800941c0 	call	800941c <__multadd>
 8007508:	1029883a 	mov	r20,r2
 800750c:	b027883a 	mov	r19,r22
 8007510:	003fc006 	br	8007414 <__alt_data_end+0xf8007414>
 8007514:	9011883a 	mov	r8,r18
 8007518:	00800e0e 	bge	zero,r2,8007554 <_dtoa_r+0xf70>
 800751c:	800b883a 	mov	r5,r16
 8007520:	01800044 	movi	r6,1
 8007524:	e009883a 	mov	r4,fp
 8007528:	da001715 	stw	r8,92(sp)
 800752c:	8009acc0 	call	8009acc <__lshift>
 8007530:	a80b883a 	mov	r5,r21
 8007534:	1009883a 	mov	r4,r2
 8007538:	1021883a 	mov	r16,r2
 800753c:	8009c140 	call	8009c14 <__mcmp>
 8007540:	da001717 	ldw	r8,92(sp)
 8007544:	0081960e 	bge	zero,r2,8007ba0 <_dtoa_r+0x15bc>
 8007548:	00800e44 	movi	r2,57
 800754c:	40817026 	beq	r8,r2,8007b10 <_dtoa_r+0x152c>
 8007550:	ba000c44 	addi	r8,r23,49
 8007554:	8825883a 	mov	r18,r17
 8007558:	9dc00044 	addi	r23,r19,1
 800755c:	9a000005 	stb	r8,0(r19)
 8007560:	a023883a 	mov	r17,r20
 8007564:	dc000915 	stw	r16,36(sp)
 8007568:	003f2406 	br	80071fc <__alt_data_end+0xf80071fc>
 800756c:	00800e44 	movi	r2,57
 8007570:	9011883a 	mov	r8,r18
 8007574:	90816626 	beq	r18,r2,8007b10 <_dtoa_r+0x152c>
 8007578:	05bff516 	blt	zero,r22,8007550 <__alt_data_end+0xf8007550>
 800757c:	003ff506 	br	8007554 <__alt_data_end+0xf8007554>
 8007580:	800941c0 	call	800941c <__multadd>
 8007584:	1023883a 	mov	r17,r2
 8007588:	1029883a 	mov	r20,r2
 800758c:	003fdf06 	br	800750c <__alt_data_end+0xf800750c>
 8007590:	e009883a 	mov	r4,fp
 8007594:	80093f40 	call	80093f4 <_Bfree>
 8007598:	00800044 	movi	r2,1
 800759c:	003fbc06 	br	8007490 <__alt_data_end+0xf8007490>
 80075a0:	a80b883a 	mov	r5,r21
 80075a4:	8009883a 	mov	r4,r16
 80075a8:	8009c140 	call	8009c14 <__mcmp>
 80075ac:	103edb0e 	bge	r2,zero,800711c <__alt_data_end+0xf800711c>
 80075b0:	800b883a 	mov	r5,r16
 80075b4:	000f883a 	mov	r7,zero
 80075b8:	01800284 	movi	r6,10
 80075bc:	e009883a 	mov	r4,fp
 80075c0:	800941c0 	call	800941c <__multadd>
 80075c4:	1021883a 	mov	r16,r2
 80075c8:	d8800517 	ldw	r2,20(sp)
 80075cc:	d8c00b17 	ldw	r3,44(sp)
 80075d0:	10bfffc4 	addi	r2,r2,-1
 80075d4:	d8800515 	stw	r2,20(sp)
 80075d8:	183f761e 	bne	r3,zero,80073b4 <__alt_data_end+0xf80073b4>
 80075dc:	d9000c17 	ldw	r4,48(sp)
 80075e0:	0101730e 	bge	zero,r4,8007bb0 <_dtoa_r+0x15cc>
 80075e4:	d9000615 	stw	r4,24(sp)
 80075e8:	003ed006 	br	800712c <__alt_data_end+0xf800712c>
 80075ec:	00800084 	movi	r2,2
 80075f0:	3081861e 	bne	r6,r2,8007c0c <_dtoa_r+0x1628>
 80075f4:	d8000b15 	stw	zero,44(sp)
 80075f8:	003f3c06 	br	80072ec <__alt_data_end+0xf80072ec>
 80075fc:	dc000917 	ldw	r16,36(sp)
 8007600:	003e9206 	br	800704c <__alt_data_end+0xf800704c>
 8007604:	d9c00317 	ldw	r7,12(sp)
 8007608:	00800084 	movi	r2,2
 800760c:	11fec50e 	bge	r2,r7,8007124 <__alt_data_end+0xf8007124>
 8007610:	d9000617 	ldw	r4,24(sp)
 8007614:	20013c1e 	bne	r4,zero,8007b08 <_dtoa_r+0x1524>
 8007618:	a80b883a 	mov	r5,r21
 800761c:	000f883a 	mov	r7,zero
 8007620:	01800144 	movi	r6,5
 8007624:	e009883a 	mov	r4,fp
 8007628:	800941c0 	call	800941c <__multadd>
 800762c:	100b883a 	mov	r5,r2
 8007630:	8009883a 	mov	r4,r16
 8007634:	102b883a 	mov	r21,r2
 8007638:	8009c140 	call	8009c14 <__mcmp>
 800763c:	dc000915 	stw	r16,36(sp)
 8007640:	00bf410e 	bge	zero,r2,8007348 <__alt_data_end+0xf8007348>
 8007644:	d9c00717 	ldw	r7,28(sp)
 8007648:	00800c44 	movi	r2,49
 800764c:	38800005 	stb	r2,0(r7)
 8007650:	d8800517 	ldw	r2,20(sp)
 8007654:	3dc00044 	addi	r23,r7,1
 8007658:	10800044 	addi	r2,r2,1
 800765c:	d8800515 	stw	r2,20(sp)
 8007660:	003f3d06 	br	8007358 <__alt_data_end+0xf8007358>
 8007664:	d9800517 	ldw	r6,20(sp)
 8007668:	d9c00717 	ldw	r7,28(sp)
 800766c:	00800c44 	movi	r2,49
 8007670:	31800044 	addi	r6,r6,1
 8007674:	d9800515 	stw	r6,20(sp)
 8007678:	38800005 	stb	r2,0(r7)
 800767c:	003edf06 	br	80071fc <__alt_data_end+0xf80071fc>
 8007680:	d8000b15 	stw	zero,44(sp)
 8007684:	003c9f06 	br	8006904 <__alt_data_end+0xf8006904>
 8007688:	903e7e1e 	bne	r18,zero,8007084 <__alt_data_end+0xf8007084>
 800768c:	00800434 	movhi	r2,16
 8007690:	10bfffc4 	addi	r2,r2,-1
 8007694:	9884703a 	and	r2,r19,r2
 8007698:	1000ea1e 	bne	r2,zero,8007a44 <_dtoa_r+0x1460>
 800769c:	9cdffc2c 	andhi	r19,r19,32752
 80076a0:	9800e826 	beq	r19,zero,8007a44 <_dtoa_r+0x1460>
 80076a4:	d9c00817 	ldw	r7,32(sp)
 80076a8:	b5800044 	addi	r22,r22,1
 80076ac:	04c00044 	movi	r19,1
 80076b0:	39c00044 	addi	r7,r7,1
 80076b4:	d9c00815 	stw	r7,32(sp)
 80076b8:	d8800d17 	ldw	r2,52(sp)
 80076bc:	103e721e 	bne	r2,zero,8007088 <__alt_data_end+0xf8007088>
 80076c0:	00800044 	movi	r2,1
 80076c4:	003e7906 	br	80070ac <__alt_data_end+0xf80070ac>
 80076c8:	8009883a 	mov	r4,r16
 80076cc:	800fc240 	call	800fc24 <__floatsidf>
 80076d0:	d9800f17 	ldw	r6,60(sp)
 80076d4:	d9c01017 	ldw	r7,64(sp)
 80076d8:	1009883a 	mov	r4,r2
 80076dc:	180b883a 	mov	r5,r3
 80076e0:	800eb900 	call	800eb90 <__muldf3>
 80076e4:	000d883a 	mov	r6,zero
 80076e8:	01d00734 	movhi	r7,16412
 80076ec:	1009883a 	mov	r4,r2
 80076f0:	180b883a 	mov	r5,r3
 80076f4:	800d7a40 	call	800d7a4 <__adddf3>
 80076f8:	047f3034 	movhi	r17,64704
 80076fc:	1021883a 	mov	r16,r2
 8007700:	1c63883a 	add	r17,r3,r17
 8007704:	d9000f17 	ldw	r4,60(sp)
 8007708:	d9401017 	ldw	r5,64(sp)
 800770c:	000d883a 	mov	r6,zero
 8007710:	01d00534 	movhi	r7,16404
 8007714:	800f2a80 	call	800f2a8 <__subdf3>
 8007718:	800d883a 	mov	r6,r16
 800771c:	880f883a 	mov	r7,r17
 8007720:	1009883a 	mov	r4,r2
 8007724:	180b883a 	mov	r5,r3
 8007728:	102b883a 	mov	r21,r2
 800772c:	1829883a 	mov	r20,r3
 8007730:	800e9c00 	call	800e9c0 <__gedf2>
 8007734:	00806c16 	blt	zero,r2,80078e8 <_dtoa_r+0x1304>
 8007738:	89e0003c 	xorhi	r7,r17,32768
 800773c:	800d883a 	mov	r6,r16
 8007740:	a809883a 	mov	r4,r21
 8007744:	a00b883a 	mov	r5,r20
 8007748:	800ea9c0 	call	800ea9c <__ledf2>
 800774c:	103d7e0e 	bge	r2,zero,8006d48 <__alt_data_end+0xf8006d48>
 8007750:	002b883a 	mov	r21,zero
 8007754:	0023883a 	mov	r17,zero
 8007758:	003efb06 	br	8007348 <__alt_data_end+0xf8007348>
 800775c:	d8800717 	ldw	r2,28(sp)
 8007760:	003bd006 	br	80066a4 <__alt_data_end+0xf80066a4>
 8007764:	d9000a17 	ldw	r4,40(sp)
 8007768:	d9800d17 	ldw	r6,52(sp)
 800776c:	dd400a15 	stw	r21,40(sp)
 8007770:	a905c83a 	sub	r2,r21,r4
 8007774:	308d883a 	add	r6,r6,r2
 8007778:	d9800d15 	stw	r6,52(sp)
 800777c:	002b883a 	mov	r21,zero
 8007780:	003e0606 	br	8006f9c <__alt_data_end+0xf8006f9c>
 8007784:	9023883a 	mov	r17,r18
 8007788:	9829883a 	mov	r20,r19
 800778c:	04000084 	movi	r16,2
 8007790:	003c9206 	br	80069dc <__alt_data_end+0xf80069dc>
 8007794:	04000044 	movi	r16,1
 8007798:	dc000c15 	stw	r16,48(sp)
 800779c:	dc000615 	stw	r16,24(sp)
 80077a0:	dc002215 	stw	r16,136(sp)
 80077a4:	e0001115 	stw	zero,68(fp)
 80077a8:	000b883a 	mov	r5,zero
 80077ac:	003c6906 	br	8006954 <__alt_data_end+0xf8006954>
 80077b0:	3021883a 	mov	r16,r6
 80077b4:	003ffb06 	br	80077a4 <__alt_data_end+0xf80077a4>
 80077b8:	1000021e 	bne	r2,zero,80077c4 <_dtoa_r+0x11e0>
 80077bc:	4200004c 	andi	r8,r8,1
 80077c0:	403e7d1e 	bne	r8,zero,80071b8 <__alt_data_end+0xf80071b8>
 80077c4:	01000c04 	movi	r4,48
 80077c8:	00000106 	br	80077d0 <_dtoa_r+0x11ec>
 80077cc:	102f883a 	mov	r23,r2
 80077d0:	b8bfffc4 	addi	r2,r23,-1
 80077d4:	10c00007 	ldb	r3,0(r2)
 80077d8:	193ffc26 	beq	r3,r4,80077cc <__alt_data_end+0xf80077cc>
 80077dc:	003e8706 	br	80071fc <__alt_data_end+0xf80071fc>
 80077e0:	d8800517 	ldw	r2,20(sp)
 80077e4:	00a3c83a 	sub	r17,zero,r2
 80077e8:	8800a426 	beq	r17,zero,8007a7c <_dtoa_r+0x1498>
 80077ec:	888003cc 	andi	r2,r17,15
 80077f0:	100490fa 	slli	r2,r2,3
 80077f4:	00c20074 	movhi	r3,2049
 80077f8:	18ccbf04 	addi	r3,r3,13052
 80077fc:	1885883a 	add	r2,r3,r2
 8007800:	11800017 	ldw	r6,0(r2)
 8007804:	11c00117 	ldw	r7,4(r2)
 8007808:	9009883a 	mov	r4,r18
 800780c:	980b883a 	mov	r5,r19
 8007810:	8823d13a 	srai	r17,r17,4
 8007814:	800eb900 	call	800eb90 <__muldf3>
 8007818:	d8800f15 	stw	r2,60(sp)
 800781c:	d8c01015 	stw	r3,64(sp)
 8007820:	8800e826 	beq	r17,zero,8007bc4 <_dtoa_r+0x15e0>
 8007824:	05020074 	movhi	r20,2049
 8007828:	a50cb504 	addi	r20,r20,13012
 800782c:	04000084 	movi	r16,2
 8007830:	8980004c 	andi	r6,r17,1
 8007834:	1009883a 	mov	r4,r2
 8007838:	8823d07a 	srai	r17,r17,1
 800783c:	180b883a 	mov	r5,r3
 8007840:	30000426 	beq	r6,zero,8007854 <_dtoa_r+0x1270>
 8007844:	a1800017 	ldw	r6,0(r20)
 8007848:	a1c00117 	ldw	r7,4(r20)
 800784c:	84000044 	addi	r16,r16,1
 8007850:	800eb900 	call	800eb90 <__muldf3>
 8007854:	a5000204 	addi	r20,r20,8
 8007858:	883ff51e 	bne	r17,zero,8007830 <__alt_data_end+0xf8007830>
 800785c:	d8800f15 	stw	r2,60(sp)
 8007860:	d8c01015 	stw	r3,64(sp)
 8007864:	003c7606 	br	8006a40 <__alt_data_end+0xf8006a40>
 8007868:	00c00c04 	movi	r3,48
 800786c:	10c00005 	stb	r3,0(r2)
 8007870:	d8c00517 	ldw	r3,20(sp)
 8007874:	bd3fffc3 	ldbu	r20,-1(r23)
 8007878:	18c00044 	addi	r3,r3,1
 800787c:	d8c00515 	stw	r3,20(sp)
 8007880:	003db906 	br	8006f68 <__alt_data_end+0xf8006f68>
 8007884:	89400117 	ldw	r5,4(r17)
 8007888:	e009883a 	mov	r4,fp
 800788c:	800934c0 	call	800934c <_Balloc>
 8007890:	89800417 	ldw	r6,16(r17)
 8007894:	89400304 	addi	r5,r17,12
 8007898:	11000304 	addi	r4,r2,12
 800789c:	31800084 	addi	r6,r6,2
 80078a0:	318d883a 	add	r6,r6,r6
 80078a4:	318d883a 	add	r6,r6,r6
 80078a8:	1027883a 	mov	r19,r2
 80078ac:	80090a80 	call	80090a8 <memcpy>
 80078b0:	01800044 	movi	r6,1
 80078b4:	980b883a 	mov	r5,r19
 80078b8:	e009883a 	mov	r4,fp
 80078bc:	8009acc0 	call	8009acc <__lshift>
 80078c0:	1029883a 	mov	r20,r2
 80078c4:	003ecc06 	br	80073f8 <__alt_data_end+0xf80073f8>
 80078c8:	00800e44 	movi	r2,57
 80078cc:	90809026 	beq	r18,r2,8007b10 <_dtoa_r+0x152c>
 80078d0:	92000044 	addi	r8,r18,1
 80078d4:	003f1f06 	br	8007554 <__alt_data_end+0xf8007554>
 80078d8:	9011883a 	mov	r8,r18
 80078dc:	8825883a 	mov	r18,r17
 80078e0:	a023883a 	mov	r17,r20
 80078e4:	003e2906 	br	800718c <__alt_data_end+0xf800718c>
 80078e8:	002b883a 	mov	r21,zero
 80078ec:	0023883a 	mov	r17,zero
 80078f0:	003f5406 	br	8007644 <__alt_data_end+0xf8007644>
 80078f4:	61bfffc4 	addi	r6,r12,-1
 80078f8:	300490fa 	slli	r2,r6,3
 80078fc:	00c20074 	movhi	r3,2049
 8007900:	18ccbf04 	addi	r3,r3,13052
 8007904:	1885883a 	add	r2,r3,r2
 8007908:	11000017 	ldw	r4,0(r2)
 800790c:	11400117 	ldw	r5,4(r2)
 8007910:	d8800717 	ldw	r2,28(sp)
 8007914:	880f883a 	mov	r7,r17
 8007918:	d9801215 	stw	r6,72(sp)
 800791c:	800d883a 	mov	r6,r16
 8007920:	db001615 	stw	r12,88(sp)
 8007924:	15c00044 	addi	r23,r2,1
 8007928:	800eb900 	call	800eb90 <__muldf3>
 800792c:	d9401017 	ldw	r5,64(sp)
 8007930:	d9000f17 	ldw	r4,60(sp)
 8007934:	d8c01515 	stw	r3,84(sp)
 8007938:	d8801415 	stw	r2,80(sp)
 800793c:	800fba40 	call	800fba4 <__fixdfsi>
 8007940:	1009883a 	mov	r4,r2
 8007944:	1021883a 	mov	r16,r2
 8007948:	800fc240 	call	800fc24 <__floatsidf>
 800794c:	d9000f17 	ldw	r4,60(sp)
 8007950:	d9401017 	ldw	r5,64(sp)
 8007954:	100d883a 	mov	r6,r2
 8007958:	180f883a 	mov	r7,r3
 800795c:	800f2a80 	call	800f2a8 <__subdf3>
 8007960:	1829883a 	mov	r20,r3
 8007964:	d8c00717 	ldw	r3,28(sp)
 8007968:	84000c04 	addi	r16,r16,48
 800796c:	1023883a 	mov	r17,r2
 8007970:	1c000005 	stb	r16,0(r3)
 8007974:	db001617 	ldw	r12,88(sp)
 8007978:	00800044 	movi	r2,1
 800797c:	60802226 	beq	r12,r2,8007a08 <_dtoa_r+0x1424>
 8007980:	d9c00717 	ldw	r7,28(sp)
 8007984:	8805883a 	mov	r2,r17
 8007988:	b82b883a 	mov	r21,r23
 800798c:	3b19883a 	add	r12,r7,r12
 8007990:	6023883a 	mov	r17,r12
 8007994:	a007883a 	mov	r3,r20
 8007998:	dc800f15 	stw	r18,60(sp)
 800799c:	000d883a 	mov	r6,zero
 80079a0:	01d00934 	movhi	r7,16420
 80079a4:	1009883a 	mov	r4,r2
 80079a8:	180b883a 	mov	r5,r3
 80079ac:	800eb900 	call	800eb90 <__muldf3>
 80079b0:	180b883a 	mov	r5,r3
 80079b4:	1009883a 	mov	r4,r2
 80079b8:	1829883a 	mov	r20,r3
 80079bc:	1025883a 	mov	r18,r2
 80079c0:	800fba40 	call	800fba4 <__fixdfsi>
 80079c4:	1009883a 	mov	r4,r2
 80079c8:	1021883a 	mov	r16,r2
 80079cc:	800fc240 	call	800fc24 <__floatsidf>
 80079d0:	100d883a 	mov	r6,r2
 80079d4:	180f883a 	mov	r7,r3
 80079d8:	9009883a 	mov	r4,r18
 80079dc:	a00b883a 	mov	r5,r20
 80079e0:	84000c04 	addi	r16,r16,48
 80079e4:	800f2a80 	call	800f2a8 <__subdf3>
 80079e8:	ad400044 	addi	r21,r21,1
 80079ec:	ac3fffc5 	stb	r16,-1(r21)
 80079f0:	ac7fea1e 	bne	r21,r17,800799c <__alt_data_end+0xf800799c>
 80079f4:	1023883a 	mov	r17,r2
 80079f8:	d8801217 	ldw	r2,72(sp)
 80079fc:	dc800f17 	ldw	r18,60(sp)
 8007a00:	1829883a 	mov	r20,r3
 8007a04:	b8af883a 	add	r23,r23,r2
 8007a08:	d9001417 	ldw	r4,80(sp)
 8007a0c:	d9401517 	ldw	r5,84(sp)
 8007a10:	000d883a 	mov	r6,zero
 8007a14:	01cff834 	movhi	r7,16352
 8007a18:	800d7a40 	call	800d7a4 <__adddf3>
 8007a1c:	880d883a 	mov	r6,r17
 8007a20:	a00f883a 	mov	r7,r20
 8007a24:	1009883a 	mov	r4,r2
 8007a28:	180b883a 	mov	r5,r3
 8007a2c:	800ea9c0 	call	800ea9c <__ledf2>
 8007a30:	10003e0e 	bge	r2,zero,8007b2c <_dtoa_r+0x1548>
 8007a34:	d9001317 	ldw	r4,76(sp)
 8007a38:	bd3fffc3 	ldbu	r20,-1(r23)
 8007a3c:	d9000515 	stw	r4,20(sp)
 8007a40:	003d3b06 	br	8006f30 <__alt_data_end+0xf8006f30>
 8007a44:	0027883a 	mov	r19,zero
 8007a48:	003f1b06 	br	80076b8 <__alt_data_end+0xf80076b8>
 8007a4c:	d8800817 	ldw	r2,32(sp)
 8007a50:	11e9c83a 	sub	r20,r2,r7
 8007a54:	0005883a 	mov	r2,zero
 8007a58:	003d5406 	br	8006fac <__alt_data_end+0xf8006fac>
 8007a5c:	00800044 	movi	r2,1
 8007a60:	003dc706 	br	8007180 <__alt_data_end+0xf8007180>
 8007a64:	d8c00217 	ldw	r3,8(sp)
 8007a68:	00800d84 	movi	r2,54
 8007a6c:	dd400a17 	ldw	r21,40(sp)
 8007a70:	10c5c83a 	sub	r2,r2,r3
 8007a74:	dd000817 	ldw	r20,32(sp)
 8007a78:	003d4c06 	br	8006fac <__alt_data_end+0xf8006fac>
 8007a7c:	dc800f15 	stw	r18,60(sp)
 8007a80:	dcc01015 	stw	r19,64(sp)
 8007a84:	04000084 	movi	r16,2
 8007a88:	003bed06 	br	8006a40 <__alt_data_end+0xf8006a40>
 8007a8c:	d9000617 	ldw	r4,24(sp)
 8007a90:	203f0d26 	beq	r4,zero,80076c8 <__alt_data_end+0xf80076c8>
 8007a94:	d9800c17 	ldw	r6,48(sp)
 8007a98:	01bcab0e 	bge	zero,r6,8006d48 <__alt_data_end+0xf8006d48>
 8007a9c:	d9401017 	ldw	r5,64(sp)
 8007aa0:	d9000f17 	ldw	r4,60(sp)
 8007aa4:	000d883a 	mov	r6,zero
 8007aa8:	01d00934 	movhi	r7,16420
 8007aac:	800eb900 	call	800eb90 <__muldf3>
 8007ab0:	81000044 	addi	r4,r16,1
 8007ab4:	d8800f15 	stw	r2,60(sp)
 8007ab8:	d8c01015 	stw	r3,64(sp)
 8007abc:	800fc240 	call	800fc24 <__floatsidf>
 8007ac0:	d9800f17 	ldw	r6,60(sp)
 8007ac4:	d9c01017 	ldw	r7,64(sp)
 8007ac8:	1009883a 	mov	r4,r2
 8007acc:	180b883a 	mov	r5,r3
 8007ad0:	800eb900 	call	800eb90 <__muldf3>
 8007ad4:	01d00734 	movhi	r7,16412
 8007ad8:	000d883a 	mov	r6,zero
 8007adc:	1009883a 	mov	r4,r2
 8007ae0:	180b883a 	mov	r5,r3
 8007ae4:	800d7a40 	call	800d7a4 <__adddf3>
 8007ae8:	d9c00517 	ldw	r7,20(sp)
 8007aec:	047f3034 	movhi	r17,64704
 8007af0:	1021883a 	mov	r16,r2
 8007af4:	39ffffc4 	addi	r7,r7,-1
 8007af8:	d9c01315 	stw	r7,76(sp)
 8007afc:	1c63883a 	add	r17,r3,r17
 8007b00:	db000c17 	ldw	r12,48(sp)
 8007b04:	003bea06 	br	8006ab0 <__alt_data_end+0xf8006ab0>
 8007b08:	dc000915 	stw	r16,36(sp)
 8007b0c:	003e0e06 	br	8007348 <__alt_data_end+0xf8007348>
 8007b10:	01000e44 	movi	r4,57
 8007b14:	8825883a 	mov	r18,r17
 8007b18:	9dc00044 	addi	r23,r19,1
 8007b1c:	99000005 	stb	r4,0(r19)
 8007b20:	a023883a 	mov	r17,r20
 8007b24:	dc000915 	stw	r16,36(sp)
 8007b28:	003da406 	br	80071bc <__alt_data_end+0xf80071bc>
 8007b2c:	d9801417 	ldw	r6,80(sp)
 8007b30:	d9c01517 	ldw	r7,84(sp)
 8007b34:	0009883a 	mov	r4,zero
 8007b38:	014ff834 	movhi	r5,16352
 8007b3c:	800f2a80 	call	800f2a8 <__subdf3>
 8007b40:	880d883a 	mov	r6,r17
 8007b44:	a00f883a 	mov	r7,r20
 8007b48:	1009883a 	mov	r4,r2
 8007b4c:	180b883a 	mov	r5,r3
 8007b50:	800e9c00 	call	800e9c0 <__gedf2>
 8007b54:	00bc7c0e 	bge	zero,r2,8006d48 <__alt_data_end+0xf8006d48>
 8007b58:	01000c04 	movi	r4,48
 8007b5c:	00000106 	br	8007b64 <_dtoa_r+0x1580>
 8007b60:	102f883a 	mov	r23,r2
 8007b64:	b8bfffc4 	addi	r2,r23,-1
 8007b68:	10c00007 	ldb	r3,0(r2)
 8007b6c:	193ffc26 	beq	r3,r4,8007b60 <__alt_data_end+0xf8007b60>
 8007b70:	d9801317 	ldw	r6,76(sp)
 8007b74:	d9800515 	stw	r6,20(sp)
 8007b78:	003c4406 	br	8006c8c <__alt_data_end+0xf8006c8c>
 8007b7c:	d9801317 	ldw	r6,76(sp)
 8007b80:	d9800515 	stw	r6,20(sp)
 8007b84:	003cea06 	br	8006f30 <__alt_data_end+0xf8006f30>
 8007b88:	dd800f17 	ldw	r22,60(sp)
 8007b8c:	dcc01017 	ldw	r19,64(sp)
 8007b90:	dc801217 	ldw	r18,72(sp)
 8007b94:	003c6c06 	br	8006d48 <__alt_data_end+0xf8006d48>
 8007b98:	903e031e 	bne	r18,zero,80073a8 <__alt_data_end+0xf80073a8>
 8007b9c:	003ebb06 	br	800768c <__alt_data_end+0xf800768c>
 8007ba0:	103e6c1e 	bne	r2,zero,8007554 <__alt_data_end+0xf8007554>
 8007ba4:	4080004c 	andi	r2,r8,1
 8007ba8:	103e6a26 	beq	r2,zero,8007554 <__alt_data_end+0xf8007554>
 8007bac:	003e6606 	br	8007548 <__alt_data_end+0xf8007548>
 8007bb0:	d8c00317 	ldw	r3,12(sp)
 8007bb4:	00800084 	movi	r2,2
 8007bb8:	10c02916 	blt	r2,r3,8007c60 <_dtoa_r+0x167c>
 8007bbc:	d9000c17 	ldw	r4,48(sp)
 8007bc0:	003e8806 	br	80075e4 <__alt_data_end+0xf80075e4>
 8007bc4:	04000084 	movi	r16,2
 8007bc8:	003b9d06 	br	8006a40 <__alt_data_end+0xf8006a40>
 8007bcc:	d9001317 	ldw	r4,76(sp)
 8007bd0:	d9000515 	stw	r4,20(sp)
 8007bd4:	003cd606 	br	8006f30 <__alt_data_end+0xf8006f30>
 8007bd8:	d8801317 	ldw	r2,76(sp)
 8007bdc:	d8800515 	stw	r2,20(sp)
 8007be0:	003c2a06 	br	8006c8c <__alt_data_end+0xf8006c8c>
 8007be4:	d9800317 	ldw	r6,12(sp)
 8007be8:	00800084 	movi	r2,2
 8007bec:	11801516 	blt	r2,r6,8007c44 <_dtoa_r+0x1660>
 8007bf0:	d9c00c17 	ldw	r7,48(sp)
 8007bf4:	d9c00615 	stw	r7,24(sp)
 8007bf8:	003df706 	br	80073d8 <__alt_data_end+0xf80073d8>
 8007bfc:	193d3926 	beq	r3,r4,80070e4 <__alt_data_end+0xf80070e4>
 8007c00:	00c00f04 	movi	r3,60
 8007c04:	1885c83a 	sub	r2,r3,r2
 8007c08:	003ddf06 	br	8007388 <__alt_data_end+0xf8007388>
 8007c0c:	e009883a 	mov	r4,fp
 8007c10:	e0001115 	stw	zero,68(fp)
 8007c14:	000b883a 	mov	r5,zero
 8007c18:	800934c0 	call	800934c <_Balloc>
 8007c1c:	d8800715 	stw	r2,28(sp)
 8007c20:	d8c00717 	ldw	r3,28(sp)
 8007c24:	00bfffc4 	movi	r2,-1
 8007c28:	01000044 	movi	r4,1
 8007c2c:	d8800c15 	stw	r2,48(sp)
 8007c30:	e0c01015 	stw	r3,64(fp)
 8007c34:	d9000b15 	stw	r4,44(sp)
 8007c38:	d8800615 	stw	r2,24(sp)
 8007c3c:	d8002215 	stw	zero,136(sp)
 8007c40:	003c4106 	br	8006d48 <__alt_data_end+0xf8006d48>
 8007c44:	d8c00c17 	ldw	r3,48(sp)
 8007c48:	d8c00615 	stw	r3,24(sp)
 8007c4c:	003e7006 	br	8007610 <__alt_data_end+0xf8007610>
 8007c50:	04400044 	movi	r17,1
 8007c54:	003b2006 	br	80068d8 <__alt_data_end+0xf80068d8>
 8007c58:	000b883a 	mov	r5,zero
 8007c5c:	003b3d06 	br	8006954 <__alt_data_end+0xf8006954>
 8007c60:	d8800c17 	ldw	r2,48(sp)
 8007c64:	d8800615 	stw	r2,24(sp)
 8007c68:	003e6906 	br	8007610 <__alt_data_end+0xf8007610>

08007c6c <__sflush_r>:
 8007c6c:	2880030b 	ldhu	r2,12(r5)
 8007c70:	defffb04 	addi	sp,sp,-20
 8007c74:	dcc00315 	stw	r19,12(sp)
 8007c78:	dc400115 	stw	r17,4(sp)
 8007c7c:	dfc00415 	stw	ra,16(sp)
 8007c80:	dc800215 	stw	r18,8(sp)
 8007c84:	dc000015 	stw	r16,0(sp)
 8007c88:	10c0020c 	andi	r3,r2,8
 8007c8c:	2823883a 	mov	r17,r5
 8007c90:	2027883a 	mov	r19,r4
 8007c94:	1800311e 	bne	r3,zero,8007d5c <__sflush_r+0xf0>
 8007c98:	28c00117 	ldw	r3,4(r5)
 8007c9c:	10820014 	ori	r2,r2,2048
 8007ca0:	2880030d 	sth	r2,12(r5)
 8007ca4:	00c04b0e 	bge	zero,r3,8007dd4 <__sflush_r+0x168>
 8007ca8:	8a000a17 	ldw	r8,40(r17)
 8007cac:	40002326 	beq	r8,zero,8007d3c <__sflush_r+0xd0>
 8007cb0:	9c000017 	ldw	r16,0(r19)
 8007cb4:	10c4000c 	andi	r3,r2,4096
 8007cb8:	98000015 	stw	zero,0(r19)
 8007cbc:	18004826 	beq	r3,zero,8007de0 <__sflush_r+0x174>
 8007cc0:	89801417 	ldw	r6,80(r17)
 8007cc4:	10c0010c 	andi	r3,r2,4
 8007cc8:	18000626 	beq	r3,zero,8007ce4 <__sflush_r+0x78>
 8007ccc:	88c00117 	ldw	r3,4(r17)
 8007cd0:	88800c17 	ldw	r2,48(r17)
 8007cd4:	30cdc83a 	sub	r6,r6,r3
 8007cd8:	10000226 	beq	r2,zero,8007ce4 <__sflush_r+0x78>
 8007cdc:	88800f17 	ldw	r2,60(r17)
 8007ce0:	308dc83a 	sub	r6,r6,r2
 8007ce4:	89400717 	ldw	r5,28(r17)
 8007ce8:	000f883a 	mov	r7,zero
 8007cec:	9809883a 	mov	r4,r19
 8007cf0:	403ee83a 	callr	r8
 8007cf4:	00ffffc4 	movi	r3,-1
 8007cf8:	10c04426 	beq	r2,r3,8007e0c <__sflush_r+0x1a0>
 8007cfc:	88c0030b 	ldhu	r3,12(r17)
 8007d00:	89000417 	ldw	r4,16(r17)
 8007d04:	88000115 	stw	zero,4(r17)
 8007d08:	197dffcc 	andi	r5,r3,63487
 8007d0c:	8940030d 	sth	r5,12(r17)
 8007d10:	89000015 	stw	r4,0(r17)
 8007d14:	18c4000c 	andi	r3,r3,4096
 8007d18:	18002c1e 	bne	r3,zero,8007dcc <__sflush_r+0x160>
 8007d1c:	89400c17 	ldw	r5,48(r17)
 8007d20:	9c000015 	stw	r16,0(r19)
 8007d24:	28000526 	beq	r5,zero,8007d3c <__sflush_r+0xd0>
 8007d28:	88801004 	addi	r2,r17,64
 8007d2c:	28800226 	beq	r5,r2,8007d38 <__sflush_r+0xcc>
 8007d30:	9809883a 	mov	r4,r19
 8007d34:	80083d80 	call	80083d8 <_free_r>
 8007d38:	88000c15 	stw	zero,48(r17)
 8007d3c:	0005883a 	mov	r2,zero
 8007d40:	dfc00417 	ldw	ra,16(sp)
 8007d44:	dcc00317 	ldw	r19,12(sp)
 8007d48:	dc800217 	ldw	r18,8(sp)
 8007d4c:	dc400117 	ldw	r17,4(sp)
 8007d50:	dc000017 	ldw	r16,0(sp)
 8007d54:	dec00504 	addi	sp,sp,20
 8007d58:	f800283a 	ret
 8007d5c:	2c800417 	ldw	r18,16(r5)
 8007d60:	903ff626 	beq	r18,zero,8007d3c <__alt_data_end+0xf8007d3c>
 8007d64:	2c000017 	ldw	r16,0(r5)
 8007d68:	108000cc 	andi	r2,r2,3
 8007d6c:	2c800015 	stw	r18,0(r5)
 8007d70:	84a1c83a 	sub	r16,r16,r18
 8007d74:	1000131e 	bne	r2,zero,8007dc4 <__sflush_r+0x158>
 8007d78:	28800517 	ldw	r2,20(r5)
 8007d7c:	88800215 	stw	r2,8(r17)
 8007d80:	04000316 	blt	zero,r16,8007d90 <__sflush_r+0x124>
 8007d84:	003fed06 	br	8007d3c <__alt_data_end+0xf8007d3c>
 8007d88:	90a5883a 	add	r18,r18,r2
 8007d8c:	043feb0e 	bge	zero,r16,8007d3c <__alt_data_end+0xf8007d3c>
 8007d90:	88800917 	ldw	r2,36(r17)
 8007d94:	89400717 	ldw	r5,28(r17)
 8007d98:	800f883a 	mov	r7,r16
 8007d9c:	900d883a 	mov	r6,r18
 8007da0:	9809883a 	mov	r4,r19
 8007da4:	103ee83a 	callr	r2
 8007da8:	80a1c83a 	sub	r16,r16,r2
 8007dac:	00bff616 	blt	zero,r2,8007d88 <__alt_data_end+0xf8007d88>
 8007db0:	88c0030b 	ldhu	r3,12(r17)
 8007db4:	00bfffc4 	movi	r2,-1
 8007db8:	18c01014 	ori	r3,r3,64
 8007dbc:	88c0030d 	sth	r3,12(r17)
 8007dc0:	003fdf06 	br	8007d40 <__alt_data_end+0xf8007d40>
 8007dc4:	0005883a 	mov	r2,zero
 8007dc8:	003fec06 	br	8007d7c <__alt_data_end+0xf8007d7c>
 8007dcc:	88801415 	stw	r2,80(r17)
 8007dd0:	003fd206 	br	8007d1c <__alt_data_end+0xf8007d1c>
 8007dd4:	28c00f17 	ldw	r3,60(r5)
 8007dd8:	00ffb316 	blt	zero,r3,8007ca8 <__alt_data_end+0xf8007ca8>
 8007ddc:	003fd706 	br	8007d3c <__alt_data_end+0xf8007d3c>
 8007de0:	89400717 	ldw	r5,28(r17)
 8007de4:	000d883a 	mov	r6,zero
 8007de8:	01c00044 	movi	r7,1
 8007dec:	9809883a 	mov	r4,r19
 8007df0:	403ee83a 	callr	r8
 8007df4:	100d883a 	mov	r6,r2
 8007df8:	00bfffc4 	movi	r2,-1
 8007dfc:	30801426 	beq	r6,r2,8007e50 <__sflush_r+0x1e4>
 8007e00:	8880030b 	ldhu	r2,12(r17)
 8007e04:	8a000a17 	ldw	r8,40(r17)
 8007e08:	003fae06 	br	8007cc4 <__alt_data_end+0xf8007cc4>
 8007e0c:	98c00017 	ldw	r3,0(r19)
 8007e10:	183fba26 	beq	r3,zero,8007cfc <__alt_data_end+0xf8007cfc>
 8007e14:	01000744 	movi	r4,29
 8007e18:	19000626 	beq	r3,r4,8007e34 <__sflush_r+0x1c8>
 8007e1c:	01000584 	movi	r4,22
 8007e20:	19000426 	beq	r3,r4,8007e34 <__sflush_r+0x1c8>
 8007e24:	88c0030b 	ldhu	r3,12(r17)
 8007e28:	18c01014 	ori	r3,r3,64
 8007e2c:	88c0030d 	sth	r3,12(r17)
 8007e30:	003fc306 	br	8007d40 <__alt_data_end+0xf8007d40>
 8007e34:	8880030b 	ldhu	r2,12(r17)
 8007e38:	88c00417 	ldw	r3,16(r17)
 8007e3c:	88000115 	stw	zero,4(r17)
 8007e40:	10bdffcc 	andi	r2,r2,63487
 8007e44:	8880030d 	sth	r2,12(r17)
 8007e48:	88c00015 	stw	r3,0(r17)
 8007e4c:	003fb306 	br	8007d1c <__alt_data_end+0xf8007d1c>
 8007e50:	98800017 	ldw	r2,0(r19)
 8007e54:	103fea26 	beq	r2,zero,8007e00 <__alt_data_end+0xf8007e00>
 8007e58:	00c00744 	movi	r3,29
 8007e5c:	10c00226 	beq	r2,r3,8007e68 <__sflush_r+0x1fc>
 8007e60:	00c00584 	movi	r3,22
 8007e64:	10c0031e 	bne	r2,r3,8007e74 <__sflush_r+0x208>
 8007e68:	9c000015 	stw	r16,0(r19)
 8007e6c:	0005883a 	mov	r2,zero
 8007e70:	003fb306 	br	8007d40 <__alt_data_end+0xf8007d40>
 8007e74:	88c0030b 	ldhu	r3,12(r17)
 8007e78:	3005883a 	mov	r2,r6
 8007e7c:	18c01014 	ori	r3,r3,64
 8007e80:	88c0030d 	sth	r3,12(r17)
 8007e84:	003fae06 	br	8007d40 <__alt_data_end+0xf8007d40>

08007e88 <_fflush_r>:
 8007e88:	defffd04 	addi	sp,sp,-12
 8007e8c:	dc000115 	stw	r16,4(sp)
 8007e90:	dfc00215 	stw	ra,8(sp)
 8007e94:	2021883a 	mov	r16,r4
 8007e98:	20000226 	beq	r4,zero,8007ea4 <_fflush_r+0x1c>
 8007e9c:	20800e17 	ldw	r2,56(r4)
 8007ea0:	10000c26 	beq	r2,zero,8007ed4 <_fflush_r+0x4c>
 8007ea4:	2880030f 	ldh	r2,12(r5)
 8007ea8:	1000051e 	bne	r2,zero,8007ec0 <_fflush_r+0x38>
 8007eac:	0005883a 	mov	r2,zero
 8007eb0:	dfc00217 	ldw	ra,8(sp)
 8007eb4:	dc000117 	ldw	r16,4(sp)
 8007eb8:	dec00304 	addi	sp,sp,12
 8007ebc:	f800283a 	ret
 8007ec0:	8009883a 	mov	r4,r16
 8007ec4:	dfc00217 	ldw	ra,8(sp)
 8007ec8:	dc000117 	ldw	r16,4(sp)
 8007ecc:	dec00304 	addi	sp,sp,12
 8007ed0:	8007c6c1 	jmpi	8007c6c <__sflush_r>
 8007ed4:	d9400015 	stw	r5,0(sp)
 8007ed8:	80082640 	call	8008264 <__sinit>
 8007edc:	d9400017 	ldw	r5,0(sp)
 8007ee0:	003ff006 	br	8007ea4 <__alt_data_end+0xf8007ea4>

08007ee4 <fflush>:
 8007ee4:	20000526 	beq	r4,zero,8007efc <fflush+0x18>
 8007ee8:	00820074 	movhi	r2,2049
 8007eec:	1093ff04 	addi	r2,r2,20476
 8007ef0:	200b883a 	mov	r5,r4
 8007ef4:	11000017 	ldw	r4,0(r2)
 8007ef8:	8007e881 	jmpi	8007e88 <_fflush_r>
 8007efc:	00820074 	movhi	r2,2049
 8007f00:	1093fe04 	addi	r2,r2,20472
 8007f04:	11000017 	ldw	r4,0(r2)
 8007f08:	01420034 	movhi	r5,2048
 8007f0c:	295fa204 	addi	r5,r5,32392
 8007f10:	8008c681 	jmpi	8008c68 <_fwalk_reent>

08007f14 <__fp_unlock>:
 8007f14:	0005883a 	mov	r2,zero
 8007f18:	f800283a 	ret

08007f1c <_cleanup_r>:
 8007f1c:	01420074 	movhi	r5,2049
 8007f20:	29713704 	addi	r5,r5,-15140
 8007f24:	8008c681 	jmpi	8008c68 <_fwalk_reent>

08007f28 <__sinit.part.1>:
 8007f28:	defff704 	addi	sp,sp,-36
 8007f2c:	00c20034 	movhi	r3,2048
 8007f30:	dfc00815 	stw	ra,32(sp)
 8007f34:	ddc00715 	stw	r23,28(sp)
 8007f38:	dd800615 	stw	r22,24(sp)
 8007f3c:	dd400515 	stw	r21,20(sp)
 8007f40:	dd000415 	stw	r20,16(sp)
 8007f44:	dcc00315 	stw	r19,12(sp)
 8007f48:	dc800215 	stw	r18,8(sp)
 8007f4c:	dc400115 	stw	r17,4(sp)
 8007f50:	dc000015 	stw	r16,0(sp)
 8007f54:	18dfc704 	addi	r3,r3,32540
 8007f58:	24000117 	ldw	r16,4(r4)
 8007f5c:	20c00f15 	stw	r3,60(r4)
 8007f60:	2080bb04 	addi	r2,r4,748
 8007f64:	00c000c4 	movi	r3,3
 8007f68:	20c0b915 	stw	r3,740(r4)
 8007f6c:	2080ba15 	stw	r2,744(r4)
 8007f70:	2000b815 	stw	zero,736(r4)
 8007f74:	05c00204 	movi	r23,8
 8007f78:	00800104 	movi	r2,4
 8007f7c:	2025883a 	mov	r18,r4
 8007f80:	b80d883a 	mov	r6,r23
 8007f84:	81001704 	addi	r4,r16,92
 8007f88:	000b883a 	mov	r5,zero
 8007f8c:	80000015 	stw	zero,0(r16)
 8007f90:	80000115 	stw	zero,4(r16)
 8007f94:	80000215 	stw	zero,8(r16)
 8007f98:	8080030d 	sth	r2,12(r16)
 8007f9c:	80001915 	stw	zero,100(r16)
 8007fa0:	8000038d 	sth	zero,14(r16)
 8007fa4:	80000415 	stw	zero,16(r16)
 8007fa8:	80000515 	stw	zero,20(r16)
 8007fac:	80000615 	stw	zero,24(r16)
 8007fb0:	800386c0 	call	800386c <memset>
 8007fb4:	05820074 	movhi	r22,2049
 8007fb8:	94400217 	ldw	r17,8(r18)
 8007fbc:	05420074 	movhi	r21,2049
 8007fc0:	05020074 	movhi	r20,2049
 8007fc4:	04c20074 	movhi	r19,2049
 8007fc8:	b5aaa204 	addi	r22,r22,-21880
 8007fcc:	ad6ab904 	addi	r21,r21,-21788
 8007fd0:	a52ad804 	addi	r20,r20,-21664
 8007fd4:	9ceaef04 	addi	r19,r19,-21572
 8007fd8:	85800815 	stw	r22,32(r16)
 8007fdc:	85400915 	stw	r21,36(r16)
 8007fe0:	85000a15 	stw	r20,40(r16)
 8007fe4:	84c00b15 	stw	r19,44(r16)
 8007fe8:	84000715 	stw	r16,28(r16)
 8007fec:	00800284 	movi	r2,10
 8007ff0:	8880030d 	sth	r2,12(r17)
 8007ff4:	00800044 	movi	r2,1
 8007ff8:	b80d883a 	mov	r6,r23
 8007ffc:	89001704 	addi	r4,r17,92
 8008000:	000b883a 	mov	r5,zero
 8008004:	88000015 	stw	zero,0(r17)
 8008008:	88000115 	stw	zero,4(r17)
 800800c:	88000215 	stw	zero,8(r17)
 8008010:	88001915 	stw	zero,100(r17)
 8008014:	8880038d 	sth	r2,14(r17)
 8008018:	88000415 	stw	zero,16(r17)
 800801c:	88000515 	stw	zero,20(r17)
 8008020:	88000615 	stw	zero,24(r17)
 8008024:	800386c0 	call	800386c <memset>
 8008028:	94000317 	ldw	r16,12(r18)
 800802c:	00800484 	movi	r2,18
 8008030:	8c400715 	stw	r17,28(r17)
 8008034:	8d800815 	stw	r22,32(r17)
 8008038:	8d400915 	stw	r21,36(r17)
 800803c:	8d000a15 	stw	r20,40(r17)
 8008040:	8cc00b15 	stw	r19,44(r17)
 8008044:	8080030d 	sth	r2,12(r16)
 8008048:	00800084 	movi	r2,2
 800804c:	80000015 	stw	zero,0(r16)
 8008050:	80000115 	stw	zero,4(r16)
 8008054:	80000215 	stw	zero,8(r16)
 8008058:	80001915 	stw	zero,100(r16)
 800805c:	8080038d 	sth	r2,14(r16)
 8008060:	80000415 	stw	zero,16(r16)
 8008064:	80000515 	stw	zero,20(r16)
 8008068:	80000615 	stw	zero,24(r16)
 800806c:	b80d883a 	mov	r6,r23
 8008070:	000b883a 	mov	r5,zero
 8008074:	81001704 	addi	r4,r16,92
 8008078:	800386c0 	call	800386c <memset>
 800807c:	00800044 	movi	r2,1
 8008080:	84000715 	stw	r16,28(r16)
 8008084:	85800815 	stw	r22,32(r16)
 8008088:	85400915 	stw	r21,36(r16)
 800808c:	85000a15 	stw	r20,40(r16)
 8008090:	84c00b15 	stw	r19,44(r16)
 8008094:	90800e15 	stw	r2,56(r18)
 8008098:	dfc00817 	ldw	ra,32(sp)
 800809c:	ddc00717 	ldw	r23,28(sp)
 80080a0:	dd800617 	ldw	r22,24(sp)
 80080a4:	dd400517 	ldw	r21,20(sp)
 80080a8:	dd000417 	ldw	r20,16(sp)
 80080ac:	dcc00317 	ldw	r19,12(sp)
 80080b0:	dc800217 	ldw	r18,8(sp)
 80080b4:	dc400117 	ldw	r17,4(sp)
 80080b8:	dc000017 	ldw	r16,0(sp)
 80080bc:	dec00904 	addi	sp,sp,36
 80080c0:	f800283a 	ret

080080c4 <__fp_lock>:
 80080c4:	0005883a 	mov	r2,zero
 80080c8:	f800283a 	ret

080080cc <__sfmoreglue>:
 80080cc:	defffc04 	addi	sp,sp,-16
 80080d0:	dc400115 	stw	r17,4(sp)
 80080d4:	2c7fffc4 	addi	r17,r5,-1
 80080d8:	8c401a24 	muli	r17,r17,104
 80080dc:	dc800215 	stw	r18,8(sp)
 80080e0:	2825883a 	mov	r18,r5
 80080e4:	89401d04 	addi	r5,r17,116
 80080e8:	dc000015 	stw	r16,0(sp)
 80080ec:	dfc00315 	stw	ra,12(sp)
 80080f0:	80030600 	call	8003060 <_malloc_r>
 80080f4:	1021883a 	mov	r16,r2
 80080f8:	10000726 	beq	r2,zero,8008118 <__sfmoreglue+0x4c>
 80080fc:	11000304 	addi	r4,r2,12
 8008100:	10000015 	stw	zero,0(r2)
 8008104:	14800115 	stw	r18,4(r2)
 8008108:	11000215 	stw	r4,8(r2)
 800810c:	89801a04 	addi	r6,r17,104
 8008110:	000b883a 	mov	r5,zero
 8008114:	800386c0 	call	800386c <memset>
 8008118:	8005883a 	mov	r2,r16
 800811c:	dfc00317 	ldw	ra,12(sp)
 8008120:	dc800217 	ldw	r18,8(sp)
 8008124:	dc400117 	ldw	r17,4(sp)
 8008128:	dc000017 	ldw	r16,0(sp)
 800812c:	dec00404 	addi	sp,sp,16
 8008130:	f800283a 	ret

08008134 <__sfp>:
 8008134:	defffb04 	addi	sp,sp,-20
 8008138:	dc000015 	stw	r16,0(sp)
 800813c:	04020074 	movhi	r16,2049
 8008140:	8413fe04 	addi	r16,r16,20472
 8008144:	dcc00315 	stw	r19,12(sp)
 8008148:	2027883a 	mov	r19,r4
 800814c:	81000017 	ldw	r4,0(r16)
 8008150:	dfc00415 	stw	ra,16(sp)
 8008154:	dc800215 	stw	r18,8(sp)
 8008158:	20800e17 	ldw	r2,56(r4)
 800815c:	dc400115 	stw	r17,4(sp)
 8008160:	1000021e 	bne	r2,zero,800816c <__sfp+0x38>
 8008164:	8007f280 	call	8007f28 <__sinit.part.1>
 8008168:	81000017 	ldw	r4,0(r16)
 800816c:	2480b804 	addi	r18,r4,736
 8008170:	047fffc4 	movi	r17,-1
 8008174:	91000117 	ldw	r4,4(r18)
 8008178:	94000217 	ldw	r16,8(r18)
 800817c:	213fffc4 	addi	r4,r4,-1
 8008180:	20000a16 	blt	r4,zero,80081ac <__sfp+0x78>
 8008184:	8080030f 	ldh	r2,12(r16)
 8008188:	10000c26 	beq	r2,zero,80081bc <__sfp+0x88>
 800818c:	80c01d04 	addi	r3,r16,116
 8008190:	00000206 	br	800819c <__sfp+0x68>
 8008194:	18bfe60f 	ldh	r2,-104(r3)
 8008198:	10000826 	beq	r2,zero,80081bc <__sfp+0x88>
 800819c:	213fffc4 	addi	r4,r4,-1
 80081a0:	1c3ffd04 	addi	r16,r3,-12
 80081a4:	18c01a04 	addi	r3,r3,104
 80081a8:	247ffa1e 	bne	r4,r17,8008194 <__alt_data_end+0xf8008194>
 80081ac:	90800017 	ldw	r2,0(r18)
 80081b0:	10001d26 	beq	r2,zero,8008228 <__sfp+0xf4>
 80081b4:	1025883a 	mov	r18,r2
 80081b8:	003fee06 	br	8008174 <__alt_data_end+0xf8008174>
 80081bc:	00bfffc4 	movi	r2,-1
 80081c0:	8080038d 	sth	r2,14(r16)
 80081c4:	00800044 	movi	r2,1
 80081c8:	8080030d 	sth	r2,12(r16)
 80081cc:	80001915 	stw	zero,100(r16)
 80081d0:	80000015 	stw	zero,0(r16)
 80081d4:	80000215 	stw	zero,8(r16)
 80081d8:	80000115 	stw	zero,4(r16)
 80081dc:	80000415 	stw	zero,16(r16)
 80081e0:	80000515 	stw	zero,20(r16)
 80081e4:	80000615 	stw	zero,24(r16)
 80081e8:	01800204 	movi	r6,8
 80081ec:	000b883a 	mov	r5,zero
 80081f0:	81001704 	addi	r4,r16,92
 80081f4:	800386c0 	call	800386c <memset>
 80081f8:	8005883a 	mov	r2,r16
 80081fc:	80000c15 	stw	zero,48(r16)
 8008200:	80000d15 	stw	zero,52(r16)
 8008204:	80001115 	stw	zero,68(r16)
 8008208:	80001215 	stw	zero,72(r16)
 800820c:	dfc00417 	ldw	ra,16(sp)
 8008210:	dcc00317 	ldw	r19,12(sp)
 8008214:	dc800217 	ldw	r18,8(sp)
 8008218:	dc400117 	ldw	r17,4(sp)
 800821c:	dc000017 	ldw	r16,0(sp)
 8008220:	dec00504 	addi	sp,sp,20
 8008224:	f800283a 	ret
 8008228:	01400104 	movi	r5,4
 800822c:	9809883a 	mov	r4,r19
 8008230:	80080cc0 	call	80080cc <__sfmoreglue>
 8008234:	90800015 	stw	r2,0(r18)
 8008238:	103fde1e 	bne	r2,zero,80081b4 <__alt_data_end+0xf80081b4>
 800823c:	00800304 	movi	r2,12
 8008240:	98800015 	stw	r2,0(r19)
 8008244:	0005883a 	mov	r2,zero
 8008248:	003ff006 	br	800820c <__alt_data_end+0xf800820c>

0800824c <_cleanup>:
 800824c:	00820074 	movhi	r2,2049
 8008250:	1093fe04 	addi	r2,r2,20472
 8008254:	11000017 	ldw	r4,0(r2)
 8008258:	01420074 	movhi	r5,2049
 800825c:	29713704 	addi	r5,r5,-15140
 8008260:	8008c681 	jmpi	8008c68 <_fwalk_reent>

08008264 <__sinit>:
 8008264:	20800e17 	ldw	r2,56(r4)
 8008268:	10000126 	beq	r2,zero,8008270 <__sinit+0xc>
 800826c:	f800283a 	ret
 8008270:	8007f281 	jmpi	8007f28 <__sinit.part.1>

08008274 <__sfp_lock_acquire>:
 8008274:	f800283a 	ret

08008278 <__sfp_lock_release>:
 8008278:	f800283a 	ret

0800827c <__sinit_lock_acquire>:
 800827c:	f800283a 	ret

08008280 <__sinit_lock_release>:
 8008280:	f800283a 	ret

08008284 <__fp_lock_all>:
 8008284:	00820074 	movhi	r2,2049
 8008288:	1093ff04 	addi	r2,r2,20476
 800828c:	11000017 	ldw	r4,0(r2)
 8008290:	01420074 	movhi	r5,2049
 8008294:	29603104 	addi	r5,r5,-32572
 8008298:	8008ba41 	jmpi	8008ba4 <_fwalk>

0800829c <__fp_unlock_all>:
 800829c:	00820074 	movhi	r2,2049
 80082a0:	1093ff04 	addi	r2,r2,20476
 80082a4:	11000017 	ldw	r4,0(r2)
 80082a8:	01420034 	movhi	r5,2048
 80082ac:	295fc504 	addi	r5,r5,32532
 80082b0:	8008ba41 	jmpi	8008ba4 <_fwalk>

080082b4 <_malloc_trim_r>:
 80082b4:	defffb04 	addi	sp,sp,-20
 80082b8:	dcc00315 	stw	r19,12(sp)
 80082bc:	04c20074 	movhi	r19,2049
 80082c0:	dc800215 	stw	r18,8(sp)
 80082c4:	dc400115 	stw	r17,4(sp)
 80082c8:	dc000015 	stw	r16,0(sp)
 80082cc:	dfc00415 	stw	ra,16(sp)
 80082d0:	2821883a 	mov	r16,r5
 80082d4:	9ccd4604 	addi	r19,r19,13592
 80082d8:	2025883a 	mov	r18,r4
 80082dc:	80105480 	call	8010548 <__malloc_lock>
 80082e0:	98800217 	ldw	r2,8(r19)
 80082e4:	14400117 	ldw	r17,4(r2)
 80082e8:	00bfff04 	movi	r2,-4
 80082ec:	88a2703a 	and	r17,r17,r2
 80082f0:	8c21c83a 	sub	r16,r17,r16
 80082f4:	8403fbc4 	addi	r16,r16,4079
 80082f8:	8020d33a 	srli	r16,r16,12
 80082fc:	0083ffc4 	movi	r2,4095
 8008300:	843fffc4 	addi	r16,r16,-1
 8008304:	8020933a 	slli	r16,r16,12
 8008308:	1400060e 	bge	r2,r16,8008324 <_malloc_trim_r+0x70>
 800830c:	000b883a 	mov	r5,zero
 8008310:	9009883a 	mov	r4,r18
 8008314:	8003af40 	call	8003af4 <_sbrk_r>
 8008318:	98c00217 	ldw	r3,8(r19)
 800831c:	1c47883a 	add	r3,r3,r17
 8008320:	10c00a26 	beq	r2,r3,800834c <_malloc_trim_r+0x98>
 8008324:	9009883a 	mov	r4,r18
 8008328:	801056c0 	call	801056c <__malloc_unlock>
 800832c:	0005883a 	mov	r2,zero
 8008330:	dfc00417 	ldw	ra,16(sp)
 8008334:	dcc00317 	ldw	r19,12(sp)
 8008338:	dc800217 	ldw	r18,8(sp)
 800833c:	dc400117 	ldw	r17,4(sp)
 8008340:	dc000017 	ldw	r16,0(sp)
 8008344:	dec00504 	addi	sp,sp,20
 8008348:	f800283a 	ret
 800834c:	040bc83a 	sub	r5,zero,r16
 8008350:	9009883a 	mov	r4,r18
 8008354:	8003af40 	call	8003af4 <_sbrk_r>
 8008358:	00ffffc4 	movi	r3,-1
 800835c:	10c00d26 	beq	r2,r3,8008394 <_malloc_trim_r+0xe0>
 8008360:	00c20074 	movhi	r3,2049
 8008364:	18dae804 	addi	r3,r3,27552
 8008368:	18800017 	ldw	r2,0(r3)
 800836c:	99000217 	ldw	r4,8(r19)
 8008370:	8c23c83a 	sub	r17,r17,r16
 8008374:	8c400054 	ori	r17,r17,1
 8008378:	1421c83a 	sub	r16,r2,r16
 800837c:	24400115 	stw	r17,4(r4)
 8008380:	9009883a 	mov	r4,r18
 8008384:	1c000015 	stw	r16,0(r3)
 8008388:	801056c0 	call	801056c <__malloc_unlock>
 800838c:	00800044 	movi	r2,1
 8008390:	003fe706 	br	8008330 <__alt_data_end+0xf8008330>
 8008394:	000b883a 	mov	r5,zero
 8008398:	9009883a 	mov	r4,r18
 800839c:	8003af40 	call	8003af4 <_sbrk_r>
 80083a0:	99000217 	ldw	r4,8(r19)
 80083a4:	014003c4 	movi	r5,15
 80083a8:	1107c83a 	sub	r3,r2,r4
 80083ac:	28ffdd0e 	bge	r5,r3,8008324 <__alt_data_end+0xf8008324>
 80083b0:	01420074 	movhi	r5,2049
 80083b4:	2953fc04 	addi	r5,r5,20464
 80083b8:	29400017 	ldw	r5,0(r5)
 80083bc:	18c00054 	ori	r3,r3,1
 80083c0:	20c00115 	stw	r3,4(r4)
 80083c4:	00c20074 	movhi	r3,2049
 80083c8:	1145c83a 	sub	r2,r2,r5
 80083cc:	18dae804 	addi	r3,r3,27552
 80083d0:	18800015 	stw	r2,0(r3)
 80083d4:	003fd306 	br	8008324 <__alt_data_end+0xf8008324>

080083d8 <_free_r>:
 80083d8:	28004126 	beq	r5,zero,80084e0 <_free_r+0x108>
 80083dc:	defffd04 	addi	sp,sp,-12
 80083e0:	dc400115 	stw	r17,4(sp)
 80083e4:	dc000015 	stw	r16,0(sp)
 80083e8:	2023883a 	mov	r17,r4
 80083ec:	2821883a 	mov	r16,r5
 80083f0:	dfc00215 	stw	ra,8(sp)
 80083f4:	80105480 	call	8010548 <__malloc_lock>
 80083f8:	81ffff17 	ldw	r7,-4(r16)
 80083fc:	00bfff84 	movi	r2,-2
 8008400:	01020074 	movhi	r4,2049
 8008404:	81bffe04 	addi	r6,r16,-8
 8008408:	3884703a 	and	r2,r7,r2
 800840c:	210d4604 	addi	r4,r4,13592
 8008410:	308b883a 	add	r5,r6,r2
 8008414:	2a400117 	ldw	r9,4(r5)
 8008418:	22000217 	ldw	r8,8(r4)
 800841c:	00ffff04 	movi	r3,-4
 8008420:	48c6703a 	and	r3,r9,r3
 8008424:	2a005726 	beq	r5,r8,8008584 <_free_r+0x1ac>
 8008428:	28c00115 	stw	r3,4(r5)
 800842c:	39c0004c 	andi	r7,r7,1
 8008430:	3800091e 	bne	r7,zero,8008458 <_free_r+0x80>
 8008434:	823ffe17 	ldw	r8,-8(r16)
 8008438:	22400204 	addi	r9,r4,8
 800843c:	320dc83a 	sub	r6,r6,r8
 8008440:	31c00217 	ldw	r7,8(r6)
 8008444:	1205883a 	add	r2,r2,r8
 8008448:	3a406526 	beq	r7,r9,80085e0 <_free_r+0x208>
 800844c:	32000317 	ldw	r8,12(r6)
 8008450:	3a000315 	stw	r8,12(r7)
 8008454:	41c00215 	stw	r7,8(r8)
 8008458:	28cf883a 	add	r7,r5,r3
 800845c:	39c00117 	ldw	r7,4(r7)
 8008460:	39c0004c 	andi	r7,r7,1
 8008464:	38003a26 	beq	r7,zero,8008550 <_free_r+0x178>
 8008468:	10c00054 	ori	r3,r2,1
 800846c:	30c00115 	stw	r3,4(r6)
 8008470:	3087883a 	add	r3,r6,r2
 8008474:	18800015 	stw	r2,0(r3)
 8008478:	00c07fc4 	movi	r3,511
 800847c:	18801936 	bltu	r3,r2,80084e4 <_free_r+0x10c>
 8008480:	1004d0fa 	srli	r2,r2,3
 8008484:	01c00044 	movi	r7,1
 8008488:	21400117 	ldw	r5,4(r4)
 800848c:	10c00044 	addi	r3,r2,1
 8008490:	18c7883a 	add	r3,r3,r3
 8008494:	1005d0ba 	srai	r2,r2,2
 8008498:	18c7883a 	add	r3,r3,r3
 800849c:	18c7883a 	add	r3,r3,r3
 80084a0:	1907883a 	add	r3,r3,r4
 80084a4:	3884983a 	sll	r2,r7,r2
 80084a8:	19c00017 	ldw	r7,0(r3)
 80084ac:	1a3ffe04 	addi	r8,r3,-8
 80084b0:	1144b03a 	or	r2,r2,r5
 80084b4:	32000315 	stw	r8,12(r6)
 80084b8:	31c00215 	stw	r7,8(r6)
 80084bc:	20800115 	stw	r2,4(r4)
 80084c0:	19800015 	stw	r6,0(r3)
 80084c4:	39800315 	stw	r6,12(r7)
 80084c8:	8809883a 	mov	r4,r17
 80084cc:	dfc00217 	ldw	ra,8(sp)
 80084d0:	dc400117 	ldw	r17,4(sp)
 80084d4:	dc000017 	ldw	r16,0(sp)
 80084d8:	dec00304 	addi	sp,sp,12
 80084dc:	801056c1 	jmpi	801056c <__malloc_unlock>
 80084e0:	f800283a 	ret
 80084e4:	100ad27a 	srli	r5,r2,9
 80084e8:	00c00104 	movi	r3,4
 80084ec:	19404a36 	bltu	r3,r5,8008618 <_free_r+0x240>
 80084f0:	100ad1ba 	srli	r5,r2,6
 80084f4:	28c00e44 	addi	r3,r5,57
 80084f8:	18c7883a 	add	r3,r3,r3
 80084fc:	29400e04 	addi	r5,r5,56
 8008500:	18c7883a 	add	r3,r3,r3
 8008504:	18c7883a 	add	r3,r3,r3
 8008508:	1909883a 	add	r4,r3,r4
 800850c:	20c00017 	ldw	r3,0(r4)
 8008510:	01c20074 	movhi	r7,2049
 8008514:	213ffe04 	addi	r4,r4,-8
 8008518:	39cd4604 	addi	r7,r7,13592
 800851c:	20c04426 	beq	r4,r3,8008630 <_free_r+0x258>
 8008520:	01ffff04 	movi	r7,-4
 8008524:	19400117 	ldw	r5,4(r3)
 8008528:	29ca703a 	and	r5,r5,r7
 800852c:	1140022e 	bgeu	r2,r5,8008538 <_free_r+0x160>
 8008530:	18c00217 	ldw	r3,8(r3)
 8008534:	20fffb1e 	bne	r4,r3,8008524 <__alt_data_end+0xf8008524>
 8008538:	19000317 	ldw	r4,12(r3)
 800853c:	31000315 	stw	r4,12(r6)
 8008540:	30c00215 	stw	r3,8(r6)
 8008544:	21800215 	stw	r6,8(r4)
 8008548:	19800315 	stw	r6,12(r3)
 800854c:	003fde06 	br	80084c8 <__alt_data_end+0xf80084c8>
 8008550:	29c00217 	ldw	r7,8(r5)
 8008554:	10c5883a 	add	r2,r2,r3
 8008558:	00c20074 	movhi	r3,2049
 800855c:	18cd4804 	addi	r3,r3,13600
 8008560:	38c03b26 	beq	r7,r3,8008650 <_free_r+0x278>
 8008564:	2a000317 	ldw	r8,12(r5)
 8008568:	11400054 	ori	r5,r2,1
 800856c:	3087883a 	add	r3,r6,r2
 8008570:	3a000315 	stw	r8,12(r7)
 8008574:	41c00215 	stw	r7,8(r8)
 8008578:	31400115 	stw	r5,4(r6)
 800857c:	18800015 	stw	r2,0(r3)
 8008580:	003fbd06 	br	8008478 <__alt_data_end+0xf8008478>
 8008584:	39c0004c 	andi	r7,r7,1
 8008588:	10c5883a 	add	r2,r2,r3
 800858c:	3800071e 	bne	r7,zero,80085ac <_free_r+0x1d4>
 8008590:	81fffe17 	ldw	r7,-8(r16)
 8008594:	31cdc83a 	sub	r6,r6,r7
 8008598:	30c00317 	ldw	r3,12(r6)
 800859c:	31400217 	ldw	r5,8(r6)
 80085a0:	11c5883a 	add	r2,r2,r7
 80085a4:	28c00315 	stw	r3,12(r5)
 80085a8:	19400215 	stw	r5,8(r3)
 80085ac:	10c00054 	ori	r3,r2,1
 80085b0:	30c00115 	stw	r3,4(r6)
 80085b4:	00c20074 	movhi	r3,2049
 80085b8:	18d3fd04 	addi	r3,r3,20468
 80085bc:	18c00017 	ldw	r3,0(r3)
 80085c0:	21800215 	stw	r6,8(r4)
 80085c4:	10ffc036 	bltu	r2,r3,80084c8 <__alt_data_end+0xf80084c8>
 80085c8:	00820074 	movhi	r2,2049
 80085cc:	109ad804 	addi	r2,r2,27488
 80085d0:	11400017 	ldw	r5,0(r2)
 80085d4:	8809883a 	mov	r4,r17
 80085d8:	80082b40 	call	80082b4 <_malloc_trim_r>
 80085dc:	003fba06 	br	80084c8 <__alt_data_end+0xf80084c8>
 80085e0:	28c9883a 	add	r4,r5,r3
 80085e4:	21000117 	ldw	r4,4(r4)
 80085e8:	2100004c 	andi	r4,r4,1
 80085ec:	2000391e 	bne	r4,zero,80086d4 <_free_r+0x2fc>
 80085f0:	29c00217 	ldw	r7,8(r5)
 80085f4:	29000317 	ldw	r4,12(r5)
 80085f8:	1885883a 	add	r2,r3,r2
 80085fc:	10c00054 	ori	r3,r2,1
 8008600:	39000315 	stw	r4,12(r7)
 8008604:	21c00215 	stw	r7,8(r4)
 8008608:	30c00115 	stw	r3,4(r6)
 800860c:	308d883a 	add	r6,r6,r2
 8008610:	30800015 	stw	r2,0(r6)
 8008614:	003fac06 	br	80084c8 <__alt_data_end+0xf80084c8>
 8008618:	00c00504 	movi	r3,20
 800861c:	19401536 	bltu	r3,r5,8008674 <_free_r+0x29c>
 8008620:	28c01704 	addi	r3,r5,92
 8008624:	18c7883a 	add	r3,r3,r3
 8008628:	294016c4 	addi	r5,r5,91
 800862c:	003fb406 	br	8008500 <__alt_data_end+0xf8008500>
 8008630:	280bd0ba 	srai	r5,r5,2
 8008634:	00c00044 	movi	r3,1
 8008638:	38800117 	ldw	r2,4(r7)
 800863c:	194a983a 	sll	r5,r3,r5
 8008640:	2007883a 	mov	r3,r4
 8008644:	2884b03a 	or	r2,r5,r2
 8008648:	38800115 	stw	r2,4(r7)
 800864c:	003fbb06 	br	800853c <__alt_data_end+0xf800853c>
 8008650:	21800515 	stw	r6,20(r4)
 8008654:	21800415 	stw	r6,16(r4)
 8008658:	10c00054 	ori	r3,r2,1
 800865c:	31c00315 	stw	r7,12(r6)
 8008660:	31c00215 	stw	r7,8(r6)
 8008664:	30c00115 	stw	r3,4(r6)
 8008668:	308d883a 	add	r6,r6,r2
 800866c:	30800015 	stw	r2,0(r6)
 8008670:	003f9506 	br	80084c8 <__alt_data_end+0xf80084c8>
 8008674:	00c01504 	movi	r3,84
 8008678:	19400536 	bltu	r3,r5,8008690 <_free_r+0x2b8>
 800867c:	100ad33a 	srli	r5,r2,12
 8008680:	28c01bc4 	addi	r3,r5,111
 8008684:	18c7883a 	add	r3,r3,r3
 8008688:	29401b84 	addi	r5,r5,110
 800868c:	003f9c06 	br	8008500 <__alt_data_end+0xf8008500>
 8008690:	00c05504 	movi	r3,340
 8008694:	19400536 	bltu	r3,r5,80086ac <_free_r+0x2d4>
 8008698:	100ad3fa 	srli	r5,r2,15
 800869c:	28c01e04 	addi	r3,r5,120
 80086a0:	18c7883a 	add	r3,r3,r3
 80086a4:	29401dc4 	addi	r5,r5,119
 80086a8:	003f9506 	br	8008500 <__alt_data_end+0xf8008500>
 80086ac:	00c15504 	movi	r3,1364
 80086b0:	19400536 	bltu	r3,r5,80086c8 <_free_r+0x2f0>
 80086b4:	100ad4ba 	srli	r5,r2,18
 80086b8:	28c01f44 	addi	r3,r5,125
 80086bc:	18c7883a 	add	r3,r3,r3
 80086c0:	29401f04 	addi	r5,r5,124
 80086c4:	003f8e06 	br	8008500 <__alt_data_end+0xf8008500>
 80086c8:	00c03f84 	movi	r3,254
 80086cc:	01401f84 	movi	r5,126
 80086d0:	003f8b06 	br	8008500 <__alt_data_end+0xf8008500>
 80086d4:	10c00054 	ori	r3,r2,1
 80086d8:	30c00115 	stw	r3,4(r6)
 80086dc:	308d883a 	add	r6,r6,r2
 80086e0:	30800015 	stw	r2,0(r6)
 80086e4:	003f7806 	br	80084c8 <__alt_data_end+0xf80084c8>

080086e8 <__sfvwrite_r>:
 80086e8:	30800217 	ldw	r2,8(r6)
 80086ec:	10006726 	beq	r2,zero,800888c <__sfvwrite_r+0x1a4>
 80086f0:	28c0030b 	ldhu	r3,12(r5)
 80086f4:	defff404 	addi	sp,sp,-48
 80086f8:	dd400715 	stw	r21,28(sp)
 80086fc:	dd000615 	stw	r20,24(sp)
 8008700:	dc000215 	stw	r16,8(sp)
 8008704:	dfc00b15 	stw	ra,44(sp)
 8008708:	df000a15 	stw	fp,40(sp)
 800870c:	ddc00915 	stw	r23,36(sp)
 8008710:	dd800815 	stw	r22,32(sp)
 8008714:	dcc00515 	stw	r19,20(sp)
 8008718:	dc800415 	stw	r18,16(sp)
 800871c:	dc400315 	stw	r17,12(sp)
 8008720:	1880020c 	andi	r2,r3,8
 8008724:	2821883a 	mov	r16,r5
 8008728:	202b883a 	mov	r21,r4
 800872c:	3029883a 	mov	r20,r6
 8008730:	10002726 	beq	r2,zero,80087d0 <__sfvwrite_r+0xe8>
 8008734:	28800417 	ldw	r2,16(r5)
 8008738:	10002526 	beq	r2,zero,80087d0 <__sfvwrite_r+0xe8>
 800873c:	1880008c 	andi	r2,r3,2
 8008740:	a4400017 	ldw	r17,0(r20)
 8008744:	10002a26 	beq	r2,zero,80087f0 <__sfvwrite_r+0x108>
 8008748:	05a00034 	movhi	r22,32768
 800874c:	0027883a 	mov	r19,zero
 8008750:	0025883a 	mov	r18,zero
 8008754:	b5bf0004 	addi	r22,r22,-1024
 8008758:	980d883a 	mov	r6,r19
 800875c:	a809883a 	mov	r4,r21
 8008760:	90004626 	beq	r18,zero,800887c <__sfvwrite_r+0x194>
 8008764:	900f883a 	mov	r7,r18
 8008768:	b480022e 	bgeu	r22,r18,8008774 <__sfvwrite_r+0x8c>
 800876c:	01e00034 	movhi	r7,32768
 8008770:	39ff0004 	addi	r7,r7,-1024
 8008774:	80800917 	ldw	r2,36(r16)
 8008778:	81400717 	ldw	r5,28(r16)
 800877c:	103ee83a 	callr	r2
 8008780:	0080570e 	bge	zero,r2,80088e0 <__sfvwrite_r+0x1f8>
 8008784:	a0c00217 	ldw	r3,8(r20)
 8008788:	98a7883a 	add	r19,r19,r2
 800878c:	90a5c83a 	sub	r18,r18,r2
 8008790:	1885c83a 	sub	r2,r3,r2
 8008794:	a0800215 	stw	r2,8(r20)
 8008798:	103fef1e 	bne	r2,zero,8008758 <__alt_data_end+0xf8008758>
 800879c:	0005883a 	mov	r2,zero
 80087a0:	dfc00b17 	ldw	ra,44(sp)
 80087a4:	df000a17 	ldw	fp,40(sp)
 80087a8:	ddc00917 	ldw	r23,36(sp)
 80087ac:	dd800817 	ldw	r22,32(sp)
 80087b0:	dd400717 	ldw	r21,28(sp)
 80087b4:	dd000617 	ldw	r20,24(sp)
 80087b8:	dcc00517 	ldw	r19,20(sp)
 80087bc:	dc800417 	ldw	r18,16(sp)
 80087c0:	dc400317 	ldw	r17,12(sp)
 80087c4:	dc000217 	ldw	r16,8(sp)
 80087c8:	dec00c04 	addi	sp,sp,48
 80087cc:	f800283a 	ret
 80087d0:	800b883a 	mov	r5,r16
 80087d4:	a809883a 	mov	r4,r21
 80087d8:	80062900 	call	8006290 <__swsetup_r>
 80087dc:	1000eb1e 	bne	r2,zero,8008b8c <__sfvwrite_r+0x4a4>
 80087e0:	80c0030b 	ldhu	r3,12(r16)
 80087e4:	a4400017 	ldw	r17,0(r20)
 80087e8:	1880008c 	andi	r2,r3,2
 80087ec:	103fd61e 	bne	r2,zero,8008748 <__alt_data_end+0xf8008748>
 80087f0:	1880004c 	andi	r2,r3,1
 80087f4:	10003f1e 	bne	r2,zero,80088f4 <__sfvwrite_r+0x20c>
 80087f8:	0039883a 	mov	fp,zero
 80087fc:	0025883a 	mov	r18,zero
 8008800:	90001a26 	beq	r18,zero,800886c <__sfvwrite_r+0x184>
 8008804:	1880800c 	andi	r2,r3,512
 8008808:	84c00217 	ldw	r19,8(r16)
 800880c:	10002126 	beq	r2,zero,8008894 <__sfvwrite_r+0x1ac>
 8008810:	982f883a 	mov	r23,r19
 8008814:	94c09336 	bltu	r18,r19,8008a64 <__sfvwrite_r+0x37c>
 8008818:	1881200c 	andi	r2,r3,1152
 800881c:	10009e1e 	bne	r2,zero,8008a98 <__sfvwrite_r+0x3b0>
 8008820:	81000017 	ldw	r4,0(r16)
 8008824:	b80d883a 	mov	r6,r23
 8008828:	e00b883a 	mov	r5,fp
 800882c:	80091f00 	call	80091f0 <memmove>
 8008830:	80c00217 	ldw	r3,8(r16)
 8008834:	81000017 	ldw	r4,0(r16)
 8008838:	9005883a 	mov	r2,r18
 800883c:	1ce7c83a 	sub	r19,r3,r19
 8008840:	25cf883a 	add	r7,r4,r23
 8008844:	84c00215 	stw	r19,8(r16)
 8008848:	81c00015 	stw	r7,0(r16)
 800884c:	a0c00217 	ldw	r3,8(r20)
 8008850:	e0b9883a 	add	fp,fp,r2
 8008854:	90a5c83a 	sub	r18,r18,r2
 8008858:	18a7c83a 	sub	r19,r3,r2
 800885c:	a4c00215 	stw	r19,8(r20)
 8008860:	983fce26 	beq	r19,zero,800879c <__alt_data_end+0xf800879c>
 8008864:	80c0030b 	ldhu	r3,12(r16)
 8008868:	903fe61e 	bne	r18,zero,8008804 <__alt_data_end+0xf8008804>
 800886c:	8f000017 	ldw	fp,0(r17)
 8008870:	8c800117 	ldw	r18,4(r17)
 8008874:	8c400204 	addi	r17,r17,8
 8008878:	003fe106 	br	8008800 <__alt_data_end+0xf8008800>
 800887c:	8cc00017 	ldw	r19,0(r17)
 8008880:	8c800117 	ldw	r18,4(r17)
 8008884:	8c400204 	addi	r17,r17,8
 8008888:	003fb306 	br	8008758 <__alt_data_end+0xf8008758>
 800888c:	0005883a 	mov	r2,zero
 8008890:	f800283a 	ret
 8008894:	81000017 	ldw	r4,0(r16)
 8008898:	80800417 	ldw	r2,16(r16)
 800889c:	11005736 	bltu	r2,r4,80089fc <__sfvwrite_r+0x314>
 80088a0:	85c00517 	ldw	r23,20(r16)
 80088a4:	95c05536 	bltu	r18,r23,80089fc <__sfvwrite_r+0x314>
 80088a8:	00a00034 	movhi	r2,32768
 80088ac:	10bfffc4 	addi	r2,r2,-1
 80088b0:	9009883a 	mov	r4,r18
 80088b4:	1480012e 	bgeu	r2,r18,80088bc <__sfvwrite_r+0x1d4>
 80088b8:	1009883a 	mov	r4,r2
 80088bc:	b80b883a 	mov	r5,r23
 80088c0:	800d5f00 	call	800d5f0 <__divsi3>
 80088c4:	15cf383a 	mul	r7,r2,r23
 80088c8:	81400717 	ldw	r5,28(r16)
 80088cc:	80800917 	ldw	r2,36(r16)
 80088d0:	e00d883a 	mov	r6,fp
 80088d4:	a809883a 	mov	r4,r21
 80088d8:	103ee83a 	callr	r2
 80088dc:	00bfdb16 	blt	zero,r2,800884c <__alt_data_end+0xf800884c>
 80088e0:	8080030b 	ldhu	r2,12(r16)
 80088e4:	10801014 	ori	r2,r2,64
 80088e8:	8080030d 	sth	r2,12(r16)
 80088ec:	00bfffc4 	movi	r2,-1
 80088f0:	003fab06 	br	80087a0 <__alt_data_end+0xf80087a0>
 80088f4:	0027883a 	mov	r19,zero
 80088f8:	0011883a 	mov	r8,zero
 80088fc:	0039883a 	mov	fp,zero
 8008900:	0025883a 	mov	r18,zero
 8008904:	90001f26 	beq	r18,zero,8008984 <__sfvwrite_r+0x29c>
 8008908:	40005a26 	beq	r8,zero,8008a74 <__sfvwrite_r+0x38c>
 800890c:	982d883a 	mov	r22,r19
 8008910:	94c0012e 	bgeu	r18,r19,8008918 <__sfvwrite_r+0x230>
 8008914:	902d883a 	mov	r22,r18
 8008918:	81000017 	ldw	r4,0(r16)
 800891c:	80800417 	ldw	r2,16(r16)
 8008920:	b02f883a 	mov	r23,r22
 8008924:	81c00517 	ldw	r7,20(r16)
 8008928:	1100032e 	bgeu	r2,r4,8008938 <__sfvwrite_r+0x250>
 800892c:	80c00217 	ldw	r3,8(r16)
 8008930:	38c7883a 	add	r3,r7,r3
 8008934:	1d801816 	blt	r3,r22,8008998 <__sfvwrite_r+0x2b0>
 8008938:	b1c03e16 	blt	r22,r7,8008a34 <__sfvwrite_r+0x34c>
 800893c:	80800917 	ldw	r2,36(r16)
 8008940:	81400717 	ldw	r5,28(r16)
 8008944:	e00d883a 	mov	r6,fp
 8008948:	da000115 	stw	r8,4(sp)
 800894c:	a809883a 	mov	r4,r21
 8008950:	103ee83a 	callr	r2
 8008954:	102f883a 	mov	r23,r2
 8008958:	da000117 	ldw	r8,4(sp)
 800895c:	00bfe00e 	bge	zero,r2,80088e0 <__alt_data_end+0xf80088e0>
 8008960:	9de7c83a 	sub	r19,r19,r23
 8008964:	98001f26 	beq	r19,zero,80089e4 <__sfvwrite_r+0x2fc>
 8008968:	a0800217 	ldw	r2,8(r20)
 800896c:	e5f9883a 	add	fp,fp,r23
 8008970:	95e5c83a 	sub	r18,r18,r23
 8008974:	15efc83a 	sub	r23,r2,r23
 8008978:	a5c00215 	stw	r23,8(r20)
 800897c:	b83f8726 	beq	r23,zero,800879c <__alt_data_end+0xf800879c>
 8008980:	903fe11e 	bne	r18,zero,8008908 <__alt_data_end+0xf8008908>
 8008984:	8f000017 	ldw	fp,0(r17)
 8008988:	8c800117 	ldw	r18,4(r17)
 800898c:	0011883a 	mov	r8,zero
 8008990:	8c400204 	addi	r17,r17,8
 8008994:	003fdb06 	br	8008904 <__alt_data_end+0xf8008904>
 8008998:	180d883a 	mov	r6,r3
 800899c:	e00b883a 	mov	r5,fp
 80089a0:	da000115 	stw	r8,4(sp)
 80089a4:	d8c00015 	stw	r3,0(sp)
 80089a8:	80091f00 	call	80091f0 <memmove>
 80089ac:	d8c00017 	ldw	r3,0(sp)
 80089b0:	80800017 	ldw	r2,0(r16)
 80089b4:	800b883a 	mov	r5,r16
 80089b8:	a809883a 	mov	r4,r21
 80089bc:	10c5883a 	add	r2,r2,r3
 80089c0:	80800015 	stw	r2,0(r16)
 80089c4:	d8c00015 	stw	r3,0(sp)
 80089c8:	8007e880 	call	8007e88 <_fflush_r>
 80089cc:	d8c00017 	ldw	r3,0(sp)
 80089d0:	da000117 	ldw	r8,4(sp)
 80089d4:	103fc21e 	bne	r2,zero,80088e0 <__alt_data_end+0xf80088e0>
 80089d8:	182f883a 	mov	r23,r3
 80089dc:	9de7c83a 	sub	r19,r19,r23
 80089e0:	983fe11e 	bne	r19,zero,8008968 <__alt_data_end+0xf8008968>
 80089e4:	800b883a 	mov	r5,r16
 80089e8:	a809883a 	mov	r4,r21
 80089ec:	8007e880 	call	8007e88 <_fflush_r>
 80089f0:	103fbb1e 	bne	r2,zero,80088e0 <__alt_data_end+0xf80088e0>
 80089f4:	0011883a 	mov	r8,zero
 80089f8:	003fdb06 	br	8008968 <__alt_data_end+0xf8008968>
 80089fc:	94c0012e 	bgeu	r18,r19,8008a04 <__sfvwrite_r+0x31c>
 8008a00:	9027883a 	mov	r19,r18
 8008a04:	980d883a 	mov	r6,r19
 8008a08:	e00b883a 	mov	r5,fp
 8008a0c:	80091f00 	call	80091f0 <memmove>
 8008a10:	80800217 	ldw	r2,8(r16)
 8008a14:	80c00017 	ldw	r3,0(r16)
 8008a18:	14c5c83a 	sub	r2,r2,r19
 8008a1c:	1cc7883a 	add	r3,r3,r19
 8008a20:	80800215 	stw	r2,8(r16)
 8008a24:	80c00015 	stw	r3,0(r16)
 8008a28:	10004326 	beq	r2,zero,8008b38 <__sfvwrite_r+0x450>
 8008a2c:	9805883a 	mov	r2,r19
 8008a30:	003f8606 	br	800884c <__alt_data_end+0xf800884c>
 8008a34:	b00d883a 	mov	r6,r22
 8008a38:	e00b883a 	mov	r5,fp
 8008a3c:	da000115 	stw	r8,4(sp)
 8008a40:	80091f00 	call	80091f0 <memmove>
 8008a44:	80800217 	ldw	r2,8(r16)
 8008a48:	80c00017 	ldw	r3,0(r16)
 8008a4c:	da000117 	ldw	r8,4(sp)
 8008a50:	1585c83a 	sub	r2,r2,r22
 8008a54:	1dad883a 	add	r22,r3,r22
 8008a58:	80800215 	stw	r2,8(r16)
 8008a5c:	85800015 	stw	r22,0(r16)
 8008a60:	003fbf06 	br	8008960 <__alt_data_end+0xf8008960>
 8008a64:	81000017 	ldw	r4,0(r16)
 8008a68:	9027883a 	mov	r19,r18
 8008a6c:	902f883a 	mov	r23,r18
 8008a70:	003f6c06 	br	8008824 <__alt_data_end+0xf8008824>
 8008a74:	900d883a 	mov	r6,r18
 8008a78:	01400284 	movi	r5,10
 8008a7c:	e009883a 	mov	r4,fp
 8008a80:	8008fc40 	call	8008fc4 <memchr>
 8008a84:	10003e26 	beq	r2,zero,8008b80 <__sfvwrite_r+0x498>
 8008a88:	10800044 	addi	r2,r2,1
 8008a8c:	1727c83a 	sub	r19,r2,fp
 8008a90:	02000044 	movi	r8,1
 8008a94:	003f9d06 	br	800890c <__alt_data_end+0xf800890c>
 8008a98:	80800517 	ldw	r2,20(r16)
 8008a9c:	81400417 	ldw	r5,16(r16)
 8008aa0:	81c00017 	ldw	r7,0(r16)
 8008aa4:	10a7883a 	add	r19,r2,r2
 8008aa8:	9885883a 	add	r2,r19,r2
 8008aac:	1026d7fa 	srli	r19,r2,31
 8008ab0:	396dc83a 	sub	r22,r7,r5
 8008ab4:	b1000044 	addi	r4,r22,1
 8008ab8:	9885883a 	add	r2,r19,r2
 8008abc:	1027d07a 	srai	r19,r2,1
 8008ac0:	2485883a 	add	r2,r4,r18
 8008ac4:	980d883a 	mov	r6,r19
 8008ac8:	9880022e 	bgeu	r19,r2,8008ad4 <__sfvwrite_r+0x3ec>
 8008acc:	1027883a 	mov	r19,r2
 8008ad0:	100d883a 	mov	r6,r2
 8008ad4:	18c1000c 	andi	r3,r3,1024
 8008ad8:	18001c26 	beq	r3,zero,8008b4c <__sfvwrite_r+0x464>
 8008adc:	300b883a 	mov	r5,r6
 8008ae0:	a809883a 	mov	r4,r21
 8008ae4:	80030600 	call	8003060 <_malloc_r>
 8008ae8:	102f883a 	mov	r23,r2
 8008aec:	10002926 	beq	r2,zero,8008b94 <__sfvwrite_r+0x4ac>
 8008af0:	81400417 	ldw	r5,16(r16)
 8008af4:	b00d883a 	mov	r6,r22
 8008af8:	1009883a 	mov	r4,r2
 8008afc:	80090a80 	call	80090a8 <memcpy>
 8008b00:	8080030b 	ldhu	r2,12(r16)
 8008b04:	00fedfc4 	movi	r3,-1153
 8008b08:	10c4703a 	and	r2,r2,r3
 8008b0c:	10802014 	ori	r2,r2,128
 8008b10:	8080030d 	sth	r2,12(r16)
 8008b14:	bd89883a 	add	r4,r23,r22
 8008b18:	9d8fc83a 	sub	r7,r19,r22
 8008b1c:	85c00415 	stw	r23,16(r16)
 8008b20:	84c00515 	stw	r19,20(r16)
 8008b24:	81000015 	stw	r4,0(r16)
 8008b28:	9027883a 	mov	r19,r18
 8008b2c:	81c00215 	stw	r7,8(r16)
 8008b30:	902f883a 	mov	r23,r18
 8008b34:	003f3b06 	br	8008824 <__alt_data_end+0xf8008824>
 8008b38:	800b883a 	mov	r5,r16
 8008b3c:	a809883a 	mov	r4,r21
 8008b40:	8007e880 	call	8007e88 <_fflush_r>
 8008b44:	103fb926 	beq	r2,zero,8008a2c <__alt_data_end+0xf8008a2c>
 8008b48:	003f6506 	br	80088e0 <__alt_data_end+0xf80088e0>
 8008b4c:	a809883a 	mov	r4,r21
 8008b50:	800a4b00 	call	800a4b0 <_realloc_r>
 8008b54:	102f883a 	mov	r23,r2
 8008b58:	103fee1e 	bne	r2,zero,8008b14 <__alt_data_end+0xf8008b14>
 8008b5c:	81400417 	ldw	r5,16(r16)
 8008b60:	a809883a 	mov	r4,r21
 8008b64:	80083d80 	call	80083d8 <_free_r>
 8008b68:	8080030b 	ldhu	r2,12(r16)
 8008b6c:	00ffdfc4 	movi	r3,-129
 8008b70:	1884703a 	and	r2,r3,r2
 8008b74:	00c00304 	movi	r3,12
 8008b78:	a8c00015 	stw	r3,0(r21)
 8008b7c:	003f5906 	br	80088e4 <__alt_data_end+0xf80088e4>
 8008b80:	94c00044 	addi	r19,r18,1
 8008b84:	02000044 	movi	r8,1
 8008b88:	003f6006 	br	800890c <__alt_data_end+0xf800890c>
 8008b8c:	00bfffc4 	movi	r2,-1
 8008b90:	003f0306 	br	80087a0 <__alt_data_end+0xf80087a0>
 8008b94:	00800304 	movi	r2,12
 8008b98:	a8800015 	stw	r2,0(r21)
 8008b9c:	8080030b 	ldhu	r2,12(r16)
 8008ba0:	003f5006 	br	80088e4 <__alt_data_end+0xf80088e4>

08008ba4 <_fwalk>:
 8008ba4:	defff704 	addi	sp,sp,-36
 8008ba8:	dd000415 	stw	r20,16(sp)
 8008bac:	dfc00815 	stw	ra,32(sp)
 8008bb0:	ddc00715 	stw	r23,28(sp)
 8008bb4:	dd800615 	stw	r22,24(sp)
 8008bb8:	dd400515 	stw	r21,20(sp)
 8008bbc:	dcc00315 	stw	r19,12(sp)
 8008bc0:	dc800215 	stw	r18,8(sp)
 8008bc4:	dc400115 	stw	r17,4(sp)
 8008bc8:	dc000015 	stw	r16,0(sp)
 8008bcc:	2500b804 	addi	r20,r4,736
 8008bd0:	a0002326 	beq	r20,zero,8008c60 <_fwalk+0xbc>
 8008bd4:	282b883a 	mov	r21,r5
 8008bd8:	002f883a 	mov	r23,zero
 8008bdc:	05800044 	movi	r22,1
 8008be0:	04ffffc4 	movi	r19,-1
 8008be4:	a4400117 	ldw	r17,4(r20)
 8008be8:	a4800217 	ldw	r18,8(r20)
 8008bec:	8c7fffc4 	addi	r17,r17,-1
 8008bf0:	88000d16 	blt	r17,zero,8008c28 <_fwalk+0x84>
 8008bf4:	94000304 	addi	r16,r18,12
 8008bf8:	94800384 	addi	r18,r18,14
 8008bfc:	8080000b 	ldhu	r2,0(r16)
 8008c00:	8c7fffc4 	addi	r17,r17,-1
 8008c04:	813ffd04 	addi	r4,r16,-12
 8008c08:	b080042e 	bgeu	r22,r2,8008c1c <_fwalk+0x78>
 8008c0c:	9080000f 	ldh	r2,0(r18)
 8008c10:	14c00226 	beq	r2,r19,8008c1c <_fwalk+0x78>
 8008c14:	a83ee83a 	callr	r21
 8008c18:	b8aeb03a 	or	r23,r23,r2
 8008c1c:	84001a04 	addi	r16,r16,104
 8008c20:	94801a04 	addi	r18,r18,104
 8008c24:	8cfff51e 	bne	r17,r19,8008bfc <__alt_data_end+0xf8008bfc>
 8008c28:	a5000017 	ldw	r20,0(r20)
 8008c2c:	a03fed1e 	bne	r20,zero,8008be4 <__alt_data_end+0xf8008be4>
 8008c30:	b805883a 	mov	r2,r23
 8008c34:	dfc00817 	ldw	ra,32(sp)
 8008c38:	ddc00717 	ldw	r23,28(sp)
 8008c3c:	dd800617 	ldw	r22,24(sp)
 8008c40:	dd400517 	ldw	r21,20(sp)
 8008c44:	dd000417 	ldw	r20,16(sp)
 8008c48:	dcc00317 	ldw	r19,12(sp)
 8008c4c:	dc800217 	ldw	r18,8(sp)
 8008c50:	dc400117 	ldw	r17,4(sp)
 8008c54:	dc000017 	ldw	r16,0(sp)
 8008c58:	dec00904 	addi	sp,sp,36
 8008c5c:	f800283a 	ret
 8008c60:	002f883a 	mov	r23,zero
 8008c64:	003ff206 	br	8008c30 <__alt_data_end+0xf8008c30>

08008c68 <_fwalk_reent>:
 8008c68:	defff704 	addi	sp,sp,-36
 8008c6c:	dd000415 	stw	r20,16(sp)
 8008c70:	dfc00815 	stw	ra,32(sp)
 8008c74:	ddc00715 	stw	r23,28(sp)
 8008c78:	dd800615 	stw	r22,24(sp)
 8008c7c:	dd400515 	stw	r21,20(sp)
 8008c80:	dcc00315 	stw	r19,12(sp)
 8008c84:	dc800215 	stw	r18,8(sp)
 8008c88:	dc400115 	stw	r17,4(sp)
 8008c8c:	dc000015 	stw	r16,0(sp)
 8008c90:	2500b804 	addi	r20,r4,736
 8008c94:	a0002326 	beq	r20,zero,8008d24 <_fwalk_reent+0xbc>
 8008c98:	282b883a 	mov	r21,r5
 8008c9c:	2027883a 	mov	r19,r4
 8008ca0:	002f883a 	mov	r23,zero
 8008ca4:	05800044 	movi	r22,1
 8008ca8:	04bfffc4 	movi	r18,-1
 8008cac:	a4400117 	ldw	r17,4(r20)
 8008cb0:	a4000217 	ldw	r16,8(r20)
 8008cb4:	8c7fffc4 	addi	r17,r17,-1
 8008cb8:	88000c16 	blt	r17,zero,8008cec <_fwalk_reent+0x84>
 8008cbc:	84000304 	addi	r16,r16,12
 8008cc0:	8080000b 	ldhu	r2,0(r16)
 8008cc4:	8c7fffc4 	addi	r17,r17,-1
 8008cc8:	817ffd04 	addi	r5,r16,-12
 8008ccc:	b080052e 	bgeu	r22,r2,8008ce4 <_fwalk_reent+0x7c>
 8008cd0:	8080008f 	ldh	r2,2(r16)
 8008cd4:	9809883a 	mov	r4,r19
 8008cd8:	14800226 	beq	r2,r18,8008ce4 <_fwalk_reent+0x7c>
 8008cdc:	a83ee83a 	callr	r21
 8008ce0:	b8aeb03a 	or	r23,r23,r2
 8008ce4:	84001a04 	addi	r16,r16,104
 8008ce8:	8cbff51e 	bne	r17,r18,8008cc0 <__alt_data_end+0xf8008cc0>
 8008cec:	a5000017 	ldw	r20,0(r20)
 8008cf0:	a03fee1e 	bne	r20,zero,8008cac <__alt_data_end+0xf8008cac>
 8008cf4:	b805883a 	mov	r2,r23
 8008cf8:	dfc00817 	ldw	ra,32(sp)
 8008cfc:	ddc00717 	ldw	r23,28(sp)
 8008d00:	dd800617 	ldw	r22,24(sp)
 8008d04:	dd400517 	ldw	r21,20(sp)
 8008d08:	dd000417 	ldw	r20,16(sp)
 8008d0c:	dcc00317 	ldw	r19,12(sp)
 8008d10:	dc800217 	ldw	r18,8(sp)
 8008d14:	dc400117 	ldw	r17,4(sp)
 8008d18:	dc000017 	ldw	r16,0(sp)
 8008d1c:	dec00904 	addi	sp,sp,36
 8008d20:	f800283a 	ret
 8008d24:	002f883a 	mov	r23,zero
 8008d28:	003ff206 	br	8008cf4 <__alt_data_end+0xf8008cf4>

08008d2c <_setlocale_r>:
 8008d2c:	30001b26 	beq	r6,zero,8008d9c <_setlocale_r+0x70>
 8008d30:	01420074 	movhi	r5,2049
 8008d34:	defffe04 	addi	sp,sp,-8
 8008d38:	294ca504 	addi	r5,r5,12948
 8008d3c:	3009883a 	mov	r4,r6
 8008d40:	dc000015 	stw	r16,0(sp)
 8008d44:	dfc00115 	stw	ra,4(sp)
 8008d48:	3021883a 	mov	r16,r6
 8008d4c:	8003e4c0 	call	8003e4c <strcmp>
 8008d50:	1000061e 	bne	r2,zero,8008d6c <_setlocale_r+0x40>
 8008d54:	00820074 	movhi	r2,2049
 8008d58:	108ca404 	addi	r2,r2,12944
 8008d5c:	dfc00117 	ldw	ra,4(sp)
 8008d60:	dc000017 	ldw	r16,0(sp)
 8008d64:	dec00204 	addi	sp,sp,8
 8008d68:	f800283a 	ret
 8008d6c:	01420074 	movhi	r5,2049
 8008d70:	294ca404 	addi	r5,r5,12944
 8008d74:	8009883a 	mov	r4,r16
 8008d78:	8003e4c0 	call	8003e4c <strcmp>
 8008d7c:	103ff526 	beq	r2,zero,8008d54 <__alt_data_end+0xf8008d54>
 8008d80:	01420074 	movhi	r5,2049
 8008d84:	294c8f04 	addi	r5,r5,12860
 8008d88:	8009883a 	mov	r4,r16
 8008d8c:	8003e4c0 	call	8003e4c <strcmp>
 8008d90:	103ff026 	beq	r2,zero,8008d54 <__alt_data_end+0xf8008d54>
 8008d94:	0005883a 	mov	r2,zero
 8008d98:	003ff006 	br	8008d5c <__alt_data_end+0xf8008d5c>
 8008d9c:	00820074 	movhi	r2,2049
 8008da0:	108ca404 	addi	r2,r2,12944
 8008da4:	f800283a 	ret

08008da8 <__locale_charset>:
 8008da8:	00820074 	movhi	r2,2049
 8008dac:	108f5904 	addi	r2,r2,15716
 8008db0:	f800283a 	ret

08008db4 <__locale_mb_cur_max>:
 8008db4:	00820074 	movhi	r2,2049
 8008db8:	10940004 	addi	r2,r2,20480
 8008dbc:	10800017 	ldw	r2,0(r2)
 8008dc0:	f800283a 	ret

08008dc4 <__locale_msgcharset>:
 8008dc4:	00820074 	movhi	r2,2049
 8008dc8:	108f5104 	addi	r2,r2,15684
 8008dcc:	f800283a 	ret

08008dd0 <__locale_cjk_lang>:
 8008dd0:	0005883a 	mov	r2,zero
 8008dd4:	f800283a 	ret

08008dd8 <_localeconv_r>:
 8008dd8:	00820074 	movhi	r2,2049
 8008ddc:	108f6104 	addi	r2,r2,15748
 8008de0:	f800283a 	ret

08008de4 <setlocale>:
 8008de4:	00820074 	movhi	r2,2049
 8008de8:	1093ff04 	addi	r2,r2,20476
 8008dec:	280d883a 	mov	r6,r5
 8008df0:	200b883a 	mov	r5,r4
 8008df4:	11000017 	ldw	r4,0(r2)
 8008df8:	8008d2c1 	jmpi	8008d2c <_setlocale_r>

08008dfc <localeconv>:
 8008dfc:	00820074 	movhi	r2,2049
 8008e00:	108f6104 	addi	r2,r2,15748
 8008e04:	f800283a 	ret

08008e08 <__smakebuf_r>:
 8008e08:	2880030b 	ldhu	r2,12(r5)
 8008e0c:	10c0008c 	andi	r3,r2,2
 8008e10:	1800411e 	bne	r3,zero,8008f18 <__smakebuf_r+0x110>
 8008e14:	deffec04 	addi	sp,sp,-80
 8008e18:	dc000f15 	stw	r16,60(sp)
 8008e1c:	2821883a 	mov	r16,r5
 8008e20:	2940038f 	ldh	r5,14(r5)
 8008e24:	dc401015 	stw	r17,64(sp)
 8008e28:	dfc01315 	stw	ra,76(sp)
 8008e2c:	dcc01215 	stw	r19,72(sp)
 8008e30:	dc801115 	stw	r18,68(sp)
 8008e34:	2023883a 	mov	r17,r4
 8008e38:	28001c16 	blt	r5,zero,8008eac <__smakebuf_r+0xa4>
 8008e3c:	d80d883a 	mov	r6,sp
 8008e40:	800c7e80 	call	800c7e8 <_fstat_r>
 8008e44:	10001816 	blt	r2,zero,8008ea8 <__smakebuf_r+0xa0>
 8008e48:	d8800117 	ldw	r2,4(sp)
 8008e4c:	00e00014 	movui	r3,32768
 8008e50:	10bc000c 	andi	r2,r2,61440
 8008e54:	14c80020 	cmpeqi	r19,r2,8192
 8008e58:	10c03726 	beq	r2,r3,8008f38 <__smakebuf_r+0x130>
 8008e5c:	80c0030b 	ldhu	r3,12(r16)
 8008e60:	18c20014 	ori	r3,r3,2048
 8008e64:	80c0030d 	sth	r3,12(r16)
 8008e68:	00c80004 	movi	r3,8192
 8008e6c:	10c0521e 	bne	r2,r3,8008fb8 <__smakebuf_r+0x1b0>
 8008e70:	8140038f 	ldh	r5,14(r16)
 8008e74:	8809883a 	mov	r4,r17
 8008e78:	800c8440 	call	800c844 <_isatty_r>
 8008e7c:	10004c26 	beq	r2,zero,8008fb0 <__smakebuf_r+0x1a8>
 8008e80:	8080030b 	ldhu	r2,12(r16)
 8008e84:	80c010c4 	addi	r3,r16,67
 8008e88:	80c00015 	stw	r3,0(r16)
 8008e8c:	10800054 	ori	r2,r2,1
 8008e90:	8080030d 	sth	r2,12(r16)
 8008e94:	00800044 	movi	r2,1
 8008e98:	80c00415 	stw	r3,16(r16)
 8008e9c:	80800515 	stw	r2,20(r16)
 8008ea0:	04810004 	movi	r18,1024
 8008ea4:	00000706 	br	8008ec4 <__smakebuf_r+0xbc>
 8008ea8:	8080030b 	ldhu	r2,12(r16)
 8008eac:	10c0200c 	andi	r3,r2,128
 8008eb0:	18001f1e 	bne	r3,zero,8008f30 <__smakebuf_r+0x128>
 8008eb4:	04810004 	movi	r18,1024
 8008eb8:	10820014 	ori	r2,r2,2048
 8008ebc:	8080030d 	sth	r2,12(r16)
 8008ec0:	0027883a 	mov	r19,zero
 8008ec4:	900b883a 	mov	r5,r18
 8008ec8:	8809883a 	mov	r4,r17
 8008ecc:	80030600 	call	8003060 <_malloc_r>
 8008ed0:	10002c26 	beq	r2,zero,8008f84 <__smakebuf_r+0x17c>
 8008ed4:	80c0030b 	ldhu	r3,12(r16)
 8008ed8:	01020034 	movhi	r4,2048
 8008edc:	211fc704 	addi	r4,r4,32540
 8008ee0:	89000f15 	stw	r4,60(r17)
 8008ee4:	18c02014 	ori	r3,r3,128
 8008ee8:	80c0030d 	sth	r3,12(r16)
 8008eec:	80800015 	stw	r2,0(r16)
 8008ef0:	80800415 	stw	r2,16(r16)
 8008ef4:	84800515 	stw	r18,20(r16)
 8008ef8:	98001a1e 	bne	r19,zero,8008f64 <__smakebuf_r+0x15c>
 8008efc:	dfc01317 	ldw	ra,76(sp)
 8008f00:	dcc01217 	ldw	r19,72(sp)
 8008f04:	dc801117 	ldw	r18,68(sp)
 8008f08:	dc401017 	ldw	r17,64(sp)
 8008f0c:	dc000f17 	ldw	r16,60(sp)
 8008f10:	dec01404 	addi	sp,sp,80
 8008f14:	f800283a 	ret
 8008f18:	288010c4 	addi	r2,r5,67
 8008f1c:	28800015 	stw	r2,0(r5)
 8008f20:	28800415 	stw	r2,16(r5)
 8008f24:	00800044 	movi	r2,1
 8008f28:	28800515 	stw	r2,20(r5)
 8008f2c:	f800283a 	ret
 8008f30:	04801004 	movi	r18,64
 8008f34:	003fe006 	br	8008eb8 <__alt_data_end+0xf8008eb8>
 8008f38:	81000a17 	ldw	r4,40(r16)
 8008f3c:	00c20074 	movhi	r3,2049
 8008f40:	18ead804 	addi	r3,r3,-21664
 8008f44:	20ffc51e 	bne	r4,r3,8008e5c <__alt_data_end+0xf8008e5c>
 8008f48:	8080030b 	ldhu	r2,12(r16)
 8008f4c:	04810004 	movi	r18,1024
 8008f50:	84801315 	stw	r18,76(r16)
 8008f54:	1484b03a 	or	r2,r2,r18
 8008f58:	8080030d 	sth	r2,12(r16)
 8008f5c:	0027883a 	mov	r19,zero
 8008f60:	003fd806 	br	8008ec4 <__alt_data_end+0xf8008ec4>
 8008f64:	8140038f 	ldh	r5,14(r16)
 8008f68:	8809883a 	mov	r4,r17
 8008f6c:	800c8440 	call	800c844 <_isatty_r>
 8008f70:	103fe226 	beq	r2,zero,8008efc <__alt_data_end+0xf8008efc>
 8008f74:	8080030b 	ldhu	r2,12(r16)
 8008f78:	10800054 	ori	r2,r2,1
 8008f7c:	8080030d 	sth	r2,12(r16)
 8008f80:	003fde06 	br	8008efc <__alt_data_end+0xf8008efc>
 8008f84:	8080030b 	ldhu	r2,12(r16)
 8008f88:	10c0800c 	andi	r3,r2,512
 8008f8c:	183fdb1e 	bne	r3,zero,8008efc <__alt_data_end+0xf8008efc>
 8008f90:	10800094 	ori	r2,r2,2
 8008f94:	80c010c4 	addi	r3,r16,67
 8008f98:	8080030d 	sth	r2,12(r16)
 8008f9c:	00800044 	movi	r2,1
 8008fa0:	80c00015 	stw	r3,0(r16)
 8008fa4:	80c00415 	stw	r3,16(r16)
 8008fa8:	80800515 	stw	r2,20(r16)
 8008fac:	003fd306 	br	8008efc <__alt_data_end+0xf8008efc>
 8008fb0:	04810004 	movi	r18,1024
 8008fb4:	003fc306 	br	8008ec4 <__alt_data_end+0xf8008ec4>
 8008fb8:	0027883a 	mov	r19,zero
 8008fbc:	04810004 	movi	r18,1024
 8008fc0:	003fc006 	br	8008ec4 <__alt_data_end+0xf8008ec4>

08008fc4 <memchr>:
 8008fc4:	208000cc 	andi	r2,r4,3
 8008fc8:	280f883a 	mov	r7,r5
 8008fcc:	10003426 	beq	r2,zero,80090a0 <memchr+0xdc>
 8008fd0:	30bfffc4 	addi	r2,r6,-1
 8008fd4:	30001a26 	beq	r6,zero,8009040 <memchr+0x7c>
 8008fd8:	20c00003 	ldbu	r3,0(r4)
 8008fdc:	29803fcc 	andi	r6,r5,255
 8008fe0:	30c0051e 	bne	r6,r3,8008ff8 <memchr+0x34>
 8008fe4:	00001806 	br	8009048 <memchr+0x84>
 8008fe8:	10001526 	beq	r2,zero,8009040 <memchr+0x7c>
 8008fec:	20c00003 	ldbu	r3,0(r4)
 8008ff0:	10bfffc4 	addi	r2,r2,-1
 8008ff4:	30c01426 	beq	r6,r3,8009048 <memchr+0x84>
 8008ff8:	21000044 	addi	r4,r4,1
 8008ffc:	20c000cc 	andi	r3,r4,3
 8009000:	183ff91e 	bne	r3,zero,8008fe8 <__alt_data_end+0xf8008fe8>
 8009004:	020000c4 	movi	r8,3
 8009008:	40801136 	bltu	r8,r2,8009050 <memchr+0x8c>
 800900c:	10000c26 	beq	r2,zero,8009040 <memchr+0x7c>
 8009010:	20c00003 	ldbu	r3,0(r4)
 8009014:	29403fcc 	andi	r5,r5,255
 8009018:	28c00b26 	beq	r5,r3,8009048 <memchr+0x84>
 800901c:	20c00044 	addi	r3,r4,1
 8009020:	39803fcc 	andi	r6,r7,255
 8009024:	2089883a 	add	r4,r4,r2
 8009028:	00000306 	br	8009038 <memchr+0x74>
 800902c:	18c00044 	addi	r3,r3,1
 8009030:	197fffc3 	ldbu	r5,-1(r3)
 8009034:	31400526 	beq	r6,r5,800904c <memchr+0x88>
 8009038:	1805883a 	mov	r2,r3
 800903c:	20fffb1e 	bne	r4,r3,800902c <__alt_data_end+0xf800902c>
 8009040:	0005883a 	mov	r2,zero
 8009044:	f800283a 	ret
 8009048:	2005883a 	mov	r2,r4
 800904c:	f800283a 	ret
 8009050:	28c03fcc 	andi	r3,r5,255
 8009054:	1812923a 	slli	r9,r3,8
 8009058:	02ffbff4 	movhi	r11,65279
 800905c:	02a02074 	movhi	r10,32897
 8009060:	48d2b03a 	or	r9,r9,r3
 8009064:	4806943a 	slli	r3,r9,16
 8009068:	5affbfc4 	addi	r11,r11,-257
 800906c:	52a02004 	addi	r10,r10,-32640
 8009070:	48d2b03a 	or	r9,r9,r3
 8009074:	20c00017 	ldw	r3,0(r4)
 8009078:	48c6f03a 	xor	r3,r9,r3
 800907c:	1acd883a 	add	r6,r3,r11
 8009080:	00c6303a 	nor	r3,zero,r3
 8009084:	30c6703a 	and	r3,r6,r3
 8009088:	1a86703a 	and	r3,r3,r10
 800908c:	183fe01e 	bne	r3,zero,8009010 <__alt_data_end+0xf8009010>
 8009090:	10bfff04 	addi	r2,r2,-4
 8009094:	21000104 	addi	r4,r4,4
 8009098:	40bff636 	bltu	r8,r2,8009074 <__alt_data_end+0xf8009074>
 800909c:	003fdb06 	br	800900c <__alt_data_end+0xf800900c>
 80090a0:	3005883a 	mov	r2,r6
 80090a4:	003fd706 	br	8009004 <__alt_data_end+0xf8009004>

080090a8 <memcpy>:
 80090a8:	defffd04 	addi	sp,sp,-12
 80090ac:	dfc00215 	stw	ra,8(sp)
 80090b0:	dc400115 	stw	r17,4(sp)
 80090b4:	dc000015 	stw	r16,0(sp)
 80090b8:	00c003c4 	movi	r3,15
 80090bc:	2005883a 	mov	r2,r4
 80090c0:	1980452e 	bgeu	r3,r6,80091d8 <memcpy+0x130>
 80090c4:	2906b03a 	or	r3,r5,r4
 80090c8:	18c000cc 	andi	r3,r3,3
 80090cc:	1800441e 	bne	r3,zero,80091e0 <memcpy+0x138>
 80090d0:	347ffc04 	addi	r17,r6,-16
 80090d4:	8822d13a 	srli	r17,r17,4
 80090d8:	28c00104 	addi	r3,r5,4
 80090dc:	23400104 	addi	r13,r4,4
 80090e0:	8820913a 	slli	r16,r17,4
 80090e4:	2b000204 	addi	r12,r5,8
 80090e8:	22c00204 	addi	r11,r4,8
 80090ec:	84000504 	addi	r16,r16,20
 80090f0:	2a800304 	addi	r10,r5,12
 80090f4:	22400304 	addi	r9,r4,12
 80090f8:	2c21883a 	add	r16,r5,r16
 80090fc:	2811883a 	mov	r8,r5
 8009100:	200f883a 	mov	r7,r4
 8009104:	41000017 	ldw	r4,0(r8)
 8009108:	1fc00017 	ldw	ra,0(r3)
 800910c:	63c00017 	ldw	r15,0(r12)
 8009110:	39000015 	stw	r4,0(r7)
 8009114:	53800017 	ldw	r14,0(r10)
 8009118:	6fc00015 	stw	ra,0(r13)
 800911c:	5bc00015 	stw	r15,0(r11)
 8009120:	4b800015 	stw	r14,0(r9)
 8009124:	18c00404 	addi	r3,r3,16
 8009128:	39c00404 	addi	r7,r7,16
 800912c:	42000404 	addi	r8,r8,16
 8009130:	6b400404 	addi	r13,r13,16
 8009134:	63000404 	addi	r12,r12,16
 8009138:	5ac00404 	addi	r11,r11,16
 800913c:	52800404 	addi	r10,r10,16
 8009140:	4a400404 	addi	r9,r9,16
 8009144:	1c3fef1e 	bne	r3,r16,8009104 <__alt_data_end+0xf8009104>
 8009148:	89c00044 	addi	r7,r17,1
 800914c:	380e913a 	slli	r7,r7,4
 8009150:	310003cc 	andi	r4,r6,15
 8009154:	02c000c4 	movi	r11,3
 8009158:	11c7883a 	add	r3,r2,r7
 800915c:	29cb883a 	add	r5,r5,r7
 8009160:	5900212e 	bgeu	r11,r4,80091e8 <memcpy+0x140>
 8009164:	1813883a 	mov	r9,r3
 8009168:	2811883a 	mov	r8,r5
 800916c:	200f883a 	mov	r7,r4
 8009170:	42800017 	ldw	r10,0(r8)
 8009174:	4a400104 	addi	r9,r9,4
 8009178:	39ffff04 	addi	r7,r7,-4
 800917c:	4abfff15 	stw	r10,-4(r9)
 8009180:	42000104 	addi	r8,r8,4
 8009184:	59fffa36 	bltu	r11,r7,8009170 <__alt_data_end+0xf8009170>
 8009188:	213fff04 	addi	r4,r4,-4
 800918c:	2008d0ba 	srli	r4,r4,2
 8009190:	318000cc 	andi	r6,r6,3
 8009194:	21000044 	addi	r4,r4,1
 8009198:	2109883a 	add	r4,r4,r4
 800919c:	2109883a 	add	r4,r4,r4
 80091a0:	1907883a 	add	r3,r3,r4
 80091a4:	290b883a 	add	r5,r5,r4
 80091a8:	30000626 	beq	r6,zero,80091c4 <memcpy+0x11c>
 80091ac:	198d883a 	add	r6,r3,r6
 80091b0:	29c00003 	ldbu	r7,0(r5)
 80091b4:	18c00044 	addi	r3,r3,1
 80091b8:	29400044 	addi	r5,r5,1
 80091bc:	19ffffc5 	stb	r7,-1(r3)
 80091c0:	19bffb1e 	bne	r3,r6,80091b0 <__alt_data_end+0xf80091b0>
 80091c4:	dfc00217 	ldw	ra,8(sp)
 80091c8:	dc400117 	ldw	r17,4(sp)
 80091cc:	dc000017 	ldw	r16,0(sp)
 80091d0:	dec00304 	addi	sp,sp,12
 80091d4:	f800283a 	ret
 80091d8:	2007883a 	mov	r3,r4
 80091dc:	003ff206 	br	80091a8 <__alt_data_end+0xf80091a8>
 80091e0:	2007883a 	mov	r3,r4
 80091e4:	003ff106 	br	80091ac <__alt_data_end+0xf80091ac>
 80091e8:	200d883a 	mov	r6,r4
 80091ec:	003fee06 	br	80091a8 <__alt_data_end+0xf80091a8>

080091f0 <memmove>:
 80091f0:	2005883a 	mov	r2,r4
 80091f4:	29000b2e 	bgeu	r5,r4,8009224 <memmove+0x34>
 80091f8:	298f883a 	add	r7,r5,r6
 80091fc:	21c0092e 	bgeu	r4,r7,8009224 <memmove+0x34>
 8009200:	2187883a 	add	r3,r4,r6
 8009204:	198bc83a 	sub	r5,r3,r6
 8009208:	30004826 	beq	r6,zero,800932c <memmove+0x13c>
 800920c:	39ffffc4 	addi	r7,r7,-1
 8009210:	39000003 	ldbu	r4,0(r7)
 8009214:	18ffffc4 	addi	r3,r3,-1
 8009218:	19000005 	stb	r4,0(r3)
 800921c:	28fffb1e 	bne	r5,r3,800920c <__alt_data_end+0xf800920c>
 8009220:	f800283a 	ret
 8009224:	00c003c4 	movi	r3,15
 8009228:	1980412e 	bgeu	r3,r6,8009330 <memmove+0x140>
 800922c:	2886b03a 	or	r3,r5,r2
 8009230:	18c000cc 	andi	r3,r3,3
 8009234:	1800401e 	bne	r3,zero,8009338 <memmove+0x148>
 8009238:	33fffc04 	addi	r15,r6,-16
 800923c:	781ed13a 	srli	r15,r15,4
 8009240:	28c00104 	addi	r3,r5,4
 8009244:	13400104 	addi	r13,r2,4
 8009248:	781c913a 	slli	r14,r15,4
 800924c:	2b000204 	addi	r12,r5,8
 8009250:	12c00204 	addi	r11,r2,8
 8009254:	73800504 	addi	r14,r14,20
 8009258:	2a800304 	addi	r10,r5,12
 800925c:	12400304 	addi	r9,r2,12
 8009260:	2b9d883a 	add	r14,r5,r14
 8009264:	2811883a 	mov	r8,r5
 8009268:	100f883a 	mov	r7,r2
 800926c:	41000017 	ldw	r4,0(r8)
 8009270:	39c00404 	addi	r7,r7,16
 8009274:	18c00404 	addi	r3,r3,16
 8009278:	393ffc15 	stw	r4,-16(r7)
 800927c:	193ffc17 	ldw	r4,-16(r3)
 8009280:	6b400404 	addi	r13,r13,16
 8009284:	5ac00404 	addi	r11,r11,16
 8009288:	693ffc15 	stw	r4,-16(r13)
 800928c:	61000017 	ldw	r4,0(r12)
 8009290:	4a400404 	addi	r9,r9,16
 8009294:	42000404 	addi	r8,r8,16
 8009298:	593ffc15 	stw	r4,-16(r11)
 800929c:	51000017 	ldw	r4,0(r10)
 80092a0:	63000404 	addi	r12,r12,16
 80092a4:	52800404 	addi	r10,r10,16
 80092a8:	493ffc15 	stw	r4,-16(r9)
 80092ac:	1bbfef1e 	bne	r3,r14,800926c <__alt_data_end+0xf800926c>
 80092b0:	79000044 	addi	r4,r15,1
 80092b4:	2008913a 	slli	r4,r4,4
 80092b8:	328003cc 	andi	r10,r6,15
 80092bc:	02c000c4 	movi	r11,3
 80092c0:	1107883a 	add	r3,r2,r4
 80092c4:	290b883a 	add	r5,r5,r4
 80092c8:	5a801e2e 	bgeu	r11,r10,8009344 <memmove+0x154>
 80092cc:	1813883a 	mov	r9,r3
 80092d0:	2811883a 	mov	r8,r5
 80092d4:	500f883a 	mov	r7,r10
 80092d8:	41000017 	ldw	r4,0(r8)
 80092dc:	4a400104 	addi	r9,r9,4
 80092e0:	39ffff04 	addi	r7,r7,-4
 80092e4:	493fff15 	stw	r4,-4(r9)
 80092e8:	42000104 	addi	r8,r8,4
 80092ec:	59fffa36 	bltu	r11,r7,80092d8 <__alt_data_end+0xf80092d8>
 80092f0:	513fff04 	addi	r4,r10,-4
 80092f4:	2008d0ba 	srli	r4,r4,2
 80092f8:	318000cc 	andi	r6,r6,3
 80092fc:	21000044 	addi	r4,r4,1
 8009300:	2109883a 	add	r4,r4,r4
 8009304:	2109883a 	add	r4,r4,r4
 8009308:	1907883a 	add	r3,r3,r4
 800930c:	290b883a 	add	r5,r5,r4
 8009310:	30000b26 	beq	r6,zero,8009340 <memmove+0x150>
 8009314:	198d883a 	add	r6,r3,r6
 8009318:	29c00003 	ldbu	r7,0(r5)
 800931c:	18c00044 	addi	r3,r3,1
 8009320:	29400044 	addi	r5,r5,1
 8009324:	19ffffc5 	stb	r7,-1(r3)
 8009328:	19bffb1e 	bne	r3,r6,8009318 <__alt_data_end+0xf8009318>
 800932c:	f800283a 	ret
 8009330:	1007883a 	mov	r3,r2
 8009334:	003ff606 	br	8009310 <__alt_data_end+0xf8009310>
 8009338:	1007883a 	mov	r3,r2
 800933c:	003ff506 	br	8009314 <__alt_data_end+0xf8009314>
 8009340:	f800283a 	ret
 8009344:	500d883a 	mov	r6,r10
 8009348:	003ff106 	br	8009310 <__alt_data_end+0xf8009310>

0800934c <_Balloc>:
 800934c:	20801317 	ldw	r2,76(r4)
 8009350:	defffc04 	addi	sp,sp,-16
 8009354:	dc400115 	stw	r17,4(sp)
 8009358:	dc000015 	stw	r16,0(sp)
 800935c:	dfc00315 	stw	ra,12(sp)
 8009360:	dc800215 	stw	r18,8(sp)
 8009364:	2023883a 	mov	r17,r4
 8009368:	2821883a 	mov	r16,r5
 800936c:	10000f26 	beq	r2,zero,80093ac <_Balloc+0x60>
 8009370:	8407883a 	add	r3,r16,r16
 8009374:	18c7883a 	add	r3,r3,r3
 8009378:	10c7883a 	add	r3,r2,r3
 800937c:	18800017 	ldw	r2,0(r3)
 8009380:	10001126 	beq	r2,zero,80093c8 <_Balloc+0x7c>
 8009384:	11000017 	ldw	r4,0(r2)
 8009388:	19000015 	stw	r4,0(r3)
 800938c:	10000415 	stw	zero,16(r2)
 8009390:	10000315 	stw	zero,12(r2)
 8009394:	dfc00317 	ldw	ra,12(sp)
 8009398:	dc800217 	ldw	r18,8(sp)
 800939c:	dc400117 	ldw	r17,4(sp)
 80093a0:	dc000017 	ldw	r16,0(sp)
 80093a4:	dec00404 	addi	sp,sp,16
 80093a8:	f800283a 	ret
 80093ac:	01800844 	movi	r6,33
 80093b0:	01400104 	movi	r5,4
 80093b4:	800c4180 	call	800c418 <_calloc_r>
 80093b8:	88801315 	stw	r2,76(r17)
 80093bc:	103fec1e 	bne	r2,zero,8009370 <__alt_data_end+0xf8009370>
 80093c0:	0005883a 	mov	r2,zero
 80093c4:	003ff306 	br	8009394 <__alt_data_end+0xf8009394>
 80093c8:	01400044 	movi	r5,1
 80093cc:	2c24983a 	sll	r18,r5,r16
 80093d0:	8809883a 	mov	r4,r17
 80093d4:	91800144 	addi	r6,r18,5
 80093d8:	318d883a 	add	r6,r6,r6
 80093dc:	318d883a 	add	r6,r6,r6
 80093e0:	800c4180 	call	800c418 <_calloc_r>
 80093e4:	103ff626 	beq	r2,zero,80093c0 <__alt_data_end+0xf80093c0>
 80093e8:	14000115 	stw	r16,4(r2)
 80093ec:	14800215 	stw	r18,8(r2)
 80093f0:	003fe606 	br	800938c <__alt_data_end+0xf800938c>

080093f4 <_Bfree>:
 80093f4:	28000826 	beq	r5,zero,8009418 <_Bfree+0x24>
 80093f8:	28c00117 	ldw	r3,4(r5)
 80093fc:	20801317 	ldw	r2,76(r4)
 8009400:	18c7883a 	add	r3,r3,r3
 8009404:	18c7883a 	add	r3,r3,r3
 8009408:	10c5883a 	add	r2,r2,r3
 800940c:	10c00017 	ldw	r3,0(r2)
 8009410:	28c00015 	stw	r3,0(r5)
 8009414:	11400015 	stw	r5,0(r2)
 8009418:	f800283a 	ret

0800941c <__multadd>:
 800941c:	defffa04 	addi	sp,sp,-24
 8009420:	dc800315 	stw	r18,12(sp)
 8009424:	dc400215 	stw	r17,8(sp)
 8009428:	dc000115 	stw	r16,4(sp)
 800942c:	2823883a 	mov	r17,r5
 8009430:	2c000417 	ldw	r16,16(r5)
 8009434:	dfc00515 	stw	ra,20(sp)
 8009438:	dcc00415 	stw	r19,16(sp)
 800943c:	2025883a 	mov	r18,r4
 8009440:	29400504 	addi	r5,r5,20
 8009444:	0011883a 	mov	r8,zero
 8009448:	28c00017 	ldw	r3,0(r5)
 800944c:	29400104 	addi	r5,r5,4
 8009450:	42000044 	addi	r8,r8,1
 8009454:	18bfffcc 	andi	r2,r3,65535
 8009458:	1185383a 	mul	r2,r2,r6
 800945c:	1806d43a 	srli	r3,r3,16
 8009460:	11cf883a 	add	r7,r2,r7
 8009464:	3808d43a 	srli	r4,r7,16
 8009468:	1987383a 	mul	r3,r3,r6
 800946c:	38bfffcc 	andi	r2,r7,65535
 8009470:	1907883a 	add	r3,r3,r4
 8009474:	1808943a 	slli	r4,r3,16
 8009478:	180ed43a 	srli	r7,r3,16
 800947c:	2085883a 	add	r2,r4,r2
 8009480:	28bfff15 	stw	r2,-4(r5)
 8009484:	443ff016 	blt	r8,r16,8009448 <__alt_data_end+0xf8009448>
 8009488:	38000926 	beq	r7,zero,80094b0 <__multadd+0x94>
 800948c:	88800217 	ldw	r2,8(r17)
 8009490:	80800f0e 	bge	r16,r2,80094d0 <__multadd+0xb4>
 8009494:	80800144 	addi	r2,r16,5
 8009498:	1085883a 	add	r2,r2,r2
 800949c:	1085883a 	add	r2,r2,r2
 80094a0:	8885883a 	add	r2,r17,r2
 80094a4:	11c00015 	stw	r7,0(r2)
 80094a8:	84000044 	addi	r16,r16,1
 80094ac:	8c000415 	stw	r16,16(r17)
 80094b0:	8805883a 	mov	r2,r17
 80094b4:	dfc00517 	ldw	ra,20(sp)
 80094b8:	dcc00417 	ldw	r19,16(sp)
 80094bc:	dc800317 	ldw	r18,12(sp)
 80094c0:	dc400217 	ldw	r17,8(sp)
 80094c4:	dc000117 	ldw	r16,4(sp)
 80094c8:	dec00604 	addi	sp,sp,24
 80094cc:	f800283a 	ret
 80094d0:	89400117 	ldw	r5,4(r17)
 80094d4:	9009883a 	mov	r4,r18
 80094d8:	d9c00015 	stw	r7,0(sp)
 80094dc:	29400044 	addi	r5,r5,1
 80094e0:	800934c0 	call	800934c <_Balloc>
 80094e4:	89800417 	ldw	r6,16(r17)
 80094e8:	89400304 	addi	r5,r17,12
 80094ec:	11000304 	addi	r4,r2,12
 80094f0:	31800084 	addi	r6,r6,2
 80094f4:	318d883a 	add	r6,r6,r6
 80094f8:	318d883a 	add	r6,r6,r6
 80094fc:	1027883a 	mov	r19,r2
 8009500:	80090a80 	call	80090a8 <memcpy>
 8009504:	d9c00017 	ldw	r7,0(sp)
 8009508:	88000a26 	beq	r17,zero,8009534 <__multadd+0x118>
 800950c:	88c00117 	ldw	r3,4(r17)
 8009510:	90801317 	ldw	r2,76(r18)
 8009514:	18c7883a 	add	r3,r3,r3
 8009518:	18c7883a 	add	r3,r3,r3
 800951c:	10c5883a 	add	r2,r2,r3
 8009520:	10c00017 	ldw	r3,0(r2)
 8009524:	88c00015 	stw	r3,0(r17)
 8009528:	14400015 	stw	r17,0(r2)
 800952c:	9823883a 	mov	r17,r19
 8009530:	003fd806 	br	8009494 <__alt_data_end+0xf8009494>
 8009534:	9823883a 	mov	r17,r19
 8009538:	003fd606 	br	8009494 <__alt_data_end+0xf8009494>

0800953c <__s2b>:
 800953c:	defff904 	addi	sp,sp,-28
 8009540:	dc400115 	stw	r17,4(sp)
 8009544:	dc000015 	stw	r16,0(sp)
 8009548:	2023883a 	mov	r17,r4
 800954c:	2821883a 	mov	r16,r5
 8009550:	39000204 	addi	r4,r7,8
 8009554:	01400244 	movi	r5,9
 8009558:	dcc00315 	stw	r19,12(sp)
 800955c:	dc800215 	stw	r18,8(sp)
 8009560:	dfc00615 	stw	ra,24(sp)
 8009564:	dd400515 	stw	r21,20(sp)
 8009568:	dd000415 	stw	r20,16(sp)
 800956c:	3825883a 	mov	r18,r7
 8009570:	3027883a 	mov	r19,r6
 8009574:	800d5f00 	call	800d5f0 <__divsi3>
 8009578:	00c00044 	movi	r3,1
 800957c:	000b883a 	mov	r5,zero
 8009580:	1880030e 	bge	r3,r2,8009590 <__s2b+0x54>
 8009584:	18c7883a 	add	r3,r3,r3
 8009588:	29400044 	addi	r5,r5,1
 800958c:	18bffd16 	blt	r3,r2,8009584 <__alt_data_end+0xf8009584>
 8009590:	8809883a 	mov	r4,r17
 8009594:	800934c0 	call	800934c <_Balloc>
 8009598:	d8c00717 	ldw	r3,28(sp)
 800959c:	10c00515 	stw	r3,20(r2)
 80095a0:	00c00044 	movi	r3,1
 80095a4:	10c00415 	stw	r3,16(r2)
 80095a8:	00c00244 	movi	r3,9
 80095ac:	1cc0210e 	bge	r3,r19,8009634 <__s2b+0xf8>
 80095b0:	80eb883a 	add	r21,r16,r3
 80095b4:	a829883a 	mov	r20,r21
 80095b8:	84e1883a 	add	r16,r16,r19
 80095bc:	a1c00007 	ldb	r7,0(r20)
 80095c0:	01800284 	movi	r6,10
 80095c4:	a5000044 	addi	r20,r20,1
 80095c8:	100b883a 	mov	r5,r2
 80095cc:	39fff404 	addi	r7,r7,-48
 80095d0:	8809883a 	mov	r4,r17
 80095d4:	800941c0 	call	800941c <__multadd>
 80095d8:	a43ff81e 	bne	r20,r16,80095bc <__alt_data_end+0xf80095bc>
 80095dc:	ace1883a 	add	r16,r21,r19
 80095e0:	843ffe04 	addi	r16,r16,-8
 80095e4:	9c800a0e 	bge	r19,r18,8009610 <__s2b+0xd4>
 80095e8:	94e5c83a 	sub	r18,r18,r19
 80095ec:	84a5883a 	add	r18,r16,r18
 80095f0:	81c00007 	ldb	r7,0(r16)
 80095f4:	01800284 	movi	r6,10
 80095f8:	84000044 	addi	r16,r16,1
 80095fc:	100b883a 	mov	r5,r2
 8009600:	39fff404 	addi	r7,r7,-48
 8009604:	8809883a 	mov	r4,r17
 8009608:	800941c0 	call	800941c <__multadd>
 800960c:	84bff81e 	bne	r16,r18,80095f0 <__alt_data_end+0xf80095f0>
 8009610:	dfc00617 	ldw	ra,24(sp)
 8009614:	dd400517 	ldw	r21,20(sp)
 8009618:	dd000417 	ldw	r20,16(sp)
 800961c:	dcc00317 	ldw	r19,12(sp)
 8009620:	dc800217 	ldw	r18,8(sp)
 8009624:	dc400117 	ldw	r17,4(sp)
 8009628:	dc000017 	ldw	r16,0(sp)
 800962c:	dec00704 	addi	sp,sp,28
 8009630:	f800283a 	ret
 8009634:	84000284 	addi	r16,r16,10
 8009638:	1827883a 	mov	r19,r3
 800963c:	003fe906 	br	80095e4 <__alt_data_end+0xf80095e4>

08009640 <__hi0bits>:
 8009640:	20bfffec 	andhi	r2,r4,65535
 8009644:	1000141e 	bne	r2,zero,8009698 <__hi0bits+0x58>
 8009648:	2008943a 	slli	r4,r4,16
 800964c:	00800404 	movi	r2,16
 8009650:	20ffc02c 	andhi	r3,r4,65280
 8009654:	1800021e 	bne	r3,zero,8009660 <__hi0bits+0x20>
 8009658:	2008923a 	slli	r4,r4,8
 800965c:	10800204 	addi	r2,r2,8
 8009660:	20fc002c 	andhi	r3,r4,61440
 8009664:	1800021e 	bne	r3,zero,8009670 <__hi0bits+0x30>
 8009668:	2008913a 	slli	r4,r4,4
 800966c:	10800104 	addi	r2,r2,4
 8009670:	20f0002c 	andhi	r3,r4,49152
 8009674:	1800031e 	bne	r3,zero,8009684 <__hi0bits+0x44>
 8009678:	2109883a 	add	r4,r4,r4
 800967c:	10800084 	addi	r2,r2,2
 8009680:	2109883a 	add	r4,r4,r4
 8009684:	20000316 	blt	r4,zero,8009694 <__hi0bits+0x54>
 8009688:	2110002c 	andhi	r4,r4,16384
 800968c:	2000041e 	bne	r4,zero,80096a0 <__hi0bits+0x60>
 8009690:	00800804 	movi	r2,32
 8009694:	f800283a 	ret
 8009698:	0005883a 	mov	r2,zero
 800969c:	003fec06 	br	8009650 <__alt_data_end+0xf8009650>
 80096a0:	10800044 	addi	r2,r2,1
 80096a4:	f800283a 	ret

080096a8 <__lo0bits>:
 80096a8:	20c00017 	ldw	r3,0(r4)
 80096ac:	188001cc 	andi	r2,r3,7
 80096b0:	10000826 	beq	r2,zero,80096d4 <__lo0bits+0x2c>
 80096b4:	1880004c 	andi	r2,r3,1
 80096b8:	1000211e 	bne	r2,zero,8009740 <__lo0bits+0x98>
 80096bc:	1880008c 	andi	r2,r3,2
 80096c0:	1000211e 	bne	r2,zero,8009748 <__lo0bits+0xa0>
 80096c4:	1806d0ba 	srli	r3,r3,2
 80096c8:	00800084 	movi	r2,2
 80096cc:	20c00015 	stw	r3,0(r4)
 80096d0:	f800283a 	ret
 80096d4:	18bfffcc 	andi	r2,r3,65535
 80096d8:	10001326 	beq	r2,zero,8009728 <__lo0bits+0x80>
 80096dc:	0005883a 	mov	r2,zero
 80096e0:	19403fcc 	andi	r5,r3,255
 80096e4:	2800021e 	bne	r5,zero,80096f0 <__lo0bits+0x48>
 80096e8:	1806d23a 	srli	r3,r3,8
 80096ec:	10800204 	addi	r2,r2,8
 80096f0:	194003cc 	andi	r5,r3,15
 80096f4:	2800021e 	bne	r5,zero,8009700 <__lo0bits+0x58>
 80096f8:	1806d13a 	srli	r3,r3,4
 80096fc:	10800104 	addi	r2,r2,4
 8009700:	194000cc 	andi	r5,r3,3
 8009704:	2800021e 	bne	r5,zero,8009710 <__lo0bits+0x68>
 8009708:	1806d0ba 	srli	r3,r3,2
 800970c:	10800084 	addi	r2,r2,2
 8009710:	1940004c 	andi	r5,r3,1
 8009714:	2800081e 	bne	r5,zero,8009738 <__lo0bits+0x90>
 8009718:	1806d07a 	srli	r3,r3,1
 800971c:	1800051e 	bne	r3,zero,8009734 <__lo0bits+0x8c>
 8009720:	00800804 	movi	r2,32
 8009724:	f800283a 	ret
 8009728:	1806d43a 	srli	r3,r3,16
 800972c:	00800404 	movi	r2,16
 8009730:	003feb06 	br	80096e0 <__alt_data_end+0xf80096e0>
 8009734:	10800044 	addi	r2,r2,1
 8009738:	20c00015 	stw	r3,0(r4)
 800973c:	f800283a 	ret
 8009740:	0005883a 	mov	r2,zero
 8009744:	f800283a 	ret
 8009748:	1806d07a 	srli	r3,r3,1
 800974c:	00800044 	movi	r2,1
 8009750:	20c00015 	stw	r3,0(r4)
 8009754:	f800283a 	ret

08009758 <__i2b>:
 8009758:	defffd04 	addi	sp,sp,-12
 800975c:	dc000015 	stw	r16,0(sp)
 8009760:	04000044 	movi	r16,1
 8009764:	dc400115 	stw	r17,4(sp)
 8009768:	2823883a 	mov	r17,r5
 800976c:	800b883a 	mov	r5,r16
 8009770:	dfc00215 	stw	ra,8(sp)
 8009774:	800934c0 	call	800934c <_Balloc>
 8009778:	14400515 	stw	r17,20(r2)
 800977c:	14000415 	stw	r16,16(r2)
 8009780:	dfc00217 	ldw	ra,8(sp)
 8009784:	dc400117 	ldw	r17,4(sp)
 8009788:	dc000017 	ldw	r16,0(sp)
 800978c:	dec00304 	addi	sp,sp,12
 8009790:	f800283a 	ret

08009794 <__multiply>:
 8009794:	defffa04 	addi	sp,sp,-24
 8009798:	dcc00315 	stw	r19,12(sp)
 800979c:	dc800215 	stw	r18,8(sp)
 80097a0:	34c00417 	ldw	r19,16(r6)
 80097a4:	2c800417 	ldw	r18,16(r5)
 80097a8:	dd000415 	stw	r20,16(sp)
 80097ac:	dc400115 	stw	r17,4(sp)
 80097b0:	dfc00515 	stw	ra,20(sp)
 80097b4:	dc000015 	stw	r16,0(sp)
 80097b8:	2829883a 	mov	r20,r5
 80097bc:	3023883a 	mov	r17,r6
 80097c0:	94c0050e 	bge	r18,r19,80097d8 <__multiply+0x44>
 80097c4:	9007883a 	mov	r3,r18
 80097c8:	3029883a 	mov	r20,r6
 80097cc:	9825883a 	mov	r18,r19
 80097d0:	2823883a 	mov	r17,r5
 80097d4:	1827883a 	mov	r19,r3
 80097d8:	a0800217 	ldw	r2,8(r20)
 80097dc:	94e1883a 	add	r16,r18,r19
 80097e0:	a1400117 	ldw	r5,4(r20)
 80097e4:	1400010e 	bge	r2,r16,80097ec <__multiply+0x58>
 80097e8:	29400044 	addi	r5,r5,1
 80097ec:	800934c0 	call	800934c <_Balloc>
 80097f0:	8415883a 	add	r10,r16,r16
 80097f4:	12c00504 	addi	r11,r2,20
 80097f8:	5295883a 	add	r10,r10,r10
 80097fc:	5a95883a 	add	r10,r11,r10
 8009800:	5807883a 	mov	r3,r11
 8009804:	5a80032e 	bgeu	r11,r10,8009814 <__multiply+0x80>
 8009808:	18000015 	stw	zero,0(r3)
 800980c:	18c00104 	addi	r3,r3,4
 8009810:	1abffd36 	bltu	r3,r10,8009808 <__alt_data_end+0xf8009808>
 8009814:	9ce7883a 	add	r19,r19,r19
 8009818:	94a5883a 	add	r18,r18,r18
 800981c:	89800504 	addi	r6,r17,20
 8009820:	9ce7883a 	add	r19,r19,r19
 8009824:	a3400504 	addi	r13,r20,20
 8009828:	94a5883a 	add	r18,r18,r18
 800982c:	34d9883a 	add	r12,r6,r19
 8009830:	6c93883a 	add	r9,r13,r18
 8009834:	3300422e 	bgeu	r6,r12,8009940 <__multiply+0x1ac>
 8009838:	37c00017 	ldw	ra,0(r6)
 800983c:	fbffffcc 	andi	r15,ra,65535
 8009840:	78001b26 	beq	r15,zero,80098b0 <__multiply+0x11c>
 8009844:	5811883a 	mov	r8,r11
 8009848:	681d883a 	mov	r14,r13
 800984c:	000f883a 	mov	r7,zero
 8009850:	71000017 	ldw	r4,0(r14)
 8009854:	40c00017 	ldw	r3,0(r8)
 8009858:	73800104 	addi	r14,r14,4
 800985c:	217fffcc 	andi	r5,r4,65535
 8009860:	2bcb383a 	mul	r5,r5,r15
 8009864:	2008d43a 	srli	r4,r4,16
 8009868:	1c7fffcc 	andi	r17,r3,65535
 800986c:	2c4b883a 	add	r5,r5,r17
 8009870:	29cb883a 	add	r5,r5,r7
 8009874:	23c9383a 	mul	r4,r4,r15
 8009878:	1806d43a 	srli	r3,r3,16
 800987c:	280ed43a 	srli	r7,r5,16
 8009880:	297fffcc 	andi	r5,r5,65535
 8009884:	20c7883a 	add	r3,r4,r3
 8009888:	19c7883a 	add	r3,r3,r7
 800988c:	1808943a 	slli	r4,r3,16
 8009890:	4023883a 	mov	r17,r8
 8009894:	180ed43a 	srli	r7,r3,16
 8009898:	214ab03a 	or	r5,r4,r5
 800989c:	41400015 	stw	r5,0(r8)
 80098a0:	42000104 	addi	r8,r8,4
 80098a4:	727fea36 	bltu	r14,r9,8009850 <__alt_data_end+0xf8009850>
 80098a8:	89c00115 	stw	r7,4(r17)
 80098ac:	37c00017 	ldw	ra,0(r6)
 80098b0:	f83ed43a 	srli	ra,ra,16
 80098b4:	f8001f26 	beq	ra,zero,8009934 <__multiply+0x1a0>
 80098b8:	58c00017 	ldw	r3,0(r11)
 80098bc:	681d883a 	mov	r14,r13
 80098c0:	581f883a 	mov	r15,r11
 80098c4:	1811883a 	mov	r8,r3
 80098c8:	5825883a 	mov	r18,r11
 80098cc:	000f883a 	mov	r7,zero
 80098d0:	00000106 	br	80098d8 <__multiply+0x144>
 80098d4:	8825883a 	mov	r18,r17
 80098d8:	7140000b 	ldhu	r5,0(r14)
 80098dc:	4010d43a 	srli	r8,r8,16
 80098e0:	193fffcc 	andi	r4,r3,65535
 80098e4:	2fcb383a 	mul	r5,r5,ra
 80098e8:	7bc00104 	addi	r15,r15,4
 80098ec:	73800104 	addi	r14,r14,4
 80098f0:	2a0b883a 	add	r5,r5,r8
 80098f4:	29cb883a 	add	r5,r5,r7
 80098f8:	2806943a 	slli	r3,r5,16
 80098fc:	94400104 	addi	r17,r18,4
 8009900:	280ad43a 	srli	r5,r5,16
 8009904:	1908b03a 	or	r4,r3,r4
 8009908:	793fff15 	stw	r4,-4(r15)
 800990c:	70ffff17 	ldw	r3,-4(r14)
 8009910:	8a000017 	ldw	r8,0(r17)
 8009914:	1806d43a 	srli	r3,r3,16
 8009918:	413fffcc 	andi	r4,r8,65535
 800991c:	1fc7383a 	mul	r3,r3,ra
 8009920:	1907883a 	add	r3,r3,r4
 8009924:	1947883a 	add	r3,r3,r5
 8009928:	180ed43a 	srli	r7,r3,16
 800992c:	727fe936 	bltu	r14,r9,80098d4 <__alt_data_end+0xf80098d4>
 8009930:	90c00115 	stw	r3,4(r18)
 8009934:	31800104 	addi	r6,r6,4
 8009938:	5ac00104 	addi	r11,r11,4
 800993c:	333fbe36 	bltu	r6,r12,8009838 <__alt_data_end+0xf8009838>
 8009940:	0400090e 	bge	zero,r16,8009968 <__multiply+0x1d4>
 8009944:	50ffff17 	ldw	r3,-4(r10)
 8009948:	52bfff04 	addi	r10,r10,-4
 800994c:	18000326 	beq	r3,zero,800995c <__multiply+0x1c8>
 8009950:	00000506 	br	8009968 <__multiply+0x1d4>
 8009954:	50c00017 	ldw	r3,0(r10)
 8009958:	1800031e 	bne	r3,zero,8009968 <__multiply+0x1d4>
 800995c:	843fffc4 	addi	r16,r16,-1
 8009960:	52bfff04 	addi	r10,r10,-4
 8009964:	803ffb1e 	bne	r16,zero,8009954 <__alt_data_end+0xf8009954>
 8009968:	14000415 	stw	r16,16(r2)
 800996c:	dfc00517 	ldw	ra,20(sp)
 8009970:	dd000417 	ldw	r20,16(sp)
 8009974:	dcc00317 	ldw	r19,12(sp)
 8009978:	dc800217 	ldw	r18,8(sp)
 800997c:	dc400117 	ldw	r17,4(sp)
 8009980:	dc000017 	ldw	r16,0(sp)
 8009984:	dec00604 	addi	sp,sp,24
 8009988:	f800283a 	ret

0800998c <__pow5mult>:
 800998c:	defffa04 	addi	sp,sp,-24
 8009990:	dcc00315 	stw	r19,12(sp)
 8009994:	dc000015 	stw	r16,0(sp)
 8009998:	dfc00515 	stw	ra,20(sp)
 800999c:	dd000415 	stw	r20,16(sp)
 80099a0:	dc800215 	stw	r18,8(sp)
 80099a4:	dc400115 	stw	r17,4(sp)
 80099a8:	308000cc 	andi	r2,r6,3
 80099ac:	3021883a 	mov	r16,r6
 80099b0:	2027883a 	mov	r19,r4
 80099b4:	10002f1e 	bne	r2,zero,8009a74 <__pow5mult+0xe8>
 80099b8:	2825883a 	mov	r18,r5
 80099bc:	8021d0ba 	srai	r16,r16,2
 80099c0:	80001a26 	beq	r16,zero,8009a2c <__pow5mult+0xa0>
 80099c4:	9c401217 	ldw	r17,72(r19)
 80099c8:	8800061e 	bne	r17,zero,80099e4 <__pow5mult+0x58>
 80099cc:	00003406 	br	8009aa0 <__pow5mult+0x114>
 80099d0:	8021d07a 	srai	r16,r16,1
 80099d4:	80001526 	beq	r16,zero,8009a2c <__pow5mult+0xa0>
 80099d8:	88800017 	ldw	r2,0(r17)
 80099dc:	10001c26 	beq	r2,zero,8009a50 <__pow5mult+0xc4>
 80099e0:	1023883a 	mov	r17,r2
 80099e4:	8080004c 	andi	r2,r16,1
 80099e8:	103ff926 	beq	r2,zero,80099d0 <__alt_data_end+0xf80099d0>
 80099ec:	880d883a 	mov	r6,r17
 80099f0:	900b883a 	mov	r5,r18
 80099f4:	9809883a 	mov	r4,r19
 80099f8:	80097940 	call	8009794 <__multiply>
 80099fc:	90001b26 	beq	r18,zero,8009a6c <__pow5mult+0xe0>
 8009a00:	91000117 	ldw	r4,4(r18)
 8009a04:	98c01317 	ldw	r3,76(r19)
 8009a08:	8021d07a 	srai	r16,r16,1
 8009a0c:	2109883a 	add	r4,r4,r4
 8009a10:	2109883a 	add	r4,r4,r4
 8009a14:	1907883a 	add	r3,r3,r4
 8009a18:	19000017 	ldw	r4,0(r3)
 8009a1c:	91000015 	stw	r4,0(r18)
 8009a20:	1c800015 	stw	r18,0(r3)
 8009a24:	1025883a 	mov	r18,r2
 8009a28:	803feb1e 	bne	r16,zero,80099d8 <__alt_data_end+0xf80099d8>
 8009a2c:	9005883a 	mov	r2,r18
 8009a30:	dfc00517 	ldw	ra,20(sp)
 8009a34:	dd000417 	ldw	r20,16(sp)
 8009a38:	dcc00317 	ldw	r19,12(sp)
 8009a3c:	dc800217 	ldw	r18,8(sp)
 8009a40:	dc400117 	ldw	r17,4(sp)
 8009a44:	dc000017 	ldw	r16,0(sp)
 8009a48:	dec00604 	addi	sp,sp,24
 8009a4c:	f800283a 	ret
 8009a50:	880d883a 	mov	r6,r17
 8009a54:	880b883a 	mov	r5,r17
 8009a58:	9809883a 	mov	r4,r19
 8009a5c:	80097940 	call	8009794 <__multiply>
 8009a60:	88800015 	stw	r2,0(r17)
 8009a64:	10000015 	stw	zero,0(r2)
 8009a68:	003fdd06 	br	80099e0 <__alt_data_end+0xf80099e0>
 8009a6c:	1025883a 	mov	r18,r2
 8009a70:	003fd706 	br	80099d0 <__alt_data_end+0xf80099d0>
 8009a74:	10bfffc4 	addi	r2,r2,-1
 8009a78:	1085883a 	add	r2,r2,r2
 8009a7c:	00c20074 	movhi	r3,2049
 8009a80:	18cca804 	addi	r3,r3,12960
 8009a84:	1085883a 	add	r2,r2,r2
 8009a88:	1885883a 	add	r2,r3,r2
 8009a8c:	11800017 	ldw	r6,0(r2)
 8009a90:	000f883a 	mov	r7,zero
 8009a94:	800941c0 	call	800941c <__multadd>
 8009a98:	1025883a 	mov	r18,r2
 8009a9c:	003fc706 	br	80099bc <__alt_data_end+0xf80099bc>
 8009aa0:	05000044 	movi	r20,1
 8009aa4:	a00b883a 	mov	r5,r20
 8009aa8:	9809883a 	mov	r4,r19
 8009aac:	800934c0 	call	800934c <_Balloc>
 8009ab0:	1023883a 	mov	r17,r2
 8009ab4:	00809c44 	movi	r2,625
 8009ab8:	88800515 	stw	r2,20(r17)
 8009abc:	8d000415 	stw	r20,16(r17)
 8009ac0:	9c401215 	stw	r17,72(r19)
 8009ac4:	88000015 	stw	zero,0(r17)
 8009ac8:	003fc606 	br	80099e4 <__alt_data_end+0xf80099e4>

08009acc <__lshift>:
 8009acc:	defff904 	addi	sp,sp,-28
 8009ad0:	dd400515 	stw	r21,20(sp)
 8009ad4:	dcc00315 	stw	r19,12(sp)
 8009ad8:	302bd17a 	srai	r21,r6,5
 8009adc:	2cc00417 	ldw	r19,16(r5)
 8009ae0:	28800217 	ldw	r2,8(r5)
 8009ae4:	dd000415 	stw	r20,16(sp)
 8009ae8:	ace7883a 	add	r19,r21,r19
 8009aec:	dc800215 	stw	r18,8(sp)
 8009af0:	dc400115 	stw	r17,4(sp)
 8009af4:	dc000015 	stw	r16,0(sp)
 8009af8:	dfc00615 	stw	ra,24(sp)
 8009afc:	9c000044 	addi	r16,r19,1
 8009b00:	2823883a 	mov	r17,r5
 8009b04:	3029883a 	mov	r20,r6
 8009b08:	2025883a 	mov	r18,r4
 8009b0c:	29400117 	ldw	r5,4(r5)
 8009b10:	1400030e 	bge	r2,r16,8009b20 <__lshift+0x54>
 8009b14:	1085883a 	add	r2,r2,r2
 8009b18:	29400044 	addi	r5,r5,1
 8009b1c:	143ffd16 	blt	r2,r16,8009b14 <__alt_data_end+0xf8009b14>
 8009b20:	9009883a 	mov	r4,r18
 8009b24:	800934c0 	call	800934c <_Balloc>
 8009b28:	10c00504 	addi	r3,r2,20
 8009b2c:	0540070e 	bge	zero,r21,8009b4c <__lshift+0x80>
 8009b30:	ad6b883a 	add	r21,r21,r21
 8009b34:	ad6b883a 	add	r21,r21,r21
 8009b38:	1809883a 	mov	r4,r3
 8009b3c:	1d47883a 	add	r3,r3,r21
 8009b40:	20000015 	stw	zero,0(r4)
 8009b44:	21000104 	addi	r4,r4,4
 8009b48:	193ffd1e 	bne	r3,r4,8009b40 <__alt_data_end+0xf8009b40>
 8009b4c:	8a000417 	ldw	r8,16(r17)
 8009b50:	89000504 	addi	r4,r17,20
 8009b54:	a18007cc 	andi	r6,r20,31
 8009b58:	4211883a 	add	r8,r8,r8
 8009b5c:	4211883a 	add	r8,r8,r8
 8009b60:	2211883a 	add	r8,r4,r8
 8009b64:	30002326 	beq	r6,zero,8009bf4 <__lshift+0x128>
 8009b68:	02400804 	movi	r9,32
 8009b6c:	4993c83a 	sub	r9,r9,r6
 8009b70:	000b883a 	mov	r5,zero
 8009b74:	21c00017 	ldw	r7,0(r4)
 8009b78:	1815883a 	mov	r10,r3
 8009b7c:	18c00104 	addi	r3,r3,4
 8009b80:	398e983a 	sll	r7,r7,r6
 8009b84:	21000104 	addi	r4,r4,4
 8009b88:	394ab03a 	or	r5,r7,r5
 8009b8c:	197fff15 	stw	r5,-4(r3)
 8009b90:	217fff17 	ldw	r5,-4(r4)
 8009b94:	2a4ad83a 	srl	r5,r5,r9
 8009b98:	223ff636 	bltu	r4,r8,8009b74 <__alt_data_end+0xf8009b74>
 8009b9c:	51400115 	stw	r5,4(r10)
 8009ba0:	28001a1e 	bne	r5,zero,8009c0c <__lshift+0x140>
 8009ba4:	843fffc4 	addi	r16,r16,-1
 8009ba8:	14000415 	stw	r16,16(r2)
 8009bac:	88000826 	beq	r17,zero,8009bd0 <__lshift+0x104>
 8009bb0:	89000117 	ldw	r4,4(r17)
 8009bb4:	90c01317 	ldw	r3,76(r18)
 8009bb8:	2109883a 	add	r4,r4,r4
 8009bbc:	2109883a 	add	r4,r4,r4
 8009bc0:	1907883a 	add	r3,r3,r4
 8009bc4:	19000017 	ldw	r4,0(r3)
 8009bc8:	89000015 	stw	r4,0(r17)
 8009bcc:	1c400015 	stw	r17,0(r3)
 8009bd0:	dfc00617 	ldw	ra,24(sp)
 8009bd4:	dd400517 	ldw	r21,20(sp)
 8009bd8:	dd000417 	ldw	r20,16(sp)
 8009bdc:	dcc00317 	ldw	r19,12(sp)
 8009be0:	dc800217 	ldw	r18,8(sp)
 8009be4:	dc400117 	ldw	r17,4(sp)
 8009be8:	dc000017 	ldw	r16,0(sp)
 8009bec:	dec00704 	addi	sp,sp,28
 8009bf0:	f800283a 	ret
 8009bf4:	21400017 	ldw	r5,0(r4)
 8009bf8:	18c00104 	addi	r3,r3,4
 8009bfc:	21000104 	addi	r4,r4,4
 8009c00:	197fff15 	stw	r5,-4(r3)
 8009c04:	223ffb36 	bltu	r4,r8,8009bf4 <__alt_data_end+0xf8009bf4>
 8009c08:	003fe606 	br	8009ba4 <__alt_data_end+0xf8009ba4>
 8009c0c:	9c000084 	addi	r16,r19,2
 8009c10:	003fe406 	br	8009ba4 <__alt_data_end+0xf8009ba4>

08009c14 <__mcmp>:
 8009c14:	20800417 	ldw	r2,16(r4)
 8009c18:	28c00417 	ldw	r3,16(r5)
 8009c1c:	10c5c83a 	sub	r2,r2,r3
 8009c20:	1000111e 	bne	r2,zero,8009c68 <__mcmp+0x54>
 8009c24:	18c7883a 	add	r3,r3,r3
 8009c28:	18c7883a 	add	r3,r3,r3
 8009c2c:	21000504 	addi	r4,r4,20
 8009c30:	29400504 	addi	r5,r5,20
 8009c34:	20c5883a 	add	r2,r4,r3
 8009c38:	28cb883a 	add	r5,r5,r3
 8009c3c:	00000106 	br	8009c44 <__mcmp+0x30>
 8009c40:	20800a2e 	bgeu	r4,r2,8009c6c <__mcmp+0x58>
 8009c44:	10bfff04 	addi	r2,r2,-4
 8009c48:	297fff04 	addi	r5,r5,-4
 8009c4c:	11800017 	ldw	r6,0(r2)
 8009c50:	28c00017 	ldw	r3,0(r5)
 8009c54:	30fffa26 	beq	r6,r3,8009c40 <__alt_data_end+0xf8009c40>
 8009c58:	30c00236 	bltu	r6,r3,8009c64 <__mcmp+0x50>
 8009c5c:	00800044 	movi	r2,1
 8009c60:	f800283a 	ret
 8009c64:	00bfffc4 	movi	r2,-1
 8009c68:	f800283a 	ret
 8009c6c:	0005883a 	mov	r2,zero
 8009c70:	f800283a 	ret

08009c74 <__mdiff>:
 8009c74:	28c00417 	ldw	r3,16(r5)
 8009c78:	30800417 	ldw	r2,16(r6)
 8009c7c:	defffa04 	addi	sp,sp,-24
 8009c80:	dcc00315 	stw	r19,12(sp)
 8009c84:	dc800215 	stw	r18,8(sp)
 8009c88:	dfc00515 	stw	ra,20(sp)
 8009c8c:	dd000415 	stw	r20,16(sp)
 8009c90:	dc400115 	stw	r17,4(sp)
 8009c94:	dc000015 	stw	r16,0(sp)
 8009c98:	1887c83a 	sub	r3,r3,r2
 8009c9c:	2825883a 	mov	r18,r5
 8009ca0:	3027883a 	mov	r19,r6
 8009ca4:	1800141e 	bne	r3,zero,8009cf8 <__mdiff+0x84>
 8009ca8:	1085883a 	add	r2,r2,r2
 8009cac:	1085883a 	add	r2,r2,r2
 8009cb0:	2a000504 	addi	r8,r5,20
 8009cb4:	34000504 	addi	r16,r6,20
 8009cb8:	4087883a 	add	r3,r8,r2
 8009cbc:	8085883a 	add	r2,r16,r2
 8009cc0:	00000106 	br	8009cc8 <__mdiff+0x54>
 8009cc4:	40c0592e 	bgeu	r8,r3,8009e2c <__mdiff+0x1b8>
 8009cc8:	18ffff04 	addi	r3,r3,-4
 8009ccc:	10bfff04 	addi	r2,r2,-4
 8009cd0:	19c00017 	ldw	r7,0(r3)
 8009cd4:	11400017 	ldw	r5,0(r2)
 8009cd8:	397ffa26 	beq	r7,r5,8009cc4 <__alt_data_end+0xf8009cc4>
 8009cdc:	3940592e 	bgeu	r7,r5,8009e44 <__mdiff+0x1d0>
 8009ce0:	9005883a 	mov	r2,r18
 8009ce4:	4023883a 	mov	r17,r8
 8009ce8:	9825883a 	mov	r18,r19
 8009cec:	05000044 	movi	r20,1
 8009cf0:	1027883a 	mov	r19,r2
 8009cf4:	00000406 	br	8009d08 <__mdiff+0x94>
 8009cf8:	18005616 	blt	r3,zero,8009e54 <__mdiff+0x1e0>
 8009cfc:	34400504 	addi	r17,r6,20
 8009d00:	2c000504 	addi	r16,r5,20
 8009d04:	0029883a 	mov	r20,zero
 8009d08:	91400117 	ldw	r5,4(r18)
 8009d0c:	800934c0 	call	800934c <_Balloc>
 8009d10:	92400417 	ldw	r9,16(r18)
 8009d14:	9b000417 	ldw	r12,16(r19)
 8009d18:	12c00504 	addi	r11,r2,20
 8009d1c:	4a51883a 	add	r8,r9,r9
 8009d20:	6319883a 	add	r12,r12,r12
 8009d24:	4211883a 	add	r8,r8,r8
 8009d28:	6319883a 	add	r12,r12,r12
 8009d2c:	15000315 	stw	r20,12(r2)
 8009d30:	8211883a 	add	r8,r16,r8
 8009d34:	8b19883a 	add	r12,r17,r12
 8009d38:	0007883a 	mov	r3,zero
 8009d3c:	81400017 	ldw	r5,0(r16)
 8009d40:	89c00017 	ldw	r7,0(r17)
 8009d44:	59800104 	addi	r6,r11,4
 8009d48:	293fffcc 	andi	r4,r5,65535
 8009d4c:	20c7883a 	add	r3,r4,r3
 8009d50:	393fffcc 	andi	r4,r7,65535
 8009d54:	1909c83a 	sub	r4,r3,r4
 8009d58:	280ad43a 	srli	r5,r5,16
 8009d5c:	380ed43a 	srli	r7,r7,16
 8009d60:	2007d43a 	srai	r3,r4,16
 8009d64:	213fffcc 	andi	r4,r4,65535
 8009d68:	29cbc83a 	sub	r5,r5,r7
 8009d6c:	28c7883a 	add	r3,r5,r3
 8009d70:	180a943a 	slli	r5,r3,16
 8009d74:	8c400104 	addi	r17,r17,4
 8009d78:	84000104 	addi	r16,r16,4
 8009d7c:	2908b03a 	or	r4,r5,r4
 8009d80:	59000015 	stw	r4,0(r11)
 8009d84:	1807d43a 	srai	r3,r3,16
 8009d88:	3015883a 	mov	r10,r6
 8009d8c:	3017883a 	mov	r11,r6
 8009d90:	8b3fea36 	bltu	r17,r12,8009d3c <__alt_data_end+0xf8009d3c>
 8009d94:	8200162e 	bgeu	r16,r8,8009df0 <__mdiff+0x17c>
 8009d98:	8017883a 	mov	r11,r16
 8009d9c:	59400017 	ldw	r5,0(r11)
 8009da0:	31800104 	addi	r6,r6,4
 8009da4:	5ac00104 	addi	r11,r11,4
 8009da8:	293fffcc 	andi	r4,r5,65535
 8009dac:	20c7883a 	add	r3,r4,r3
 8009db0:	280ed43a 	srli	r7,r5,16
 8009db4:	180bd43a 	srai	r5,r3,16
 8009db8:	193fffcc 	andi	r4,r3,65535
 8009dbc:	3947883a 	add	r3,r7,r5
 8009dc0:	180a943a 	slli	r5,r3,16
 8009dc4:	1807d43a 	srai	r3,r3,16
 8009dc8:	2908b03a 	or	r4,r5,r4
 8009dcc:	313fff15 	stw	r4,-4(r6)
 8009dd0:	5a3ff236 	bltu	r11,r8,8009d9c <__alt_data_end+0xf8009d9c>
 8009dd4:	0406303a 	nor	r3,zero,r16
 8009dd8:	1a07883a 	add	r3,r3,r8
 8009ddc:	1806d0ba 	srli	r3,r3,2
 8009de0:	18c00044 	addi	r3,r3,1
 8009de4:	18c7883a 	add	r3,r3,r3
 8009de8:	18c7883a 	add	r3,r3,r3
 8009dec:	50d5883a 	add	r10,r10,r3
 8009df0:	50ffff04 	addi	r3,r10,-4
 8009df4:	2000041e 	bne	r4,zero,8009e08 <__mdiff+0x194>
 8009df8:	18ffff04 	addi	r3,r3,-4
 8009dfc:	19000017 	ldw	r4,0(r3)
 8009e00:	4a7fffc4 	addi	r9,r9,-1
 8009e04:	203ffc26 	beq	r4,zero,8009df8 <__alt_data_end+0xf8009df8>
 8009e08:	12400415 	stw	r9,16(r2)
 8009e0c:	dfc00517 	ldw	ra,20(sp)
 8009e10:	dd000417 	ldw	r20,16(sp)
 8009e14:	dcc00317 	ldw	r19,12(sp)
 8009e18:	dc800217 	ldw	r18,8(sp)
 8009e1c:	dc400117 	ldw	r17,4(sp)
 8009e20:	dc000017 	ldw	r16,0(sp)
 8009e24:	dec00604 	addi	sp,sp,24
 8009e28:	f800283a 	ret
 8009e2c:	000b883a 	mov	r5,zero
 8009e30:	800934c0 	call	800934c <_Balloc>
 8009e34:	00c00044 	movi	r3,1
 8009e38:	10c00415 	stw	r3,16(r2)
 8009e3c:	10000515 	stw	zero,20(r2)
 8009e40:	003ff206 	br	8009e0c <__alt_data_end+0xf8009e0c>
 8009e44:	8023883a 	mov	r17,r16
 8009e48:	0029883a 	mov	r20,zero
 8009e4c:	4021883a 	mov	r16,r8
 8009e50:	003fad06 	br	8009d08 <__alt_data_end+0xf8009d08>
 8009e54:	9005883a 	mov	r2,r18
 8009e58:	94400504 	addi	r17,r18,20
 8009e5c:	9c000504 	addi	r16,r19,20
 8009e60:	9825883a 	mov	r18,r19
 8009e64:	05000044 	movi	r20,1
 8009e68:	1027883a 	mov	r19,r2
 8009e6c:	003fa606 	br	8009d08 <__alt_data_end+0xf8009d08>

08009e70 <__ulp>:
 8009e70:	295ffc2c 	andhi	r5,r5,32752
 8009e74:	00bf3034 	movhi	r2,64704
 8009e78:	2887883a 	add	r3,r5,r2
 8009e7c:	00c0020e 	bge	zero,r3,8009e88 <__ulp+0x18>
 8009e80:	0005883a 	mov	r2,zero
 8009e84:	f800283a 	ret
 8009e88:	00c7c83a 	sub	r3,zero,r3
 8009e8c:	1807d53a 	srai	r3,r3,20
 8009e90:	008004c4 	movi	r2,19
 8009e94:	10c00b0e 	bge	r2,r3,8009ec4 <__ulp+0x54>
 8009e98:	18bffb04 	addi	r2,r3,-20
 8009e9c:	01000784 	movi	r4,30
 8009ea0:	0007883a 	mov	r3,zero
 8009ea4:	20800516 	blt	r4,r2,8009ebc <__ulp+0x4c>
 8009ea8:	010007c4 	movi	r4,31
 8009eac:	2089c83a 	sub	r4,r4,r2
 8009eb0:	00800044 	movi	r2,1
 8009eb4:	1104983a 	sll	r2,r2,r4
 8009eb8:	f800283a 	ret
 8009ebc:	00800044 	movi	r2,1
 8009ec0:	f800283a 	ret
 8009ec4:	01400234 	movhi	r5,8
 8009ec8:	28c7d83a 	sra	r3,r5,r3
 8009ecc:	0005883a 	mov	r2,zero
 8009ed0:	f800283a 	ret

08009ed4 <__b2d>:
 8009ed4:	defffa04 	addi	sp,sp,-24
 8009ed8:	dc000015 	stw	r16,0(sp)
 8009edc:	24000417 	ldw	r16,16(r4)
 8009ee0:	dc400115 	stw	r17,4(sp)
 8009ee4:	24400504 	addi	r17,r4,20
 8009ee8:	8421883a 	add	r16,r16,r16
 8009eec:	8421883a 	add	r16,r16,r16
 8009ef0:	8c21883a 	add	r16,r17,r16
 8009ef4:	dc800215 	stw	r18,8(sp)
 8009ef8:	84bfff17 	ldw	r18,-4(r16)
 8009efc:	dd000415 	stw	r20,16(sp)
 8009f00:	dcc00315 	stw	r19,12(sp)
 8009f04:	9009883a 	mov	r4,r18
 8009f08:	2829883a 	mov	r20,r5
 8009f0c:	dfc00515 	stw	ra,20(sp)
 8009f10:	80096400 	call	8009640 <__hi0bits>
 8009f14:	00c00804 	movi	r3,32
 8009f18:	1889c83a 	sub	r4,r3,r2
 8009f1c:	a1000015 	stw	r4,0(r20)
 8009f20:	01000284 	movi	r4,10
 8009f24:	84ffff04 	addi	r19,r16,-4
 8009f28:	20801216 	blt	r4,r2,8009f74 <__b2d+0xa0>
 8009f2c:	018002c4 	movi	r6,11
 8009f30:	308dc83a 	sub	r6,r6,r2
 8009f34:	9186d83a 	srl	r3,r18,r6
 8009f38:	18cffc34 	orhi	r3,r3,16368
 8009f3c:	8cc0212e 	bgeu	r17,r19,8009fc4 <__b2d+0xf0>
 8009f40:	813ffe17 	ldw	r4,-8(r16)
 8009f44:	218cd83a 	srl	r6,r4,r6
 8009f48:	10800544 	addi	r2,r2,21
 8009f4c:	9084983a 	sll	r2,r18,r2
 8009f50:	1184b03a 	or	r2,r2,r6
 8009f54:	dfc00517 	ldw	ra,20(sp)
 8009f58:	dd000417 	ldw	r20,16(sp)
 8009f5c:	dcc00317 	ldw	r19,12(sp)
 8009f60:	dc800217 	ldw	r18,8(sp)
 8009f64:	dc400117 	ldw	r17,4(sp)
 8009f68:	dc000017 	ldw	r16,0(sp)
 8009f6c:	dec00604 	addi	sp,sp,24
 8009f70:	f800283a 	ret
 8009f74:	8cc00f2e 	bgeu	r17,r19,8009fb4 <__b2d+0xe0>
 8009f78:	117ffd44 	addi	r5,r2,-11
 8009f7c:	80bffe17 	ldw	r2,-8(r16)
 8009f80:	28000e26 	beq	r5,zero,8009fbc <__b2d+0xe8>
 8009f84:	1949c83a 	sub	r4,r3,r5
 8009f88:	9164983a 	sll	r18,r18,r5
 8009f8c:	1106d83a 	srl	r3,r2,r4
 8009f90:	81bffe04 	addi	r6,r16,-8
 8009f94:	948ffc34 	orhi	r18,r18,16368
 8009f98:	90c6b03a 	or	r3,r18,r3
 8009f9c:	89800e2e 	bgeu	r17,r6,8009fd8 <__b2d+0x104>
 8009fa0:	81bffd17 	ldw	r6,-12(r16)
 8009fa4:	1144983a 	sll	r2,r2,r5
 8009fa8:	310ad83a 	srl	r5,r6,r4
 8009fac:	2884b03a 	or	r2,r5,r2
 8009fb0:	003fe806 	br	8009f54 <__alt_data_end+0xf8009f54>
 8009fb4:	10bffd44 	addi	r2,r2,-11
 8009fb8:	1000041e 	bne	r2,zero,8009fcc <__b2d+0xf8>
 8009fbc:	90cffc34 	orhi	r3,r18,16368
 8009fc0:	003fe406 	br	8009f54 <__alt_data_end+0xf8009f54>
 8009fc4:	000d883a 	mov	r6,zero
 8009fc8:	003fdf06 	br	8009f48 <__alt_data_end+0xf8009f48>
 8009fcc:	90a4983a 	sll	r18,r18,r2
 8009fd0:	0005883a 	mov	r2,zero
 8009fd4:	003ff906 	br	8009fbc <__alt_data_end+0xf8009fbc>
 8009fd8:	1144983a 	sll	r2,r2,r5
 8009fdc:	003fdd06 	br	8009f54 <__alt_data_end+0xf8009f54>

08009fe0 <__d2b>:
 8009fe0:	defff804 	addi	sp,sp,-32
 8009fe4:	dc000215 	stw	r16,8(sp)
 8009fe8:	3021883a 	mov	r16,r6
 8009fec:	dc400315 	stw	r17,12(sp)
 8009ff0:	8022907a 	slli	r17,r16,1
 8009ff4:	dd000615 	stw	r20,24(sp)
 8009ff8:	2829883a 	mov	r20,r5
 8009ffc:	01400044 	movi	r5,1
 800a000:	dcc00515 	stw	r19,20(sp)
 800a004:	dc800415 	stw	r18,16(sp)
 800a008:	dfc00715 	stw	ra,28(sp)
 800a00c:	3825883a 	mov	r18,r7
 800a010:	8822d57a 	srli	r17,r17,21
 800a014:	800934c0 	call	800934c <_Balloc>
 800a018:	1027883a 	mov	r19,r2
 800a01c:	00800434 	movhi	r2,16
 800a020:	10bfffc4 	addi	r2,r2,-1
 800a024:	808c703a 	and	r6,r16,r2
 800a028:	88000126 	beq	r17,zero,800a030 <__d2b+0x50>
 800a02c:	31800434 	orhi	r6,r6,16
 800a030:	d9800015 	stw	r6,0(sp)
 800a034:	a0002426 	beq	r20,zero,800a0c8 <__d2b+0xe8>
 800a038:	d9000104 	addi	r4,sp,4
 800a03c:	dd000115 	stw	r20,4(sp)
 800a040:	80096a80 	call	80096a8 <__lo0bits>
 800a044:	d8c00017 	ldw	r3,0(sp)
 800a048:	10002f1e 	bne	r2,zero,800a108 <__d2b+0x128>
 800a04c:	d9000117 	ldw	r4,4(sp)
 800a050:	99000515 	stw	r4,20(r19)
 800a054:	1821003a 	cmpeq	r16,r3,zero
 800a058:	01000084 	movi	r4,2
 800a05c:	2421c83a 	sub	r16,r4,r16
 800a060:	98c00615 	stw	r3,24(r19)
 800a064:	9c000415 	stw	r16,16(r19)
 800a068:	88001f1e 	bne	r17,zero,800a0e8 <__d2b+0x108>
 800a06c:	10bef384 	addi	r2,r2,-1074
 800a070:	90800015 	stw	r2,0(r18)
 800a074:	00900034 	movhi	r2,16384
 800a078:	10bfffc4 	addi	r2,r2,-1
 800a07c:	8085883a 	add	r2,r16,r2
 800a080:	1085883a 	add	r2,r2,r2
 800a084:	1085883a 	add	r2,r2,r2
 800a088:	9885883a 	add	r2,r19,r2
 800a08c:	11000517 	ldw	r4,20(r2)
 800a090:	8020917a 	slli	r16,r16,5
 800a094:	80096400 	call	8009640 <__hi0bits>
 800a098:	d8c00817 	ldw	r3,32(sp)
 800a09c:	8085c83a 	sub	r2,r16,r2
 800a0a0:	18800015 	stw	r2,0(r3)
 800a0a4:	9805883a 	mov	r2,r19
 800a0a8:	dfc00717 	ldw	ra,28(sp)
 800a0ac:	dd000617 	ldw	r20,24(sp)
 800a0b0:	dcc00517 	ldw	r19,20(sp)
 800a0b4:	dc800417 	ldw	r18,16(sp)
 800a0b8:	dc400317 	ldw	r17,12(sp)
 800a0bc:	dc000217 	ldw	r16,8(sp)
 800a0c0:	dec00804 	addi	sp,sp,32
 800a0c4:	f800283a 	ret
 800a0c8:	d809883a 	mov	r4,sp
 800a0cc:	80096a80 	call	80096a8 <__lo0bits>
 800a0d0:	d8c00017 	ldw	r3,0(sp)
 800a0d4:	04000044 	movi	r16,1
 800a0d8:	9c000415 	stw	r16,16(r19)
 800a0dc:	98c00515 	stw	r3,20(r19)
 800a0e0:	10800804 	addi	r2,r2,32
 800a0e4:	883fe126 	beq	r17,zero,800a06c <__alt_data_end+0xf800a06c>
 800a0e8:	00c00d44 	movi	r3,53
 800a0ec:	8c7ef344 	addi	r17,r17,-1075
 800a0f0:	88a3883a 	add	r17,r17,r2
 800a0f4:	1885c83a 	sub	r2,r3,r2
 800a0f8:	d8c00817 	ldw	r3,32(sp)
 800a0fc:	94400015 	stw	r17,0(r18)
 800a100:	18800015 	stw	r2,0(r3)
 800a104:	003fe706 	br	800a0a4 <__alt_data_end+0xf800a0a4>
 800a108:	01000804 	movi	r4,32
 800a10c:	2089c83a 	sub	r4,r4,r2
 800a110:	1908983a 	sll	r4,r3,r4
 800a114:	d9400117 	ldw	r5,4(sp)
 800a118:	1886d83a 	srl	r3,r3,r2
 800a11c:	2148b03a 	or	r4,r4,r5
 800a120:	99000515 	stw	r4,20(r19)
 800a124:	d8c00015 	stw	r3,0(sp)
 800a128:	003fca06 	br	800a054 <__alt_data_end+0xf800a054>

0800a12c <__ratio>:
 800a12c:	defff904 	addi	sp,sp,-28
 800a130:	dc400315 	stw	r17,12(sp)
 800a134:	2823883a 	mov	r17,r5
 800a138:	d9400104 	addi	r5,sp,4
 800a13c:	dfc00615 	stw	ra,24(sp)
 800a140:	dcc00515 	stw	r19,20(sp)
 800a144:	dc800415 	stw	r18,16(sp)
 800a148:	2027883a 	mov	r19,r4
 800a14c:	dc000215 	stw	r16,8(sp)
 800a150:	8009ed40 	call	8009ed4 <__b2d>
 800a154:	d80b883a 	mov	r5,sp
 800a158:	8809883a 	mov	r4,r17
 800a15c:	1025883a 	mov	r18,r2
 800a160:	1821883a 	mov	r16,r3
 800a164:	8009ed40 	call	8009ed4 <__b2d>
 800a168:	8a000417 	ldw	r8,16(r17)
 800a16c:	99000417 	ldw	r4,16(r19)
 800a170:	d9400117 	ldw	r5,4(sp)
 800a174:	2209c83a 	sub	r4,r4,r8
 800a178:	2010917a 	slli	r8,r4,5
 800a17c:	d9000017 	ldw	r4,0(sp)
 800a180:	2909c83a 	sub	r4,r5,r4
 800a184:	4109883a 	add	r4,r8,r4
 800a188:	01000e0e 	bge	zero,r4,800a1c4 <__ratio+0x98>
 800a18c:	2008953a 	slli	r4,r4,20
 800a190:	2421883a 	add	r16,r4,r16
 800a194:	100d883a 	mov	r6,r2
 800a198:	180f883a 	mov	r7,r3
 800a19c:	9009883a 	mov	r4,r18
 800a1a0:	800b883a 	mov	r5,r16
 800a1a4:	800e0500 	call	800e050 <__divdf3>
 800a1a8:	dfc00617 	ldw	ra,24(sp)
 800a1ac:	dcc00517 	ldw	r19,20(sp)
 800a1b0:	dc800417 	ldw	r18,16(sp)
 800a1b4:	dc400317 	ldw	r17,12(sp)
 800a1b8:	dc000217 	ldw	r16,8(sp)
 800a1bc:	dec00704 	addi	sp,sp,28
 800a1c0:	f800283a 	ret
 800a1c4:	2008953a 	slli	r4,r4,20
 800a1c8:	1907c83a 	sub	r3,r3,r4
 800a1cc:	003ff106 	br	800a194 <__alt_data_end+0xf800a194>

0800a1d0 <_mprec_log10>:
 800a1d0:	defffe04 	addi	sp,sp,-8
 800a1d4:	dc000015 	stw	r16,0(sp)
 800a1d8:	dfc00115 	stw	ra,4(sp)
 800a1dc:	008005c4 	movi	r2,23
 800a1e0:	2021883a 	mov	r16,r4
 800a1e4:	11000d0e 	bge	r2,r4,800a21c <_mprec_log10+0x4c>
 800a1e8:	0005883a 	mov	r2,zero
 800a1ec:	00cffc34 	movhi	r3,16368
 800a1f0:	843fffc4 	addi	r16,r16,-1
 800a1f4:	000d883a 	mov	r6,zero
 800a1f8:	01d00934 	movhi	r7,16420
 800a1fc:	1009883a 	mov	r4,r2
 800a200:	180b883a 	mov	r5,r3
 800a204:	800eb900 	call	800eb90 <__muldf3>
 800a208:	803ff91e 	bne	r16,zero,800a1f0 <__alt_data_end+0xf800a1f0>
 800a20c:	dfc00117 	ldw	ra,4(sp)
 800a210:	dc000017 	ldw	r16,0(sp)
 800a214:	dec00204 	addi	sp,sp,8
 800a218:	f800283a 	ret
 800a21c:	202090fa 	slli	r16,r4,3
 800a220:	00820074 	movhi	r2,2049
 800a224:	108cbf04 	addi	r2,r2,13052
 800a228:	1421883a 	add	r16,r2,r16
 800a22c:	80800017 	ldw	r2,0(r16)
 800a230:	80c00117 	ldw	r3,4(r16)
 800a234:	dfc00117 	ldw	ra,4(sp)
 800a238:	dc000017 	ldw	r16,0(sp)
 800a23c:	dec00204 	addi	sp,sp,8
 800a240:	f800283a 	ret

0800a244 <__copybits>:
 800a244:	297fffc4 	addi	r5,r5,-1
 800a248:	280fd17a 	srai	r7,r5,5
 800a24c:	30c00417 	ldw	r3,16(r6)
 800a250:	30800504 	addi	r2,r6,20
 800a254:	39c00044 	addi	r7,r7,1
 800a258:	18c7883a 	add	r3,r3,r3
 800a25c:	39cf883a 	add	r7,r7,r7
 800a260:	18c7883a 	add	r3,r3,r3
 800a264:	39cf883a 	add	r7,r7,r7
 800a268:	10c7883a 	add	r3,r2,r3
 800a26c:	21cf883a 	add	r7,r4,r7
 800a270:	10c00d2e 	bgeu	r2,r3,800a2a8 <__copybits+0x64>
 800a274:	200b883a 	mov	r5,r4
 800a278:	12000017 	ldw	r8,0(r2)
 800a27c:	29400104 	addi	r5,r5,4
 800a280:	10800104 	addi	r2,r2,4
 800a284:	2a3fff15 	stw	r8,-4(r5)
 800a288:	10fffb36 	bltu	r2,r3,800a278 <__alt_data_end+0xf800a278>
 800a28c:	1985c83a 	sub	r2,r3,r6
 800a290:	10bffac4 	addi	r2,r2,-21
 800a294:	1004d0ba 	srli	r2,r2,2
 800a298:	10800044 	addi	r2,r2,1
 800a29c:	1085883a 	add	r2,r2,r2
 800a2a0:	1085883a 	add	r2,r2,r2
 800a2a4:	2089883a 	add	r4,r4,r2
 800a2a8:	21c0032e 	bgeu	r4,r7,800a2b8 <__copybits+0x74>
 800a2ac:	20000015 	stw	zero,0(r4)
 800a2b0:	21000104 	addi	r4,r4,4
 800a2b4:	21fffd36 	bltu	r4,r7,800a2ac <__alt_data_end+0xf800a2ac>
 800a2b8:	f800283a 	ret

0800a2bc <__any_on>:
 800a2bc:	20c00417 	ldw	r3,16(r4)
 800a2c0:	2805d17a 	srai	r2,r5,5
 800a2c4:	21000504 	addi	r4,r4,20
 800a2c8:	18800d0e 	bge	r3,r2,800a300 <__any_on+0x44>
 800a2cc:	18c7883a 	add	r3,r3,r3
 800a2d0:	18c7883a 	add	r3,r3,r3
 800a2d4:	20c7883a 	add	r3,r4,r3
 800a2d8:	20c0192e 	bgeu	r4,r3,800a340 <__any_on+0x84>
 800a2dc:	18bfff17 	ldw	r2,-4(r3)
 800a2e0:	18ffff04 	addi	r3,r3,-4
 800a2e4:	1000041e 	bne	r2,zero,800a2f8 <__any_on+0x3c>
 800a2e8:	20c0142e 	bgeu	r4,r3,800a33c <__any_on+0x80>
 800a2ec:	18ffff04 	addi	r3,r3,-4
 800a2f0:	19400017 	ldw	r5,0(r3)
 800a2f4:	283ffc26 	beq	r5,zero,800a2e8 <__alt_data_end+0xf800a2e8>
 800a2f8:	00800044 	movi	r2,1
 800a2fc:	f800283a 	ret
 800a300:	10c00a0e 	bge	r2,r3,800a32c <__any_on+0x70>
 800a304:	1085883a 	add	r2,r2,r2
 800a308:	1085883a 	add	r2,r2,r2
 800a30c:	294007cc 	andi	r5,r5,31
 800a310:	2087883a 	add	r3,r4,r2
 800a314:	283ff026 	beq	r5,zero,800a2d8 <__alt_data_end+0xf800a2d8>
 800a318:	19800017 	ldw	r6,0(r3)
 800a31c:	3144d83a 	srl	r2,r6,r5
 800a320:	114a983a 	sll	r5,r2,r5
 800a324:	317ff41e 	bne	r6,r5,800a2f8 <__alt_data_end+0xf800a2f8>
 800a328:	003feb06 	br	800a2d8 <__alt_data_end+0xf800a2d8>
 800a32c:	1085883a 	add	r2,r2,r2
 800a330:	1085883a 	add	r2,r2,r2
 800a334:	2087883a 	add	r3,r4,r2
 800a338:	003fe706 	br	800a2d8 <__alt_data_end+0xf800a2d8>
 800a33c:	f800283a 	ret
 800a340:	0005883a 	mov	r2,zero
 800a344:	f800283a 	ret

0800a348 <_putc_r>:
 800a348:	defffc04 	addi	sp,sp,-16
 800a34c:	dc000215 	stw	r16,8(sp)
 800a350:	dfc00315 	stw	ra,12(sp)
 800a354:	2021883a 	mov	r16,r4
 800a358:	20000226 	beq	r4,zero,800a364 <_putc_r+0x1c>
 800a35c:	20800e17 	ldw	r2,56(r4)
 800a360:	10001b26 	beq	r2,zero,800a3d0 <_putc_r+0x88>
 800a364:	30800217 	ldw	r2,8(r6)
 800a368:	10bfffc4 	addi	r2,r2,-1
 800a36c:	30800215 	stw	r2,8(r6)
 800a370:	10000a16 	blt	r2,zero,800a39c <_putc_r+0x54>
 800a374:	30800017 	ldw	r2,0(r6)
 800a378:	11400005 	stb	r5,0(r2)
 800a37c:	30800017 	ldw	r2,0(r6)
 800a380:	10c00044 	addi	r3,r2,1
 800a384:	30c00015 	stw	r3,0(r6)
 800a388:	10800003 	ldbu	r2,0(r2)
 800a38c:	dfc00317 	ldw	ra,12(sp)
 800a390:	dc000217 	ldw	r16,8(sp)
 800a394:	dec00404 	addi	sp,sp,16
 800a398:	f800283a 	ret
 800a39c:	30c00617 	ldw	r3,24(r6)
 800a3a0:	10c00616 	blt	r2,r3,800a3bc <_putc_r+0x74>
 800a3a4:	30800017 	ldw	r2,0(r6)
 800a3a8:	00c00284 	movi	r3,10
 800a3ac:	11400005 	stb	r5,0(r2)
 800a3b0:	30800017 	ldw	r2,0(r6)
 800a3b4:	11400003 	ldbu	r5,0(r2)
 800a3b8:	28fff11e 	bne	r5,r3,800a380 <__alt_data_end+0xf800a380>
 800a3bc:	8009883a 	mov	r4,r16
 800a3c0:	dfc00317 	ldw	ra,12(sp)
 800a3c4:	dc000217 	ldw	r16,8(sp)
 800a3c8:	dec00404 	addi	sp,sp,16
 800a3cc:	800c20c1 	jmpi	800c20c <__swbuf_r>
 800a3d0:	d9400015 	stw	r5,0(sp)
 800a3d4:	d9800115 	stw	r6,4(sp)
 800a3d8:	80082640 	call	8008264 <__sinit>
 800a3dc:	d9800117 	ldw	r6,4(sp)
 800a3e0:	d9400017 	ldw	r5,0(sp)
 800a3e4:	003fdf06 	br	800a364 <__alt_data_end+0xf800a364>

0800a3e8 <putc>:
 800a3e8:	00820074 	movhi	r2,2049
 800a3ec:	defffc04 	addi	sp,sp,-16
 800a3f0:	1093ff04 	addi	r2,r2,20476
 800a3f4:	dc000115 	stw	r16,4(sp)
 800a3f8:	14000017 	ldw	r16,0(r2)
 800a3fc:	dc400215 	stw	r17,8(sp)
 800a400:	dfc00315 	stw	ra,12(sp)
 800a404:	2023883a 	mov	r17,r4
 800a408:	80000226 	beq	r16,zero,800a414 <putc+0x2c>
 800a40c:	80800e17 	ldw	r2,56(r16)
 800a410:	10001a26 	beq	r2,zero,800a47c <putc+0x94>
 800a414:	28800217 	ldw	r2,8(r5)
 800a418:	10bfffc4 	addi	r2,r2,-1
 800a41c:	28800215 	stw	r2,8(r5)
 800a420:	10000b16 	blt	r2,zero,800a450 <putc+0x68>
 800a424:	28800017 	ldw	r2,0(r5)
 800a428:	14400005 	stb	r17,0(r2)
 800a42c:	28800017 	ldw	r2,0(r5)
 800a430:	10c00044 	addi	r3,r2,1
 800a434:	28c00015 	stw	r3,0(r5)
 800a438:	10800003 	ldbu	r2,0(r2)
 800a43c:	dfc00317 	ldw	ra,12(sp)
 800a440:	dc400217 	ldw	r17,8(sp)
 800a444:	dc000117 	ldw	r16,4(sp)
 800a448:	dec00404 	addi	sp,sp,16
 800a44c:	f800283a 	ret
 800a450:	28c00617 	ldw	r3,24(r5)
 800a454:	10c00e16 	blt	r2,r3,800a490 <putc+0xa8>
 800a458:	28800017 	ldw	r2,0(r5)
 800a45c:	01000284 	movi	r4,10
 800a460:	14400005 	stb	r17,0(r2)
 800a464:	28800017 	ldw	r2,0(r5)
 800a468:	10c00003 	ldbu	r3,0(r2)
 800a46c:	193ff01e 	bne	r3,r4,800a430 <__alt_data_end+0xf800a430>
 800a470:	280d883a 	mov	r6,r5
 800a474:	180b883a 	mov	r5,r3
 800a478:	00000706 	br	800a498 <putc+0xb0>
 800a47c:	8009883a 	mov	r4,r16
 800a480:	d9400015 	stw	r5,0(sp)
 800a484:	80082640 	call	8008264 <__sinit>
 800a488:	d9400017 	ldw	r5,0(sp)
 800a48c:	003fe106 	br	800a414 <__alt_data_end+0xf800a414>
 800a490:	280d883a 	mov	r6,r5
 800a494:	880b883a 	mov	r5,r17
 800a498:	8009883a 	mov	r4,r16
 800a49c:	dfc00317 	ldw	ra,12(sp)
 800a4a0:	dc400217 	ldw	r17,8(sp)
 800a4a4:	dc000117 	ldw	r16,4(sp)
 800a4a8:	dec00404 	addi	sp,sp,16
 800a4ac:	800c20c1 	jmpi	800c20c <__swbuf_r>

0800a4b0 <_realloc_r>:
 800a4b0:	defff604 	addi	sp,sp,-40
 800a4b4:	dc800215 	stw	r18,8(sp)
 800a4b8:	dfc00915 	stw	ra,36(sp)
 800a4bc:	df000815 	stw	fp,32(sp)
 800a4c0:	ddc00715 	stw	r23,28(sp)
 800a4c4:	dd800615 	stw	r22,24(sp)
 800a4c8:	dd400515 	stw	r21,20(sp)
 800a4cc:	dd000415 	stw	r20,16(sp)
 800a4d0:	dcc00315 	stw	r19,12(sp)
 800a4d4:	dc400115 	stw	r17,4(sp)
 800a4d8:	dc000015 	stw	r16,0(sp)
 800a4dc:	3025883a 	mov	r18,r6
 800a4e0:	2800b726 	beq	r5,zero,800a7c0 <_realloc_r+0x310>
 800a4e4:	282b883a 	mov	r21,r5
 800a4e8:	2029883a 	mov	r20,r4
 800a4ec:	80105480 	call	8010548 <__malloc_lock>
 800a4f0:	a8bfff17 	ldw	r2,-4(r21)
 800a4f4:	043fff04 	movi	r16,-4
 800a4f8:	90c002c4 	addi	r3,r18,11
 800a4fc:	01000584 	movi	r4,22
 800a500:	acfffe04 	addi	r19,r21,-8
 800a504:	1420703a 	and	r16,r2,r16
 800a508:	20c0332e 	bgeu	r4,r3,800a5d8 <_realloc_r+0x128>
 800a50c:	047ffe04 	movi	r17,-8
 800a510:	1c62703a 	and	r17,r3,r17
 800a514:	8807883a 	mov	r3,r17
 800a518:	88005816 	blt	r17,zero,800a67c <_realloc_r+0x1cc>
 800a51c:	8c805736 	bltu	r17,r18,800a67c <_realloc_r+0x1cc>
 800a520:	80c0300e 	bge	r16,r3,800a5e4 <_realloc_r+0x134>
 800a524:	07020074 	movhi	fp,2049
 800a528:	e70d4604 	addi	fp,fp,13592
 800a52c:	e1c00217 	ldw	r7,8(fp)
 800a530:	9c09883a 	add	r4,r19,r16
 800a534:	22000117 	ldw	r8,4(r4)
 800a538:	21c06326 	beq	r4,r7,800a6c8 <_realloc_r+0x218>
 800a53c:	017fff84 	movi	r5,-2
 800a540:	414a703a 	and	r5,r8,r5
 800a544:	214b883a 	add	r5,r4,r5
 800a548:	29800117 	ldw	r6,4(r5)
 800a54c:	3180004c 	andi	r6,r6,1
 800a550:	30003f26 	beq	r6,zero,800a650 <_realloc_r+0x1a0>
 800a554:	1080004c 	andi	r2,r2,1
 800a558:	10008326 	beq	r2,zero,800a768 <_realloc_r+0x2b8>
 800a55c:	900b883a 	mov	r5,r18
 800a560:	a009883a 	mov	r4,r20
 800a564:	80030600 	call	8003060 <_malloc_r>
 800a568:	1025883a 	mov	r18,r2
 800a56c:	10011e26 	beq	r2,zero,800a9e8 <_realloc_r+0x538>
 800a570:	a93fff17 	ldw	r4,-4(r21)
 800a574:	10fffe04 	addi	r3,r2,-8
 800a578:	00bfff84 	movi	r2,-2
 800a57c:	2084703a 	and	r2,r4,r2
 800a580:	9885883a 	add	r2,r19,r2
 800a584:	1880ee26 	beq	r3,r2,800a940 <_realloc_r+0x490>
 800a588:	81bfff04 	addi	r6,r16,-4
 800a58c:	00800904 	movi	r2,36
 800a590:	1180b836 	bltu	r2,r6,800a874 <_realloc_r+0x3c4>
 800a594:	00c004c4 	movi	r3,19
 800a598:	19809636 	bltu	r3,r6,800a7f4 <_realloc_r+0x344>
 800a59c:	9005883a 	mov	r2,r18
 800a5a0:	a807883a 	mov	r3,r21
 800a5a4:	19000017 	ldw	r4,0(r3)
 800a5a8:	11000015 	stw	r4,0(r2)
 800a5ac:	19000117 	ldw	r4,4(r3)
 800a5b0:	11000115 	stw	r4,4(r2)
 800a5b4:	18c00217 	ldw	r3,8(r3)
 800a5b8:	10c00215 	stw	r3,8(r2)
 800a5bc:	a80b883a 	mov	r5,r21
 800a5c0:	a009883a 	mov	r4,r20
 800a5c4:	80083d80 	call	80083d8 <_free_r>
 800a5c8:	a009883a 	mov	r4,r20
 800a5cc:	801056c0 	call	801056c <__malloc_unlock>
 800a5d0:	9005883a 	mov	r2,r18
 800a5d4:	00001206 	br	800a620 <_realloc_r+0x170>
 800a5d8:	00c00404 	movi	r3,16
 800a5dc:	1823883a 	mov	r17,r3
 800a5e0:	003fce06 	br	800a51c <__alt_data_end+0xf800a51c>
 800a5e4:	a825883a 	mov	r18,r21
 800a5e8:	8445c83a 	sub	r2,r16,r17
 800a5ec:	00c003c4 	movi	r3,15
 800a5f0:	18802636 	bltu	r3,r2,800a68c <_realloc_r+0x1dc>
 800a5f4:	99800117 	ldw	r6,4(r19)
 800a5f8:	9c07883a 	add	r3,r19,r16
 800a5fc:	3180004c 	andi	r6,r6,1
 800a600:	3420b03a 	or	r16,r6,r16
 800a604:	9c000115 	stw	r16,4(r19)
 800a608:	18800117 	ldw	r2,4(r3)
 800a60c:	10800054 	ori	r2,r2,1
 800a610:	18800115 	stw	r2,4(r3)
 800a614:	a009883a 	mov	r4,r20
 800a618:	801056c0 	call	801056c <__malloc_unlock>
 800a61c:	9005883a 	mov	r2,r18
 800a620:	dfc00917 	ldw	ra,36(sp)
 800a624:	df000817 	ldw	fp,32(sp)
 800a628:	ddc00717 	ldw	r23,28(sp)
 800a62c:	dd800617 	ldw	r22,24(sp)
 800a630:	dd400517 	ldw	r21,20(sp)
 800a634:	dd000417 	ldw	r20,16(sp)
 800a638:	dcc00317 	ldw	r19,12(sp)
 800a63c:	dc800217 	ldw	r18,8(sp)
 800a640:	dc400117 	ldw	r17,4(sp)
 800a644:	dc000017 	ldw	r16,0(sp)
 800a648:	dec00a04 	addi	sp,sp,40
 800a64c:	f800283a 	ret
 800a650:	017fff04 	movi	r5,-4
 800a654:	414a703a 	and	r5,r8,r5
 800a658:	814d883a 	add	r6,r16,r5
 800a65c:	30c01f16 	blt	r6,r3,800a6dc <_realloc_r+0x22c>
 800a660:	20800317 	ldw	r2,12(r4)
 800a664:	20c00217 	ldw	r3,8(r4)
 800a668:	a825883a 	mov	r18,r21
 800a66c:	3021883a 	mov	r16,r6
 800a670:	18800315 	stw	r2,12(r3)
 800a674:	10c00215 	stw	r3,8(r2)
 800a678:	003fdb06 	br	800a5e8 <__alt_data_end+0xf800a5e8>
 800a67c:	00800304 	movi	r2,12
 800a680:	a0800015 	stw	r2,0(r20)
 800a684:	0005883a 	mov	r2,zero
 800a688:	003fe506 	br	800a620 <__alt_data_end+0xf800a620>
 800a68c:	98c00117 	ldw	r3,4(r19)
 800a690:	9c4b883a 	add	r5,r19,r17
 800a694:	11000054 	ori	r4,r2,1
 800a698:	18c0004c 	andi	r3,r3,1
 800a69c:	1c62b03a 	or	r17,r3,r17
 800a6a0:	9c400115 	stw	r17,4(r19)
 800a6a4:	29000115 	stw	r4,4(r5)
 800a6a8:	2885883a 	add	r2,r5,r2
 800a6ac:	10c00117 	ldw	r3,4(r2)
 800a6b0:	29400204 	addi	r5,r5,8
 800a6b4:	a009883a 	mov	r4,r20
 800a6b8:	18c00054 	ori	r3,r3,1
 800a6bc:	10c00115 	stw	r3,4(r2)
 800a6c0:	80083d80 	call	80083d8 <_free_r>
 800a6c4:	003fd306 	br	800a614 <__alt_data_end+0xf800a614>
 800a6c8:	017fff04 	movi	r5,-4
 800a6cc:	414a703a 	and	r5,r8,r5
 800a6d0:	89800404 	addi	r6,r17,16
 800a6d4:	8151883a 	add	r8,r16,r5
 800a6d8:	4180590e 	bge	r8,r6,800a840 <_realloc_r+0x390>
 800a6dc:	1080004c 	andi	r2,r2,1
 800a6e0:	103f9e1e 	bne	r2,zero,800a55c <__alt_data_end+0xf800a55c>
 800a6e4:	adbffe17 	ldw	r22,-8(r21)
 800a6e8:	00bfff04 	movi	r2,-4
 800a6ec:	9dadc83a 	sub	r22,r19,r22
 800a6f0:	b1800117 	ldw	r6,4(r22)
 800a6f4:	3084703a 	and	r2,r6,r2
 800a6f8:	20002026 	beq	r4,zero,800a77c <_realloc_r+0x2cc>
 800a6fc:	80af883a 	add	r23,r16,r2
 800a700:	b96f883a 	add	r23,r23,r5
 800a704:	21c05f26 	beq	r4,r7,800a884 <_realloc_r+0x3d4>
 800a708:	b8c01c16 	blt	r23,r3,800a77c <_realloc_r+0x2cc>
 800a70c:	20800317 	ldw	r2,12(r4)
 800a710:	20c00217 	ldw	r3,8(r4)
 800a714:	81bfff04 	addi	r6,r16,-4
 800a718:	01000904 	movi	r4,36
 800a71c:	18800315 	stw	r2,12(r3)
 800a720:	10c00215 	stw	r3,8(r2)
 800a724:	b0c00217 	ldw	r3,8(r22)
 800a728:	b0800317 	ldw	r2,12(r22)
 800a72c:	b4800204 	addi	r18,r22,8
 800a730:	18800315 	stw	r2,12(r3)
 800a734:	10c00215 	stw	r3,8(r2)
 800a738:	21801b36 	bltu	r4,r6,800a7a8 <_realloc_r+0x2f8>
 800a73c:	008004c4 	movi	r2,19
 800a740:	1180352e 	bgeu	r2,r6,800a818 <_realloc_r+0x368>
 800a744:	a8800017 	ldw	r2,0(r21)
 800a748:	b0800215 	stw	r2,8(r22)
 800a74c:	a8800117 	ldw	r2,4(r21)
 800a750:	b0800315 	stw	r2,12(r22)
 800a754:	008006c4 	movi	r2,27
 800a758:	11807f36 	bltu	r2,r6,800a958 <_realloc_r+0x4a8>
 800a75c:	b0800404 	addi	r2,r22,16
 800a760:	ad400204 	addi	r21,r21,8
 800a764:	00002d06 	br	800a81c <_realloc_r+0x36c>
 800a768:	adbffe17 	ldw	r22,-8(r21)
 800a76c:	00bfff04 	movi	r2,-4
 800a770:	9dadc83a 	sub	r22,r19,r22
 800a774:	b1000117 	ldw	r4,4(r22)
 800a778:	2084703a 	and	r2,r4,r2
 800a77c:	b03f7726 	beq	r22,zero,800a55c <__alt_data_end+0xf800a55c>
 800a780:	80af883a 	add	r23,r16,r2
 800a784:	b8ff7516 	blt	r23,r3,800a55c <__alt_data_end+0xf800a55c>
 800a788:	b0800317 	ldw	r2,12(r22)
 800a78c:	b0c00217 	ldw	r3,8(r22)
 800a790:	81bfff04 	addi	r6,r16,-4
 800a794:	01000904 	movi	r4,36
 800a798:	18800315 	stw	r2,12(r3)
 800a79c:	10c00215 	stw	r3,8(r2)
 800a7a0:	b4800204 	addi	r18,r22,8
 800a7a4:	21bfe52e 	bgeu	r4,r6,800a73c <__alt_data_end+0xf800a73c>
 800a7a8:	a80b883a 	mov	r5,r21
 800a7ac:	9009883a 	mov	r4,r18
 800a7b0:	80091f00 	call	80091f0 <memmove>
 800a7b4:	b821883a 	mov	r16,r23
 800a7b8:	b027883a 	mov	r19,r22
 800a7bc:	003f8a06 	br	800a5e8 <__alt_data_end+0xf800a5e8>
 800a7c0:	300b883a 	mov	r5,r6
 800a7c4:	dfc00917 	ldw	ra,36(sp)
 800a7c8:	df000817 	ldw	fp,32(sp)
 800a7cc:	ddc00717 	ldw	r23,28(sp)
 800a7d0:	dd800617 	ldw	r22,24(sp)
 800a7d4:	dd400517 	ldw	r21,20(sp)
 800a7d8:	dd000417 	ldw	r20,16(sp)
 800a7dc:	dcc00317 	ldw	r19,12(sp)
 800a7e0:	dc800217 	ldw	r18,8(sp)
 800a7e4:	dc400117 	ldw	r17,4(sp)
 800a7e8:	dc000017 	ldw	r16,0(sp)
 800a7ec:	dec00a04 	addi	sp,sp,40
 800a7f0:	80030601 	jmpi	8003060 <_malloc_r>
 800a7f4:	a8c00017 	ldw	r3,0(r21)
 800a7f8:	90c00015 	stw	r3,0(r18)
 800a7fc:	a8c00117 	ldw	r3,4(r21)
 800a800:	90c00115 	stw	r3,4(r18)
 800a804:	00c006c4 	movi	r3,27
 800a808:	19804536 	bltu	r3,r6,800a920 <_realloc_r+0x470>
 800a80c:	90800204 	addi	r2,r18,8
 800a810:	a8c00204 	addi	r3,r21,8
 800a814:	003f6306 	br	800a5a4 <__alt_data_end+0xf800a5a4>
 800a818:	9005883a 	mov	r2,r18
 800a81c:	a8c00017 	ldw	r3,0(r21)
 800a820:	b821883a 	mov	r16,r23
 800a824:	b027883a 	mov	r19,r22
 800a828:	10c00015 	stw	r3,0(r2)
 800a82c:	a8c00117 	ldw	r3,4(r21)
 800a830:	10c00115 	stw	r3,4(r2)
 800a834:	a8c00217 	ldw	r3,8(r21)
 800a838:	10c00215 	stw	r3,8(r2)
 800a83c:	003f6a06 	br	800a5e8 <__alt_data_end+0xf800a5e8>
 800a840:	9c67883a 	add	r19,r19,r17
 800a844:	4445c83a 	sub	r2,r8,r17
 800a848:	e4c00215 	stw	r19,8(fp)
 800a84c:	10800054 	ori	r2,r2,1
 800a850:	98800115 	stw	r2,4(r19)
 800a854:	a8bfff17 	ldw	r2,-4(r21)
 800a858:	a009883a 	mov	r4,r20
 800a85c:	1080004c 	andi	r2,r2,1
 800a860:	1462b03a 	or	r17,r2,r17
 800a864:	ac7fff15 	stw	r17,-4(r21)
 800a868:	801056c0 	call	801056c <__malloc_unlock>
 800a86c:	a805883a 	mov	r2,r21
 800a870:	003f6b06 	br	800a620 <__alt_data_end+0xf800a620>
 800a874:	a80b883a 	mov	r5,r21
 800a878:	9009883a 	mov	r4,r18
 800a87c:	80091f00 	call	80091f0 <memmove>
 800a880:	003f4e06 	br	800a5bc <__alt_data_end+0xf800a5bc>
 800a884:	89000404 	addi	r4,r17,16
 800a888:	b93fbc16 	blt	r23,r4,800a77c <__alt_data_end+0xf800a77c>
 800a88c:	b0800317 	ldw	r2,12(r22)
 800a890:	b0c00217 	ldw	r3,8(r22)
 800a894:	81bfff04 	addi	r6,r16,-4
 800a898:	01000904 	movi	r4,36
 800a89c:	18800315 	stw	r2,12(r3)
 800a8a0:	10c00215 	stw	r3,8(r2)
 800a8a4:	b4800204 	addi	r18,r22,8
 800a8a8:	21804336 	bltu	r4,r6,800a9b8 <_realloc_r+0x508>
 800a8ac:	008004c4 	movi	r2,19
 800a8b0:	11803f2e 	bgeu	r2,r6,800a9b0 <_realloc_r+0x500>
 800a8b4:	a8800017 	ldw	r2,0(r21)
 800a8b8:	b0800215 	stw	r2,8(r22)
 800a8bc:	a8800117 	ldw	r2,4(r21)
 800a8c0:	b0800315 	stw	r2,12(r22)
 800a8c4:	008006c4 	movi	r2,27
 800a8c8:	11803f36 	bltu	r2,r6,800a9c8 <_realloc_r+0x518>
 800a8cc:	b0800404 	addi	r2,r22,16
 800a8d0:	ad400204 	addi	r21,r21,8
 800a8d4:	a8c00017 	ldw	r3,0(r21)
 800a8d8:	10c00015 	stw	r3,0(r2)
 800a8dc:	a8c00117 	ldw	r3,4(r21)
 800a8e0:	10c00115 	stw	r3,4(r2)
 800a8e4:	a8c00217 	ldw	r3,8(r21)
 800a8e8:	10c00215 	stw	r3,8(r2)
 800a8ec:	b447883a 	add	r3,r22,r17
 800a8f0:	bc45c83a 	sub	r2,r23,r17
 800a8f4:	e0c00215 	stw	r3,8(fp)
 800a8f8:	10800054 	ori	r2,r2,1
 800a8fc:	18800115 	stw	r2,4(r3)
 800a900:	b0800117 	ldw	r2,4(r22)
 800a904:	a009883a 	mov	r4,r20
 800a908:	1080004c 	andi	r2,r2,1
 800a90c:	1462b03a 	or	r17,r2,r17
 800a910:	b4400115 	stw	r17,4(r22)
 800a914:	801056c0 	call	801056c <__malloc_unlock>
 800a918:	9005883a 	mov	r2,r18
 800a91c:	003f4006 	br	800a620 <__alt_data_end+0xf800a620>
 800a920:	a8c00217 	ldw	r3,8(r21)
 800a924:	90c00215 	stw	r3,8(r18)
 800a928:	a8c00317 	ldw	r3,12(r21)
 800a92c:	90c00315 	stw	r3,12(r18)
 800a930:	30801126 	beq	r6,r2,800a978 <_realloc_r+0x4c8>
 800a934:	90800404 	addi	r2,r18,16
 800a938:	a8c00404 	addi	r3,r21,16
 800a93c:	003f1906 	br	800a5a4 <__alt_data_end+0xf800a5a4>
 800a940:	90ffff17 	ldw	r3,-4(r18)
 800a944:	00bfff04 	movi	r2,-4
 800a948:	a825883a 	mov	r18,r21
 800a94c:	1884703a 	and	r2,r3,r2
 800a950:	80a1883a 	add	r16,r16,r2
 800a954:	003f2406 	br	800a5e8 <__alt_data_end+0xf800a5e8>
 800a958:	a8800217 	ldw	r2,8(r21)
 800a95c:	b0800415 	stw	r2,16(r22)
 800a960:	a8800317 	ldw	r2,12(r21)
 800a964:	b0800515 	stw	r2,20(r22)
 800a968:	31000a26 	beq	r6,r4,800a994 <_realloc_r+0x4e4>
 800a96c:	b0800604 	addi	r2,r22,24
 800a970:	ad400404 	addi	r21,r21,16
 800a974:	003fa906 	br	800a81c <__alt_data_end+0xf800a81c>
 800a978:	a9000417 	ldw	r4,16(r21)
 800a97c:	90800604 	addi	r2,r18,24
 800a980:	a8c00604 	addi	r3,r21,24
 800a984:	91000415 	stw	r4,16(r18)
 800a988:	a9000517 	ldw	r4,20(r21)
 800a98c:	91000515 	stw	r4,20(r18)
 800a990:	003f0406 	br	800a5a4 <__alt_data_end+0xf800a5a4>
 800a994:	a8c00417 	ldw	r3,16(r21)
 800a998:	ad400604 	addi	r21,r21,24
 800a99c:	b0800804 	addi	r2,r22,32
 800a9a0:	b0c00615 	stw	r3,24(r22)
 800a9a4:	a8ffff17 	ldw	r3,-4(r21)
 800a9a8:	b0c00715 	stw	r3,28(r22)
 800a9ac:	003f9b06 	br	800a81c <__alt_data_end+0xf800a81c>
 800a9b0:	9005883a 	mov	r2,r18
 800a9b4:	003fc706 	br	800a8d4 <__alt_data_end+0xf800a8d4>
 800a9b8:	a80b883a 	mov	r5,r21
 800a9bc:	9009883a 	mov	r4,r18
 800a9c0:	80091f00 	call	80091f0 <memmove>
 800a9c4:	003fc906 	br	800a8ec <__alt_data_end+0xf800a8ec>
 800a9c8:	a8800217 	ldw	r2,8(r21)
 800a9cc:	b0800415 	stw	r2,16(r22)
 800a9d0:	a8800317 	ldw	r2,12(r21)
 800a9d4:	b0800515 	stw	r2,20(r22)
 800a9d8:	31000726 	beq	r6,r4,800a9f8 <_realloc_r+0x548>
 800a9dc:	b0800604 	addi	r2,r22,24
 800a9e0:	ad400404 	addi	r21,r21,16
 800a9e4:	003fbb06 	br	800a8d4 <__alt_data_end+0xf800a8d4>
 800a9e8:	a009883a 	mov	r4,r20
 800a9ec:	801056c0 	call	801056c <__malloc_unlock>
 800a9f0:	0005883a 	mov	r2,zero
 800a9f4:	003f0a06 	br	800a620 <__alt_data_end+0xf800a620>
 800a9f8:	a8c00417 	ldw	r3,16(r21)
 800a9fc:	ad400604 	addi	r21,r21,24
 800aa00:	b0800804 	addi	r2,r22,32
 800aa04:	b0c00615 	stw	r3,24(r22)
 800aa08:	a8ffff17 	ldw	r3,-4(r21)
 800aa0c:	b0c00715 	stw	r3,28(r22)
 800aa10:	003fb006 	br	800a8d4 <__alt_data_end+0xf800a8d4>

0800aa14 <__fpclassifyd>:
 800aa14:	00a00034 	movhi	r2,32768
 800aa18:	10bfffc4 	addi	r2,r2,-1
 800aa1c:	2884703a 	and	r2,r5,r2
 800aa20:	10000726 	beq	r2,zero,800aa40 <__fpclassifyd+0x2c>
 800aa24:	00fffc34 	movhi	r3,65520
 800aa28:	019ff834 	movhi	r6,32736
 800aa2c:	28c7883a 	add	r3,r5,r3
 800aa30:	31bfffc4 	addi	r6,r6,-1
 800aa34:	30c00536 	bltu	r6,r3,800aa4c <__fpclassifyd+0x38>
 800aa38:	00800104 	movi	r2,4
 800aa3c:	f800283a 	ret
 800aa40:	2000021e 	bne	r4,zero,800aa4c <__fpclassifyd+0x38>
 800aa44:	00800084 	movi	r2,2
 800aa48:	f800283a 	ret
 800aa4c:	00dffc34 	movhi	r3,32752
 800aa50:	019ff834 	movhi	r6,32736
 800aa54:	28cb883a 	add	r5,r5,r3
 800aa58:	31bfffc4 	addi	r6,r6,-1
 800aa5c:	317ff62e 	bgeu	r6,r5,800aa38 <__alt_data_end+0xf800aa38>
 800aa60:	01400434 	movhi	r5,16
 800aa64:	297fffc4 	addi	r5,r5,-1
 800aa68:	28800236 	bltu	r5,r2,800aa74 <__fpclassifyd+0x60>
 800aa6c:	008000c4 	movi	r2,3
 800aa70:	f800283a 	ret
 800aa74:	10c00226 	beq	r2,r3,800aa80 <__fpclassifyd+0x6c>
 800aa78:	0005883a 	mov	r2,zero
 800aa7c:	f800283a 	ret
 800aa80:	2005003a 	cmpeq	r2,r4,zero
 800aa84:	f800283a 	ret

0800aa88 <__sread>:
 800aa88:	defffe04 	addi	sp,sp,-8
 800aa8c:	dc000015 	stw	r16,0(sp)
 800aa90:	2821883a 	mov	r16,r5
 800aa94:	2940038f 	ldh	r5,14(r5)
 800aa98:	dfc00115 	stw	ra,4(sp)
 800aa9c:	800c8f80 	call	800c8f8 <_read_r>
 800aaa0:	10000716 	blt	r2,zero,800aac0 <__sread+0x38>
 800aaa4:	80c01417 	ldw	r3,80(r16)
 800aaa8:	1887883a 	add	r3,r3,r2
 800aaac:	80c01415 	stw	r3,80(r16)
 800aab0:	dfc00117 	ldw	ra,4(sp)
 800aab4:	dc000017 	ldw	r16,0(sp)
 800aab8:	dec00204 	addi	sp,sp,8
 800aabc:	f800283a 	ret
 800aac0:	80c0030b 	ldhu	r3,12(r16)
 800aac4:	18fbffcc 	andi	r3,r3,61439
 800aac8:	80c0030d 	sth	r3,12(r16)
 800aacc:	dfc00117 	ldw	ra,4(sp)
 800aad0:	dc000017 	ldw	r16,0(sp)
 800aad4:	dec00204 	addi	sp,sp,8
 800aad8:	f800283a 	ret

0800aadc <__seofread>:
 800aadc:	0005883a 	mov	r2,zero
 800aae0:	f800283a 	ret

0800aae4 <__swrite>:
 800aae4:	2880030b 	ldhu	r2,12(r5)
 800aae8:	defffb04 	addi	sp,sp,-20
 800aaec:	dcc00315 	stw	r19,12(sp)
 800aaf0:	dc800215 	stw	r18,8(sp)
 800aaf4:	dc400115 	stw	r17,4(sp)
 800aaf8:	dc000015 	stw	r16,0(sp)
 800aafc:	dfc00415 	stw	ra,16(sp)
 800ab00:	10c0400c 	andi	r3,r2,256
 800ab04:	2821883a 	mov	r16,r5
 800ab08:	2023883a 	mov	r17,r4
 800ab0c:	3025883a 	mov	r18,r6
 800ab10:	3827883a 	mov	r19,r7
 800ab14:	18000526 	beq	r3,zero,800ab2c <__swrite+0x48>
 800ab18:	2940038f 	ldh	r5,14(r5)
 800ab1c:	01c00084 	movi	r7,2
 800ab20:	000d883a 	mov	r6,zero
 800ab24:	800c8980 	call	800c898 <_lseek_r>
 800ab28:	8080030b 	ldhu	r2,12(r16)
 800ab2c:	8140038f 	ldh	r5,14(r16)
 800ab30:	10bbffcc 	andi	r2,r2,61439
 800ab34:	980f883a 	mov	r7,r19
 800ab38:	900d883a 	mov	r6,r18
 800ab3c:	8809883a 	mov	r4,r17
 800ab40:	8080030d 	sth	r2,12(r16)
 800ab44:	dfc00417 	ldw	ra,16(sp)
 800ab48:	dcc00317 	ldw	r19,12(sp)
 800ab4c:	dc800217 	ldw	r18,8(sp)
 800ab50:	dc400117 	ldw	r17,4(sp)
 800ab54:	dc000017 	ldw	r16,0(sp)
 800ab58:	dec00504 	addi	sp,sp,20
 800ab5c:	800c3641 	jmpi	800c364 <_write_r>

0800ab60 <__sseek>:
 800ab60:	defffe04 	addi	sp,sp,-8
 800ab64:	dc000015 	stw	r16,0(sp)
 800ab68:	2821883a 	mov	r16,r5
 800ab6c:	2940038f 	ldh	r5,14(r5)
 800ab70:	dfc00115 	stw	ra,4(sp)
 800ab74:	800c8980 	call	800c898 <_lseek_r>
 800ab78:	00ffffc4 	movi	r3,-1
 800ab7c:	10c00826 	beq	r2,r3,800aba0 <__sseek+0x40>
 800ab80:	80c0030b 	ldhu	r3,12(r16)
 800ab84:	80801415 	stw	r2,80(r16)
 800ab88:	18c40014 	ori	r3,r3,4096
 800ab8c:	80c0030d 	sth	r3,12(r16)
 800ab90:	dfc00117 	ldw	ra,4(sp)
 800ab94:	dc000017 	ldw	r16,0(sp)
 800ab98:	dec00204 	addi	sp,sp,8
 800ab9c:	f800283a 	ret
 800aba0:	80c0030b 	ldhu	r3,12(r16)
 800aba4:	18fbffcc 	andi	r3,r3,61439
 800aba8:	80c0030d 	sth	r3,12(r16)
 800abac:	dfc00117 	ldw	ra,4(sp)
 800abb0:	dc000017 	ldw	r16,0(sp)
 800abb4:	dec00204 	addi	sp,sp,8
 800abb8:	f800283a 	ret

0800abbc <__sclose>:
 800abbc:	2940038f 	ldh	r5,14(r5)
 800abc0:	800c3c41 	jmpi	800c3c4 <_close_r>

0800abc4 <__sprint_r.part.0>:
 800abc4:	28801917 	ldw	r2,100(r5)
 800abc8:	defff604 	addi	sp,sp,-40
 800abcc:	dd400515 	stw	r21,20(sp)
 800abd0:	dfc00915 	stw	ra,36(sp)
 800abd4:	df000815 	stw	fp,32(sp)
 800abd8:	ddc00715 	stw	r23,28(sp)
 800abdc:	dd800615 	stw	r22,24(sp)
 800abe0:	dd000415 	stw	r20,16(sp)
 800abe4:	dcc00315 	stw	r19,12(sp)
 800abe8:	dc800215 	stw	r18,8(sp)
 800abec:	dc400115 	stw	r17,4(sp)
 800abf0:	dc000015 	stw	r16,0(sp)
 800abf4:	1088000c 	andi	r2,r2,8192
 800abf8:	302b883a 	mov	r21,r6
 800abfc:	10002e26 	beq	r2,zero,800acb8 <__sprint_r.part.0+0xf4>
 800ac00:	30800217 	ldw	r2,8(r6)
 800ac04:	35800017 	ldw	r22,0(r6)
 800ac08:	10002926 	beq	r2,zero,800acb0 <__sprint_r.part.0+0xec>
 800ac0c:	2827883a 	mov	r19,r5
 800ac10:	2029883a 	mov	r20,r4
 800ac14:	b5c00104 	addi	r23,r22,4
 800ac18:	04bfffc4 	movi	r18,-1
 800ac1c:	bc400017 	ldw	r17,0(r23)
 800ac20:	b4000017 	ldw	r16,0(r22)
 800ac24:	0039883a 	mov	fp,zero
 800ac28:	8822d0ba 	srli	r17,r17,2
 800ac2c:	8800031e 	bne	r17,zero,800ac3c <__sprint_r.part.0+0x78>
 800ac30:	00001806 	br	800ac94 <__sprint_r.part.0+0xd0>
 800ac34:	84000104 	addi	r16,r16,4
 800ac38:	8f001526 	beq	r17,fp,800ac90 <__sprint_r.part.0+0xcc>
 800ac3c:	81400017 	ldw	r5,0(r16)
 800ac40:	980d883a 	mov	r6,r19
 800ac44:	a009883a 	mov	r4,r20
 800ac48:	800c7440 	call	800c744 <_fputwc_r>
 800ac4c:	e7000044 	addi	fp,fp,1
 800ac50:	14bff81e 	bne	r2,r18,800ac34 <__alt_data_end+0xf800ac34>
 800ac54:	9005883a 	mov	r2,r18
 800ac58:	a8000215 	stw	zero,8(r21)
 800ac5c:	a8000115 	stw	zero,4(r21)
 800ac60:	dfc00917 	ldw	ra,36(sp)
 800ac64:	df000817 	ldw	fp,32(sp)
 800ac68:	ddc00717 	ldw	r23,28(sp)
 800ac6c:	dd800617 	ldw	r22,24(sp)
 800ac70:	dd400517 	ldw	r21,20(sp)
 800ac74:	dd000417 	ldw	r20,16(sp)
 800ac78:	dcc00317 	ldw	r19,12(sp)
 800ac7c:	dc800217 	ldw	r18,8(sp)
 800ac80:	dc400117 	ldw	r17,4(sp)
 800ac84:	dc000017 	ldw	r16,0(sp)
 800ac88:	dec00a04 	addi	sp,sp,40
 800ac8c:	f800283a 	ret
 800ac90:	a8800217 	ldw	r2,8(r21)
 800ac94:	8c63883a 	add	r17,r17,r17
 800ac98:	8c63883a 	add	r17,r17,r17
 800ac9c:	1445c83a 	sub	r2,r2,r17
 800aca0:	a8800215 	stw	r2,8(r21)
 800aca4:	b5800204 	addi	r22,r22,8
 800aca8:	bdc00204 	addi	r23,r23,8
 800acac:	103fdb1e 	bne	r2,zero,800ac1c <__alt_data_end+0xf800ac1c>
 800acb0:	0005883a 	mov	r2,zero
 800acb4:	003fe806 	br	800ac58 <__alt_data_end+0xf800ac58>
 800acb8:	80086e80 	call	80086e8 <__sfvwrite_r>
 800acbc:	003fe606 	br	800ac58 <__alt_data_end+0xf800ac58>

0800acc0 <__sprint_r>:
 800acc0:	30c00217 	ldw	r3,8(r6)
 800acc4:	18000126 	beq	r3,zero,800accc <__sprint_r+0xc>
 800acc8:	800abc41 	jmpi	800abc4 <__sprint_r.part.0>
 800accc:	30000115 	stw	zero,4(r6)
 800acd0:	0005883a 	mov	r2,zero
 800acd4:	f800283a 	ret

0800acd8 <___vfiprintf_internal_r>:
 800acd8:	deffc904 	addi	sp,sp,-220
 800acdc:	df003515 	stw	fp,212(sp)
 800ace0:	dd003115 	stw	r20,196(sp)
 800ace4:	dfc03615 	stw	ra,216(sp)
 800ace8:	ddc03415 	stw	r23,208(sp)
 800acec:	dd803315 	stw	r22,204(sp)
 800acf0:	dd403215 	stw	r21,200(sp)
 800acf4:	dcc03015 	stw	r19,192(sp)
 800acf8:	dc802f15 	stw	r18,188(sp)
 800acfc:	dc402e15 	stw	r17,184(sp)
 800ad00:	dc002d15 	stw	r16,180(sp)
 800ad04:	d9002015 	stw	r4,128(sp)
 800ad08:	d9c02215 	stw	r7,136(sp)
 800ad0c:	2829883a 	mov	r20,r5
 800ad10:	3039883a 	mov	fp,r6
 800ad14:	20000226 	beq	r4,zero,800ad20 <___vfiprintf_internal_r+0x48>
 800ad18:	20800e17 	ldw	r2,56(r4)
 800ad1c:	1000cf26 	beq	r2,zero,800b05c <___vfiprintf_internal_r+0x384>
 800ad20:	a080030b 	ldhu	r2,12(r20)
 800ad24:	10c8000c 	andi	r3,r2,8192
 800ad28:	1800061e 	bne	r3,zero,800ad44 <___vfiprintf_internal_r+0x6c>
 800ad2c:	a1001917 	ldw	r4,100(r20)
 800ad30:	00f7ffc4 	movi	r3,-8193
 800ad34:	10880014 	ori	r2,r2,8192
 800ad38:	20c6703a 	and	r3,r4,r3
 800ad3c:	a080030d 	sth	r2,12(r20)
 800ad40:	a0c01915 	stw	r3,100(r20)
 800ad44:	10c0020c 	andi	r3,r2,8
 800ad48:	1800a926 	beq	r3,zero,800aff0 <___vfiprintf_internal_r+0x318>
 800ad4c:	a0c00417 	ldw	r3,16(r20)
 800ad50:	1800a726 	beq	r3,zero,800aff0 <___vfiprintf_internal_r+0x318>
 800ad54:	1080068c 	andi	r2,r2,26
 800ad58:	00c00284 	movi	r3,10
 800ad5c:	10c0ac26 	beq	r2,r3,800b010 <___vfiprintf_internal_r+0x338>
 800ad60:	da801a04 	addi	r10,sp,104
 800ad64:	da801e15 	stw	r10,120(sp)
 800ad68:	d8801e17 	ldw	r2,120(sp)
 800ad6c:	da8019c4 	addi	r10,sp,103
 800ad70:	05820074 	movhi	r22,2049
 800ad74:	05c20074 	movhi	r23,2049
 800ad78:	da801f15 	stw	r10,124(sp)
 800ad7c:	1295c83a 	sub	r10,r2,r10
 800ad80:	b58cf504 	addi	r22,r22,13268
 800ad84:	bdccf104 	addi	r23,r23,13252
 800ad88:	dec01a15 	stw	sp,104(sp)
 800ad8c:	d8001c15 	stw	zero,112(sp)
 800ad90:	d8001b15 	stw	zero,108(sp)
 800ad94:	d8002615 	stw	zero,152(sp)
 800ad98:	d8002315 	stw	zero,140(sp)
 800ad9c:	da802715 	stw	r10,156(sp)
 800ada0:	d811883a 	mov	r8,sp
 800ada4:	dd002115 	stw	r20,132(sp)
 800ada8:	e021883a 	mov	r16,fp
 800adac:	80800007 	ldb	r2,0(r16)
 800adb0:	1003ea26 	beq	r2,zero,800bd5c <___vfiprintf_internal_r+0x1084>
 800adb4:	00c00944 	movi	r3,37
 800adb8:	8025883a 	mov	r18,r16
 800adbc:	10c0021e 	bne	r2,r3,800adc8 <___vfiprintf_internal_r+0xf0>
 800adc0:	00001606 	br	800ae1c <___vfiprintf_internal_r+0x144>
 800adc4:	10c00326 	beq	r2,r3,800add4 <___vfiprintf_internal_r+0xfc>
 800adc8:	94800044 	addi	r18,r18,1
 800adcc:	90800007 	ldb	r2,0(r18)
 800add0:	103ffc1e 	bne	r2,zero,800adc4 <__alt_data_end+0xf800adc4>
 800add4:	9423c83a 	sub	r17,r18,r16
 800add8:	88001026 	beq	r17,zero,800ae1c <___vfiprintf_internal_r+0x144>
 800addc:	d8c01c17 	ldw	r3,112(sp)
 800ade0:	d8801b17 	ldw	r2,108(sp)
 800ade4:	44000015 	stw	r16,0(r8)
 800ade8:	88c7883a 	add	r3,r17,r3
 800adec:	10800044 	addi	r2,r2,1
 800adf0:	44400115 	stw	r17,4(r8)
 800adf4:	d8c01c15 	stw	r3,112(sp)
 800adf8:	d8801b15 	stw	r2,108(sp)
 800adfc:	010001c4 	movi	r4,7
 800ae00:	2080760e 	bge	r4,r2,800afdc <___vfiprintf_internal_r+0x304>
 800ae04:	1803821e 	bne	r3,zero,800bc10 <___vfiprintf_internal_r+0xf38>
 800ae08:	da802317 	ldw	r10,140(sp)
 800ae0c:	d8001b15 	stw	zero,108(sp)
 800ae10:	d811883a 	mov	r8,sp
 800ae14:	5455883a 	add	r10,r10,r17
 800ae18:	da802315 	stw	r10,140(sp)
 800ae1c:	90800007 	ldb	r2,0(r18)
 800ae20:	10044626 	beq	r2,zero,800bf3c <___vfiprintf_internal_r+0x1264>
 800ae24:	90c00047 	ldb	r3,1(r18)
 800ae28:	94000044 	addi	r16,r18,1
 800ae2c:	d8001d85 	stb	zero,118(sp)
 800ae30:	0009883a 	mov	r4,zero
 800ae34:	000f883a 	mov	r7,zero
 800ae38:	027fffc4 	movi	r9,-1
 800ae3c:	0023883a 	mov	r17,zero
 800ae40:	0029883a 	mov	r20,zero
 800ae44:	01401604 	movi	r5,88
 800ae48:	01800244 	movi	r6,9
 800ae4c:	03400a84 	movi	r13,42
 800ae50:	03001b04 	movi	r12,108
 800ae54:	84000044 	addi	r16,r16,1
 800ae58:	18bff804 	addi	r2,r3,-32
 800ae5c:	28827336 	bltu	r5,r2,800b82c <___vfiprintf_internal_r+0xb54>
 800ae60:	100490ba 	slli	r2,r2,2
 800ae64:	02820074 	movhi	r10,2049
 800ae68:	52ab9e04 	addi	r10,r10,-20872
 800ae6c:	1285883a 	add	r2,r2,r10
 800ae70:	10800017 	ldw	r2,0(r2)
 800ae74:	1000683a 	jmp	r2
 800ae78:	0800b560 	cmpeqi	zero,at,725
 800ae7c:	0800b82c 	andhi	zero,at,736
 800ae80:	0800b82c 	andhi	zero,at,736
 800ae84:	0800b580 	call	800b58 <__alt_mem_sdram-0x77ff4a8>
 800ae88:	0800b82c 	andhi	zero,at,736
 800ae8c:	0800b82c 	andhi	zero,at,736
 800ae90:	0800b82c 	andhi	zero,at,736
 800ae94:	0800b82c 	andhi	zero,at,736
 800ae98:	0800b82c 	andhi	zero,at,736
 800ae9c:	0800b82c 	andhi	zero,at,736
 800aea0:	0800b768 	cmpgeui	zero,at,733
 800aea4:	0800b784 	addi	zero,at,734
 800aea8:	0800b82c 	andhi	zero,at,736
 800aeac:	0800b06c 	andhi	zero,at,705
 800aeb0:	0800b794 	ori	zero,at,734
 800aeb4:	0800b82c 	andhi	zero,at,736
 800aeb8:	0800b58c 	andi	zero,at,726
 800aebc:	0800b598 	cmpnei	zero,at,726
 800aec0:	0800b598 	cmpnei	zero,at,726
 800aec4:	0800b598 	cmpnei	zero,at,726
 800aec8:	0800b598 	cmpnei	zero,at,726
 800aecc:	0800b598 	cmpnei	zero,at,726
 800aed0:	0800b598 	cmpnei	zero,at,726
 800aed4:	0800b598 	cmpnei	zero,at,726
 800aed8:	0800b598 	cmpnei	zero,at,726
 800aedc:	0800b598 	cmpnei	zero,at,726
 800aee0:	0800b82c 	andhi	zero,at,736
 800aee4:	0800b82c 	andhi	zero,at,736
 800aee8:	0800b82c 	andhi	zero,at,736
 800aeec:	0800b82c 	andhi	zero,at,736
 800aef0:	0800b82c 	andhi	zero,at,736
 800aef4:	0800b82c 	andhi	zero,at,736
 800aef8:	0800b82c 	andhi	zero,at,736
 800aefc:	0800b82c 	andhi	zero,at,736
 800af00:	0800b82c 	andhi	zero,at,736
 800af04:	0800b82c 	andhi	zero,at,736
 800af08:	0800b5c4 	addi	zero,at,727
 800af0c:	0800b82c 	andhi	zero,at,736
 800af10:	0800b82c 	andhi	zero,at,736
 800af14:	0800b82c 	andhi	zero,at,736
 800af18:	0800b82c 	andhi	zero,at,736
 800af1c:	0800b82c 	andhi	zero,at,736
 800af20:	0800b82c 	andhi	zero,at,736
 800af24:	0800b82c 	andhi	zero,at,736
 800af28:	0800b82c 	andhi	zero,at,736
 800af2c:	0800b82c 	andhi	zero,at,736
 800af30:	0800b82c 	andhi	zero,at,736
 800af34:	0800b5fc 	xorhi	zero,at,727
 800af38:	0800b82c 	andhi	zero,at,736
 800af3c:	0800b82c 	andhi	zero,at,736
 800af40:	0800b82c 	andhi	zero,at,736
 800af44:	0800b82c 	andhi	zero,at,736
 800af48:	0800b82c 	andhi	zero,at,736
 800af4c:	0800b654 	ori	zero,at,729
 800af50:	0800b82c 	andhi	zero,at,736
 800af54:	0800b82c 	andhi	zero,at,736
 800af58:	0800b6c4 	addi	zero,at,731
 800af5c:	0800b82c 	andhi	zero,at,736
 800af60:	0800b82c 	andhi	zero,at,736
 800af64:	0800b82c 	andhi	zero,at,736
 800af68:	0800b82c 	andhi	zero,at,736
 800af6c:	0800b82c 	andhi	zero,at,736
 800af70:	0800b82c 	andhi	zero,at,736
 800af74:	0800b82c 	andhi	zero,at,736
 800af78:	0800b82c 	andhi	zero,at,736
 800af7c:	0800b82c 	andhi	zero,at,736
 800af80:	0800b82c 	andhi	zero,at,736
 800af84:	0800b470 	cmpltui	zero,at,721
 800af88:	0800b49c 	xori	zero,at,722
 800af8c:	0800b82c 	andhi	zero,at,736
 800af90:	0800b82c 	andhi	zero,at,736
 800af94:	0800b82c 	andhi	zero,at,736
 800af98:	0800b7d4 	ori	zero,at,735
 800af9c:	0800b49c 	xori	zero,at,722
 800afa0:	0800b82c 	andhi	zero,at,736
 800afa4:	0800b82c 	andhi	zero,at,736
 800afa8:	0800b330 	cmpltui	zero,at,716
 800afac:	0800b82c 	andhi	zero,at,736
 800afb0:	0800b340 	call	800b34 <__alt_mem_sdram-0x77ff4cc>
 800afb4:	0800b37c 	xorhi	zero,at,717
 800afb8:	0800b078 	rdprs	zero,at,705
 800afbc:	0800b324 	muli	zero,at,716
 800afc0:	0800b82c 	andhi	zero,at,736
 800afc4:	0800b700 	call	800b70 <__alt_mem_sdram-0x77ff490>
 800afc8:	0800b82c 	andhi	zero,at,736
 800afcc:	0800b758 	cmpnei	zero,at,733
 800afd0:	0800b82c 	andhi	zero,at,736
 800afd4:	0800b82c 	andhi	zero,at,736
 800afd8:	0800b41c 	xori	zero,at,720
 800afdc:	42000204 	addi	r8,r8,8
 800afe0:	da802317 	ldw	r10,140(sp)
 800afe4:	5455883a 	add	r10,r10,r17
 800afe8:	da802315 	stw	r10,140(sp)
 800afec:	003f8b06 	br	800ae1c <__alt_data_end+0xf800ae1c>
 800aff0:	d9002017 	ldw	r4,128(sp)
 800aff4:	a00b883a 	mov	r5,r20
 800aff8:	80062900 	call	8006290 <__swsetup_r>
 800affc:	1003b11e 	bne	r2,zero,800bec4 <___vfiprintf_internal_r+0x11ec>
 800b000:	a080030b 	ldhu	r2,12(r20)
 800b004:	00c00284 	movi	r3,10
 800b008:	1080068c 	andi	r2,r2,26
 800b00c:	10ff541e 	bne	r2,r3,800ad60 <__alt_data_end+0xf800ad60>
 800b010:	a080038f 	ldh	r2,14(r20)
 800b014:	103f5216 	blt	r2,zero,800ad60 <__alt_data_end+0xf800ad60>
 800b018:	d9c02217 	ldw	r7,136(sp)
 800b01c:	d9002017 	ldw	r4,128(sp)
 800b020:	e00d883a 	mov	r6,fp
 800b024:	a00b883a 	mov	r5,r20
 800b028:	800c1500 	call	800c150 <__sbprintf>
 800b02c:	dfc03617 	ldw	ra,216(sp)
 800b030:	df003517 	ldw	fp,212(sp)
 800b034:	ddc03417 	ldw	r23,208(sp)
 800b038:	dd803317 	ldw	r22,204(sp)
 800b03c:	dd403217 	ldw	r21,200(sp)
 800b040:	dd003117 	ldw	r20,196(sp)
 800b044:	dcc03017 	ldw	r19,192(sp)
 800b048:	dc802f17 	ldw	r18,188(sp)
 800b04c:	dc402e17 	ldw	r17,184(sp)
 800b050:	dc002d17 	ldw	r16,180(sp)
 800b054:	dec03704 	addi	sp,sp,220
 800b058:	f800283a 	ret
 800b05c:	80082640 	call	8008264 <__sinit>
 800b060:	003f2f06 	br	800ad20 <__alt_data_end+0xf800ad20>
 800b064:	0463c83a 	sub	r17,zero,r17
 800b068:	d8802215 	stw	r2,136(sp)
 800b06c:	a5000114 	ori	r20,r20,4
 800b070:	80c00007 	ldb	r3,0(r16)
 800b074:	003f7706 	br	800ae54 <__alt_data_end+0xf800ae54>
 800b078:	00800c04 	movi	r2,48
 800b07c:	da802217 	ldw	r10,136(sp)
 800b080:	d8801d05 	stb	r2,116(sp)
 800b084:	00801e04 	movi	r2,120
 800b088:	d8801d45 	stb	r2,117(sp)
 800b08c:	d8001d85 	stb	zero,118(sp)
 800b090:	50c00104 	addi	r3,r10,4
 800b094:	54800017 	ldw	r18,0(r10)
 800b098:	0027883a 	mov	r19,zero
 800b09c:	a0800094 	ori	r2,r20,2
 800b0a0:	48030b16 	blt	r9,zero,800bcd0 <___vfiprintf_internal_r+0xff8>
 800b0a4:	00bfdfc4 	movi	r2,-129
 800b0a8:	a096703a 	and	r11,r20,r2
 800b0ac:	d8c02215 	stw	r3,136(sp)
 800b0b0:	5d000094 	ori	r20,r11,2
 800b0b4:	90032b1e 	bne	r18,zero,800bd64 <___vfiprintf_internal_r+0x108c>
 800b0b8:	00820074 	movhi	r2,2049
 800b0bc:	108c9004 	addi	r2,r2,12864
 800b0c0:	d8802615 	stw	r2,152(sp)
 800b0c4:	0039883a 	mov	fp,zero
 800b0c8:	48017b1e 	bne	r9,zero,800b6b8 <___vfiprintf_internal_r+0x9e0>
 800b0cc:	0013883a 	mov	r9,zero
 800b0d0:	0027883a 	mov	r19,zero
 800b0d4:	dd401a04 	addi	r21,sp,104
 800b0d8:	4825883a 	mov	r18,r9
 800b0dc:	4cc0010e 	bge	r9,r19,800b0e4 <___vfiprintf_internal_r+0x40c>
 800b0e0:	9825883a 	mov	r18,r19
 800b0e4:	e7003fcc 	andi	fp,fp,255
 800b0e8:	e700201c 	xori	fp,fp,128
 800b0ec:	e73fe004 	addi	fp,fp,-128
 800b0f0:	e0000126 	beq	fp,zero,800b0f8 <___vfiprintf_internal_r+0x420>
 800b0f4:	94800044 	addi	r18,r18,1
 800b0f8:	a380008c 	andi	r14,r20,2
 800b0fc:	70000126 	beq	r14,zero,800b104 <___vfiprintf_internal_r+0x42c>
 800b100:	94800084 	addi	r18,r18,2
 800b104:	a700210c 	andi	fp,r20,132
 800b108:	e001df1e 	bne	fp,zero,800b888 <___vfiprintf_internal_r+0xbb0>
 800b10c:	8c87c83a 	sub	r3,r17,r18
 800b110:	00c1dd0e 	bge	zero,r3,800b888 <___vfiprintf_internal_r+0xbb0>
 800b114:	01c00404 	movi	r7,16
 800b118:	d8801c17 	ldw	r2,112(sp)
 800b11c:	38c3ad0e 	bge	r7,r3,800bfd4 <___vfiprintf_internal_r+0x12fc>
 800b120:	02820074 	movhi	r10,2049
 800b124:	528cf504 	addi	r10,r10,13268
 800b128:	dc002915 	stw	r16,164(sp)
 800b12c:	d9801b17 	ldw	r6,108(sp)
 800b130:	da802415 	stw	r10,144(sp)
 800b134:	03c001c4 	movi	r15,7
 800b138:	da402515 	stw	r9,148(sp)
 800b13c:	db802815 	stw	r14,160(sp)
 800b140:	1821883a 	mov	r16,r3
 800b144:	00000506 	br	800b15c <___vfiprintf_internal_r+0x484>
 800b148:	31400084 	addi	r5,r6,2
 800b14c:	42000204 	addi	r8,r8,8
 800b150:	200d883a 	mov	r6,r4
 800b154:	843ffc04 	addi	r16,r16,-16
 800b158:	3c000d0e 	bge	r7,r16,800b190 <___vfiprintf_internal_r+0x4b8>
 800b15c:	10800404 	addi	r2,r2,16
 800b160:	31000044 	addi	r4,r6,1
 800b164:	45800015 	stw	r22,0(r8)
 800b168:	41c00115 	stw	r7,4(r8)
 800b16c:	d8801c15 	stw	r2,112(sp)
 800b170:	d9001b15 	stw	r4,108(sp)
 800b174:	793ff40e 	bge	r15,r4,800b148 <__alt_data_end+0xf800b148>
 800b178:	1001b51e 	bne	r2,zero,800b850 <___vfiprintf_internal_r+0xb78>
 800b17c:	843ffc04 	addi	r16,r16,-16
 800b180:	000d883a 	mov	r6,zero
 800b184:	01400044 	movi	r5,1
 800b188:	d811883a 	mov	r8,sp
 800b18c:	3c3ff316 	blt	r7,r16,800b15c <__alt_data_end+0xf800b15c>
 800b190:	8007883a 	mov	r3,r16
 800b194:	da402517 	ldw	r9,148(sp)
 800b198:	db802817 	ldw	r14,160(sp)
 800b19c:	dc002917 	ldw	r16,164(sp)
 800b1a0:	da802417 	ldw	r10,144(sp)
 800b1a4:	1885883a 	add	r2,r3,r2
 800b1a8:	40c00115 	stw	r3,4(r8)
 800b1ac:	42800015 	stw	r10,0(r8)
 800b1b0:	d8801c15 	stw	r2,112(sp)
 800b1b4:	d9401b15 	stw	r5,108(sp)
 800b1b8:	00c001c4 	movi	r3,7
 800b1bc:	19426016 	blt	r3,r5,800bb40 <___vfiprintf_internal_r+0xe68>
 800b1c0:	d8c01d87 	ldb	r3,118(sp)
 800b1c4:	42000204 	addi	r8,r8,8
 800b1c8:	29000044 	addi	r4,r5,1
 800b1cc:	1801b31e 	bne	r3,zero,800b89c <___vfiprintf_internal_r+0xbc4>
 800b1d0:	7001c026 	beq	r14,zero,800b8d4 <___vfiprintf_internal_r+0xbfc>
 800b1d4:	d8c01d04 	addi	r3,sp,116
 800b1d8:	10800084 	addi	r2,r2,2
 800b1dc:	40c00015 	stw	r3,0(r8)
 800b1e0:	00c00084 	movi	r3,2
 800b1e4:	40c00115 	stw	r3,4(r8)
 800b1e8:	d8801c15 	stw	r2,112(sp)
 800b1ec:	d9001b15 	stw	r4,108(sp)
 800b1f0:	00c001c4 	movi	r3,7
 800b1f4:	1902650e 	bge	r3,r4,800bb8c <___vfiprintf_internal_r+0xeb4>
 800b1f8:	10029a1e 	bne	r2,zero,800bc64 <___vfiprintf_internal_r+0xf8c>
 800b1fc:	00c02004 	movi	r3,128
 800b200:	01000044 	movi	r4,1
 800b204:	000b883a 	mov	r5,zero
 800b208:	d811883a 	mov	r8,sp
 800b20c:	e0c1b31e 	bne	fp,r3,800b8dc <___vfiprintf_internal_r+0xc04>
 800b210:	8cb9c83a 	sub	fp,r17,r18
 800b214:	0701b10e 	bge	zero,fp,800b8dc <___vfiprintf_internal_r+0xc04>
 800b218:	01c00404 	movi	r7,16
 800b21c:	3f03890e 	bge	r7,fp,800c044 <___vfiprintf_internal_r+0x136c>
 800b220:	00c20074 	movhi	r3,2049
 800b224:	18ccf104 	addi	r3,r3,13252
 800b228:	d8c02415 	stw	r3,144(sp)
 800b22c:	8007883a 	mov	r3,r16
 800b230:	034001c4 	movi	r13,7
 800b234:	e021883a 	mov	r16,fp
 800b238:	da402515 	stw	r9,148(sp)
 800b23c:	1839883a 	mov	fp,r3
 800b240:	00000506 	br	800b258 <___vfiprintf_internal_r+0x580>
 800b244:	29800084 	addi	r6,r5,2
 800b248:	42000204 	addi	r8,r8,8
 800b24c:	180b883a 	mov	r5,r3
 800b250:	843ffc04 	addi	r16,r16,-16
 800b254:	3c000d0e 	bge	r7,r16,800b28c <___vfiprintf_internal_r+0x5b4>
 800b258:	10800404 	addi	r2,r2,16
 800b25c:	28c00044 	addi	r3,r5,1
 800b260:	45c00015 	stw	r23,0(r8)
 800b264:	41c00115 	stw	r7,4(r8)
 800b268:	d8801c15 	stw	r2,112(sp)
 800b26c:	d8c01b15 	stw	r3,108(sp)
 800b270:	68fff40e 	bge	r13,r3,800b244 <__alt_data_end+0xf800b244>
 800b274:	1002241e 	bne	r2,zero,800bb08 <___vfiprintf_internal_r+0xe30>
 800b278:	843ffc04 	addi	r16,r16,-16
 800b27c:	01800044 	movi	r6,1
 800b280:	000b883a 	mov	r5,zero
 800b284:	d811883a 	mov	r8,sp
 800b288:	3c3ff316 	blt	r7,r16,800b258 <__alt_data_end+0xf800b258>
 800b28c:	da402517 	ldw	r9,148(sp)
 800b290:	e007883a 	mov	r3,fp
 800b294:	8039883a 	mov	fp,r16
 800b298:	1821883a 	mov	r16,r3
 800b29c:	d8c02417 	ldw	r3,144(sp)
 800b2a0:	1705883a 	add	r2,r2,fp
 800b2a4:	47000115 	stw	fp,4(r8)
 800b2a8:	40c00015 	stw	r3,0(r8)
 800b2ac:	d8801c15 	stw	r2,112(sp)
 800b2b0:	d9801b15 	stw	r6,108(sp)
 800b2b4:	00c001c4 	movi	r3,7
 800b2b8:	19827616 	blt	r3,r6,800bc94 <___vfiprintf_internal_r+0xfbc>
 800b2bc:	4cf9c83a 	sub	fp,r9,r19
 800b2c0:	42000204 	addi	r8,r8,8
 800b2c4:	31000044 	addi	r4,r6,1
 800b2c8:	300b883a 	mov	r5,r6
 800b2cc:	07018516 	blt	zero,fp,800b8e4 <___vfiprintf_internal_r+0xc0c>
 800b2d0:	9885883a 	add	r2,r19,r2
 800b2d4:	45400015 	stw	r21,0(r8)
 800b2d8:	44c00115 	stw	r19,4(r8)
 800b2dc:	d8801c15 	stw	r2,112(sp)
 800b2e0:	d9001b15 	stw	r4,108(sp)
 800b2e4:	00c001c4 	movi	r3,7
 800b2e8:	1901dd0e 	bge	r3,r4,800ba60 <___vfiprintf_internal_r+0xd88>
 800b2ec:	1002401e 	bne	r2,zero,800bbf0 <___vfiprintf_internal_r+0xf18>
 800b2f0:	d8001b15 	stw	zero,108(sp)
 800b2f4:	a2c0010c 	andi	r11,r20,4
 800b2f8:	58000226 	beq	r11,zero,800b304 <___vfiprintf_internal_r+0x62c>
 800b2fc:	8ca7c83a 	sub	r19,r17,r18
 800b300:	04c2f216 	blt	zero,r19,800becc <___vfiprintf_internal_r+0x11f4>
 800b304:	8c80010e 	bge	r17,r18,800b30c <___vfiprintf_internal_r+0x634>
 800b308:	9023883a 	mov	r17,r18
 800b30c:	da802317 	ldw	r10,140(sp)
 800b310:	5455883a 	add	r10,r10,r17
 800b314:	da802315 	stw	r10,140(sp)
 800b318:	d8001b15 	stw	zero,108(sp)
 800b31c:	d811883a 	mov	r8,sp
 800b320:	003ea206 	br	800adac <__alt_data_end+0xf800adac>
 800b324:	a5000814 	ori	r20,r20,32
 800b328:	80c00007 	ldb	r3,0(r16)
 800b32c:	003ec906 	br	800ae54 <__alt_data_end+0xf800ae54>
 800b330:	80c00007 	ldb	r3,0(r16)
 800b334:	1b030926 	beq	r3,r12,800bf5c <___vfiprintf_internal_r+0x1284>
 800b338:	a5000414 	ori	r20,r20,16
 800b33c:	003ec506 	br	800ae54 <__alt_data_end+0xf800ae54>
 800b340:	21003fcc 	andi	r4,r4,255
 800b344:	20035e1e 	bne	r4,zero,800c0c0 <___vfiprintf_internal_r+0x13e8>
 800b348:	a080080c 	andi	r2,r20,32
 800b34c:	1002a526 	beq	r2,zero,800bde4 <___vfiprintf_internal_r+0x110c>
 800b350:	da802217 	ldw	r10,136(sp)
 800b354:	50800017 	ldw	r2,0(r10)
 800b358:	da802317 	ldw	r10,140(sp)
 800b35c:	5007d7fa 	srai	r3,r10,31
 800b360:	da802217 	ldw	r10,136(sp)
 800b364:	10c00115 	stw	r3,4(r2)
 800b368:	52800104 	addi	r10,r10,4
 800b36c:	da802215 	stw	r10,136(sp)
 800b370:	da802317 	ldw	r10,140(sp)
 800b374:	12800015 	stw	r10,0(r2)
 800b378:	003e8c06 	br	800adac <__alt_data_end+0xf800adac>
 800b37c:	21003fcc 	andi	r4,r4,255
 800b380:	2003511e 	bne	r4,zero,800c0c8 <___vfiprintf_internal_r+0x13f0>
 800b384:	a080080c 	andi	r2,r20,32
 800b388:	1000a126 	beq	r2,zero,800b610 <___vfiprintf_internal_r+0x938>
 800b38c:	da802217 	ldw	r10,136(sp)
 800b390:	d8001d85 	stb	zero,118(sp)
 800b394:	50800204 	addi	r2,r10,8
 800b398:	54800017 	ldw	r18,0(r10)
 800b39c:	54c00117 	ldw	r19,4(r10)
 800b3a0:	4802b416 	blt	r9,zero,800be74 <___vfiprintf_internal_r+0x119c>
 800b3a4:	013fdfc4 	movi	r4,-129
 800b3a8:	94c6b03a 	or	r3,r18,r19
 800b3ac:	d8802215 	stw	r2,136(sp)
 800b3b0:	a128703a 	and	r20,r20,r4
 800b3b4:	1800a226 	beq	r3,zero,800b640 <___vfiprintf_internal_r+0x968>
 800b3b8:	0039883a 	mov	fp,zero
 800b3bc:	dd401a04 	addi	r21,sp,104
 800b3c0:	9006d0fa 	srli	r3,r18,3
 800b3c4:	9808977a 	slli	r4,r19,29
 800b3c8:	9826d0fa 	srli	r19,r19,3
 800b3cc:	948001cc 	andi	r18,r18,7
 800b3d0:	90800c04 	addi	r2,r18,48
 800b3d4:	ad7fffc4 	addi	r21,r21,-1
 800b3d8:	20e4b03a 	or	r18,r4,r3
 800b3dc:	a8800005 	stb	r2,0(r21)
 800b3e0:	94c6b03a 	or	r3,r18,r19
 800b3e4:	183ff61e 	bne	r3,zero,800b3c0 <__alt_data_end+0xf800b3c0>
 800b3e8:	a0c0004c 	andi	r3,r20,1
 800b3ec:	18005926 	beq	r3,zero,800b554 <___vfiprintf_internal_r+0x87c>
 800b3f0:	10803fcc 	andi	r2,r2,255
 800b3f4:	1080201c 	xori	r2,r2,128
 800b3f8:	10bfe004 	addi	r2,r2,-128
 800b3fc:	00c00c04 	movi	r3,48
 800b400:	10c05426 	beq	r2,r3,800b554 <___vfiprintf_internal_r+0x87c>
 800b404:	da801e17 	ldw	r10,120(sp)
 800b408:	a8bfffc4 	addi	r2,r21,-1
 800b40c:	a8ffffc5 	stb	r3,-1(r21)
 800b410:	50a7c83a 	sub	r19,r10,r2
 800b414:	102b883a 	mov	r21,r2
 800b418:	003f2f06 	br	800b0d8 <__alt_data_end+0xf800b0d8>
 800b41c:	21003fcc 	andi	r4,r4,255
 800b420:	2003421e 	bne	r4,zero,800c12c <___vfiprintf_internal_r+0x1454>
 800b424:	00820074 	movhi	r2,2049
 800b428:	108c9004 	addi	r2,r2,12864
 800b42c:	d8802615 	stw	r2,152(sp)
 800b430:	a080080c 	andi	r2,r20,32
 800b434:	1000aa26 	beq	r2,zero,800b6e0 <___vfiprintf_internal_r+0xa08>
 800b438:	da802217 	ldw	r10,136(sp)
 800b43c:	54800017 	ldw	r18,0(r10)
 800b440:	54c00117 	ldw	r19,4(r10)
 800b444:	52800204 	addi	r10,r10,8
 800b448:	da802215 	stw	r10,136(sp)
 800b44c:	a080004c 	andi	r2,r20,1
 800b450:	1001d226 	beq	r2,zero,800bb9c <___vfiprintf_internal_r+0xec4>
 800b454:	94c4b03a 	or	r2,r18,r19
 800b458:	1002351e 	bne	r2,zero,800bd30 <___vfiprintf_internal_r+0x1058>
 800b45c:	d8001d85 	stb	zero,118(sp)
 800b460:	48022216 	blt	r9,zero,800bcec <___vfiprintf_internal_r+0x1014>
 800b464:	00bfdfc4 	movi	r2,-129
 800b468:	a0a8703a 	and	r20,r20,r2
 800b46c:	003f1506 	br	800b0c4 <__alt_data_end+0xf800b0c4>
 800b470:	da802217 	ldw	r10,136(sp)
 800b474:	04800044 	movi	r18,1
 800b478:	d8001d85 	stb	zero,118(sp)
 800b47c:	50800017 	ldw	r2,0(r10)
 800b480:	52800104 	addi	r10,r10,4
 800b484:	da802215 	stw	r10,136(sp)
 800b488:	d8801005 	stb	r2,64(sp)
 800b48c:	9027883a 	mov	r19,r18
 800b490:	dd401004 	addi	r21,sp,64
 800b494:	0013883a 	mov	r9,zero
 800b498:	003f1706 	br	800b0f8 <__alt_data_end+0xf800b0f8>
 800b49c:	21003fcc 	andi	r4,r4,255
 800b4a0:	2003201e 	bne	r4,zero,800c124 <___vfiprintf_internal_r+0x144c>
 800b4a4:	a080080c 	andi	r2,r20,32
 800b4a8:	10004b26 	beq	r2,zero,800b5d8 <___vfiprintf_internal_r+0x900>
 800b4ac:	da802217 	ldw	r10,136(sp)
 800b4b0:	50800117 	ldw	r2,4(r10)
 800b4b4:	54800017 	ldw	r18,0(r10)
 800b4b8:	52800204 	addi	r10,r10,8
 800b4bc:	da802215 	stw	r10,136(sp)
 800b4c0:	1027883a 	mov	r19,r2
 800b4c4:	10022c16 	blt	r2,zero,800bd78 <___vfiprintf_internal_r+0x10a0>
 800b4c8:	df001d83 	ldbu	fp,118(sp)
 800b4cc:	48007216 	blt	r9,zero,800b698 <___vfiprintf_internal_r+0x9c0>
 800b4d0:	00ffdfc4 	movi	r3,-129
 800b4d4:	94c4b03a 	or	r2,r18,r19
 800b4d8:	a0e8703a 	and	r20,r20,r3
 800b4dc:	1000cc26 	beq	r2,zero,800b810 <___vfiprintf_internal_r+0xb38>
 800b4e0:	98021026 	beq	r19,zero,800bd24 <___vfiprintf_internal_r+0x104c>
 800b4e4:	dc402415 	stw	r17,144(sp)
 800b4e8:	dc002515 	stw	r16,148(sp)
 800b4ec:	9823883a 	mov	r17,r19
 800b4f0:	9021883a 	mov	r16,r18
 800b4f4:	dd401a04 	addi	r21,sp,104
 800b4f8:	4825883a 	mov	r18,r9
 800b4fc:	4027883a 	mov	r19,r8
 800b500:	8009883a 	mov	r4,r16
 800b504:	880b883a 	mov	r5,r17
 800b508:	01800284 	movi	r6,10
 800b50c:	000f883a 	mov	r7,zero
 800b510:	800d0b80 	call	800d0b8 <__umoddi3>
 800b514:	10800c04 	addi	r2,r2,48
 800b518:	ad7fffc4 	addi	r21,r21,-1
 800b51c:	8009883a 	mov	r4,r16
 800b520:	880b883a 	mov	r5,r17
 800b524:	a8800005 	stb	r2,0(r21)
 800b528:	01800284 	movi	r6,10
 800b52c:	000f883a 	mov	r7,zero
 800b530:	800cb400 	call	800cb40 <__udivdi3>
 800b534:	1021883a 	mov	r16,r2
 800b538:	10c4b03a 	or	r2,r2,r3
 800b53c:	1823883a 	mov	r17,r3
 800b540:	103fef1e 	bne	r2,zero,800b500 <__alt_data_end+0xf800b500>
 800b544:	dc402417 	ldw	r17,144(sp)
 800b548:	dc002517 	ldw	r16,148(sp)
 800b54c:	9013883a 	mov	r9,r18
 800b550:	9811883a 	mov	r8,r19
 800b554:	da801e17 	ldw	r10,120(sp)
 800b558:	5567c83a 	sub	r19,r10,r21
 800b55c:	003ede06 	br	800b0d8 <__alt_data_end+0xf800b0d8>
 800b560:	38803fcc 	andi	r2,r7,255
 800b564:	1080201c 	xori	r2,r2,128
 800b568:	10bfe004 	addi	r2,r2,-128
 800b56c:	1002371e 	bne	r2,zero,800be4c <___vfiprintf_internal_r+0x1174>
 800b570:	01000044 	movi	r4,1
 800b574:	01c00804 	movi	r7,32
 800b578:	80c00007 	ldb	r3,0(r16)
 800b57c:	003e3506 	br	800ae54 <__alt_data_end+0xf800ae54>
 800b580:	a5000054 	ori	r20,r20,1
 800b584:	80c00007 	ldb	r3,0(r16)
 800b588:	003e3206 	br	800ae54 <__alt_data_end+0xf800ae54>
 800b58c:	a5002014 	ori	r20,r20,128
 800b590:	80c00007 	ldb	r3,0(r16)
 800b594:	003e2f06 	br	800ae54 <__alt_data_end+0xf800ae54>
 800b598:	8015883a 	mov	r10,r16
 800b59c:	0023883a 	mov	r17,zero
 800b5a0:	18bff404 	addi	r2,r3,-48
 800b5a4:	50c00007 	ldb	r3,0(r10)
 800b5a8:	8c4002a4 	muli	r17,r17,10
 800b5ac:	84000044 	addi	r16,r16,1
 800b5b0:	8015883a 	mov	r10,r16
 800b5b4:	1463883a 	add	r17,r2,r17
 800b5b8:	18bff404 	addi	r2,r3,-48
 800b5bc:	30bff92e 	bgeu	r6,r2,800b5a4 <__alt_data_end+0xf800b5a4>
 800b5c0:	003e2506 	br	800ae58 <__alt_data_end+0xf800ae58>
 800b5c4:	21003fcc 	andi	r4,r4,255
 800b5c8:	2002d41e 	bne	r4,zero,800c11c <___vfiprintf_internal_r+0x1444>
 800b5cc:	a5000414 	ori	r20,r20,16
 800b5d0:	a080080c 	andi	r2,r20,32
 800b5d4:	103fb51e 	bne	r2,zero,800b4ac <__alt_data_end+0xf800b4ac>
 800b5d8:	a080040c 	andi	r2,r20,16
 800b5dc:	1001f826 	beq	r2,zero,800bdc0 <___vfiprintf_internal_r+0x10e8>
 800b5e0:	da802217 	ldw	r10,136(sp)
 800b5e4:	54800017 	ldw	r18,0(r10)
 800b5e8:	52800104 	addi	r10,r10,4
 800b5ec:	da802215 	stw	r10,136(sp)
 800b5f0:	9027d7fa 	srai	r19,r18,31
 800b5f4:	9805883a 	mov	r2,r19
 800b5f8:	003fb206 	br	800b4c4 <__alt_data_end+0xf800b4c4>
 800b5fc:	21003fcc 	andi	r4,r4,255
 800b600:	2002c41e 	bne	r4,zero,800c114 <___vfiprintf_internal_r+0x143c>
 800b604:	a5000414 	ori	r20,r20,16
 800b608:	a080080c 	andi	r2,r20,32
 800b60c:	103f5f1e 	bne	r2,zero,800b38c <__alt_data_end+0xf800b38c>
 800b610:	a080040c 	andi	r2,r20,16
 800b614:	10020f26 	beq	r2,zero,800be54 <___vfiprintf_internal_r+0x117c>
 800b618:	da802217 	ldw	r10,136(sp)
 800b61c:	d8001d85 	stb	zero,118(sp)
 800b620:	0027883a 	mov	r19,zero
 800b624:	50800104 	addi	r2,r10,4
 800b628:	54800017 	ldw	r18,0(r10)
 800b62c:	48021116 	blt	r9,zero,800be74 <___vfiprintf_internal_r+0x119c>
 800b630:	00ffdfc4 	movi	r3,-129
 800b634:	d8802215 	stw	r2,136(sp)
 800b638:	a0e8703a 	and	r20,r20,r3
 800b63c:	903f5e1e 	bne	r18,zero,800b3b8 <__alt_data_end+0xf800b3b8>
 800b640:	0039883a 	mov	fp,zero
 800b644:	4802a626 	beq	r9,zero,800c0e0 <___vfiprintf_internal_r+0x1408>
 800b648:	0025883a 	mov	r18,zero
 800b64c:	0027883a 	mov	r19,zero
 800b650:	003f5a06 	br	800b3bc <__alt_data_end+0xf800b3bc>
 800b654:	21003fcc 	andi	r4,r4,255
 800b658:	20029f1e 	bne	r4,zero,800c0d8 <___vfiprintf_internal_r+0x1400>
 800b65c:	a5000414 	ori	r20,r20,16
 800b660:	a080080c 	andi	r2,r20,32
 800b664:	10005e1e 	bne	r2,zero,800b7e0 <___vfiprintf_internal_r+0xb08>
 800b668:	a080040c 	andi	r2,r20,16
 800b66c:	1001a21e 	bne	r2,zero,800bcf8 <___vfiprintf_internal_r+0x1020>
 800b670:	a080100c 	andi	r2,r20,64
 800b674:	d8001d85 	stb	zero,118(sp)
 800b678:	da802217 	ldw	r10,136(sp)
 800b67c:	1002231e 	bne	r2,zero,800bf0c <___vfiprintf_internal_r+0x1234>
 800b680:	50800104 	addi	r2,r10,4
 800b684:	54800017 	ldw	r18,0(r10)
 800b688:	0027883a 	mov	r19,zero
 800b68c:	4801a00e 	bge	r9,zero,800bd10 <___vfiprintf_internal_r+0x1038>
 800b690:	d8802215 	stw	r2,136(sp)
 800b694:	0039883a 	mov	fp,zero
 800b698:	94c4b03a 	or	r2,r18,r19
 800b69c:	103f901e 	bne	r2,zero,800b4e0 <__alt_data_end+0xf800b4e0>
 800b6a0:	00800044 	movi	r2,1
 800b6a4:	10803fcc 	andi	r2,r2,255
 800b6a8:	00c00044 	movi	r3,1
 800b6ac:	10c05926 	beq	r2,r3,800b814 <___vfiprintf_internal_r+0xb3c>
 800b6b0:	00c00084 	movi	r3,2
 800b6b4:	10ffe41e 	bne	r2,r3,800b648 <__alt_data_end+0xf800b648>
 800b6b8:	0025883a 	mov	r18,zero
 800b6bc:	0027883a 	mov	r19,zero
 800b6c0:	00013d06 	br	800bbb8 <___vfiprintf_internal_r+0xee0>
 800b6c4:	21003fcc 	andi	r4,r4,255
 800b6c8:	2002811e 	bne	r4,zero,800c0d0 <___vfiprintf_internal_r+0x13f8>
 800b6cc:	00820074 	movhi	r2,2049
 800b6d0:	108c8b04 	addi	r2,r2,12844
 800b6d4:	d8802615 	stw	r2,152(sp)
 800b6d8:	a080080c 	andi	r2,r20,32
 800b6dc:	103f561e 	bne	r2,zero,800b438 <__alt_data_end+0xf800b438>
 800b6e0:	a080040c 	andi	r2,r20,16
 800b6e4:	1001d126 	beq	r2,zero,800be2c <___vfiprintf_internal_r+0x1154>
 800b6e8:	da802217 	ldw	r10,136(sp)
 800b6ec:	0027883a 	mov	r19,zero
 800b6f0:	54800017 	ldw	r18,0(r10)
 800b6f4:	52800104 	addi	r10,r10,4
 800b6f8:	da802215 	stw	r10,136(sp)
 800b6fc:	003f5306 	br	800b44c <__alt_data_end+0xf800b44c>
 800b700:	da802217 	ldw	r10,136(sp)
 800b704:	d8001d85 	stb	zero,118(sp)
 800b708:	55400017 	ldw	r21,0(r10)
 800b70c:	50c00104 	addi	r3,r10,4
 800b710:	a8024226 	beq	r21,zero,800c01c <___vfiprintf_internal_r+0x1344>
 800b714:	48021816 	blt	r9,zero,800bf78 <___vfiprintf_internal_r+0x12a0>
 800b718:	480d883a 	mov	r6,r9
 800b71c:	000b883a 	mov	r5,zero
 800b720:	a809883a 	mov	r4,r21
 800b724:	d8c02a15 	stw	r3,168(sp)
 800b728:	da002b15 	stw	r8,172(sp)
 800b72c:	da402c15 	stw	r9,176(sp)
 800b730:	8008fc40 	call	8008fc4 <memchr>
 800b734:	d8c02a17 	ldw	r3,168(sp)
 800b738:	da002b17 	ldw	r8,172(sp)
 800b73c:	da402c17 	ldw	r9,176(sp)
 800b740:	10024826 	beq	r2,zero,800c064 <___vfiprintf_internal_r+0x138c>
 800b744:	1567c83a 	sub	r19,r2,r21
 800b748:	df001d83 	ldbu	fp,118(sp)
 800b74c:	d8c02215 	stw	r3,136(sp)
 800b750:	0013883a 	mov	r9,zero
 800b754:	003e6006 	br	800b0d8 <__alt_data_end+0xf800b0d8>
 800b758:	21003fcc 	andi	r4,r4,255
 800b75c:	203fc026 	beq	r4,zero,800b660 <__alt_data_end+0xf800b660>
 800b760:	d9c01d85 	stb	r7,118(sp)
 800b764:	003fbe06 	br	800b660 <__alt_data_end+0xf800b660>
 800b768:	da802217 	ldw	r10,136(sp)
 800b76c:	54400017 	ldw	r17,0(r10)
 800b770:	50800104 	addi	r2,r10,4
 800b774:	883e3b16 	blt	r17,zero,800b064 <__alt_data_end+0xf800b064>
 800b778:	d8802215 	stw	r2,136(sp)
 800b77c:	80c00007 	ldb	r3,0(r16)
 800b780:	003db406 	br	800ae54 <__alt_data_end+0xf800ae54>
 800b784:	01000044 	movi	r4,1
 800b788:	01c00ac4 	movi	r7,43
 800b78c:	80c00007 	ldb	r3,0(r16)
 800b790:	003db006 	br	800ae54 <__alt_data_end+0xf800ae54>
 800b794:	80c00007 	ldb	r3,0(r16)
 800b798:	82800044 	addi	r10,r16,1
 800b79c:	1b423c26 	beq	r3,r13,800c090 <___vfiprintf_internal_r+0x13b8>
 800b7a0:	18bff404 	addi	r2,r3,-48
 800b7a4:	0013883a 	mov	r9,zero
 800b7a8:	30822b36 	bltu	r6,r2,800c058 <___vfiprintf_internal_r+0x1380>
 800b7ac:	50c00007 	ldb	r3,0(r10)
 800b7b0:	4a4002a4 	muli	r9,r9,10
 800b7b4:	54000044 	addi	r16,r10,1
 800b7b8:	8015883a 	mov	r10,r16
 800b7bc:	4893883a 	add	r9,r9,r2
 800b7c0:	18bff404 	addi	r2,r3,-48
 800b7c4:	30bff92e 	bgeu	r6,r2,800b7ac <__alt_data_end+0xf800b7ac>
 800b7c8:	483da30e 	bge	r9,zero,800ae58 <__alt_data_end+0xf800ae58>
 800b7cc:	027fffc4 	movi	r9,-1
 800b7d0:	003da106 	br	800ae58 <__alt_data_end+0xf800ae58>
 800b7d4:	a5001014 	ori	r20,r20,64
 800b7d8:	80c00007 	ldb	r3,0(r16)
 800b7dc:	003d9d06 	br	800ae54 <__alt_data_end+0xf800ae54>
 800b7e0:	da802217 	ldw	r10,136(sp)
 800b7e4:	d8001d85 	stb	zero,118(sp)
 800b7e8:	50c00204 	addi	r3,r10,8
 800b7ec:	54800017 	ldw	r18,0(r10)
 800b7f0:	54c00117 	ldw	r19,4(r10)
 800b7f4:	4801ca16 	blt	r9,zero,800bf20 <___vfiprintf_internal_r+0x1248>
 800b7f8:	013fdfc4 	movi	r4,-129
 800b7fc:	94c4b03a 	or	r2,r18,r19
 800b800:	d8c02215 	stw	r3,136(sp)
 800b804:	a128703a 	and	r20,r20,r4
 800b808:	0039883a 	mov	fp,zero
 800b80c:	103f341e 	bne	r2,zero,800b4e0 <__alt_data_end+0xf800b4e0>
 800b810:	483e2e26 	beq	r9,zero,800b0cc <__alt_data_end+0xf800b0cc>
 800b814:	0025883a 	mov	r18,zero
 800b818:	94800c04 	addi	r18,r18,48
 800b81c:	dc8019c5 	stb	r18,103(sp)
 800b820:	dcc02717 	ldw	r19,156(sp)
 800b824:	dd4019c4 	addi	r21,sp,103
 800b828:	003e2b06 	br	800b0d8 <__alt_data_end+0xf800b0d8>
 800b82c:	21003fcc 	andi	r4,r4,255
 800b830:	2002361e 	bne	r4,zero,800c10c <___vfiprintf_internal_r+0x1434>
 800b834:	1801c126 	beq	r3,zero,800bf3c <___vfiprintf_internal_r+0x1264>
 800b838:	04800044 	movi	r18,1
 800b83c:	d8c01005 	stb	r3,64(sp)
 800b840:	d8001d85 	stb	zero,118(sp)
 800b844:	9027883a 	mov	r19,r18
 800b848:	dd401004 	addi	r21,sp,64
 800b84c:	003f1106 	br	800b494 <__alt_data_end+0xf800b494>
 800b850:	d9402117 	ldw	r5,132(sp)
 800b854:	d9002017 	ldw	r4,128(sp)
 800b858:	d9801a04 	addi	r6,sp,104
 800b85c:	d9c02b15 	stw	r7,172(sp)
 800b860:	dbc02a15 	stw	r15,168(sp)
 800b864:	800abc40 	call	800abc4 <__sprint_r.part.0>
 800b868:	d9c02b17 	ldw	r7,172(sp)
 800b86c:	dbc02a17 	ldw	r15,168(sp)
 800b870:	10006d1e 	bne	r2,zero,800ba28 <___vfiprintf_internal_r+0xd50>
 800b874:	d9801b17 	ldw	r6,108(sp)
 800b878:	d8801c17 	ldw	r2,112(sp)
 800b87c:	d811883a 	mov	r8,sp
 800b880:	31400044 	addi	r5,r6,1
 800b884:	003e3306 	br	800b154 <__alt_data_end+0xf800b154>
 800b888:	d9401b17 	ldw	r5,108(sp)
 800b88c:	d8801c17 	ldw	r2,112(sp)
 800b890:	29000044 	addi	r4,r5,1
 800b894:	d8c01d87 	ldb	r3,118(sp)
 800b898:	183e4d26 	beq	r3,zero,800b1d0 <__alt_data_end+0xf800b1d0>
 800b89c:	00c00044 	movi	r3,1
 800b8a0:	d9401d84 	addi	r5,sp,118
 800b8a4:	10c5883a 	add	r2,r2,r3
 800b8a8:	41400015 	stw	r5,0(r8)
 800b8ac:	40c00115 	stw	r3,4(r8)
 800b8b0:	d8801c15 	stw	r2,112(sp)
 800b8b4:	d9001b15 	stw	r4,108(sp)
 800b8b8:	014001c4 	movi	r5,7
 800b8bc:	2900a90e 	bge	r5,r4,800bb64 <___vfiprintf_internal_r+0xe8c>
 800b8c0:	1000da1e 	bne	r2,zero,800bc2c <___vfiprintf_internal_r+0xf54>
 800b8c4:	7000ab1e 	bne	r14,zero,800bb74 <___vfiprintf_internal_r+0xe9c>
 800b8c8:	000b883a 	mov	r5,zero
 800b8cc:	1809883a 	mov	r4,r3
 800b8d0:	d811883a 	mov	r8,sp
 800b8d4:	00c02004 	movi	r3,128
 800b8d8:	e0fe4d26 	beq	fp,r3,800b210 <__alt_data_end+0xf800b210>
 800b8dc:	4cf9c83a 	sub	fp,r9,r19
 800b8e0:	073e7b0e 	bge	zero,fp,800b2d0 <__alt_data_end+0xf800b2d0>
 800b8e4:	01c00404 	movi	r7,16
 800b8e8:	3f01900e 	bge	r7,fp,800bf2c <___vfiprintf_internal_r+0x1254>
 800b8ec:	00c20074 	movhi	r3,2049
 800b8f0:	18ccf104 	addi	r3,r3,13252
 800b8f4:	d8c02415 	stw	r3,144(sp)
 800b8f8:	034001c4 	movi	r13,7
 800b8fc:	00000506 	br	800b914 <___vfiprintf_internal_r+0xc3c>
 800b900:	29000084 	addi	r4,r5,2
 800b904:	42000204 	addi	r8,r8,8
 800b908:	180b883a 	mov	r5,r3
 800b90c:	e73ffc04 	addi	fp,fp,-16
 800b910:	3f000d0e 	bge	r7,fp,800b948 <___vfiprintf_internal_r+0xc70>
 800b914:	10800404 	addi	r2,r2,16
 800b918:	28c00044 	addi	r3,r5,1
 800b91c:	45c00015 	stw	r23,0(r8)
 800b920:	41c00115 	stw	r7,4(r8)
 800b924:	d8801c15 	stw	r2,112(sp)
 800b928:	d8c01b15 	stw	r3,108(sp)
 800b92c:	68fff40e 	bge	r13,r3,800b900 <__alt_data_end+0xf800b900>
 800b930:	1000101e 	bne	r2,zero,800b974 <___vfiprintf_internal_r+0xc9c>
 800b934:	e73ffc04 	addi	fp,fp,-16
 800b938:	01000044 	movi	r4,1
 800b93c:	000b883a 	mov	r5,zero
 800b940:	d811883a 	mov	r8,sp
 800b944:	3f3ff316 	blt	r7,fp,800b914 <__alt_data_end+0xf800b914>
 800b948:	da802417 	ldw	r10,144(sp)
 800b94c:	1705883a 	add	r2,r2,fp
 800b950:	47000115 	stw	fp,4(r8)
 800b954:	42800015 	stw	r10,0(r8)
 800b958:	d8801c15 	stw	r2,112(sp)
 800b95c:	d9001b15 	stw	r4,108(sp)
 800b960:	00c001c4 	movi	r3,7
 800b964:	19003616 	blt	r3,r4,800ba40 <___vfiprintf_internal_r+0xd68>
 800b968:	42000204 	addi	r8,r8,8
 800b96c:	21000044 	addi	r4,r4,1
 800b970:	003e5706 	br	800b2d0 <__alt_data_end+0xf800b2d0>
 800b974:	d9402117 	ldw	r5,132(sp)
 800b978:	d9002017 	ldw	r4,128(sp)
 800b97c:	d9801a04 	addi	r6,sp,104
 800b980:	d9c02b15 	stw	r7,172(sp)
 800b984:	db402a15 	stw	r13,168(sp)
 800b988:	800abc40 	call	800abc4 <__sprint_r.part.0>
 800b98c:	d9c02b17 	ldw	r7,172(sp)
 800b990:	db402a17 	ldw	r13,168(sp)
 800b994:	1000241e 	bne	r2,zero,800ba28 <___vfiprintf_internal_r+0xd50>
 800b998:	d9401b17 	ldw	r5,108(sp)
 800b99c:	d8801c17 	ldw	r2,112(sp)
 800b9a0:	d811883a 	mov	r8,sp
 800b9a4:	29000044 	addi	r4,r5,1
 800b9a8:	003fd806 	br	800b90c <__alt_data_end+0xf800b90c>
 800b9ac:	d9401b17 	ldw	r5,108(sp)
 800b9b0:	00c20074 	movhi	r3,2049
 800b9b4:	18ccf504 	addi	r3,r3,13268
 800b9b8:	d8c02415 	stw	r3,144(sp)
 800b9bc:	29400044 	addi	r5,r5,1
 800b9c0:	d8c02417 	ldw	r3,144(sp)
 800b9c4:	14c5883a 	add	r2,r2,r19
 800b9c8:	44c00115 	stw	r19,4(r8)
 800b9cc:	40c00015 	stw	r3,0(r8)
 800b9d0:	d8801c15 	stw	r2,112(sp)
 800b9d4:	d9401b15 	stw	r5,108(sp)
 800b9d8:	00c001c4 	movi	r3,7
 800b9dc:	1940070e 	bge	r3,r5,800b9fc <___vfiprintf_internal_r+0xd24>
 800b9e0:	103e4826 	beq	r2,zero,800b304 <__alt_data_end+0xf800b304>
 800b9e4:	d9402117 	ldw	r5,132(sp)
 800b9e8:	d9002017 	ldw	r4,128(sp)
 800b9ec:	d9801a04 	addi	r6,sp,104
 800b9f0:	800abc40 	call	800abc4 <__sprint_r.part.0>
 800b9f4:	10000c1e 	bne	r2,zero,800ba28 <___vfiprintf_internal_r+0xd50>
 800b9f8:	d8801c17 	ldw	r2,112(sp)
 800b9fc:	8c80010e 	bge	r17,r18,800ba04 <___vfiprintf_internal_r+0xd2c>
 800ba00:	9023883a 	mov	r17,r18
 800ba04:	da802317 	ldw	r10,140(sp)
 800ba08:	5455883a 	add	r10,r10,r17
 800ba0c:	da802315 	stw	r10,140(sp)
 800ba10:	103e4126 	beq	r2,zero,800b318 <__alt_data_end+0xf800b318>
 800ba14:	d9402117 	ldw	r5,132(sp)
 800ba18:	d9002017 	ldw	r4,128(sp)
 800ba1c:	d9801a04 	addi	r6,sp,104
 800ba20:	800abc40 	call	800abc4 <__sprint_r.part.0>
 800ba24:	103e3c26 	beq	r2,zero,800b318 <__alt_data_end+0xf800b318>
 800ba28:	dd002117 	ldw	r20,132(sp)
 800ba2c:	a080030b 	ldhu	r2,12(r20)
 800ba30:	1080100c 	andi	r2,r2,64
 800ba34:	1001231e 	bne	r2,zero,800bec4 <___vfiprintf_internal_r+0x11ec>
 800ba38:	d8802317 	ldw	r2,140(sp)
 800ba3c:	003d7b06 	br	800b02c <__alt_data_end+0xf800b02c>
 800ba40:	1000991e 	bne	r2,zero,800bca8 <___vfiprintf_internal_r+0xfd0>
 800ba44:	00c00044 	movi	r3,1
 800ba48:	9805883a 	mov	r2,r19
 800ba4c:	dd400015 	stw	r21,0(sp)
 800ba50:	dcc00115 	stw	r19,4(sp)
 800ba54:	dcc01c15 	stw	r19,112(sp)
 800ba58:	d8c01b15 	stw	r3,108(sp)
 800ba5c:	d811883a 	mov	r8,sp
 800ba60:	42000204 	addi	r8,r8,8
 800ba64:	a2c0010c 	andi	r11,r20,4
 800ba68:	583fe426 	beq	r11,zero,800b9fc <__alt_data_end+0xf800b9fc>
 800ba6c:	8ca7c83a 	sub	r19,r17,r18
 800ba70:	04ffe20e 	bge	zero,r19,800b9fc <__alt_data_end+0xf800b9fc>
 800ba74:	01c00404 	movi	r7,16
 800ba78:	3cffcc0e 	bge	r7,r19,800b9ac <__alt_data_end+0xf800b9ac>
 800ba7c:	02820074 	movhi	r10,2049
 800ba80:	528cf504 	addi	r10,r10,13268
 800ba84:	d9001b17 	ldw	r4,108(sp)
 800ba88:	da802415 	stw	r10,144(sp)
 800ba8c:	382b883a 	mov	r21,r7
 800ba90:	050001c4 	movi	r20,7
 800ba94:	df002017 	ldw	fp,128(sp)
 800ba98:	00000506 	br	800bab0 <___vfiprintf_internal_r+0xdd8>
 800ba9c:	21400084 	addi	r5,r4,2
 800baa0:	42000204 	addi	r8,r8,8
 800baa4:	1809883a 	mov	r4,r3
 800baa8:	9cfffc04 	addi	r19,r19,-16
 800baac:	acffc40e 	bge	r21,r19,800b9c0 <__alt_data_end+0xf800b9c0>
 800bab0:	10800404 	addi	r2,r2,16
 800bab4:	20c00044 	addi	r3,r4,1
 800bab8:	45800015 	stw	r22,0(r8)
 800babc:	45400115 	stw	r21,4(r8)
 800bac0:	d8801c15 	stw	r2,112(sp)
 800bac4:	d8c01b15 	stw	r3,108(sp)
 800bac8:	a0fff40e 	bge	r20,r3,800ba9c <__alt_data_end+0xf800ba9c>
 800bacc:	1000041e 	bne	r2,zero,800bae0 <___vfiprintf_internal_r+0xe08>
 800bad0:	01400044 	movi	r5,1
 800bad4:	0009883a 	mov	r4,zero
 800bad8:	d811883a 	mov	r8,sp
 800badc:	003ff206 	br	800baa8 <__alt_data_end+0xf800baa8>
 800bae0:	d9402117 	ldw	r5,132(sp)
 800bae4:	d9801a04 	addi	r6,sp,104
 800bae8:	e009883a 	mov	r4,fp
 800baec:	800abc40 	call	800abc4 <__sprint_r.part.0>
 800baf0:	103fcd1e 	bne	r2,zero,800ba28 <__alt_data_end+0xf800ba28>
 800baf4:	d9001b17 	ldw	r4,108(sp)
 800baf8:	d8801c17 	ldw	r2,112(sp)
 800bafc:	d811883a 	mov	r8,sp
 800bb00:	21400044 	addi	r5,r4,1
 800bb04:	003fe806 	br	800baa8 <__alt_data_end+0xf800baa8>
 800bb08:	d9402117 	ldw	r5,132(sp)
 800bb0c:	d9002017 	ldw	r4,128(sp)
 800bb10:	d9801a04 	addi	r6,sp,104
 800bb14:	d9c02b15 	stw	r7,172(sp)
 800bb18:	db402a15 	stw	r13,168(sp)
 800bb1c:	800abc40 	call	800abc4 <__sprint_r.part.0>
 800bb20:	d9c02b17 	ldw	r7,172(sp)
 800bb24:	db402a17 	ldw	r13,168(sp)
 800bb28:	103fbf1e 	bne	r2,zero,800ba28 <__alt_data_end+0xf800ba28>
 800bb2c:	d9401b17 	ldw	r5,108(sp)
 800bb30:	d8801c17 	ldw	r2,112(sp)
 800bb34:	d811883a 	mov	r8,sp
 800bb38:	29800044 	addi	r6,r5,1
 800bb3c:	003dc406 	br	800b250 <__alt_data_end+0xf800b250>
 800bb40:	1000d21e 	bne	r2,zero,800be8c <___vfiprintf_internal_r+0x11b4>
 800bb44:	d8c01d87 	ldb	r3,118(sp)
 800bb48:	18009526 	beq	r3,zero,800bda0 <___vfiprintf_internal_r+0x10c8>
 800bb4c:	00800044 	movi	r2,1
 800bb50:	d8c01d84 	addi	r3,sp,118
 800bb54:	1009883a 	mov	r4,r2
 800bb58:	d8c00015 	stw	r3,0(sp)
 800bb5c:	d8800115 	stw	r2,4(sp)
 800bb60:	d811883a 	mov	r8,sp
 800bb64:	200b883a 	mov	r5,r4
 800bb68:	42000204 	addi	r8,r8,8
 800bb6c:	21000044 	addi	r4,r4,1
 800bb70:	003d9706 	br	800b1d0 <__alt_data_end+0xf800b1d0>
 800bb74:	d9001d04 	addi	r4,sp,116
 800bb78:	00800084 	movi	r2,2
 800bb7c:	d9000015 	stw	r4,0(sp)
 800bb80:	d8800115 	stw	r2,4(sp)
 800bb84:	1809883a 	mov	r4,r3
 800bb88:	d811883a 	mov	r8,sp
 800bb8c:	200b883a 	mov	r5,r4
 800bb90:	42000204 	addi	r8,r8,8
 800bb94:	21000044 	addi	r4,r4,1
 800bb98:	003f4e06 	br	800b8d4 <__alt_data_end+0xf800b8d4>
 800bb9c:	d8001d85 	stb	zero,118(sp)
 800bba0:	48005016 	blt	r9,zero,800bce4 <___vfiprintf_internal_r+0x100c>
 800bba4:	00ffdfc4 	movi	r3,-129
 800bba8:	94c4b03a 	or	r2,r18,r19
 800bbac:	a0e8703a 	and	r20,r20,r3
 800bbb0:	103d4426 	beq	r2,zero,800b0c4 <__alt_data_end+0xf800b0c4>
 800bbb4:	0039883a 	mov	fp,zero
 800bbb8:	d9002617 	ldw	r4,152(sp)
 800bbbc:	dd401a04 	addi	r21,sp,104
 800bbc0:	908003cc 	andi	r2,r18,15
 800bbc4:	9806973a 	slli	r3,r19,28
 800bbc8:	2085883a 	add	r2,r4,r2
 800bbcc:	9024d13a 	srli	r18,r18,4
 800bbd0:	10800003 	ldbu	r2,0(r2)
 800bbd4:	9826d13a 	srli	r19,r19,4
 800bbd8:	ad7fffc4 	addi	r21,r21,-1
 800bbdc:	1ca4b03a 	or	r18,r3,r18
 800bbe0:	a8800005 	stb	r2,0(r21)
 800bbe4:	94c4b03a 	or	r2,r18,r19
 800bbe8:	103ff51e 	bne	r2,zero,800bbc0 <__alt_data_end+0xf800bbc0>
 800bbec:	003e5906 	br	800b554 <__alt_data_end+0xf800b554>
 800bbf0:	d9402117 	ldw	r5,132(sp)
 800bbf4:	d9002017 	ldw	r4,128(sp)
 800bbf8:	d9801a04 	addi	r6,sp,104
 800bbfc:	800abc40 	call	800abc4 <__sprint_r.part.0>
 800bc00:	103f891e 	bne	r2,zero,800ba28 <__alt_data_end+0xf800ba28>
 800bc04:	d8801c17 	ldw	r2,112(sp)
 800bc08:	d811883a 	mov	r8,sp
 800bc0c:	003f9506 	br	800ba64 <__alt_data_end+0xf800ba64>
 800bc10:	d9402117 	ldw	r5,132(sp)
 800bc14:	d9002017 	ldw	r4,128(sp)
 800bc18:	d9801a04 	addi	r6,sp,104
 800bc1c:	800abc40 	call	800abc4 <__sprint_r.part.0>
 800bc20:	103f811e 	bne	r2,zero,800ba28 <__alt_data_end+0xf800ba28>
 800bc24:	d811883a 	mov	r8,sp
 800bc28:	003ced06 	br	800afe0 <__alt_data_end+0xf800afe0>
 800bc2c:	d9402117 	ldw	r5,132(sp)
 800bc30:	d9002017 	ldw	r4,128(sp)
 800bc34:	d9801a04 	addi	r6,sp,104
 800bc38:	da402c15 	stw	r9,176(sp)
 800bc3c:	db802a15 	stw	r14,168(sp)
 800bc40:	800abc40 	call	800abc4 <__sprint_r.part.0>
 800bc44:	da402c17 	ldw	r9,176(sp)
 800bc48:	db802a17 	ldw	r14,168(sp)
 800bc4c:	103f761e 	bne	r2,zero,800ba28 <__alt_data_end+0xf800ba28>
 800bc50:	d9401b17 	ldw	r5,108(sp)
 800bc54:	d8801c17 	ldw	r2,112(sp)
 800bc58:	d811883a 	mov	r8,sp
 800bc5c:	29000044 	addi	r4,r5,1
 800bc60:	003d5b06 	br	800b1d0 <__alt_data_end+0xf800b1d0>
 800bc64:	d9402117 	ldw	r5,132(sp)
 800bc68:	d9002017 	ldw	r4,128(sp)
 800bc6c:	d9801a04 	addi	r6,sp,104
 800bc70:	da402c15 	stw	r9,176(sp)
 800bc74:	800abc40 	call	800abc4 <__sprint_r.part.0>
 800bc78:	da402c17 	ldw	r9,176(sp)
 800bc7c:	103f6a1e 	bne	r2,zero,800ba28 <__alt_data_end+0xf800ba28>
 800bc80:	d9401b17 	ldw	r5,108(sp)
 800bc84:	d8801c17 	ldw	r2,112(sp)
 800bc88:	d811883a 	mov	r8,sp
 800bc8c:	29000044 	addi	r4,r5,1
 800bc90:	003f1006 	br	800b8d4 <__alt_data_end+0xf800b8d4>
 800bc94:	1000c31e 	bne	r2,zero,800bfa4 <___vfiprintf_internal_r+0x12cc>
 800bc98:	01000044 	movi	r4,1
 800bc9c:	000b883a 	mov	r5,zero
 800bca0:	d811883a 	mov	r8,sp
 800bca4:	003f0d06 	br	800b8dc <__alt_data_end+0xf800b8dc>
 800bca8:	d9402117 	ldw	r5,132(sp)
 800bcac:	d9002017 	ldw	r4,128(sp)
 800bcb0:	d9801a04 	addi	r6,sp,104
 800bcb4:	800abc40 	call	800abc4 <__sprint_r.part.0>
 800bcb8:	103f5b1e 	bne	r2,zero,800ba28 <__alt_data_end+0xf800ba28>
 800bcbc:	d9001b17 	ldw	r4,108(sp)
 800bcc0:	d8801c17 	ldw	r2,112(sp)
 800bcc4:	d811883a 	mov	r8,sp
 800bcc8:	21000044 	addi	r4,r4,1
 800bccc:	003d8006 	br	800b2d0 <__alt_data_end+0xf800b2d0>
 800bcd0:	01020074 	movhi	r4,2049
 800bcd4:	210c9004 	addi	r4,r4,12864
 800bcd8:	d9002615 	stw	r4,152(sp)
 800bcdc:	d8c02215 	stw	r3,136(sp)
 800bce0:	1029883a 	mov	r20,r2
 800bce4:	94c4b03a 	or	r2,r18,r19
 800bce8:	103fb21e 	bne	r2,zero,800bbb4 <__alt_data_end+0xf800bbb4>
 800bcec:	0039883a 	mov	fp,zero
 800bcf0:	00800084 	movi	r2,2
 800bcf4:	003e6b06 	br	800b6a4 <__alt_data_end+0xf800b6a4>
 800bcf8:	da802217 	ldw	r10,136(sp)
 800bcfc:	d8001d85 	stb	zero,118(sp)
 800bd00:	0027883a 	mov	r19,zero
 800bd04:	50800104 	addi	r2,r10,4
 800bd08:	54800017 	ldw	r18,0(r10)
 800bd0c:	483e6016 	blt	r9,zero,800b690 <__alt_data_end+0xf800b690>
 800bd10:	00ffdfc4 	movi	r3,-129
 800bd14:	d8802215 	stw	r2,136(sp)
 800bd18:	a0e8703a 	and	r20,r20,r3
 800bd1c:	0039883a 	mov	fp,zero
 800bd20:	903ebb26 	beq	r18,zero,800b810 <__alt_data_end+0xf800b810>
 800bd24:	00800244 	movi	r2,9
 800bd28:	14bdee36 	bltu	r2,r18,800b4e4 <__alt_data_end+0xf800b4e4>
 800bd2c:	003eba06 	br	800b818 <__alt_data_end+0xf800b818>
 800bd30:	00800c04 	movi	r2,48
 800bd34:	d8c01d45 	stb	r3,117(sp)
 800bd38:	d8801d05 	stb	r2,116(sp)
 800bd3c:	d8001d85 	stb	zero,118(sp)
 800bd40:	a0c00094 	ori	r3,r20,2
 800bd44:	4800a916 	blt	r9,zero,800bfec <___vfiprintf_internal_r+0x1314>
 800bd48:	00bfdfc4 	movi	r2,-129
 800bd4c:	a096703a 	and	r11,r20,r2
 800bd50:	5d000094 	ori	r20,r11,2
 800bd54:	0039883a 	mov	fp,zero
 800bd58:	003f9706 	br	800bbb8 <__alt_data_end+0xf800bbb8>
 800bd5c:	8025883a 	mov	r18,r16
 800bd60:	003c2e06 	br	800ae1c <__alt_data_end+0xf800ae1c>
 800bd64:	00820074 	movhi	r2,2049
 800bd68:	108c9004 	addi	r2,r2,12864
 800bd6c:	0039883a 	mov	fp,zero
 800bd70:	d8802615 	stw	r2,152(sp)
 800bd74:	003f9006 	br	800bbb8 <__alt_data_end+0xf800bbb8>
 800bd78:	04a5c83a 	sub	r18,zero,r18
 800bd7c:	07000b44 	movi	fp,45
 800bd80:	9004c03a 	cmpne	r2,r18,zero
 800bd84:	04e7c83a 	sub	r19,zero,r19
 800bd88:	df001d85 	stb	fp,118(sp)
 800bd8c:	98a7c83a 	sub	r19,r19,r2
 800bd90:	48009f16 	blt	r9,zero,800c010 <___vfiprintf_internal_r+0x1338>
 800bd94:	00bfdfc4 	movi	r2,-129
 800bd98:	a0a8703a 	and	r20,r20,r2
 800bd9c:	003dd006 	br	800b4e0 <__alt_data_end+0xf800b4e0>
 800bda0:	70004c26 	beq	r14,zero,800bed4 <___vfiprintf_internal_r+0x11fc>
 800bda4:	00800084 	movi	r2,2
 800bda8:	d8c01d04 	addi	r3,sp,116
 800bdac:	d8c00015 	stw	r3,0(sp)
 800bdb0:	d8800115 	stw	r2,4(sp)
 800bdb4:	01000044 	movi	r4,1
 800bdb8:	d811883a 	mov	r8,sp
 800bdbc:	003f7306 	br	800bb8c <__alt_data_end+0xf800bb8c>
 800bdc0:	a080100c 	andi	r2,r20,64
 800bdc4:	da802217 	ldw	r10,136(sp)
 800bdc8:	103e0626 	beq	r2,zero,800b5e4 <__alt_data_end+0xf800b5e4>
 800bdcc:	5480000f 	ldh	r18,0(r10)
 800bdd0:	52800104 	addi	r10,r10,4
 800bdd4:	da802215 	stw	r10,136(sp)
 800bdd8:	9027d7fa 	srai	r19,r18,31
 800bddc:	9805883a 	mov	r2,r19
 800bde0:	003db806 	br	800b4c4 <__alt_data_end+0xf800b4c4>
 800bde4:	a080040c 	andi	r2,r20,16
 800bde8:	1000091e 	bne	r2,zero,800be10 <___vfiprintf_internal_r+0x1138>
 800bdec:	a2c0100c 	andi	r11,r20,64
 800bdf0:	58000726 	beq	r11,zero,800be10 <___vfiprintf_internal_r+0x1138>
 800bdf4:	da802217 	ldw	r10,136(sp)
 800bdf8:	50800017 	ldw	r2,0(r10)
 800bdfc:	52800104 	addi	r10,r10,4
 800be00:	da802215 	stw	r10,136(sp)
 800be04:	da802317 	ldw	r10,140(sp)
 800be08:	1280000d 	sth	r10,0(r2)
 800be0c:	003be706 	br	800adac <__alt_data_end+0xf800adac>
 800be10:	da802217 	ldw	r10,136(sp)
 800be14:	50800017 	ldw	r2,0(r10)
 800be18:	52800104 	addi	r10,r10,4
 800be1c:	da802215 	stw	r10,136(sp)
 800be20:	da802317 	ldw	r10,140(sp)
 800be24:	12800015 	stw	r10,0(r2)
 800be28:	003be006 	br	800adac <__alt_data_end+0xf800adac>
 800be2c:	a080100c 	andi	r2,r20,64
 800be30:	da802217 	ldw	r10,136(sp)
 800be34:	10003026 	beq	r2,zero,800bef8 <___vfiprintf_internal_r+0x1220>
 800be38:	5480000b 	ldhu	r18,0(r10)
 800be3c:	52800104 	addi	r10,r10,4
 800be40:	0027883a 	mov	r19,zero
 800be44:	da802215 	stw	r10,136(sp)
 800be48:	003d8006 	br	800b44c <__alt_data_end+0xf800b44c>
 800be4c:	80c00007 	ldb	r3,0(r16)
 800be50:	003c0006 	br	800ae54 <__alt_data_end+0xf800ae54>
 800be54:	a080100c 	andi	r2,r20,64
 800be58:	d8001d85 	stb	zero,118(sp)
 800be5c:	da802217 	ldw	r10,136(sp)
 800be60:	1000201e 	bne	r2,zero,800bee4 <___vfiprintf_internal_r+0x120c>
 800be64:	50800104 	addi	r2,r10,4
 800be68:	54800017 	ldw	r18,0(r10)
 800be6c:	0027883a 	mov	r19,zero
 800be70:	483def0e 	bge	r9,zero,800b630 <__alt_data_end+0xf800b630>
 800be74:	94c6b03a 	or	r3,r18,r19
 800be78:	d8802215 	stw	r2,136(sp)
 800be7c:	183d4e1e 	bne	r3,zero,800b3b8 <__alt_data_end+0xf800b3b8>
 800be80:	0039883a 	mov	fp,zero
 800be84:	0005883a 	mov	r2,zero
 800be88:	003e0606 	br	800b6a4 <__alt_data_end+0xf800b6a4>
 800be8c:	d9402117 	ldw	r5,132(sp)
 800be90:	d9002017 	ldw	r4,128(sp)
 800be94:	d9801a04 	addi	r6,sp,104
 800be98:	da402c15 	stw	r9,176(sp)
 800be9c:	db802a15 	stw	r14,168(sp)
 800bea0:	800abc40 	call	800abc4 <__sprint_r.part.0>
 800bea4:	da402c17 	ldw	r9,176(sp)
 800bea8:	db802a17 	ldw	r14,168(sp)
 800beac:	103ede1e 	bne	r2,zero,800ba28 <__alt_data_end+0xf800ba28>
 800beb0:	d9401b17 	ldw	r5,108(sp)
 800beb4:	d8801c17 	ldw	r2,112(sp)
 800beb8:	d811883a 	mov	r8,sp
 800bebc:	29000044 	addi	r4,r5,1
 800bec0:	003e7406 	br	800b894 <__alt_data_end+0xf800b894>
 800bec4:	00bfffc4 	movi	r2,-1
 800bec8:	003c5806 	br	800b02c <__alt_data_end+0xf800b02c>
 800becc:	d811883a 	mov	r8,sp
 800bed0:	003ee806 	br	800ba74 <__alt_data_end+0xf800ba74>
 800bed4:	000b883a 	mov	r5,zero
 800bed8:	01000044 	movi	r4,1
 800bedc:	d811883a 	mov	r8,sp
 800bee0:	003e7c06 	br	800b8d4 <__alt_data_end+0xf800b8d4>
 800bee4:	50800104 	addi	r2,r10,4
 800bee8:	5480000b 	ldhu	r18,0(r10)
 800beec:	0027883a 	mov	r19,zero
 800bef0:	483dcf0e 	bge	r9,zero,800b630 <__alt_data_end+0xf800b630>
 800bef4:	003fdf06 	br	800be74 <__alt_data_end+0xf800be74>
 800bef8:	54800017 	ldw	r18,0(r10)
 800befc:	52800104 	addi	r10,r10,4
 800bf00:	0027883a 	mov	r19,zero
 800bf04:	da802215 	stw	r10,136(sp)
 800bf08:	003d5006 	br	800b44c <__alt_data_end+0xf800b44c>
 800bf0c:	50800104 	addi	r2,r10,4
 800bf10:	5480000b 	ldhu	r18,0(r10)
 800bf14:	0027883a 	mov	r19,zero
 800bf18:	483f7d0e 	bge	r9,zero,800bd10 <__alt_data_end+0xf800bd10>
 800bf1c:	003ddc06 	br	800b690 <__alt_data_end+0xf800b690>
 800bf20:	d8c02215 	stw	r3,136(sp)
 800bf24:	0039883a 	mov	fp,zero
 800bf28:	003ddb06 	br	800b698 <__alt_data_end+0xf800b698>
 800bf2c:	02820074 	movhi	r10,2049
 800bf30:	528cf104 	addi	r10,r10,13252
 800bf34:	da802415 	stw	r10,144(sp)
 800bf38:	003e8306 	br	800b948 <__alt_data_end+0xf800b948>
 800bf3c:	d8801c17 	ldw	r2,112(sp)
 800bf40:	dd002117 	ldw	r20,132(sp)
 800bf44:	103eb926 	beq	r2,zero,800ba2c <__alt_data_end+0xf800ba2c>
 800bf48:	d9002017 	ldw	r4,128(sp)
 800bf4c:	d9801a04 	addi	r6,sp,104
 800bf50:	a00b883a 	mov	r5,r20
 800bf54:	800abc40 	call	800abc4 <__sprint_r.part.0>
 800bf58:	003eb406 	br	800ba2c <__alt_data_end+0xf800ba2c>
 800bf5c:	80c00043 	ldbu	r3,1(r16)
 800bf60:	a5000814 	ori	r20,r20,32
 800bf64:	84000044 	addi	r16,r16,1
 800bf68:	18c03fcc 	andi	r3,r3,255
 800bf6c:	18c0201c 	xori	r3,r3,128
 800bf70:	18ffe004 	addi	r3,r3,-128
 800bf74:	003bb706 	br	800ae54 <__alt_data_end+0xf800ae54>
 800bf78:	a809883a 	mov	r4,r21
 800bf7c:	d8c02a15 	stw	r3,168(sp)
 800bf80:	da002b15 	stw	r8,172(sp)
 800bf84:	8003f280 	call	8003f28 <strlen>
 800bf88:	d8c02a17 	ldw	r3,168(sp)
 800bf8c:	1027883a 	mov	r19,r2
 800bf90:	df001d83 	ldbu	fp,118(sp)
 800bf94:	d8c02215 	stw	r3,136(sp)
 800bf98:	0013883a 	mov	r9,zero
 800bf9c:	da002b17 	ldw	r8,172(sp)
 800bfa0:	003c4d06 	br	800b0d8 <__alt_data_end+0xf800b0d8>
 800bfa4:	d9402117 	ldw	r5,132(sp)
 800bfa8:	d9002017 	ldw	r4,128(sp)
 800bfac:	d9801a04 	addi	r6,sp,104
 800bfb0:	da402c15 	stw	r9,176(sp)
 800bfb4:	800abc40 	call	800abc4 <__sprint_r.part.0>
 800bfb8:	da402c17 	ldw	r9,176(sp)
 800bfbc:	103e9a1e 	bne	r2,zero,800ba28 <__alt_data_end+0xf800ba28>
 800bfc0:	d9401b17 	ldw	r5,108(sp)
 800bfc4:	d8801c17 	ldw	r2,112(sp)
 800bfc8:	d811883a 	mov	r8,sp
 800bfcc:	29000044 	addi	r4,r5,1
 800bfd0:	003e4206 	br	800b8dc <__alt_data_end+0xf800b8dc>
 800bfd4:	d9401b17 	ldw	r5,108(sp)
 800bfd8:	01020074 	movhi	r4,2049
 800bfdc:	210cf504 	addi	r4,r4,13268
 800bfe0:	d9002415 	stw	r4,144(sp)
 800bfe4:	29400044 	addi	r5,r5,1
 800bfe8:	003c6d06 	br	800b1a0 <__alt_data_end+0xf800b1a0>
 800bfec:	0039883a 	mov	fp,zero
 800bff0:	00800084 	movi	r2,2
 800bff4:	10803fcc 	andi	r2,r2,255
 800bff8:	01000044 	movi	r4,1
 800bffc:	11001e26 	beq	r2,r4,800c078 <___vfiprintf_internal_r+0x13a0>
 800c000:	01000084 	movi	r4,2
 800c004:	11001e1e 	bne	r2,r4,800c080 <___vfiprintf_internal_r+0x13a8>
 800c008:	1829883a 	mov	r20,r3
 800c00c:	003eea06 	br	800bbb8 <__alt_data_end+0xf800bbb8>
 800c010:	a007883a 	mov	r3,r20
 800c014:	00800044 	movi	r2,1
 800c018:	003ff606 	br	800bff4 <__alt_data_end+0xf800bff4>
 800c01c:	00800184 	movi	r2,6
 800c020:	1240012e 	bgeu	r2,r9,800c028 <___vfiprintf_internal_r+0x1350>
 800c024:	1013883a 	mov	r9,r2
 800c028:	4827883a 	mov	r19,r9
 800c02c:	4825883a 	mov	r18,r9
 800c030:	48001516 	blt	r9,zero,800c088 <___vfiprintf_internal_r+0x13b0>
 800c034:	05420074 	movhi	r21,2049
 800c038:	d8c02215 	stw	r3,136(sp)
 800c03c:	ad4c9504 	addi	r21,r21,12884
 800c040:	003d1406 	br	800b494 <__alt_data_end+0xf800b494>
 800c044:	02820074 	movhi	r10,2049
 800c048:	528cf104 	addi	r10,r10,13252
 800c04c:	da802415 	stw	r10,144(sp)
 800c050:	200d883a 	mov	r6,r4
 800c054:	003c9106 	br	800b29c <__alt_data_end+0xf800b29c>
 800c058:	5021883a 	mov	r16,r10
 800c05c:	0013883a 	mov	r9,zero
 800c060:	003b7d06 	br	800ae58 <__alt_data_end+0xf800ae58>
 800c064:	4827883a 	mov	r19,r9
 800c068:	df001d83 	ldbu	fp,118(sp)
 800c06c:	d8c02215 	stw	r3,136(sp)
 800c070:	0013883a 	mov	r9,zero
 800c074:	003c1806 	br	800b0d8 <__alt_data_end+0xf800b0d8>
 800c078:	1829883a 	mov	r20,r3
 800c07c:	003d1806 	br	800b4e0 <__alt_data_end+0xf800b4e0>
 800c080:	1829883a 	mov	r20,r3
 800c084:	003ccd06 	br	800b3bc <__alt_data_end+0xf800b3bc>
 800c088:	0025883a 	mov	r18,zero
 800c08c:	003fe906 	br	800c034 <__alt_data_end+0xf800c034>
 800c090:	d8802217 	ldw	r2,136(sp)
 800c094:	80c00043 	ldbu	r3,1(r16)
 800c098:	5021883a 	mov	r16,r10
 800c09c:	12400017 	ldw	r9,0(r2)
 800c0a0:	10800104 	addi	r2,r2,4
 800c0a4:	d8802215 	stw	r2,136(sp)
 800c0a8:	483faf0e 	bge	r9,zero,800bf68 <__alt_data_end+0xf800bf68>
 800c0ac:	18c03fcc 	andi	r3,r3,255
 800c0b0:	18c0201c 	xori	r3,r3,128
 800c0b4:	027fffc4 	movi	r9,-1
 800c0b8:	18ffe004 	addi	r3,r3,-128
 800c0bc:	003b6506 	br	800ae54 <__alt_data_end+0xf800ae54>
 800c0c0:	d9c01d85 	stb	r7,118(sp)
 800c0c4:	003ca006 	br	800b348 <__alt_data_end+0xf800b348>
 800c0c8:	d9c01d85 	stb	r7,118(sp)
 800c0cc:	003cad06 	br	800b384 <__alt_data_end+0xf800b384>
 800c0d0:	d9c01d85 	stb	r7,118(sp)
 800c0d4:	003d7d06 	br	800b6cc <__alt_data_end+0xf800b6cc>
 800c0d8:	d9c01d85 	stb	r7,118(sp)
 800c0dc:	003d5f06 	br	800b65c <__alt_data_end+0xf800b65c>
 800c0e0:	a080004c 	andi	r2,r20,1
 800c0e4:	0039883a 	mov	fp,zero
 800c0e8:	10000526 	beq	r2,zero,800c100 <___vfiprintf_internal_r+0x1428>
 800c0ec:	00800c04 	movi	r2,48
 800c0f0:	d88019c5 	stb	r2,103(sp)
 800c0f4:	dcc02717 	ldw	r19,156(sp)
 800c0f8:	dd4019c4 	addi	r21,sp,103
 800c0fc:	003bf606 	br	800b0d8 <__alt_data_end+0xf800b0d8>
 800c100:	0027883a 	mov	r19,zero
 800c104:	dd401a04 	addi	r21,sp,104
 800c108:	003bf306 	br	800b0d8 <__alt_data_end+0xf800b0d8>
 800c10c:	d9c01d85 	stb	r7,118(sp)
 800c110:	003dc806 	br	800b834 <__alt_data_end+0xf800b834>
 800c114:	d9c01d85 	stb	r7,118(sp)
 800c118:	003d3a06 	br	800b604 <__alt_data_end+0xf800b604>
 800c11c:	d9c01d85 	stb	r7,118(sp)
 800c120:	003d2a06 	br	800b5cc <__alt_data_end+0xf800b5cc>
 800c124:	d9c01d85 	stb	r7,118(sp)
 800c128:	003cde06 	br	800b4a4 <__alt_data_end+0xf800b4a4>
 800c12c:	d9c01d85 	stb	r7,118(sp)
 800c130:	003cbc06 	br	800b424 <__alt_data_end+0xf800b424>

0800c134 <__vfiprintf_internal>:
 800c134:	00820074 	movhi	r2,2049
 800c138:	1093ff04 	addi	r2,r2,20476
 800c13c:	300f883a 	mov	r7,r6
 800c140:	280d883a 	mov	r6,r5
 800c144:	200b883a 	mov	r5,r4
 800c148:	11000017 	ldw	r4,0(r2)
 800c14c:	800acd81 	jmpi	800acd8 <___vfiprintf_internal_r>

0800c150 <__sbprintf>:
 800c150:	2880030b 	ldhu	r2,12(r5)
 800c154:	2ac01917 	ldw	r11,100(r5)
 800c158:	2a80038b 	ldhu	r10,14(r5)
 800c15c:	2a400717 	ldw	r9,28(r5)
 800c160:	2a000917 	ldw	r8,36(r5)
 800c164:	defee204 	addi	sp,sp,-1144
 800c168:	00c10004 	movi	r3,1024
 800c16c:	dc011a15 	stw	r16,1128(sp)
 800c170:	10bfff4c 	andi	r2,r2,65533
 800c174:	2821883a 	mov	r16,r5
 800c178:	d8cb883a 	add	r5,sp,r3
 800c17c:	dc811c15 	stw	r18,1136(sp)
 800c180:	dc411b15 	stw	r17,1132(sp)
 800c184:	dfc11d15 	stw	ra,1140(sp)
 800c188:	2025883a 	mov	r18,r4
 800c18c:	d881030d 	sth	r2,1036(sp)
 800c190:	dac11915 	stw	r11,1124(sp)
 800c194:	da81038d 	sth	r10,1038(sp)
 800c198:	da410715 	stw	r9,1052(sp)
 800c19c:	da010915 	stw	r8,1060(sp)
 800c1a0:	dec10015 	stw	sp,1024(sp)
 800c1a4:	dec10415 	stw	sp,1040(sp)
 800c1a8:	d8c10215 	stw	r3,1032(sp)
 800c1ac:	d8c10515 	stw	r3,1044(sp)
 800c1b0:	d8010615 	stw	zero,1048(sp)
 800c1b4:	800acd80 	call	800acd8 <___vfiprintf_internal_r>
 800c1b8:	1023883a 	mov	r17,r2
 800c1bc:	10000416 	blt	r2,zero,800c1d0 <__sbprintf+0x80>
 800c1c0:	d9410004 	addi	r5,sp,1024
 800c1c4:	9009883a 	mov	r4,r18
 800c1c8:	8007e880 	call	8007e88 <_fflush_r>
 800c1cc:	10000d1e 	bne	r2,zero,800c204 <__sbprintf+0xb4>
 800c1d0:	d881030b 	ldhu	r2,1036(sp)
 800c1d4:	1080100c 	andi	r2,r2,64
 800c1d8:	10000326 	beq	r2,zero,800c1e8 <__sbprintf+0x98>
 800c1dc:	8080030b 	ldhu	r2,12(r16)
 800c1e0:	10801014 	ori	r2,r2,64
 800c1e4:	8080030d 	sth	r2,12(r16)
 800c1e8:	8805883a 	mov	r2,r17
 800c1ec:	dfc11d17 	ldw	ra,1140(sp)
 800c1f0:	dc811c17 	ldw	r18,1136(sp)
 800c1f4:	dc411b17 	ldw	r17,1132(sp)
 800c1f8:	dc011a17 	ldw	r16,1128(sp)
 800c1fc:	dec11e04 	addi	sp,sp,1144
 800c200:	f800283a 	ret
 800c204:	047fffc4 	movi	r17,-1
 800c208:	003ff106 	br	800c1d0 <__alt_data_end+0xf800c1d0>

0800c20c <__swbuf_r>:
 800c20c:	defffb04 	addi	sp,sp,-20
 800c210:	dcc00315 	stw	r19,12(sp)
 800c214:	dc800215 	stw	r18,8(sp)
 800c218:	dc000015 	stw	r16,0(sp)
 800c21c:	dfc00415 	stw	ra,16(sp)
 800c220:	dc400115 	stw	r17,4(sp)
 800c224:	2025883a 	mov	r18,r4
 800c228:	2827883a 	mov	r19,r5
 800c22c:	3021883a 	mov	r16,r6
 800c230:	20000226 	beq	r4,zero,800c23c <__swbuf_r+0x30>
 800c234:	20800e17 	ldw	r2,56(r4)
 800c238:	10004226 	beq	r2,zero,800c344 <__swbuf_r+0x138>
 800c23c:	80800617 	ldw	r2,24(r16)
 800c240:	8100030b 	ldhu	r4,12(r16)
 800c244:	80800215 	stw	r2,8(r16)
 800c248:	2080020c 	andi	r2,r4,8
 800c24c:	10003626 	beq	r2,zero,800c328 <__swbuf_r+0x11c>
 800c250:	80c00417 	ldw	r3,16(r16)
 800c254:	18003426 	beq	r3,zero,800c328 <__swbuf_r+0x11c>
 800c258:	2088000c 	andi	r2,r4,8192
 800c25c:	9c403fcc 	andi	r17,r19,255
 800c260:	10001a26 	beq	r2,zero,800c2cc <__swbuf_r+0xc0>
 800c264:	80800017 	ldw	r2,0(r16)
 800c268:	81000517 	ldw	r4,20(r16)
 800c26c:	10c7c83a 	sub	r3,r2,r3
 800c270:	1900200e 	bge	r3,r4,800c2f4 <__swbuf_r+0xe8>
 800c274:	18c00044 	addi	r3,r3,1
 800c278:	81000217 	ldw	r4,8(r16)
 800c27c:	11400044 	addi	r5,r2,1
 800c280:	81400015 	stw	r5,0(r16)
 800c284:	213fffc4 	addi	r4,r4,-1
 800c288:	81000215 	stw	r4,8(r16)
 800c28c:	14c00005 	stb	r19,0(r2)
 800c290:	80800517 	ldw	r2,20(r16)
 800c294:	10c01e26 	beq	r2,r3,800c310 <__swbuf_r+0x104>
 800c298:	8080030b 	ldhu	r2,12(r16)
 800c29c:	1080004c 	andi	r2,r2,1
 800c2a0:	10000226 	beq	r2,zero,800c2ac <__swbuf_r+0xa0>
 800c2a4:	00800284 	movi	r2,10
 800c2a8:	88801926 	beq	r17,r2,800c310 <__swbuf_r+0x104>
 800c2ac:	8805883a 	mov	r2,r17
 800c2b0:	dfc00417 	ldw	ra,16(sp)
 800c2b4:	dcc00317 	ldw	r19,12(sp)
 800c2b8:	dc800217 	ldw	r18,8(sp)
 800c2bc:	dc400117 	ldw	r17,4(sp)
 800c2c0:	dc000017 	ldw	r16,0(sp)
 800c2c4:	dec00504 	addi	sp,sp,20
 800c2c8:	f800283a 	ret
 800c2cc:	81401917 	ldw	r5,100(r16)
 800c2d0:	00b7ffc4 	movi	r2,-8193
 800c2d4:	21080014 	ori	r4,r4,8192
 800c2d8:	2884703a 	and	r2,r5,r2
 800c2dc:	80801915 	stw	r2,100(r16)
 800c2e0:	80800017 	ldw	r2,0(r16)
 800c2e4:	8100030d 	sth	r4,12(r16)
 800c2e8:	81000517 	ldw	r4,20(r16)
 800c2ec:	10c7c83a 	sub	r3,r2,r3
 800c2f0:	193fe016 	blt	r3,r4,800c274 <__alt_data_end+0xf800c274>
 800c2f4:	800b883a 	mov	r5,r16
 800c2f8:	9009883a 	mov	r4,r18
 800c2fc:	8007e880 	call	8007e88 <_fflush_r>
 800c300:	1000071e 	bne	r2,zero,800c320 <__swbuf_r+0x114>
 800c304:	80800017 	ldw	r2,0(r16)
 800c308:	00c00044 	movi	r3,1
 800c30c:	003fda06 	br	800c278 <__alt_data_end+0xf800c278>
 800c310:	800b883a 	mov	r5,r16
 800c314:	9009883a 	mov	r4,r18
 800c318:	8007e880 	call	8007e88 <_fflush_r>
 800c31c:	103fe326 	beq	r2,zero,800c2ac <__alt_data_end+0xf800c2ac>
 800c320:	00bfffc4 	movi	r2,-1
 800c324:	003fe206 	br	800c2b0 <__alt_data_end+0xf800c2b0>
 800c328:	800b883a 	mov	r5,r16
 800c32c:	9009883a 	mov	r4,r18
 800c330:	80062900 	call	8006290 <__swsetup_r>
 800c334:	103ffa1e 	bne	r2,zero,800c320 <__alt_data_end+0xf800c320>
 800c338:	8100030b 	ldhu	r4,12(r16)
 800c33c:	80c00417 	ldw	r3,16(r16)
 800c340:	003fc506 	br	800c258 <__alt_data_end+0xf800c258>
 800c344:	80082640 	call	8008264 <__sinit>
 800c348:	003fbc06 	br	800c23c <__alt_data_end+0xf800c23c>

0800c34c <__swbuf>:
 800c34c:	00820074 	movhi	r2,2049
 800c350:	1093ff04 	addi	r2,r2,20476
 800c354:	280d883a 	mov	r6,r5
 800c358:	200b883a 	mov	r5,r4
 800c35c:	11000017 	ldw	r4,0(r2)
 800c360:	800c20c1 	jmpi	800c20c <__swbuf_r>

0800c364 <_write_r>:
 800c364:	defffd04 	addi	sp,sp,-12
 800c368:	2805883a 	mov	r2,r5
 800c36c:	dc000015 	stw	r16,0(sp)
 800c370:	04020074 	movhi	r16,2049
 800c374:	dc400115 	stw	r17,4(sp)
 800c378:	300b883a 	mov	r5,r6
 800c37c:	841ad904 	addi	r16,r16,27492
 800c380:	2023883a 	mov	r17,r4
 800c384:	380d883a 	mov	r6,r7
 800c388:	1009883a 	mov	r4,r2
 800c38c:	dfc00215 	stw	ra,8(sp)
 800c390:	80000015 	stw	zero,0(r16)
 800c394:	80108180 	call	8010818 <write>
 800c398:	00ffffc4 	movi	r3,-1
 800c39c:	10c00526 	beq	r2,r3,800c3b4 <_write_r+0x50>
 800c3a0:	dfc00217 	ldw	ra,8(sp)
 800c3a4:	dc400117 	ldw	r17,4(sp)
 800c3a8:	dc000017 	ldw	r16,0(sp)
 800c3ac:	dec00304 	addi	sp,sp,12
 800c3b0:	f800283a 	ret
 800c3b4:	80c00017 	ldw	r3,0(r16)
 800c3b8:	183ff926 	beq	r3,zero,800c3a0 <__alt_data_end+0xf800c3a0>
 800c3bc:	88c00015 	stw	r3,0(r17)
 800c3c0:	003ff706 	br	800c3a0 <__alt_data_end+0xf800c3a0>

0800c3c4 <_close_r>:
 800c3c4:	defffd04 	addi	sp,sp,-12
 800c3c8:	dc000015 	stw	r16,0(sp)
 800c3cc:	04020074 	movhi	r16,2049
 800c3d0:	dc400115 	stw	r17,4(sp)
 800c3d4:	841ad904 	addi	r16,r16,27492
 800c3d8:	2023883a 	mov	r17,r4
 800c3dc:	2809883a 	mov	r4,r5
 800c3e0:	dfc00215 	stw	ra,8(sp)
 800c3e4:	80000015 	stw	zero,0(r16)
 800c3e8:	800fe480 	call	800fe48 <close>
 800c3ec:	00ffffc4 	movi	r3,-1
 800c3f0:	10c00526 	beq	r2,r3,800c408 <_close_r+0x44>
 800c3f4:	dfc00217 	ldw	ra,8(sp)
 800c3f8:	dc400117 	ldw	r17,4(sp)
 800c3fc:	dc000017 	ldw	r16,0(sp)
 800c400:	dec00304 	addi	sp,sp,12
 800c404:	f800283a 	ret
 800c408:	80c00017 	ldw	r3,0(r16)
 800c40c:	183ff926 	beq	r3,zero,800c3f4 <__alt_data_end+0xf800c3f4>
 800c410:	88c00015 	stw	r3,0(r17)
 800c414:	003ff706 	br	800c3f4 <__alt_data_end+0xf800c3f4>

0800c418 <_calloc_r>:
 800c418:	298b383a 	mul	r5,r5,r6
 800c41c:	defffe04 	addi	sp,sp,-8
 800c420:	dfc00115 	stw	ra,4(sp)
 800c424:	dc000015 	stw	r16,0(sp)
 800c428:	80030600 	call	8003060 <_malloc_r>
 800c42c:	10002926 	beq	r2,zero,800c4d4 <_calloc_r+0xbc>
 800c430:	11bfff17 	ldw	r6,-4(r2)
 800c434:	1021883a 	mov	r16,r2
 800c438:	00bfff04 	movi	r2,-4
 800c43c:	308c703a 	and	r6,r6,r2
 800c440:	00c00904 	movi	r3,36
 800c444:	308d883a 	add	r6,r6,r2
 800c448:	19801636 	bltu	r3,r6,800c4a4 <_calloc_r+0x8c>
 800c44c:	008004c4 	movi	r2,19
 800c450:	11800b2e 	bgeu	r2,r6,800c480 <_calloc_r+0x68>
 800c454:	80000015 	stw	zero,0(r16)
 800c458:	80000115 	stw	zero,4(r16)
 800c45c:	008006c4 	movi	r2,27
 800c460:	11801a2e 	bgeu	r2,r6,800c4cc <_calloc_r+0xb4>
 800c464:	80000215 	stw	zero,8(r16)
 800c468:	80000315 	stw	zero,12(r16)
 800c46c:	30c0151e 	bne	r6,r3,800c4c4 <_calloc_r+0xac>
 800c470:	80000415 	stw	zero,16(r16)
 800c474:	80800604 	addi	r2,r16,24
 800c478:	80000515 	stw	zero,20(r16)
 800c47c:	00000106 	br	800c484 <_calloc_r+0x6c>
 800c480:	8005883a 	mov	r2,r16
 800c484:	10000015 	stw	zero,0(r2)
 800c488:	10000115 	stw	zero,4(r2)
 800c48c:	10000215 	stw	zero,8(r2)
 800c490:	8005883a 	mov	r2,r16
 800c494:	dfc00117 	ldw	ra,4(sp)
 800c498:	dc000017 	ldw	r16,0(sp)
 800c49c:	dec00204 	addi	sp,sp,8
 800c4a0:	f800283a 	ret
 800c4a4:	000b883a 	mov	r5,zero
 800c4a8:	8009883a 	mov	r4,r16
 800c4ac:	800386c0 	call	800386c <memset>
 800c4b0:	8005883a 	mov	r2,r16
 800c4b4:	dfc00117 	ldw	ra,4(sp)
 800c4b8:	dc000017 	ldw	r16,0(sp)
 800c4bc:	dec00204 	addi	sp,sp,8
 800c4c0:	f800283a 	ret
 800c4c4:	80800404 	addi	r2,r16,16
 800c4c8:	003fee06 	br	800c484 <__alt_data_end+0xf800c484>
 800c4cc:	80800204 	addi	r2,r16,8
 800c4d0:	003fec06 	br	800c484 <__alt_data_end+0xf800c484>
 800c4d4:	0005883a 	mov	r2,zero
 800c4d8:	003fee06 	br	800c494 <__alt_data_end+0xf800c494>

0800c4dc <_fclose_r>:
 800c4dc:	28003926 	beq	r5,zero,800c5c4 <_fclose_r+0xe8>
 800c4e0:	defffc04 	addi	sp,sp,-16
 800c4e4:	dc400115 	stw	r17,4(sp)
 800c4e8:	dc000015 	stw	r16,0(sp)
 800c4ec:	dfc00315 	stw	ra,12(sp)
 800c4f0:	dc800215 	stw	r18,8(sp)
 800c4f4:	2023883a 	mov	r17,r4
 800c4f8:	2821883a 	mov	r16,r5
 800c4fc:	20000226 	beq	r4,zero,800c508 <_fclose_r+0x2c>
 800c500:	20800e17 	ldw	r2,56(r4)
 800c504:	10002726 	beq	r2,zero,800c5a4 <_fclose_r+0xc8>
 800c508:	8080030f 	ldh	r2,12(r16)
 800c50c:	1000071e 	bne	r2,zero,800c52c <_fclose_r+0x50>
 800c510:	0005883a 	mov	r2,zero
 800c514:	dfc00317 	ldw	ra,12(sp)
 800c518:	dc800217 	ldw	r18,8(sp)
 800c51c:	dc400117 	ldw	r17,4(sp)
 800c520:	dc000017 	ldw	r16,0(sp)
 800c524:	dec00404 	addi	sp,sp,16
 800c528:	f800283a 	ret
 800c52c:	800b883a 	mov	r5,r16
 800c530:	8809883a 	mov	r4,r17
 800c534:	8007c6c0 	call	8007c6c <__sflush_r>
 800c538:	1025883a 	mov	r18,r2
 800c53c:	80800b17 	ldw	r2,44(r16)
 800c540:	10000426 	beq	r2,zero,800c554 <_fclose_r+0x78>
 800c544:	81400717 	ldw	r5,28(r16)
 800c548:	8809883a 	mov	r4,r17
 800c54c:	103ee83a 	callr	r2
 800c550:	10001616 	blt	r2,zero,800c5ac <_fclose_r+0xd0>
 800c554:	8080030b 	ldhu	r2,12(r16)
 800c558:	1080200c 	andi	r2,r2,128
 800c55c:	1000151e 	bne	r2,zero,800c5b4 <_fclose_r+0xd8>
 800c560:	81400c17 	ldw	r5,48(r16)
 800c564:	28000526 	beq	r5,zero,800c57c <_fclose_r+0xa0>
 800c568:	80801004 	addi	r2,r16,64
 800c56c:	28800226 	beq	r5,r2,800c578 <_fclose_r+0x9c>
 800c570:	8809883a 	mov	r4,r17
 800c574:	80083d80 	call	80083d8 <_free_r>
 800c578:	80000c15 	stw	zero,48(r16)
 800c57c:	81401117 	ldw	r5,68(r16)
 800c580:	28000326 	beq	r5,zero,800c590 <_fclose_r+0xb4>
 800c584:	8809883a 	mov	r4,r17
 800c588:	80083d80 	call	80083d8 <_free_r>
 800c58c:	80001115 	stw	zero,68(r16)
 800c590:	80082740 	call	8008274 <__sfp_lock_acquire>
 800c594:	8000030d 	sth	zero,12(r16)
 800c598:	80082780 	call	8008278 <__sfp_lock_release>
 800c59c:	9005883a 	mov	r2,r18
 800c5a0:	003fdc06 	br	800c514 <__alt_data_end+0xf800c514>
 800c5a4:	80082640 	call	8008264 <__sinit>
 800c5a8:	003fd706 	br	800c508 <__alt_data_end+0xf800c508>
 800c5ac:	04bfffc4 	movi	r18,-1
 800c5b0:	003fe806 	br	800c554 <__alt_data_end+0xf800c554>
 800c5b4:	81400417 	ldw	r5,16(r16)
 800c5b8:	8809883a 	mov	r4,r17
 800c5bc:	80083d80 	call	80083d8 <_free_r>
 800c5c0:	003fe706 	br	800c560 <__alt_data_end+0xf800c560>
 800c5c4:	0005883a 	mov	r2,zero
 800c5c8:	f800283a 	ret

0800c5cc <fclose>:
 800c5cc:	00820074 	movhi	r2,2049
 800c5d0:	1093ff04 	addi	r2,r2,20476
 800c5d4:	200b883a 	mov	r5,r4
 800c5d8:	11000017 	ldw	r4,0(r2)
 800c5dc:	800c4dc1 	jmpi	800c4dc <_fclose_r>

0800c5e0 <__fputwc>:
 800c5e0:	defff804 	addi	sp,sp,-32
 800c5e4:	dcc00415 	stw	r19,16(sp)
 800c5e8:	dc800315 	stw	r18,12(sp)
 800c5ec:	dc000115 	stw	r16,4(sp)
 800c5f0:	dfc00715 	stw	ra,28(sp)
 800c5f4:	dd400615 	stw	r21,24(sp)
 800c5f8:	dd000515 	stw	r20,20(sp)
 800c5fc:	dc400215 	stw	r17,8(sp)
 800c600:	2027883a 	mov	r19,r4
 800c604:	2825883a 	mov	r18,r5
 800c608:	3021883a 	mov	r16,r6
 800c60c:	8008db40 	call	8008db4 <__locale_mb_cur_max>
 800c610:	00c00044 	movi	r3,1
 800c614:	10c03e26 	beq	r2,r3,800c710 <__fputwc+0x130>
 800c618:	81c01704 	addi	r7,r16,92
 800c61c:	900d883a 	mov	r6,r18
 800c620:	d80b883a 	mov	r5,sp
 800c624:	9809883a 	mov	r4,r19
 800c628:	800c9580 	call	800c958 <_wcrtomb_r>
 800c62c:	1029883a 	mov	r20,r2
 800c630:	00bfffc4 	movi	r2,-1
 800c634:	a0802026 	beq	r20,r2,800c6b8 <__fputwc+0xd8>
 800c638:	d9400003 	ldbu	r5,0(sp)
 800c63c:	a0001c26 	beq	r20,zero,800c6b0 <__fputwc+0xd0>
 800c640:	0023883a 	mov	r17,zero
 800c644:	05400284 	movi	r21,10
 800c648:	00000906 	br	800c670 <__fputwc+0x90>
 800c64c:	80800017 	ldw	r2,0(r16)
 800c650:	11400005 	stb	r5,0(r2)
 800c654:	80c00017 	ldw	r3,0(r16)
 800c658:	18c00044 	addi	r3,r3,1
 800c65c:	80c00015 	stw	r3,0(r16)
 800c660:	8c400044 	addi	r17,r17,1
 800c664:	dc45883a 	add	r2,sp,r17
 800c668:	8d00112e 	bgeu	r17,r20,800c6b0 <__fputwc+0xd0>
 800c66c:	11400003 	ldbu	r5,0(r2)
 800c670:	80c00217 	ldw	r3,8(r16)
 800c674:	18ffffc4 	addi	r3,r3,-1
 800c678:	80c00215 	stw	r3,8(r16)
 800c67c:	183ff30e 	bge	r3,zero,800c64c <__alt_data_end+0xf800c64c>
 800c680:	80800617 	ldw	r2,24(r16)
 800c684:	18801916 	blt	r3,r2,800c6ec <__fputwc+0x10c>
 800c688:	80800017 	ldw	r2,0(r16)
 800c68c:	11400005 	stb	r5,0(r2)
 800c690:	80800017 	ldw	r2,0(r16)
 800c694:	10c00003 	ldbu	r3,0(r2)
 800c698:	10800044 	addi	r2,r2,1
 800c69c:	1d402326 	beq	r3,r21,800c72c <__fputwc+0x14c>
 800c6a0:	80800015 	stw	r2,0(r16)
 800c6a4:	8c400044 	addi	r17,r17,1
 800c6a8:	dc45883a 	add	r2,sp,r17
 800c6ac:	8d3fef36 	bltu	r17,r20,800c66c <__alt_data_end+0xf800c66c>
 800c6b0:	9005883a 	mov	r2,r18
 800c6b4:	00000406 	br	800c6c8 <__fputwc+0xe8>
 800c6b8:	80c0030b 	ldhu	r3,12(r16)
 800c6bc:	a005883a 	mov	r2,r20
 800c6c0:	18c01014 	ori	r3,r3,64
 800c6c4:	80c0030d 	sth	r3,12(r16)
 800c6c8:	dfc00717 	ldw	ra,28(sp)
 800c6cc:	dd400617 	ldw	r21,24(sp)
 800c6d0:	dd000517 	ldw	r20,20(sp)
 800c6d4:	dcc00417 	ldw	r19,16(sp)
 800c6d8:	dc800317 	ldw	r18,12(sp)
 800c6dc:	dc400217 	ldw	r17,8(sp)
 800c6e0:	dc000117 	ldw	r16,4(sp)
 800c6e4:	dec00804 	addi	sp,sp,32
 800c6e8:	f800283a 	ret
 800c6ec:	800d883a 	mov	r6,r16
 800c6f0:	29403fcc 	andi	r5,r5,255
 800c6f4:	9809883a 	mov	r4,r19
 800c6f8:	800c20c0 	call	800c20c <__swbuf_r>
 800c6fc:	10bfffe0 	cmpeqi	r2,r2,-1
 800c700:	10803fcc 	andi	r2,r2,255
 800c704:	103fd626 	beq	r2,zero,800c660 <__alt_data_end+0xf800c660>
 800c708:	00bfffc4 	movi	r2,-1
 800c70c:	003fee06 	br	800c6c8 <__alt_data_end+0xf800c6c8>
 800c710:	90ffffc4 	addi	r3,r18,-1
 800c714:	01003f84 	movi	r4,254
 800c718:	20ffbf36 	bltu	r4,r3,800c618 <__alt_data_end+0xf800c618>
 800c71c:	900b883a 	mov	r5,r18
 800c720:	dc800005 	stb	r18,0(sp)
 800c724:	1029883a 	mov	r20,r2
 800c728:	003fc506 	br	800c640 <__alt_data_end+0xf800c640>
 800c72c:	800d883a 	mov	r6,r16
 800c730:	a80b883a 	mov	r5,r21
 800c734:	9809883a 	mov	r4,r19
 800c738:	800c20c0 	call	800c20c <__swbuf_r>
 800c73c:	10bfffe0 	cmpeqi	r2,r2,-1
 800c740:	003fef06 	br	800c700 <__alt_data_end+0xf800c700>

0800c744 <_fputwc_r>:
 800c744:	3080030b 	ldhu	r2,12(r6)
 800c748:	10c8000c 	andi	r3,r2,8192
 800c74c:	1800051e 	bne	r3,zero,800c764 <_fputwc_r+0x20>
 800c750:	30c01917 	ldw	r3,100(r6)
 800c754:	10880014 	ori	r2,r2,8192
 800c758:	3080030d 	sth	r2,12(r6)
 800c75c:	18880014 	ori	r2,r3,8192
 800c760:	30801915 	stw	r2,100(r6)
 800c764:	800c5e01 	jmpi	800c5e0 <__fputwc>

0800c768 <fputwc>:
 800c768:	00820074 	movhi	r2,2049
 800c76c:	defffc04 	addi	sp,sp,-16
 800c770:	1093ff04 	addi	r2,r2,20476
 800c774:	dc000115 	stw	r16,4(sp)
 800c778:	14000017 	ldw	r16,0(r2)
 800c77c:	dc400215 	stw	r17,8(sp)
 800c780:	dfc00315 	stw	ra,12(sp)
 800c784:	2023883a 	mov	r17,r4
 800c788:	80000226 	beq	r16,zero,800c794 <fputwc+0x2c>
 800c78c:	80800e17 	ldw	r2,56(r16)
 800c790:	10001026 	beq	r2,zero,800c7d4 <fputwc+0x6c>
 800c794:	2880030b 	ldhu	r2,12(r5)
 800c798:	10c8000c 	andi	r3,r2,8192
 800c79c:	1800051e 	bne	r3,zero,800c7b4 <fputwc+0x4c>
 800c7a0:	28c01917 	ldw	r3,100(r5)
 800c7a4:	10880014 	ori	r2,r2,8192
 800c7a8:	2880030d 	sth	r2,12(r5)
 800c7ac:	18880014 	ori	r2,r3,8192
 800c7b0:	28801915 	stw	r2,100(r5)
 800c7b4:	280d883a 	mov	r6,r5
 800c7b8:	8009883a 	mov	r4,r16
 800c7bc:	880b883a 	mov	r5,r17
 800c7c0:	dfc00317 	ldw	ra,12(sp)
 800c7c4:	dc400217 	ldw	r17,8(sp)
 800c7c8:	dc000117 	ldw	r16,4(sp)
 800c7cc:	dec00404 	addi	sp,sp,16
 800c7d0:	800c5e01 	jmpi	800c5e0 <__fputwc>
 800c7d4:	8009883a 	mov	r4,r16
 800c7d8:	d9400015 	stw	r5,0(sp)
 800c7dc:	80082640 	call	8008264 <__sinit>
 800c7e0:	d9400017 	ldw	r5,0(sp)
 800c7e4:	003feb06 	br	800c794 <__alt_data_end+0xf800c794>

0800c7e8 <_fstat_r>:
 800c7e8:	defffd04 	addi	sp,sp,-12
 800c7ec:	2805883a 	mov	r2,r5
 800c7f0:	dc000015 	stw	r16,0(sp)
 800c7f4:	04020074 	movhi	r16,2049
 800c7f8:	dc400115 	stw	r17,4(sp)
 800c7fc:	841ad904 	addi	r16,r16,27492
 800c800:	2023883a 	mov	r17,r4
 800c804:	300b883a 	mov	r5,r6
 800c808:	1009883a 	mov	r4,r2
 800c80c:	dfc00215 	stw	ra,8(sp)
 800c810:	80000015 	stw	zero,0(r16)
 800c814:	800ffb40 	call	800ffb4 <fstat>
 800c818:	00ffffc4 	movi	r3,-1
 800c81c:	10c00526 	beq	r2,r3,800c834 <_fstat_r+0x4c>
 800c820:	dfc00217 	ldw	ra,8(sp)
 800c824:	dc400117 	ldw	r17,4(sp)
 800c828:	dc000017 	ldw	r16,0(sp)
 800c82c:	dec00304 	addi	sp,sp,12
 800c830:	f800283a 	ret
 800c834:	80c00017 	ldw	r3,0(r16)
 800c838:	183ff926 	beq	r3,zero,800c820 <__alt_data_end+0xf800c820>
 800c83c:	88c00015 	stw	r3,0(r17)
 800c840:	003ff706 	br	800c820 <__alt_data_end+0xf800c820>

0800c844 <_isatty_r>:
 800c844:	defffd04 	addi	sp,sp,-12
 800c848:	dc000015 	stw	r16,0(sp)
 800c84c:	04020074 	movhi	r16,2049
 800c850:	dc400115 	stw	r17,4(sp)
 800c854:	841ad904 	addi	r16,r16,27492
 800c858:	2023883a 	mov	r17,r4
 800c85c:	2809883a 	mov	r4,r5
 800c860:	dfc00215 	stw	ra,8(sp)
 800c864:	80000015 	stw	zero,0(r16)
 800c868:	80100c00 	call	80100c0 <isatty>
 800c86c:	00ffffc4 	movi	r3,-1
 800c870:	10c00526 	beq	r2,r3,800c888 <_isatty_r+0x44>
 800c874:	dfc00217 	ldw	ra,8(sp)
 800c878:	dc400117 	ldw	r17,4(sp)
 800c87c:	dc000017 	ldw	r16,0(sp)
 800c880:	dec00304 	addi	sp,sp,12
 800c884:	f800283a 	ret
 800c888:	80c00017 	ldw	r3,0(r16)
 800c88c:	183ff926 	beq	r3,zero,800c874 <__alt_data_end+0xf800c874>
 800c890:	88c00015 	stw	r3,0(r17)
 800c894:	003ff706 	br	800c874 <__alt_data_end+0xf800c874>

0800c898 <_lseek_r>:
 800c898:	defffd04 	addi	sp,sp,-12
 800c89c:	2805883a 	mov	r2,r5
 800c8a0:	dc000015 	stw	r16,0(sp)
 800c8a4:	04020074 	movhi	r16,2049
 800c8a8:	dc400115 	stw	r17,4(sp)
 800c8ac:	300b883a 	mov	r5,r6
 800c8b0:	841ad904 	addi	r16,r16,27492
 800c8b4:	2023883a 	mov	r17,r4
 800c8b8:	380d883a 	mov	r6,r7
 800c8bc:	1009883a 	mov	r4,r2
 800c8c0:	dfc00215 	stw	ra,8(sp)
 800c8c4:	80000015 	stw	zero,0(r16)
 800c8c8:	80103f80 	call	80103f8 <lseek>
 800c8cc:	00ffffc4 	movi	r3,-1
 800c8d0:	10c00526 	beq	r2,r3,800c8e8 <_lseek_r+0x50>
 800c8d4:	dfc00217 	ldw	ra,8(sp)
 800c8d8:	dc400117 	ldw	r17,4(sp)
 800c8dc:	dc000017 	ldw	r16,0(sp)
 800c8e0:	dec00304 	addi	sp,sp,12
 800c8e4:	f800283a 	ret
 800c8e8:	80c00017 	ldw	r3,0(r16)
 800c8ec:	183ff926 	beq	r3,zero,800c8d4 <__alt_data_end+0xf800c8d4>
 800c8f0:	88c00015 	stw	r3,0(r17)
 800c8f4:	003ff706 	br	800c8d4 <__alt_data_end+0xf800c8d4>

0800c8f8 <_read_r>:
 800c8f8:	defffd04 	addi	sp,sp,-12
 800c8fc:	2805883a 	mov	r2,r5
 800c900:	dc000015 	stw	r16,0(sp)
 800c904:	04020074 	movhi	r16,2049
 800c908:	dc400115 	stw	r17,4(sp)
 800c90c:	300b883a 	mov	r5,r6
 800c910:	841ad904 	addi	r16,r16,27492
 800c914:	2023883a 	mov	r17,r4
 800c918:	380d883a 	mov	r6,r7
 800c91c:	1009883a 	mov	r4,r2
 800c920:	dfc00215 	stw	ra,8(sp)
 800c924:	80000015 	stw	zero,0(r16)
 800c928:	80105cc0 	call	80105cc <read>
 800c92c:	00ffffc4 	movi	r3,-1
 800c930:	10c00526 	beq	r2,r3,800c948 <_read_r+0x50>
 800c934:	dfc00217 	ldw	ra,8(sp)
 800c938:	dc400117 	ldw	r17,4(sp)
 800c93c:	dc000017 	ldw	r16,0(sp)
 800c940:	dec00304 	addi	sp,sp,12
 800c944:	f800283a 	ret
 800c948:	80c00017 	ldw	r3,0(r16)
 800c94c:	183ff926 	beq	r3,zero,800c934 <__alt_data_end+0xf800c934>
 800c950:	88c00015 	stw	r3,0(r17)
 800c954:	003ff706 	br	800c934 <__alt_data_end+0xf800c934>

0800c958 <_wcrtomb_r>:
 800c958:	defff604 	addi	sp,sp,-40
 800c95c:	00820074 	movhi	r2,2049
 800c960:	dc800815 	stw	r18,32(sp)
 800c964:	dc400715 	stw	r17,28(sp)
 800c968:	dc000615 	stw	r16,24(sp)
 800c96c:	10940104 	addi	r2,r2,20484
 800c970:	dfc00915 	stw	ra,36(sp)
 800c974:	2021883a 	mov	r16,r4
 800c978:	3823883a 	mov	r17,r7
 800c97c:	14800017 	ldw	r18,0(r2)
 800c980:	28001426 	beq	r5,zero,800c9d4 <_wcrtomb_r+0x7c>
 800c984:	d9400415 	stw	r5,16(sp)
 800c988:	d9800515 	stw	r6,20(sp)
 800c98c:	8008da80 	call	8008da8 <__locale_charset>
 800c990:	d9800517 	ldw	r6,20(sp)
 800c994:	d9400417 	ldw	r5,16(sp)
 800c998:	100f883a 	mov	r7,r2
 800c99c:	dc400015 	stw	r17,0(sp)
 800c9a0:	8009883a 	mov	r4,r16
 800c9a4:	903ee83a 	callr	r18
 800c9a8:	00ffffc4 	movi	r3,-1
 800c9ac:	10c0031e 	bne	r2,r3,800c9bc <_wcrtomb_r+0x64>
 800c9b0:	88000015 	stw	zero,0(r17)
 800c9b4:	00c02284 	movi	r3,138
 800c9b8:	80c00015 	stw	r3,0(r16)
 800c9bc:	dfc00917 	ldw	ra,36(sp)
 800c9c0:	dc800817 	ldw	r18,32(sp)
 800c9c4:	dc400717 	ldw	r17,28(sp)
 800c9c8:	dc000617 	ldw	r16,24(sp)
 800c9cc:	dec00a04 	addi	sp,sp,40
 800c9d0:	f800283a 	ret
 800c9d4:	8008da80 	call	8008da8 <__locale_charset>
 800c9d8:	100f883a 	mov	r7,r2
 800c9dc:	dc400015 	stw	r17,0(sp)
 800c9e0:	000d883a 	mov	r6,zero
 800c9e4:	d9400104 	addi	r5,sp,4
 800c9e8:	8009883a 	mov	r4,r16
 800c9ec:	903ee83a 	callr	r18
 800c9f0:	003fed06 	br	800c9a8 <__alt_data_end+0xf800c9a8>

0800c9f4 <wcrtomb>:
 800c9f4:	defff604 	addi	sp,sp,-40
 800c9f8:	00820074 	movhi	r2,2049
 800c9fc:	dc800615 	stw	r18,24(sp)
 800ca00:	dc400515 	stw	r17,20(sp)
 800ca04:	1093ff04 	addi	r2,r2,20476
 800ca08:	dfc00915 	stw	ra,36(sp)
 800ca0c:	dd000815 	stw	r20,32(sp)
 800ca10:	dcc00715 	stw	r19,28(sp)
 800ca14:	dc000415 	stw	r16,16(sp)
 800ca18:	3025883a 	mov	r18,r6
 800ca1c:	14400017 	ldw	r17,0(r2)
 800ca20:	20001926 	beq	r4,zero,800ca88 <wcrtomb+0x94>
 800ca24:	00820074 	movhi	r2,2049
 800ca28:	10940104 	addi	r2,r2,20484
 800ca2c:	15000017 	ldw	r20,0(r2)
 800ca30:	2021883a 	mov	r16,r4
 800ca34:	2827883a 	mov	r19,r5
 800ca38:	8008da80 	call	8008da8 <__locale_charset>
 800ca3c:	100f883a 	mov	r7,r2
 800ca40:	dc800015 	stw	r18,0(sp)
 800ca44:	980d883a 	mov	r6,r19
 800ca48:	800b883a 	mov	r5,r16
 800ca4c:	8809883a 	mov	r4,r17
 800ca50:	a03ee83a 	callr	r20
 800ca54:	00ffffc4 	movi	r3,-1
 800ca58:	10c0031e 	bne	r2,r3,800ca68 <wcrtomb+0x74>
 800ca5c:	90000015 	stw	zero,0(r18)
 800ca60:	00c02284 	movi	r3,138
 800ca64:	88c00015 	stw	r3,0(r17)
 800ca68:	dfc00917 	ldw	ra,36(sp)
 800ca6c:	dd000817 	ldw	r20,32(sp)
 800ca70:	dcc00717 	ldw	r19,28(sp)
 800ca74:	dc800617 	ldw	r18,24(sp)
 800ca78:	dc400517 	ldw	r17,20(sp)
 800ca7c:	dc000417 	ldw	r16,16(sp)
 800ca80:	dec00a04 	addi	sp,sp,40
 800ca84:	f800283a 	ret
 800ca88:	00820074 	movhi	r2,2049
 800ca8c:	10940104 	addi	r2,r2,20484
 800ca90:	14000017 	ldw	r16,0(r2)
 800ca94:	8008da80 	call	8008da8 <__locale_charset>
 800ca98:	100f883a 	mov	r7,r2
 800ca9c:	dc800015 	stw	r18,0(sp)
 800caa0:	000d883a 	mov	r6,zero
 800caa4:	d9400104 	addi	r5,sp,4
 800caa8:	8809883a 	mov	r4,r17
 800caac:	803ee83a 	callr	r16
 800cab0:	003fe806 	br	800ca54 <__alt_data_end+0xf800ca54>

0800cab4 <__ascii_wctomb>:
 800cab4:	28000526 	beq	r5,zero,800cacc <__ascii_wctomb+0x18>
 800cab8:	00803fc4 	movi	r2,255
 800cabc:	11800536 	bltu	r2,r6,800cad4 <__ascii_wctomb+0x20>
 800cac0:	29800005 	stb	r6,0(r5)
 800cac4:	00800044 	movi	r2,1
 800cac8:	f800283a 	ret
 800cacc:	0005883a 	mov	r2,zero
 800cad0:	f800283a 	ret
 800cad4:	00802284 	movi	r2,138
 800cad8:	20800015 	stw	r2,0(r4)
 800cadc:	00bfffc4 	movi	r2,-1
 800cae0:	f800283a 	ret

0800cae4 <_wctomb_r>:
 800cae4:	00820074 	movhi	r2,2049
 800cae8:	defff904 	addi	sp,sp,-28
 800caec:	10940104 	addi	r2,r2,20484
 800caf0:	dfc00615 	stw	ra,24(sp)
 800caf4:	dc400515 	stw	r17,20(sp)
 800caf8:	dc000415 	stw	r16,16(sp)
 800cafc:	3823883a 	mov	r17,r7
 800cb00:	14000017 	ldw	r16,0(r2)
 800cb04:	d9000115 	stw	r4,4(sp)
 800cb08:	d9400215 	stw	r5,8(sp)
 800cb0c:	d9800315 	stw	r6,12(sp)
 800cb10:	8008da80 	call	8008da8 <__locale_charset>
 800cb14:	d9800317 	ldw	r6,12(sp)
 800cb18:	d9400217 	ldw	r5,8(sp)
 800cb1c:	d9000117 	ldw	r4,4(sp)
 800cb20:	100f883a 	mov	r7,r2
 800cb24:	dc400015 	stw	r17,0(sp)
 800cb28:	803ee83a 	callr	r16
 800cb2c:	dfc00617 	ldw	ra,24(sp)
 800cb30:	dc400517 	ldw	r17,20(sp)
 800cb34:	dc000417 	ldw	r16,16(sp)
 800cb38:	dec00704 	addi	sp,sp,28
 800cb3c:	f800283a 	ret

0800cb40 <__udivdi3>:
 800cb40:	defff504 	addi	sp,sp,-44
 800cb44:	dcc00415 	stw	r19,16(sp)
 800cb48:	dc000115 	stw	r16,4(sp)
 800cb4c:	dfc00a15 	stw	ra,40(sp)
 800cb50:	df000915 	stw	fp,36(sp)
 800cb54:	ddc00815 	stw	r23,32(sp)
 800cb58:	dd800715 	stw	r22,28(sp)
 800cb5c:	dd400615 	stw	r21,24(sp)
 800cb60:	dd000515 	stw	r20,20(sp)
 800cb64:	dc800315 	stw	r18,12(sp)
 800cb68:	dc400215 	stw	r17,8(sp)
 800cb6c:	2027883a 	mov	r19,r4
 800cb70:	2821883a 	mov	r16,r5
 800cb74:	3800411e 	bne	r7,zero,800cc7c <__udivdi3+0x13c>
 800cb78:	3023883a 	mov	r17,r6
 800cb7c:	2025883a 	mov	r18,r4
 800cb80:	2980522e 	bgeu	r5,r6,800cccc <__udivdi3+0x18c>
 800cb84:	00bfffd4 	movui	r2,65535
 800cb88:	282d883a 	mov	r22,r5
 800cb8c:	1180a836 	bltu	r2,r6,800ce30 <__udivdi3+0x2f0>
 800cb90:	00803fc4 	movi	r2,255
 800cb94:	1185803a 	cmpltu	r2,r2,r6
 800cb98:	100490fa 	slli	r2,r2,3
 800cb9c:	3086d83a 	srl	r3,r6,r2
 800cba0:	01020074 	movhi	r4,2049
 800cba4:	210cf904 	addi	r4,r4,13284
 800cba8:	20c7883a 	add	r3,r4,r3
 800cbac:	18c00003 	ldbu	r3,0(r3)
 800cbb0:	1885883a 	add	r2,r3,r2
 800cbb4:	00c00804 	movi	r3,32
 800cbb8:	1887c83a 	sub	r3,r3,r2
 800cbbc:	18000526 	beq	r3,zero,800cbd4 <__udivdi3+0x94>
 800cbc0:	80e0983a 	sll	r16,r16,r3
 800cbc4:	9884d83a 	srl	r2,r19,r2
 800cbc8:	30e2983a 	sll	r17,r6,r3
 800cbcc:	98e4983a 	sll	r18,r19,r3
 800cbd0:	142cb03a 	or	r22,r2,r16
 800cbd4:	882ad43a 	srli	r21,r17,16
 800cbd8:	b009883a 	mov	r4,r22
 800cbdc:	8d3fffcc 	andi	r20,r17,65535
 800cbe0:	a80b883a 	mov	r5,r21
 800cbe4:	800d74c0 	call	800d74c <__umodsi3>
 800cbe8:	b009883a 	mov	r4,r22
 800cbec:	a80b883a 	mov	r5,r21
 800cbf0:	1027883a 	mov	r19,r2
 800cbf4:	800d6e80 	call	800d6e8 <__udivsi3>
 800cbf8:	102d883a 	mov	r22,r2
 800cbfc:	9826943a 	slli	r19,r19,16
 800cc00:	9004d43a 	srli	r2,r18,16
 800cc04:	a5a1383a 	mul	r16,r20,r22
 800cc08:	14c4b03a 	or	r2,r2,r19
 800cc0c:	1400052e 	bgeu	r2,r16,800cc24 <__udivdi3+0xe4>
 800cc10:	1445883a 	add	r2,r2,r17
 800cc14:	b0ffffc4 	addi	r3,r22,-1
 800cc18:	14400136 	bltu	r2,r17,800cc20 <__udivdi3+0xe0>
 800cc1c:	14012336 	bltu	r2,r16,800d0ac <__udivdi3+0x56c>
 800cc20:	182d883a 	mov	r22,r3
 800cc24:	1421c83a 	sub	r16,r2,r16
 800cc28:	a80b883a 	mov	r5,r21
 800cc2c:	8009883a 	mov	r4,r16
 800cc30:	800d74c0 	call	800d74c <__umodsi3>
 800cc34:	1027883a 	mov	r19,r2
 800cc38:	a80b883a 	mov	r5,r21
 800cc3c:	8009883a 	mov	r4,r16
 800cc40:	800d6e80 	call	800d6e8 <__udivsi3>
 800cc44:	9826943a 	slli	r19,r19,16
 800cc48:	a0a9383a 	mul	r20,r20,r2
 800cc4c:	94bfffcc 	andi	r18,r18,65535
 800cc50:	94e4b03a 	or	r18,r18,r19
 800cc54:	9500052e 	bgeu	r18,r20,800cc6c <__udivdi3+0x12c>
 800cc58:	8ca5883a 	add	r18,r17,r18
 800cc5c:	10ffffc4 	addi	r3,r2,-1
 800cc60:	9440f136 	bltu	r18,r17,800d028 <__udivdi3+0x4e8>
 800cc64:	9500f02e 	bgeu	r18,r20,800d028 <__udivdi3+0x4e8>
 800cc68:	10bfff84 	addi	r2,r2,-2
 800cc6c:	b00c943a 	slli	r6,r22,16
 800cc70:	0007883a 	mov	r3,zero
 800cc74:	3084b03a 	or	r2,r6,r2
 800cc78:	00005906 	br	800cde0 <__udivdi3+0x2a0>
 800cc7c:	29c05636 	bltu	r5,r7,800cdd8 <__udivdi3+0x298>
 800cc80:	00bfffd4 	movui	r2,65535
 800cc84:	11c0622e 	bgeu	r2,r7,800ce10 <__udivdi3+0x2d0>
 800cc88:	00804034 	movhi	r2,256
 800cc8c:	10bfffc4 	addi	r2,r2,-1
 800cc90:	11c0ee36 	bltu	r2,r7,800d04c <__udivdi3+0x50c>
 800cc94:	00800404 	movi	r2,16
 800cc98:	3886d83a 	srl	r3,r7,r2
 800cc9c:	01020074 	movhi	r4,2049
 800cca0:	210cf904 	addi	r4,r4,13284
 800cca4:	20c7883a 	add	r3,r4,r3
 800cca8:	18c00003 	ldbu	r3,0(r3)
 800ccac:	05400804 	movi	r21,32
 800ccb0:	1885883a 	add	r2,r3,r2
 800ccb4:	a8abc83a 	sub	r21,r21,r2
 800ccb8:	a800621e 	bne	r21,zero,800ce44 <__udivdi3+0x304>
 800ccbc:	3c00e936 	bltu	r7,r16,800d064 <__udivdi3+0x524>
 800ccc0:	9985403a 	cmpgeu	r2,r19,r6
 800ccc4:	0007883a 	mov	r3,zero
 800ccc8:	00004506 	br	800cde0 <__udivdi3+0x2a0>
 800cccc:	3000041e 	bne	r6,zero,800cce0 <__udivdi3+0x1a0>
 800ccd0:	000b883a 	mov	r5,zero
 800ccd4:	01000044 	movi	r4,1
 800ccd8:	800d6e80 	call	800d6e8 <__udivsi3>
 800ccdc:	1023883a 	mov	r17,r2
 800cce0:	00bfffd4 	movui	r2,65535
 800cce4:	14404e2e 	bgeu	r2,r17,800ce20 <__udivdi3+0x2e0>
 800cce8:	00804034 	movhi	r2,256
 800ccec:	10bfffc4 	addi	r2,r2,-1
 800ccf0:	1440d836 	bltu	r2,r17,800d054 <__udivdi3+0x514>
 800ccf4:	00800404 	movi	r2,16
 800ccf8:	8886d83a 	srl	r3,r17,r2
 800ccfc:	01020074 	movhi	r4,2049
 800cd00:	210cf904 	addi	r4,r4,13284
 800cd04:	20c7883a 	add	r3,r4,r3
 800cd08:	18c00003 	ldbu	r3,0(r3)
 800cd0c:	1885883a 	add	r2,r3,r2
 800cd10:	00c00804 	movi	r3,32
 800cd14:	1887c83a 	sub	r3,r3,r2
 800cd18:	18008f1e 	bne	r3,zero,800cf58 <__udivdi3+0x418>
 800cd1c:	882ad43a 	srli	r21,r17,16
 800cd20:	8461c83a 	sub	r16,r16,r17
 800cd24:	8d3fffcc 	andi	r20,r17,65535
 800cd28:	00c00044 	movi	r3,1
 800cd2c:	8009883a 	mov	r4,r16
 800cd30:	a80b883a 	mov	r5,r21
 800cd34:	d8c00015 	stw	r3,0(sp)
 800cd38:	800d74c0 	call	800d74c <__umodsi3>
 800cd3c:	8009883a 	mov	r4,r16
 800cd40:	a80b883a 	mov	r5,r21
 800cd44:	1027883a 	mov	r19,r2
 800cd48:	800d6e80 	call	800d6e8 <__udivsi3>
 800cd4c:	9826943a 	slli	r19,r19,16
 800cd50:	9008d43a 	srli	r4,r18,16
 800cd54:	1521383a 	mul	r16,r2,r20
 800cd58:	102d883a 	mov	r22,r2
 800cd5c:	24c8b03a 	or	r4,r4,r19
 800cd60:	d8c00017 	ldw	r3,0(sp)
 800cd64:	2400052e 	bgeu	r4,r16,800cd7c <__udivdi3+0x23c>
 800cd68:	2449883a 	add	r4,r4,r17
 800cd6c:	b0bfffc4 	addi	r2,r22,-1
 800cd70:	24400136 	bltu	r4,r17,800cd78 <__udivdi3+0x238>
 800cd74:	2400ca36 	bltu	r4,r16,800d0a0 <__udivdi3+0x560>
 800cd78:	102d883a 	mov	r22,r2
 800cd7c:	2421c83a 	sub	r16,r4,r16
 800cd80:	a80b883a 	mov	r5,r21
 800cd84:	8009883a 	mov	r4,r16
 800cd88:	d8c00015 	stw	r3,0(sp)
 800cd8c:	800d74c0 	call	800d74c <__umodsi3>
 800cd90:	1027883a 	mov	r19,r2
 800cd94:	a80b883a 	mov	r5,r21
 800cd98:	8009883a 	mov	r4,r16
 800cd9c:	800d6e80 	call	800d6e8 <__udivsi3>
 800cda0:	9826943a 	slli	r19,r19,16
 800cda4:	1529383a 	mul	r20,r2,r20
 800cda8:	94bfffcc 	andi	r18,r18,65535
 800cdac:	94e4b03a 	or	r18,r18,r19
 800cdb0:	d8c00017 	ldw	r3,0(sp)
 800cdb4:	9500052e 	bgeu	r18,r20,800cdcc <__udivdi3+0x28c>
 800cdb8:	8ca5883a 	add	r18,r17,r18
 800cdbc:	113fffc4 	addi	r4,r2,-1
 800cdc0:	94409736 	bltu	r18,r17,800d020 <__udivdi3+0x4e0>
 800cdc4:	9500962e 	bgeu	r18,r20,800d020 <__udivdi3+0x4e0>
 800cdc8:	10bfff84 	addi	r2,r2,-2
 800cdcc:	b00c943a 	slli	r6,r22,16
 800cdd0:	3084b03a 	or	r2,r6,r2
 800cdd4:	00000206 	br	800cde0 <__udivdi3+0x2a0>
 800cdd8:	0007883a 	mov	r3,zero
 800cddc:	0005883a 	mov	r2,zero
 800cde0:	dfc00a17 	ldw	ra,40(sp)
 800cde4:	df000917 	ldw	fp,36(sp)
 800cde8:	ddc00817 	ldw	r23,32(sp)
 800cdec:	dd800717 	ldw	r22,28(sp)
 800cdf0:	dd400617 	ldw	r21,24(sp)
 800cdf4:	dd000517 	ldw	r20,20(sp)
 800cdf8:	dcc00417 	ldw	r19,16(sp)
 800cdfc:	dc800317 	ldw	r18,12(sp)
 800ce00:	dc400217 	ldw	r17,8(sp)
 800ce04:	dc000117 	ldw	r16,4(sp)
 800ce08:	dec00b04 	addi	sp,sp,44
 800ce0c:	f800283a 	ret
 800ce10:	00803fc4 	movi	r2,255
 800ce14:	11c5803a 	cmpltu	r2,r2,r7
 800ce18:	100490fa 	slli	r2,r2,3
 800ce1c:	003f9e06 	br	800cc98 <__alt_data_end+0xf800cc98>
 800ce20:	00803fc4 	movi	r2,255
 800ce24:	1445803a 	cmpltu	r2,r2,r17
 800ce28:	100490fa 	slli	r2,r2,3
 800ce2c:	003fb206 	br	800ccf8 <__alt_data_end+0xf800ccf8>
 800ce30:	00804034 	movhi	r2,256
 800ce34:	10bfffc4 	addi	r2,r2,-1
 800ce38:	11808836 	bltu	r2,r6,800d05c <__udivdi3+0x51c>
 800ce3c:	00800404 	movi	r2,16
 800ce40:	003f5606 	br	800cb9c <__alt_data_end+0xf800cb9c>
 800ce44:	30aed83a 	srl	r23,r6,r2
 800ce48:	3d4e983a 	sll	r7,r7,r21
 800ce4c:	80acd83a 	srl	r22,r16,r2
 800ce50:	9884d83a 	srl	r2,r19,r2
 800ce54:	3deeb03a 	or	r23,r7,r23
 800ce58:	b824d43a 	srli	r18,r23,16
 800ce5c:	8560983a 	sll	r16,r16,r21
 800ce60:	b009883a 	mov	r4,r22
 800ce64:	900b883a 	mov	r5,r18
 800ce68:	3568983a 	sll	r20,r6,r21
 800ce6c:	1420b03a 	or	r16,r2,r16
 800ce70:	800d74c0 	call	800d74c <__umodsi3>
 800ce74:	b009883a 	mov	r4,r22
 800ce78:	900b883a 	mov	r5,r18
 800ce7c:	1023883a 	mov	r17,r2
 800ce80:	800d6e80 	call	800d6e8 <__udivsi3>
 800ce84:	8808943a 	slli	r4,r17,16
 800ce88:	bf3fffcc 	andi	fp,r23,65535
 800ce8c:	8006d43a 	srli	r3,r16,16
 800ce90:	e0a3383a 	mul	r17,fp,r2
 800ce94:	100d883a 	mov	r6,r2
 800ce98:	1906b03a 	or	r3,r3,r4
 800ce9c:	1c40042e 	bgeu	r3,r17,800ceb0 <__udivdi3+0x370>
 800cea0:	1dc7883a 	add	r3,r3,r23
 800cea4:	10bfffc4 	addi	r2,r2,-1
 800cea8:	1dc0752e 	bgeu	r3,r23,800d080 <__udivdi3+0x540>
 800ceac:	100d883a 	mov	r6,r2
 800ceb0:	1c63c83a 	sub	r17,r3,r17
 800ceb4:	900b883a 	mov	r5,r18
 800ceb8:	8809883a 	mov	r4,r17
 800cebc:	d9800015 	stw	r6,0(sp)
 800cec0:	800d74c0 	call	800d74c <__umodsi3>
 800cec4:	102d883a 	mov	r22,r2
 800cec8:	8809883a 	mov	r4,r17
 800cecc:	900b883a 	mov	r5,r18
 800ced0:	800d6e80 	call	800d6e8 <__udivsi3>
 800ced4:	b02c943a 	slli	r22,r22,16
 800ced8:	e089383a 	mul	r4,fp,r2
 800cedc:	843fffcc 	andi	r16,r16,65535
 800cee0:	85a0b03a 	or	r16,r16,r22
 800cee4:	d9800017 	ldw	r6,0(sp)
 800cee8:	8100042e 	bgeu	r16,r4,800cefc <__udivdi3+0x3bc>
 800ceec:	85e1883a 	add	r16,r16,r23
 800cef0:	10ffffc4 	addi	r3,r2,-1
 800cef4:	85c05e2e 	bgeu	r16,r23,800d070 <__udivdi3+0x530>
 800cef8:	1805883a 	mov	r2,r3
 800cefc:	300c943a 	slli	r6,r6,16
 800cf00:	a17fffcc 	andi	r5,r20,65535
 800cf04:	a028d43a 	srli	r20,r20,16
 800cf08:	3084b03a 	or	r2,r6,r2
 800cf0c:	10ffffcc 	andi	r3,r2,65535
 800cf10:	100cd43a 	srli	r6,r2,16
 800cf14:	194f383a 	mul	r7,r3,r5
 800cf18:	1d07383a 	mul	r3,r3,r20
 800cf1c:	314b383a 	mul	r5,r6,r5
 800cf20:	3810d43a 	srli	r8,r7,16
 800cf24:	8121c83a 	sub	r16,r16,r4
 800cf28:	1947883a 	add	r3,r3,r5
 800cf2c:	40c7883a 	add	r3,r8,r3
 800cf30:	350d383a 	mul	r6,r6,r20
 800cf34:	1940022e 	bgeu	r3,r5,800cf40 <__udivdi3+0x400>
 800cf38:	01000074 	movhi	r4,1
 800cf3c:	310d883a 	add	r6,r6,r4
 800cf40:	1828d43a 	srli	r20,r3,16
 800cf44:	a18d883a 	add	r6,r20,r6
 800cf48:	81803e36 	bltu	r16,r6,800d044 <__udivdi3+0x504>
 800cf4c:	81803826 	beq	r16,r6,800d030 <__udivdi3+0x4f0>
 800cf50:	0007883a 	mov	r3,zero
 800cf54:	003fa206 	br	800cde0 <__alt_data_end+0xf800cde0>
 800cf58:	88e2983a 	sll	r17,r17,r3
 800cf5c:	80a8d83a 	srl	r20,r16,r2
 800cf60:	80e0983a 	sll	r16,r16,r3
 800cf64:	882ad43a 	srli	r21,r17,16
 800cf68:	9884d83a 	srl	r2,r19,r2
 800cf6c:	a009883a 	mov	r4,r20
 800cf70:	a80b883a 	mov	r5,r21
 800cf74:	142eb03a 	or	r23,r2,r16
 800cf78:	98e4983a 	sll	r18,r19,r3
 800cf7c:	800d74c0 	call	800d74c <__umodsi3>
 800cf80:	a009883a 	mov	r4,r20
 800cf84:	a80b883a 	mov	r5,r21
 800cf88:	1021883a 	mov	r16,r2
 800cf8c:	800d6e80 	call	800d6e8 <__udivsi3>
 800cf90:	1039883a 	mov	fp,r2
 800cf94:	8d3fffcc 	andi	r20,r17,65535
 800cf98:	8020943a 	slli	r16,r16,16
 800cf9c:	b804d43a 	srli	r2,r23,16
 800cfa0:	a72d383a 	mul	r22,r20,fp
 800cfa4:	1404b03a 	or	r2,r2,r16
 800cfa8:	1580062e 	bgeu	r2,r22,800cfc4 <__udivdi3+0x484>
 800cfac:	1445883a 	add	r2,r2,r17
 800cfb0:	e0ffffc4 	addi	r3,fp,-1
 800cfb4:	14403836 	bltu	r2,r17,800d098 <__udivdi3+0x558>
 800cfb8:	1580372e 	bgeu	r2,r22,800d098 <__udivdi3+0x558>
 800cfbc:	e73fff84 	addi	fp,fp,-2
 800cfc0:	1445883a 	add	r2,r2,r17
 800cfc4:	15adc83a 	sub	r22,r2,r22
 800cfc8:	a80b883a 	mov	r5,r21
 800cfcc:	b009883a 	mov	r4,r22
 800cfd0:	800d74c0 	call	800d74c <__umodsi3>
 800cfd4:	1027883a 	mov	r19,r2
 800cfd8:	b009883a 	mov	r4,r22
 800cfdc:	a80b883a 	mov	r5,r21
 800cfe0:	800d6e80 	call	800d6e8 <__udivsi3>
 800cfe4:	9826943a 	slli	r19,r19,16
 800cfe8:	a0a1383a 	mul	r16,r20,r2
 800cfec:	b93fffcc 	andi	r4,r23,65535
 800cff0:	24c8b03a 	or	r4,r4,r19
 800cff4:	2400062e 	bgeu	r4,r16,800d010 <__udivdi3+0x4d0>
 800cff8:	2449883a 	add	r4,r4,r17
 800cffc:	10ffffc4 	addi	r3,r2,-1
 800d000:	24402336 	bltu	r4,r17,800d090 <__udivdi3+0x550>
 800d004:	2400222e 	bgeu	r4,r16,800d090 <__udivdi3+0x550>
 800d008:	10bfff84 	addi	r2,r2,-2
 800d00c:	2449883a 	add	r4,r4,r17
 800d010:	e038943a 	slli	fp,fp,16
 800d014:	2421c83a 	sub	r16,r4,r16
 800d018:	e086b03a 	or	r3,fp,r2
 800d01c:	003f4306 	br	800cd2c <__alt_data_end+0xf800cd2c>
 800d020:	2005883a 	mov	r2,r4
 800d024:	003f6906 	br	800cdcc <__alt_data_end+0xf800cdcc>
 800d028:	1805883a 	mov	r2,r3
 800d02c:	003f0f06 	br	800cc6c <__alt_data_end+0xf800cc6c>
 800d030:	1806943a 	slli	r3,r3,16
 800d034:	9d66983a 	sll	r19,r19,r21
 800d038:	39ffffcc 	andi	r7,r7,65535
 800d03c:	19c7883a 	add	r3,r3,r7
 800d040:	98ffc32e 	bgeu	r19,r3,800cf50 <__alt_data_end+0xf800cf50>
 800d044:	10bfffc4 	addi	r2,r2,-1
 800d048:	003fc106 	br	800cf50 <__alt_data_end+0xf800cf50>
 800d04c:	00800604 	movi	r2,24
 800d050:	003f1106 	br	800cc98 <__alt_data_end+0xf800cc98>
 800d054:	00800604 	movi	r2,24
 800d058:	003f2706 	br	800ccf8 <__alt_data_end+0xf800ccf8>
 800d05c:	00800604 	movi	r2,24
 800d060:	003ece06 	br	800cb9c <__alt_data_end+0xf800cb9c>
 800d064:	0007883a 	mov	r3,zero
 800d068:	00800044 	movi	r2,1
 800d06c:	003f5c06 	br	800cde0 <__alt_data_end+0xf800cde0>
 800d070:	813fa12e 	bgeu	r16,r4,800cef8 <__alt_data_end+0xf800cef8>
 800d074:	10bfff84 	addi	r2,r2,-2
 800d078:	85e1883a 	add	r16,r16,r23
 800d07c:	003f9f06 	br	800cefc <__alt_data_end+0xf800cefc>
 800d080:	1c7f8a2e 	bgeu	r3,r17,800ceac <__alt_data_end+0xf800ceac>
 800d084:	31bfff84 	addi	r6,r6,-2
 800d088:	1dc7883a 	add	r3,r3,r23
 800d08c:	003f8806 	br	800ceb0 <__alt_data_end+0xf800ceb0>
 800d090:	1805883a 	mov	r2,r3
 800d094:	003fde06 	br	800d010 <__alt_data_end+0xf800d010>
 800d098:	1839883a 	mov	fp,r3
 800d09c:	003fc906 	br	800cfc4 <__alt_data_end+0xf800cfc4>
 800d0a0:	b5bfff84 	addi	r22,r22,-2
 800d0a4:	2449883a 	add	r4,r4,r17
 800d0a8:	003f3406 	br	800cd7c <__alt_data_end+0xf800cd7c>
 800d0ac:	b5bfff84 	addi	r22,r22,-2
 800d0b0:	1445883a 	add	r2,r2,r17
 800d0b4:	003edb06 	br	800cc24 <__alt_data_end+0xf800cc24>

0800d0b8 <__umoddi3>:
 800d0b8:	defff404 	addi	sp,sp,-48
 800d0bc:	df000a15 	stw	fp,40(sp)
 800d0c0:	dc400315 	stw	r17,12(sp)
 800d0c4:	dc000215 	stw	r16,8(sp)
 800d0c8:	dfc00b15 	stw	ra,44(sp)
 800d0cc:	ddc00915 	stw	r23,36(sp)
 800d0d0:	dd800815 	stw	r22,32(sp)
 800d0d4:	dd400715 	stw	r21,28(sp)
 800d0d8:	dd000615 	stw	r20,24(sp)
 800d0dc:	dcc00515 	stw	r19,20(sp)
 800d0e0:	dc800415 	stw	r18,16(sp)
 800d0e4:	2021883a 	mov	r16,r4
 800d0e8:	2823883a 	mov	r17,r5
 800d0ec:	2839883a 	mov	fp,r5
 800d0f0:	38003c1e 	bne	r7,zero,800d1e4 <__umoddi3+0x12c>
 800d0f4:	3027883a 	mov	r19,r6
 800d0f8:	2029883a 	mov	r20,r4
 800d0fc:	2980512e 	bgeu	r5,r6,800d244 <__umoddi3+0x18c>
 800d100:	00bfffd4 	movui	r2,65535
 800d104:	11809a36 	bltu	r2,r6,800d370 <__umoddi3+0x2b8>
 800d108:	01003fc4 	movi	r4,255
 800d10c:	2189803a 	cmpltu	r4,r4,r6
 800d110:	200890fa 	slli	r4,r4,3
 800d114:	3104d83a 	srl	r2,r6,r4
 800d118:	00c20074 	movhi	r3,2049
 800d11c:	18ccf904 	addi	r3,r3,13284
 800d120:	1885883a 	add	r2,r3,r2
 800d124:	10c00003 	ldbu	r3,0(r2)
 800d128:	00800804 	movi	r2,32
 800d12c:	1909883a 	add	r4,r3,r4
 800d130:	1125c83a 	sub	r18,r2,r4
 800d134:	90000526 	beq	r18,zero,800d14c <__umoddi3+0x94>
 800d138:	8ca2983a 	sll	r17,r17,r18
 800d13c:	8108d83a 	srl	r4,r16,r4
 800d140:	34a6983a 	sll	r19,r6,r18
 800d144:	84a8983a 	sll	r20,r16,r18
 800d148:	2478b03a 	or	fp,r4,r17
 800d14c:	982ed43a 	srli	r23,r19,16
 800d150:	e009883a 	mov	r4,fp
 800d154:	9dbfffcc 	andi	r22,r19,65535
 800d158:	b80b883a 	mov	r5,r23
 800d15c:	800d74c0 	call	800d74c <__umodsi3>
 800d160:	e009883a 	mov	r4,fp
 800d164:	b80b883a 	mov	r5,r23
 800d168:	102b883a 	mov	r21,r2
 800d16c:	800d6e80 	call	800d6e8 <__udivsi3>
 800d170:	a806943a 	slli	r3,r21,16
 800d174:	a008d43a 	srli	r4,r20,16
 800d178:	b085383a 	mul	r2,r22,r2
 800d17c:	20c8b03a 	or	r4,r4,r3
 800d180:	2080032e 	bgeu	r4,r2,800d190 <__umoddi3+0xd8>
 800d184:	24c9883a 	add	r4,r4,r19
 800d188:	24c00136 	bltu	r4,r19,800d190 <__umoddi3+0xd8>
 800d18c:	20811036 	bltu	r4,r2,800d5d0 <__umoddi3+0x518>
 800d190:	20abc83a 	sub	r21,r4,r2
 800d194:	b80b883a 	mov	r5,r23
 800d198:	a809883a 	mov	r4,r21
 800d19c:	800d74c0 	call	800d74c <__umodsi3>
 800d1a0:	1023883a 	mov	r17,r2
 800d1a4:	b80b883a 	mov	r5,r23
 800d1a8:	a809883a 	mov	r4,r21
 800d1ac:	800d6e80 	call	800d6e8 <__udivsi3>
 800d1b0:	8822943a 	slli	r17,r17,16
 800d1b4:	b085383a 	mul	r2,r22,r2
 800d1b8:	a0ffffcc 	andi	r3,r20,65535
 800d1bc:	1c46b03a 	or	r3,r3,r17
 800d1c0:	1880042e 	bgeu	r3,r2,800d1d4 <__umoddi3+0x11c>
 800d1c4:	1cc7883a 	add	r3,r3,r19
 800d1c8:	1cc00236 	bltu	r3,r19,800d1d4 <__umoddi3+0x11c>
 800d1cc:	1880012e 	bgeu	r3,r2,800d1d4 <__umoddi3+0x11c>
 800d1d0:	1cc7883a 	add	r3,r3,r19
 800d1d4:	1885c83a 	sub	r2,r3,r2
 800d1d8:	1484d83a 	srl	r2,r2,r18
 800d1dc:	0007883a 	mov	r3,zero
 800d1e0:	00004f06 	br	800d320 <__umoddi3+0x268>
 800d1e4:	29c04c36 	bltu	r5,r7,800d318 <__umoddi3+0x260>
 800d1e8:	00bfffd4 	movui	r2,65535
 800d1ec:	11c0582e 	bgeu	r2,r7,800d350 <__umoddi3+0x298>
 800d1f0:	00804034 	movhi	r2,256
 800d1f4:	10bfffc4 	addi	r2,r2,-1
 800d1f8:	11c0e736 	bltu	r2,r7,800d598 <__umoddi3+0x4e0>
 800d1fc:	01000404 	movi	r4,16
 800d200:	3904d83a 	srl	r2,r7,r4
 800d204:	00c20074 	movhi	r3,2049
 800d208:	18ccf904 	addi	r3,r3,13284
 800d20c:	1885883a 	add	r2,r3,r2
 800d210:	14c00003 	ldbu	r19,0(r2)
 800d214:	00c00804 	movi	r3,32
 800d218:	9927883a 	add	r19,r19,r4
 800d21c:	1ce9c83a 	sub	r20,r3,r19
 800d220:	a000581e 	bne	r20,zero,800d384 <__umoddi3+0x2cc>
 800d224:	3c400136 	bltu	r7,r17,800d22c <__umoddi3+0x174>
 800d228:	8180eb36 	bltu	r16,r6,800d5d8 <__umoddi3+0x520>
 800d22c:	8185c83a 	sub	r2,r16,r6
 800d230:	89e3c83a 	sub	r17,r17,r7
 800d234:	8089803a 	cmpltu	r4,r16,r2
 800d238:	8939c83a 	sub	fp,r17,r4
 800d23c:	e007883a 	mov	r3,fp
 800d240:	00003706 	br	800d320 <__umoddi3+0x268>
 800d244:	3000041e 	bne	r6,zero,800d258 <__umoddi3+0x1a0>
 800d248:	000b883a 	mov	r5,zero
 800d24c:	01000044 	movi	r4,1
 800d250:	800d6e80 	call	800d6e8 <__udivsi3>
 800d254:	1027883a 	mov	r19,r2
 800d258:	00bfffd4 	movui	r2,65535
 800d25c:	14c0402e 	bgeu	r2,r19,800d360 <__umoddi3+0x2a8>
 800d260:	00804034 	movhi	r2,256
 800d264:	10bfffc4 	addi	r2,r2,-1
 800d268:	14c0cd36 	bltu	r2,r19,800d5a0 <__umoddi3+0x4e8>
 800d26c:	00800404 	movi	r2,16
 800d270:	9886d83a 	srl	r3,r19,r2
 800d274:	01020074 	movhi	r4,2049
 800d278:	210cf904 	addi	r4,r4,13284
 800d27c:	20c7883a 	add	r3,r4,r3
 800d280:	18c00003 	ldbu	r3,0(r3)
 800d284:	1887883a 	add	r3,r3,r2
 800d288:	00800804 	movi	r2,32
 800d28c:	10e5c83a 	sub	r18,r2,r3
 800d290:	9000901e 	bne	r18,zero,800d4d4 <__umoddi3+0x41c>
 800d294:	982cd43a 	srli	r22,r19,16
 800d298:	8ce3c83a 	sub	r17,r17,r19
 800d29c:	9d7fffcc 	andi	r21,r19,65535
 800d2a0:	b00b883a 	mov	r5,r22
 800d2a4:	8809883a 	mov	r4,r17
 800d2a8:	800d74c0 	call	800d74c <__umodsi3>
 800d2ac:	8809883a 	mov	r4,r17
 800d2b0:	b00b883a 	mov	r5,r22
 800d2b4:	1021883a 	mov	r16,r2
 800d2b8:	800d6e80 	call	800d6e8 <__udivsi3>
 800d2bc:	8006943a 	slli	r3,r16,16
 800d2c0:	a008d43a 	srli	r4,r20,16
 800d2c4:	1545383a 	mul	r2,r2,r21
 800d2c8:	20c8b03a 	or	r4,r4,r3
 800d2cc:	2080042e 	bgeu	r4,r2,800d2e0 <__umoddi3+0x228>
 800d2d0:	24c9883a 	add	r4,r4,r19
 800d2d4:	24c00236 	bltu	r4,r19,800d2e0 <__umoddi3+0x228>
 800d2d8:	2080012e 	bgeu	r4,r2,800d2e0 <__umoddi3+0x228>
 800d2dc:	24c9883a 	add	r4,r4,r19
 800d2e0:	20a1c83a 	sub	r16,r4,r2
 800d2e4:	b00b883a 	mov	r5,r22
 800d2e8:	8009883a 	mov	r4,r16
 800d2ec:	800d74c0 	call	800d74c <__umodsi3>
 800d2f0:	1023883a 	mov	r17,r2
 800d2f4:	b00b883a 	mov	r5,r22
 800d2f8:	8009883a 	mov	r4,r16
 800d2fc:	800d6e80 	call	800d6e8 <__udivsi3>
 800d300:	8822943a 	slli	r17,r17,16
 800d304:	1545383a 	mul	r2,r2,r21
 800d308:	a53fffcc 	andi	r20,r20,65535
 800d30c:	a446b03a 	or	r3,r20,r17
 800d310:	18bfb02e 	bgeu	r3,r2,800d1d4 <__alt_data_end+0xf800d1d4>
 800d314:	003fab06 	br	800d1c4 <__alt_data_end+0xf800d1c4>
 800d318:	2005883a 	mov	r2,r4
 800d31c:	2807883a 	mov	r3,r5
 800d320:	dfc00b17 	ldw	ra,44(sp)
 800d324:	df000a17 	ldw	fp,40(sp)
 800d328:	ddc00917 	ldw	r23,36(sp)
 800d32c:	dd800817 	ldw	r22,32(sp)
 800d330:	dd400717 	ldw	r21,28(sp)
 800d334:	dd000617 	ldw	r20,24(sp)
 800d338:	dcc00517 	ldw	r19,20(sp)
 800d33c:	dc800417 	ldw	r18,16(sp)
 800d340:	dc400317 	ldw	r17,12(sp)
 800d344:	dc000217 	ldw	r16,8(sp)
 800d348:	dec00c04 	addi	sp,sp,48
 800d34c:	f800283a 	ret
 800d350:	04c03fc4 	movi	r19,255
 800d354:	99c9803a 	cmpltu	r4,r19,r7
 800d358:	200890fa 	slli	r4,r4,3
 800d35c:	003fa806 	br	800d200 <__alt_data_end+0xf800d200>
 800d360:	00803fc4 	movi	r2,255
 800d364:	14c5803a 	cmpltu	r2,r2,r19
 800d368:	100490fa 	slli	r2,r2,3
 800d36c:	003fc006 	br	800d270 <__alt_data_end+0xf800d270>
 800d370:	00804034 	movhi	r2,256
 800d374:	10bfffc4 	addi	r2,r2,-1
 800d378:	11808b36 	bltu	r2,r6,800d5a8 <__umoddi3+0x4f0>
 800d37c:	01000404 	movi	r4,16
 800d380:	003f6406 	br	800d114 <__alt_data_end+0xf800d114>
 800d384:	34c4d83a 	srl	r2,r6,r19
 800d388:	3d0e983a 	sll	r7,r7,r20
 800d38c:	8cf8d83a 	srl	fp,r17,r19
 800d390:	8d10983a 	sll	r8,r17,r20
 800d394:	38aab03a 	or	r21,r7,r2
 800d398:	a82cd43a 	srli	r22,r21,16
 800d39c:	84e2d83a 	srl	r17,r16,r19
 800d3a0:	e009883a 	mov	r4,fp
 800d3a4:	b00b883a 	mov	r5,r22
 800d3a8:	8a22b03a 	or	r17,r17,r8
 800d3ac:	3524983a 	sll	r18,r6,r20
 800d3b0:	800d74c0 	call	800d74c <__umodsi3>
 800d3b4:	e009883a 	mov	r4,fp
 800d3b8:	b00b883a 	mov	r5,r22
 800d3bc:	102f883a 	mov	r23,r2
 800d3c0:	800d6e80 	call	800d6e8 <__udivsi3>
 800d3c4:	100d883a 	mov	r6,r2
 800d3c8:	b808943a 	slli	r4,r23,16
 800d3cc:	aa3fffcc 	andi	r8,r21,65535
 800d3d0:	8804d43a 	srli	r2,r17,16
 800d3d4:	41af383a 	mul	r23,r8,r6
 800d3d8:	8520983a 	sll	r16,r16,r20
 800d3dc:	1104b03a 	or	r2,r2,r4
 800d3e0:	15c0042e 	bgeu	r2,r23,800d3f4 <__umoddi3+0x33c>
 800d3e4:	1545883a 	add	r2,r2,r21
 800d3e8:	30ffffc4 	addi	r3,r6,-1
 800d3ec:	1540742e 	bgeu	r2,r21,800d5c0 <__umoddi3+0x508>
 800d3f0:	180d883a 	mov	r6,r3
 800d3f4:	15efc83a 	sub	r23,r2,r23
 800d3f8:	b00b883a 	mov	r5,r22
 800d3fc:	b809883a 	mov	r4,r23
 800d400:	d9800115 	stw	r6,4(sp)
 800d404:	da000015 	stw	r8,0(sp)
 800d408:	800d74c0 	call	800d74c <__umodsi3>
 800d40c:	b00b883a 	mov	r5,r22
 800d410:	b809883a 	mov	r4,r23
 800d414:	1039883a 	mov	fp,r2
 800d418:	800d6e80 	call	800d6e8 <__udivsi3>
 800d41c:	da000017 	ldw	r8,0(sp)
 800d420:	e038943a 	slli	fp,fp,16
 800d424:	100b883a 	mov	r5,r2
 800d428:	4089383a 	mul	r4,r8,r2
 800d42c:	8a3fffcc 	andi	r8,r17,65535
 800d430:	4710b03a 	or	r8,r8,fp
 800d434:	d9800117 	ldw	r6,4(sp)
 800d438:	4100042e 	bgeu	r8,r4,800d44c <__umoddi3+0x394>
 800d43c:	4551883a 	add	r8,r8,r21
 800d440:	10bfffc4 	addi	r2,r2,-1
 800d444:	45405a2e 	bgeu	r8,r21,800d5b0 <__umoddi3+0x4f8>
 800d448:	100b883a 	mov	r5,r2
 800d44c:	300c943a 	slli	r6,r6,16
 800d450:	91ffffcc 	andi	r7,r18,65535
 800d454:	9004d43a 	srli	r2,r18,16
 800d458:	314cb03a 	or	r6,r6,r5
 800d45c:	317fffcc 	andi	r5,r6,65535
 800d460:	300cd43a 	srli	r6,r6,16
 800d464:	29d3383a 	mul	r9,r5,r7
 800d468:	288b383a 	mul	r5,r5,r2
 800d46c:	31cf383a 	mul	r7,r6,r7
 800d470:	4806d43a 	srli	r3,r9,16
 800d474:	4111c83a 	sub	r8,r8,r4
 800d478:	29cb883a 	add	r5,r5,r7
 800d47c:	194b883a 	add	r5,r3,r5
 800d480:	3085383a 	mul	r2,r6,r2
 800d484:	29c0022e 	bgeu	r5,r7,800d490 <__umoddi3+0x3d8>
 800d488:	00c00074 	movhi	r3,1
 800d48c:	10c5883a 	add	r2,r2,r3
 800d490:	2808d43a 	srli	r4,r5,16
 800d494:	280a943a 	slli	r5,r5,16
 800d498:	4a7fffcc 	andi	r9,r9,65535
 800d49c:	2085883a 	add	r2,r4,r2
 800d4a0:	2a4b883a 	add	r5,r5,r9
 800d4a4:	40803636 	bltu	r8,r2,800d580 <__umoddi3+0x4c8>
 800d4a8:	40804d26 	beq	r8,r2,800d5e0 <__umoddi3+0x528>
 800d4ac:	4089c83a 	sub	r4,r8,r2
 800d4b0:	280f883a 	mov	r7,r5
 800d4b4:	81cfc83a 	sub	r7,r16,r7
 800d4b8:	81c7803a 	cmpltu	r3,r16,r7
 800d4bc:	20c7c83a 	sub	r3,r4,r3
 800d4c0:	1cc4983a 	sll	r2,r3,r19
 800d4c4:	3d0ed83a 	srl	r7,r7,r20
 800d4c8:	1d06d83a 	srl	r3,r3,r20
 800d4cc:	11c4b03a 	or	r2,r2,r7
 800d4d0:	003f9306 	br	800d320 <__alt_data_end+0xf800d320>
 800d4d4:	9ca6983a 	sll	r19,r19,r18
 800d4d8:	88e8d83a 	srl	r20,r17,r3
 800d4dc:	80c4d83a 	srl	r2,r16,r3
 800d4e0:	982cd43a 	srli	r22,r19,16
 800d4e4:	8ca2983a 	sll	r17,r17,r18
 800d4e8:	a009883a 	mov	r4,r20
 800d4ec:	b00b883a 	mov	r5,r22
 800d4f0:	1478b03a 	or	fp,r2,r17
 800d4f4:	800d74c0 	call	800d74c <__umodsi3>
 800d4f8:	a009883a 	mov	r4,r20
 800d4fc:	b00b883a 	mov	r5,r22
 800d500:	1023883a 	mov	r17,r2
 800d504:	800d6e80 	call	800d6e8 <__udivsi3>
 800d508:	9d7fffcc 	andi	r21,r19,65535
 800d50c:	880a943a 	slli	r5,r17,16
 800d510:	e008d43a 	srli	r4,fp,16
 800d514:	a885383a 	mul	r2,r21,r2
 800d518:	84a8983a 	sll	r20,r16,r18
 800d51c:	2148b03a 	or	r4,r4,r5
 800d520:	2080042e 	bgeu	r4,r2,800d534 <__umoddi3+0x47c>
 800d524:	24c9883a 	add	r4,r4,r19
 800d528:	24c00236 	bltu	r4,r19,800d534 <__umoddi3+0x47c>
 800d52c:	2080012e 	bgeu	r4,r2,800d534 <__umoddi3+0x47c>
 800d530:	24c9883a 	add	r4,r4,r19
 800d534:	20a3c83a 	sub	r17,r4,r2
 800d538:	b00b883a 	mov	r5,r22
 800d53c:	8809883a 	mov	r4,r17
 800d540:	800d74c0 	call	800d74c <__umodsi3>
 800d544:	102f883a 	mov	r23,r2
 800d548:	8809883a 	mov	r4,r17
 800d54c:	b00b883a 	mov	r5,r22
 800d550:	800d6e80 	call	800d6e8 <__udivsi3>
 800d554:	b82e943a 	slli	r23,r23,16
 800d558:	a885383a 	mul	r2,r21,r2
 800d55c:	e13fffcc 	andi	r4,fp,65535
 800d560:	25c8b03a 	or	r4,r4,r23
 800d564:	2080042e 	bgeu	r4,r2,800d578 <__umoddi3+0x4c0>
 800d568:	24c9883a 	add	r4,r4,r19
 800d56c:	24c00236 	bltu	r4,r19,800d578 <__umoddi3+0x4c0>
 800d570:	2080012e 	bgeu	r4,r2,800d578 <__umoddi3+0x4c0>
 800d574:	24c9883a 	add	r4,r4,r19
 800d578:	20a3c83a 	sub	r17,r4,r2
 800d57c:	003f4806 	br	800d2a0 <__alt_data_end+0xf800d2a0>
 800d580:	2c8fc83a 	sub	r7,r5,r18
 800d584:	1545c83a 	sub	r2,r2,r21
 800d588:	29cb803a 	cmpltu	r5,r5,r7
 800d58c:	1145c83a 	sub	r2,r2,r5
 800d590:	4089c83a 	sub	r4,r8,r2
 800d594:	003fc706 	br	800d4b4 <__alt_data_end+0xf800d4b4>
 800d598:	01000604 	movi	r4,24
 800d59c:	003f1806 	br	800d200 <__alt_data_end+0xf800d200>
 800d5a0:	00800604 	movi	r2,24
 800d5a4:	003f3206 	br	800d270 <__alt_data_end+0xf800d270>
 800d5a8:	01000604 	movi	r4,24
 800d5ac:	003ed906 	br	800d114 <__alt_data_end+0xf800d114>
 800d5b0:	413fa52e 	bgeu	r8,r4,800d448 <__alt_data_end+0xf800d448>
 800d5b4:	297fff84 	addi	r5,r5,-2
 800d5b8:	4551883a 	add	r8,r8,r21
 800d5bc:	003fa306 	br	800d44c <__alt_data_end+0xf800d44c>
 800d5c0:	15ff8b2e 	bgeu	r2,r23,800d3f0 <__alt_data_end+0xf800d3f0>
 800d5c4:	31bfff84 	addi	r6,r6,-2
 800d5c8:	1545883a 	add	r2,r2,r21
 800d5cc:	003f8906 	br	800d3f4 <__alt_data_end+0xf800d3f4>
 800d5d0:	24c9883a 	add	r4,r4,r19
 800d5d4:	003eee06 	br	800d190 <__alt_data_end+0xf800d190>
 800d5d8:	8005883a 	mov	r2,r16
 800d5dc:	003f1706 	br	800d23c <__alt_data_end+0xf800d23c>
 800d5e0:	817fe736 	bltu	r16,r5,800d580 <__alt_data_end+0xf800d580>
 800d5e4:	280f883a 	mov	r7,r5
 800d5e8:	0009883a 	mov	r4,zero
 800d5ec:	003fb106 	br	800d4b4 <__alt_data_end+0xf800d4b4>

0800d5f0 <__divsi3>:
 800d5f0:	20001b16 	blt	r4,zero,800d660 <__divsi3+0x70>
 800d5f4:	000f883a 	mov	r7,zero
 800d5f8:	28001616 	blt	r5,zero,800d654 <__divsi3+0x64>
 800d5fc:	200d883a 	mov	r6,r4
 800d600:	29001a2e 	bgeu	r5,r4,800d66c <__divsi3+0x7c>
 800d604:	00800804 	movi	r2,32
 800d608:	00c00044 	movi	r3,1
 800d60c:	00000106 	br	800d614 <__divsi3+0x24>
 800d610:	10000d26 	beq	r2,zero,800d648 <__divsi3+0x58>
 800d614:	294b883a 	add	r5,r5,r5
 800d618:	10bfffc4 	addi	r2,r2,-1
 800d61c:	18c7883a 	add	r3,r3,r3
 800d620:	293ffb36 	bltu	r5,r4,800d610 <__alt_data_end+0xf800d610>
 800d624:	0005883a 	mov	r2,zero
 800d628:	18000726 	beq	r3,zero,800d648 <__divsi3+0x58>
 800d62c:	0005883a 	mov	r2,zero
 800d630:	31400236 	bltu	r6,r5,800d63c <__divsi3+0x4c>
 800d634:	314dc83a 	sub	r6,r6,r5
 800d638:	10c4b03a 	or	r2,r2,r3
 800d63c:	1806d07a 	srli	r3,r3,1
 800d640:	280ad07a 	srli	r5,r5,1
 800d644:	183ffa1e 	bne	r3,zero,800d630 <__alt_data_end+0xf800d630>
 800d648:	38000126 	beq	r7,zero,800d650 <__divsi3+0x60>
 800d64c:	0085c83a 	sub	r2,zero,r2
 800d650:	f800283a 	ret
 800d654:	014bc83a 	sub	r5,zero,r5
 800d658:	39c0005c 	xori	r7,r7,1
 800d65c:	003fe706 	br	800d5fc <__alt_data_end+0xf800d5fc>
 800d660:	0109c83a 	sub	r4,zero,r4
 800d664:	01c00044 	movi	r7,1
 800d668:	003fe306 	br	800d5f8 <__alt_data_end+0xf800d5f8>
 800d66c:	00c00044 	movi	r3,1
 800d670:	003fee06 	br	800d62c <__alt_data_end+0xf800d62c>

0800d674 <__modsi3>:
 800d674:	20001716 	blt	r4,zero,800d6d4 <__modsi3+0x60>
 800d678:	000f883a 	mov	r7,zero
 800d67c:	2005883a 	mov	r2,r4
 800d680:	28001216 	blt	r5,zero,800d6cc <__modsi3+0x58>
 800d684:	2900162e 	bgeu	r5,r4,800d6e0 <__modsi3+0x6c>
 800d688:	01800804 	movi	r6,32
 800d68c:	00c00044 	movi	r3,1
 800d690:	00000106 	br	800d698 <__modsi3+0x24>
 800d694:	30000a26 	beq	r6,zero,800d6c0 <__modsi3+0x4c>
 800d698:	294b883a 	add	r5,r5,r5
 800d69c:	31bfffc4 	addi	r6,r6,-1
 800d6a0:	18c7883a 	add	r3,r3,r3
 800d6a4:	293ffb36 	bltu	r5,r4,800d694 <__alt_data_end+0xf800d694>
 800d6a8:	18000526 	beq	r3,zero,800d6c0 <__modsi3+0x4c>
 800d6ac:	1806d07a 	srli	r3,r3,1
 800d6b0:	11400136 	bltu	r2,r5,800d6b8 <__modsi3+0x44>
 800d6b4:	1145c83a 	sub	r2,r2,r5
 800d6b8:	280ad07a 	srli	r5,r5,1
 800d6bc:	183ffb1e 	bne	r3,zero,800d6ac <__alt_data_end+0xf800d6ac>
 800d6c0:	38000126 	beq	r7,zero,800d6c8 <__modsi3+0x54>
 800d6c4:	0085c83a 	sub	r2,zero,r2
 800d6c8:	f800283a 	ret
 800d6cc:	014bc83a 	sub	r5,zero,r5
 800d6d0:	003fec06 	br	800d684 <__alt_data_end+0xf800d684>
 800d6d4:	0109c83a 	sub	r4,zero,r4
 800d6d8:	01c00044 	movi	r7,1
 800d6dc:	003fe706 	br	800d67c <__alt_data_end+0xf800d67c>
 800d6e0:	00c00044 	movi	r3,1
 800d6e4:	003ff106 	br	800d6ac <__alt_data_end+0xf800d6ac>

0800d6e8 <__udivsi3>:
 800d6e8:	200d883a 	mov	r6,r4
 800d6ec:	2900152e 	bgeu	r5,r4,800d744 <__udivsi3+0x5c>
 800d6f0:	28001416 	blt	r5,zero,800d744 <__udivsi3+0x5c>
 800d6f4:	00800804 	movi	r2,32
 800d6f8:	00c00044 	movi	r3,1
 800d6fc:	00000206 	br	800d708 <__udivsi3+0x20>
 800d700:	10000e26 	beq	r2,zero,800d73c <__udivsi3+0x54>
 800d704:	28000516 	blt	r5,zero,800d71c <__udivsi3+0x34>
 800d708:	294b883a 	add	r5,r5,r5
 800d70c:	10bfffc4 	addi	r2,r2,-1
 800d710:	18c7883a 	add	r3,r3,r3
 800d714:	293ffa36 	bltu	r5,r4,800d700 <__alt_data_end+0xf800d700>
 800d718:	18000826 	beq	r3,zero,800d73c <__udivsi3+0x54>
 800d71c:	0005883a 	mov	r2,zero
 800d720:	31400236 	bltu	r6,r5,800d72c <__udivsi3+0x44>
 800d724:	314dc83a 	sub	r6,r6,r5
 800d728:	10c4b03a 	or	r2,r2,r3
 800d72c:	1806d07a 	srli	r3,r3,1
 800d730:	280ad07a 	srli	r5,r5,1
 800d734:	183ffa1e 	bne	r3,zero,800d720 <__alt_data_end+0xf800d720>
 800d738:	f800283a 	ret
 800d73c:	0005883a 	mov	r2,zero
 800d740:	f800283a 	ret
 800d744:	00c00044 	movi	r3,1
 800d748:	003ff406 	br	800d71c <__alt_data_end+0xf800d71c>

0800d74c <__umodsi3>:
 800d74c:	2005883a 	mov	r2,r4
 800d750:	2900122e 	bgeu	r5,r4,800d79c <__umodsi3+0x50>
 800d754:	28001116 	blt	r5,zero,800d79c <__umodsi3+0x50>
 800d758:	01800804 	movi	r6,32
 800d75c:	00c00044 	movi	r3,1
 800d760:	00000206 	br	800d76c <__umodsi3+0x20>
 800d764:	30000c26 	beq	r6,zero,800d798 <__umodsi3+0x4c>
 800d768:	28000516 	blt	r5,zero,800d780 <__umodsi3+0x34>
 800d76c:	294b883a 	add	r5,r5,r5
 800d770:	31bfffc4 	addi	r6,r6,-1
 800d774:	18c7883a 	add	r3,r3,r3
 800d778:	293ffa36 	bltu	r5,r4,800d764 <__alt_data_end+0xf800d764>
 800d77c:	18000626 	beq	r3,zero,800d798 <__umodsi3+0x4c>
 800d780:	1806d07a 	srli	r3,r3,1
 800d784:	11400136 	bltu	r2,r5,800d78c <__umodsi3+0x40>
 800d788:	1145c83a 	sub	r2,r2,r5
 800d78c:	280ad07a 	srli	r5,r5,1
 800d790:	183ffb1e 	bne	r3,zero,800d780 <__alt_data_end+0xf800d780>
 800d794:	f800283a 	ret
 800d798:	f800283a 	ret
 800d79c:	00c00044 	movi	r3,1
 800d7a0:	003ff706 	br	800d780 <__alt_data_end+0xf800d780>

0800d7a4 <__adddf3>:
 800d7a4:	02c00434 	movhi	r11,16
 800d7a8:	5affffc4 	addi	r11,r11,-1
 800d7ac:	2806d7fa 	srli	r3,r5,31
 800d7b0:	2ad4703a 	and	r10,r5,r11
 800d7b4:	3ad2703a 	and	r9,r7,r11
 800d7b8:	3804d53a 	srli	r2,r7,20
 800d7bc:	3018d77a 	srli	r12,r6,29
 800d7c0:	280ad53a 	srli	r5,r5,20
 800d7c4:	501490fa 	slli	r10,r10,3
 800d7c8:	2010d77a 	srli	r8,r4,29
 800d7cc:	481290fa 	slli	r9,r9,3
 800d7d0:	380ed7fa 	srli	r7,r7,31
 800d7d4:	defffb04 	addi	sp,sp,-20
 800d7d8:	dc800215 	stw	r18,8(sp)
 800d7dc:	dc400115 	stw	r17,4(sp)
 800d7e0:	dc000015 	stw	r16,0(sp)
 800d7e4:	dfc00415 	stw	ra,16(sp)
 800d7e8:	dcc00315 	stw	r19,12(sp)
 800d7ec:	1c803fcc 	andi	r18,r3,255
 800d7f0:	2c01ffcc 	andi	r16,r5,2047
 800d7f4:	5210b03a 	or	r8,r10,r8
 800d7f8:	202290fa 	slli	r17,r4,3
 800d7fc:	1081ffcc 	andi	r2,r2,2047
 800d800:	4b12b03a 	or	r9,r9,r12
 800d804:	300c90fa 	slli	r6,r6,3
 800d808:	91c07526 	beq	r18,r7,800d9e0 <__adddf3+0x23c>
 800d80c:	8087c83a 	sub	r3,r16,r2
 800d810:	00c0ab0e 	bge	zero,r3,800dac0 <__adddf3+0x31c>
 800d814:	10002a1e 	bne	r2,zero,800d8c0 <__adddf3+0x11c>
 800d818:	4984b03a 	or	r2,r9,r6
 800d81c:	1000961e 	bne	r2,zero,800da78 <__adddf3+0x2d4>
 800d820:	888001cc 	andi	r2,r17,7
 800d824:	10000726 	beq	r2,zero,800d844 <__adddf3+0xa0>
 800d828:	888003cc 	andi	r2,r17,15
 800d82c:	00c00104 	movi	r3,4
 800d830:	10c00426 	beq	r2,r3,800d844 <__adddf3+0xa0>
 800d834:	88c7883a 	add	r3,r17,r3
 800d838:	1c63803a 	cmpltu	r17,r3,r17
 800d83c:	4451883a 	add	r8,r8,r17
 800d840:	1823883a 	mov	r17,r3
 800d844:	4080202c 	andhi	r2,r8,128
 800d848:	10005926 	beq	r2,zero,800d9b0 <__adddf3+0x20c>
 800d84c:	84000044 	addi	r16,r16,1
 800d850:	0081ffc4 	movi	r2,2047
 800d854:	8080ba26 	beq	r16,r2,800db40 <__adddf3+0x39c>
 800d858:	00bfe034 	movhi	r2,65408
 800d85c:	10bfffc4 	addi	r2,r2,-1
 800d860:	4090703a 	and	r8,r8,r2
 800d864:	4004977a 	slli	r2,r8,29
 800d868:	4010927a 	slli	r8,r8,9
 800d86c:	8822d0fa 	srli	r17,r17,3
 800d870:	8401ffcc 	andi	r16,r16,2047
 800d874:	4010d33a 	srli	r8,r8,12
 800d878:	9007883a 	mov	r3,r18
 800d87c:	1444b03a 	or	r2,r2,r17
 800d880:	8401ffcc 	andi	r16,r16,2047
 800d884:	8020953a 	slli	r16,r16,20
 800d888:	18c03fcc 	andi	r3,r3,255
 800d88c:	01000434 	movhi	r4,16
 800d890:	213fffc4 	addi	r4,r4,-1
 800d894:	180697fa 	slli	r3,r3,31
 800d898:	4110703a 	and	r8,r8,r4
 800d89c:	4410b03a 	or	r8,r8,r16
 800d8a0:	40c6b03a 	or	r3,r8,r3
 800d8a4:	dfc00417 	ldw	ra,16(sp)
 800d8a8:	dcc00317 	ldw	r19,12(sp)
 800d8ac:	dc800217 	ldw	r18,8(sp)
 800d8b0:	dc400117 	ldw	r17,4(sp)
 800d8b4:	dc000017 	ldw	r16,0(sp)
 800d8b8:	dec00504 	addi	sp,sp,20
 800d8bc:	f800283a 	ret
 800d8c0:	0081ffc4 	movi	r2,2047
 800d8c4:	80bfd626 	beq	r16,r2,800d820 <__alt_data_end+0xf800d820>
 800d8c8:	4a402034 	orhi	r9,r9,128
 800d8cc:	00800e04 	movi	r2,56
 800d8d0:	10c09f16 	blt	r2,r3,800db50 <__adddf3+0x3ac>
 800d8d4:	008007c4 	movi	r2,31
 800d8d8:	10c0c216 	blt	r2,r3,800dbe4 <__adddf3+0x440>
 800d8dc:	00800804 	movi	r2,32
 800d8e0:	10c5c83a 	sub	r2,r2,r3
 800d8e4:	488a983a 	sll	r5,r9,r2
 800d8e8:	30c8d83a 	srl	r4,r6,r3
 800d8ec:	3084983a 	sll	r2,r6,r2
 800d8f0:	48c6d83a 	srl	r3,r9,r3
 800d8f4:	290cb03a 	or	r6,r5,r4
 800d8f8:	1004c03a 	cmpne	r2,r2,zero
 800d8fc:	308cb03a 	or	r6,r6,r2
 800d900:	898dc83a 	sub	r6,r17,r6
 800d904:	89a3803a 	cmpltu	r17,r17,r6
 800d908:	40d1c83a 	sub	r8,r8,r3
 800d90c:	4451c83a 	sub	r8,r8,r17
 800d910:	3023883a 	mov	r17,r6
 800d914:	4080202c 	andhi	r2,r8,128
 800d918:	10002326 	beq	r2,zero,800d9a8 <__adddf3+0x204>
 800d91c:	04c02034 	movhi	r19,128
 800d920:	9cffffc4 	addi	r19,r19,-1
 800d924:	44e6703a 	and	r19,r8,r19
 800d928:	98007626 	beq	r19,zero,800db04 <__adddf3+0x360>
 800d92c:	9809883a 	mov	r4,r19
 800d930:	800fda80 	call	800fda8 <__clzsi2>
 800d934:	10fffe04 	addi	r3,r2,-8
 800d938:	010007c4 	movi	r4,31
 800d93c:	20c07716 	blt	r4,r3,800db1c <__adddf3+0x378>
 800d940:	00800804 	movi	r2,32
 800d944:	10c5c83a 	sub	r2,r2,r3
 800d948:	8884d83a 	srl	r2,r17,r2
 800d94c:	98d0983a 	sll	r8,r19,r3
 800d950:	88e2983a 	sll	r17,r17,r3
 800d954:	1204b03a 	or	r2,r2,r8
 800d958:	1c007416 	blt	r3,r16,800db2c <__adddf3+0x388>
 800d95c:	1c21c83a 	sub	r16,r3,r16
 800d960:	82000044 	addi	r8,r16,1
 800d964:	00c007c4 	movi	r3,31
 800d968:	1a009116 	blt	r3,r8,800dbb0 <__adddf3+0x40c>
 800d96c:	00c00804 	movi	r3,32
 800d970:	1a07c83a 	sub	r3,r3,r8
 800d974:	8a08d83a 	srl	r4,r17,r8
 800d978:	88e2983a 	sll	r17,r17,r3
 800d97c:	10c6983a 	sll	r3,r2,r3
 800d980:	1210d83a 	srl	r8,r2,r8
 800d984:	8804c03a 	cmpne	r2,r17,zero
 800d988:	1906b03a 	or	r3,r3,r4
 800d98c:	18a2b03a 	or	r17,r3,r2
 800d990:	0021883a 	mov	r16,zero
 800d994:	003fa206 	br	800d820 <__alt_data_end+0xf800d820>
 800d998:	1890b03a 	or	r8,r3,r2
 800d99c:	40017d26 	beq	r8,zero,800df94 <__adddf3+0x7f0>
 800d9a0:	1011883a 	mov	r8,r2
 800d9a4:	1823883a 	mov	r17,r3
 800d9a8:	888001cc 	andi	r2,r17,7
 800d9ac:	103f9e1e 	bne	r2,zero,800d828 <__alt_data_end+0xf800d828>
 800d9b0:	4004977a 	slli	r2,r8,29
 800d9b4:	8822d0fa 	srli	r17,r17,3
 800d9b8:	4010d0fa 	srli	r8,r8,3
 800d9bc:	9007883a 	mov	r3,r18
 800d9c0:	1444b03a 	or	r2,r2,r17
 800d9c4:	0101ffc4 	movi	r4,2047
 800d9c8:	81002426 	beq	r16,r4,800da5c <__adddf3+0x2b8>
 800d9cc:	8120703a 	and	r16,r16,r4
 800d9d0:	01000434 	movhi	r4,16
 800d9d4:	213fffc4 	addi	r4,r4,-1
 800d9d8:	4110703a 	and	r8,r8,r4
 800d9dc:	003fa806 	br	800d880 <__alt_data_end+0xf800d880>
 800d9e0:	8089c83a 	sub	r4,r16,r2
 800d9e4:	01005e0e 	bge	zero,r4,800db60 <__adddf3+0x3bc>
 800d9e8:	10002b26 	beq	r2,zero,800da98 <__adddf3+0x2f4>
 800d9ec:	0081ffc4 	movi	r2,2047
 800d9f0:	80bf8b26 	beq	r16,r2,800d820 <__alt_data_end+0xf800d820>
 800d9f4:	4a402034 	orhi	r9,r9,128
 800d9f8:	00800e04 	movi	r2,56
 800d9fc:	1100a40e 	bge	r2,r4,800dc90 <__adddf3+0x4ec>
 800da00:	498cb03a 	or	r6,r9,r6
 800da04:	300ac03a 	cmpne	r5,r6,zero
 800da08:	0013883a 	mov	r9,zero
 800da0c:	2c4b883a 	add	r5,r5,r17
 800da10:	2c63803a 	cmpltu	r17,r5,r17
 800da14:	4a11883a 	add	r8,r9,r8
 800da18:	8a11883a 	add	r8,r17,r8
 800da1c:	2823883a 	mov	r17,r5
 800da20:	4080202c 	andhi	r2,r8,128
 800da24:	103fe026 	beq	r2,zero,800d9a8 <__alt_data_end+0xf800d9a8>
 800da28:	84000044 	addi	r16,r16,1
 800da2c:	0081ffc4 	movi	r2,2047
 800da30:	8080d226 	beq	r16,r2,800dd7c <__adddf3+0x5d8>
 800da34:	00bfe034 	movhi	r2,65408
 800da38:	10bfffc4 	addi	r2,r2,-1
 800da3c:	4090703a 	and	r8,r8,r2
 800da40:	880ad07a 	srli	r5,r17,1
 800da44:	400897fa 	slli	r4,r8,31
 800da48:	88c0004c 	andi	r3,r17,1
 800da4c:	28e2b03a 	or	r17,r5,r3
 800da50:	4010d07a 	srli	r8,r8,1
 800da54:	2462b03a 	or	r17,r4,r17
 800da58:	003f7106 	br	800d820 <__alt_data_end+0xf800d820>
 800da5c:	4088b03a 	or	r4,r8,r2
 800da60:	20014526 	beq	r4,zero,800df78 <__adddf3+0x7d4>
 800da64:	01000434 	movhi	r4,16
 800da68:	42000234 	orhi	r8,r8,8
 800da6c:	213fffc4 	addi	r4,r4,-1
 800da70:	4110703a 	and	r8,r8,r4
 800da74:	003f8206 	br	800d880 <__alt_data_end+0xf800d880>
 800da78:	18ffffc4 	addi	r3,r3,-1
 800da7c:	1800491e 	bne	r3,zero,800dba4 <__adddf3+0x400>
 800da80:	898bc83a 	sub	r5,r17,r6
 800da84:	8963803a 	cmpltu	r17,r17,r5
 800da88:	4251c83a 	sub	r8,r8,r9
 800da8c:	4451c83a 	sub	r8,r8,r17
 800da90:	2823883a 	mov	r17,r5
 800da94:	003f9f06 	br	800d914 <__alt_data_end+0xf800d914>
 800da98:	4984b03a 	or	r2,r9,r6
 800da9c:	103f6026 	beq	r2,zero,800d820 <__alt_data_end+0xf800d820>
 800daa0:	213fffc4 	addi	r4,r4,-1
 800daa4:	2000931e 	bne	r4,zero,800dcf4 <__adddf3+0x550>
 800daa8:	898d883a 	add	r6,r17,r6
 800daac:	3463803a 	cmpltu	r17,r6,r17
 800dab0:	4251883a 	add	r8,r8,r9
 800dab4:	8a11883a 	add	r8,r17,r8
 800dab8:	3023883a 	mov	r17,r6
 800dabc:	003fd806 	br	800da20 <__alt_data_end+0xf800da20>
 800dac0:	1800541e 	bne	r3,zero,800dc14 <__adddf3+0x470>
 800dac4:	80800044 	addi	r2,r16,1
 800dac8:	1081ffcc 	andi	r2,r2,2047
 800dacc:	00c00044 	movi	r3,1
 800dad0:	1880a00e 	bge	r3,r2,800dd54 <__adddf3+0x5b0>
 800dad4:	8989c83a 	sub	r4,r17,r6
 800dad8:	8905803a 	cmpltu	r2,r17,r4
 800dadc:	4267c83a 	sub	r19,r8,r9
 800dae0:	98a7c83a 	sub	r19,r19,r2
 800dae4:	9880202c 	andhi	r2,r19,128
 800dae8:	10006326 	beq	r2,zero,800dc78 <__adddf3+0x4d4>
 800daec:	3463c83a 	sub	r17,r6,r17
 800daf0:	4a07c83a 	sub	r3,r9,r8
 800daf4:	344d803a 	cmpltu	r6,r6,r17
 800daf8:	19a7c83a 	sub	r19,r3,r6
 800dafc:	3825883a 	mov	r18,r7
 800db00:	983f8a1e 	bne	r19,zero,800d92c <__alt_data_end+0xf800d92c>
 800db04:	8809883a 	mov	r4,r17
 800db08:	800fda80 	call	800fda8 <__clzsi2>
 800db0c:	10800804 	addi	r2,r2,32
 800db10:	10fffe04 	addi	r3,r2,-8
 800db14:	010007c4 	movi	r4,31
 800db18:	20ff890e 	bge	r4,r3,800d940 <__alt_data_end+0xf800d940>
 800db1c:	10bff604 	addi	r2,r2,-40
 800db20:	8884983a 	sll	r2,r17,r2
 800db24:	0023883a 	mov	r17,zero
 800db28:	1c3f8c0e 	bge	r3,r16,800d95c <__alt_data_end+0xf800d95c>
 800db2c:	023fe034 	movhi	r8,65408
 800db30:	423fffc4 	addi	r8,r8,-1
 800db34:	80e1c83a 	sub	r16,r16,r3
 800db38:	1210703a 	and	r8,r2,r8
 800db3c:	003f3806 	br	800d820 <__alt_data_end+0xf800d820>
 800db40:	9007883a 	mov	r3,r18
 800db44:	0011883a 	mov	r8,zero
 800db48:	0005883a 	mov	r2,zero
 800db4c:	003f4c06 	br	800d880 <__alt_data_end+0xf800d880>
 800db50:	498cb03a 	or	r6,r9,r6
 800db54:	300cc03a 	cmpne	r6,r6,zero
 800db58:	0007883a 	mov	r3,zero
 800db5c:	003f6806 	br	800d900 <__alt_data_end+0xf800d900>
 800db60:	20009c1e 	bne	r4,zero,800ddd4 <__adddf3+0x630>
 800db64:	80800044 	addi	r2,r16,1
 800db68:	1141ffcc 	andi	r5,r2,2047
 800db6c:	01000044 	movi	r4,1
 800db70:	2140670e 	bge	r4,r5,800dd10 <__adddf3+0x56c>
 800db74:	0101ffc4 	movi	r4,2047
 800db78:	11007f26 	beq	r2,r4,800dd78 <__adddf3+0x5d4>
 800db7c:	898d883a 	add	r6,r17,r6
 800db80:	4247883a 	add	r3,r8,r9
 800db84:	3451803a 	cmpltu	r8,r6,r17
 800db88:	40d1883a 	add	r8,r8,r3
 800db8c:	402297fa 	slli	r17,r8,31
 800db90:	300cd07a 	srli	r6,r6,1
 800db94:	4010d07a 	srli	r8,r8,1
 800db98:	1021883a 	mov	r16,r2
 800db9c:	89a2b03a 	or	r17,r17,r6
 800dba0:	003f1f06 	br	800d820 <__alt_data_end+0xf800d820>
 800dba4:	0081ffc4 	movi	r2,2047
 800dba8:	80bf481e 	bne	r16,r2,800d8cc <__alt_data_end+0xf800d8cc>
 800dbac:	003f1c06 	br	800d820 <__alt_data_end+0xf800d820>
 800dbb0:	843ff844 	addi	r16,r16,-31
 800dbb4:	01000804 	movi	r4,32
 800dbb8:	1406d83a 	srl	r3,r2,r16
 800dbbc:	41005026 	beq	r8,r4,800dd00 <__adddf3+0x55c>
 800dbc0:	01001004 	movi	r4,64
 800dbc4:	2211c83a 	sub	r8,r4,r8
 800dbc8:	1204983a 	sll	r2,r2,r8
 800dbcc:	88a2b03a 	or	r17,r17,r2
 800dbd0:	8822c03a 	cmpne	r17,r17,zero
 800dbd4:	1c62b03a 	or	r17,r3,r17
 800dbd8:	0011883a 	mov	r8,zero
 800dbdc:	0021883a 	mov	r16,zero
 800dbe0:	003f7106 	br	800d9a8 <__alt_data_end+0xf800d9a8>
 800dbe4:	193ff804 	addi	r4,r3,-32
 800dbe8:	00800804 	movi	r2,32
 800dbec:	4908d83a 	srl	r4,r9,r4
 800dbf0:	18804526 	beq	r3,r2,800dd08 <__adddf3+0x564>
 800dbf4:	00801004 	movi	r2,64
 800dbf8:	10c5c83a 	sub	r2,r2,r3
 800dbfc:	4886983a 	sll	r3,r9,r2
 800dc00:	198cb03a 	or	r6,r3,r6
 800dc04:	300cc03a 	cmpne	r6,r6,zero
 800dc08:	218cb03a 	or	r6,r4,r6
 800dc0c:	0007883a 	mov	r3,zero
 800dc10:	003f3b06 	br	800d900 <__alt_data_end+0xf800d900>
 800dc14:	80002a26 	beq	r16,zero,800dcc0 <__adddf3+0x51c>
 800dc18:	0101ffc4 	movi	r4,2047
 800dc1c:	11006826 	beq	r2,r4,800ddc0 <__adddf3+0x61c>
 800dc20:	00c7c83a 	sub	r3,zero,r3
 800dc24:	42002034 	orhi	r8,r8,128
 800dc28:	01000e04 	movi	r4,56
 800dc2c:	20c07c16 	blt	r4,r3,800de20 <__adddf3+0x67c>
 800dc30:	010007c4 	movi	r4,31
 800dc34:	20c0da16 	blt	r4,r3,800dfa0 <__adddf3+0x7fc>
 800dc38:	01000804 	movi	r4,32
 800dc3c:	20c9c83a 	sub	r4,r4,r3
 800dc40:	4114983a 	sll	r10,r8,r4
 800dc44:	88cad83a 	srl	r5,r17,r3
 800dc48:	8908983a 	sll	r4,r17,r4
 800dc4c:	40c6d83a 	srl	r3,r8,r3
 800dc50:	5162b03a 	or	r17,r10,r5
 800dc54:	2008c03a 	cmpne	r4,r4,zero
 800dc58:	8922b03a 	or	r17,r17,r4
 800dc5c:	3463c83a 	sub	r17,r6,r17
 800dc60:	48c7c83a 	sub	r3,r9,r3
 800dc64:	344d803a 	cmpltu	r6,r6,r17
 800dc68:	1991c83a 	sub	r8,r3,r6
 800dc6c:	1021883a 	mov	r16,r2
 800dc70:	3825883a 	mov	r18,r7
 800dc74:	003f2706 	br	800d914 <__alt_data_end+0xf800d914>
 800dc78:	24d0b03a 	or	r8,r4,r19
 800dc7c:	40001b1e 	bne	r8,zero,800dcec <__adddf3+0x548>
 800dc80:	0005883a 	mov	r2,zero
 800dc84:	0007883a 	mov	r3,zero
 800dc88:	0021883a 	mov	r16,zero
 800dc8c:	003f4d06 	br	800d9c4 <__alt_data_end+0xf800d9c4>
 800dc90:	008007c4 	movi	r2,31
 800dc94:	11003c16 	blt	r2,r4,800dd88 <__adddf3+0x5e4>
 800dc98:	00800804 	movi	r2,32
 800dc9c:	1105c83a 	sub	r2,r2,r4
 800dca0:	488e983a 	sll	r7,r9,r2
 800dca4:	310ad83a 	srl	r5,r6,r4
 800dca8:	3084983a 	sll	r2,r6,r2
 800dcac:	4912d83a 	srl	r9,r9,r4
 800dcb0:	394ab03a 	or	r5,r7,r5
 800dcb4:	1004c03a 	cmpne	r2,r2,zero
 800dcb8:	288ab03a 	or	r5,r5,r2
 800dcbc:	003f5306 	br	800da0c <__alt_data_end+0xf800da0c>
 800dcc0:	4448b03a 	or	r4,r8,r17
 800dcc4:	20003e26 	beq	r4,zero,800ddc0 <__adddf3+0x61c>
 800dcc8:	00c6303a 	nor	r3,zero,r3
 800dccc:	18003a1e 	bne	r3,zero,800ddb8 <__adddf3+0x614>
 800dcd0:	3463c83a 	sub	r17,r6,r17
 800dcd4:	4a07c83a 	sub	r3,r9,r8
 800dcd8:	344d803a 	cmpltu	r6,r6,r17
 800dcdc:	1991c83a 	sub	r8,r3,r6
 800dce0:	1021883a 	mov	r16,r2
 800dce4:	3825883a 	mov	r18,r7
 800dce8:	003f0a06 	br	800d914 <__alt_data_end+0xf800d914>
 800dcec:	2023883a 	mov	r17,r4
 800dcf0:	003f0d06 	br	800d928 <__alt_data_end+0xf800d928>
 800dcf4:	0081ffc4 	movi	r2,2047
 800dcf8:	80bf3f1e 	bne	r16,r2,800d9f8 <__alt_data_end+0xf800d9f8>
 800dcfc:	003ec806 	br	800d820 <__alt_data_end+0xf800d820>
 800dd00:	0005883a 	mov	r2,zero
 800dd04:	003fb106 	br	800dbcc <__alt_data_end+0xf800dbcc>
 800dd08:	0007883a 	mov	r3,zero
 800dd0c:	003fbc06 	br	800dc00 <__alt_data_end+0xf800dc00>
 800dd10:	4444b03a 	or	r2,r8,r17
 800dd14:	8000871e 	bne	r16,zero,800df34 <__adddf3+0x790>
 800dd18:	1000ba26 	beq	r2,zero,800e004 <__adddf3+0x860>
 800dd1c:	4984b03a 	or	r2,r9,r6
 800dd20:	103ebf26 	beq	r2,zero,800d820 <__alt_data_end+0xf800d820>
 800dd24:	8985883a 	add	r2,r17,r6
 800dd28:	4247883a 	add	r3,r8,r9
 800dd2c:	1451803a 	cmpltu	r8,r2,r17
 800dd30:	40d1883a 	add	r8,r8,r3
 800dd34:	40c0202c 	andhi	r3,r8,128
 800dd38:	1023883a 	mov	r17,r2
 800dd3c:	183f1a26 	beq	r3,zero,800d9a8 <__alt_data_end+0xf800d9a8>
 800dd40:	00bfe034 	movhi	r2,65408
 800dd44:	10bfffc4 	addi	r2,r2,-1
 800dd48:	2021883a 	mov	r16,r4
 800dd4c:	4090703a 	and	r8,r8,r2
 800dd50:	003eb306 	br	800d820 <__alt_data_end+0xf800d820>
 800dd54:	4444b03a 	or	r2,r8,r17
 800dd58:	8000291e 	bne	r16,zero,800de00 <__adddf3+0x65c>
 800dd5c:	10004b1e 	bne	r2,zero,800de8c <__adddf3+0x6e8>
 800dd60:	4990b03a 	or	r8,r9,r6
 800dd64:	40008b26 	beq	r8,zero,800df94 <__adddf3+0x7f0>
 800dd68:	4811883a 	mov	r8,r9
 800dd6c:	3023883a 	mov	r17,r6
 800dd70:	3825883a 	mov	r18,r7
 800dd74:	003eaa06 	br	800d820 <__alt_data_end+0xf800d820>
 800dd78:	1021883a 	mov	r16,r2
 800dd7c:	0011883a 	mov	r8,zero
 800dd80:	0005883a 	mov	r2,zero
 800dd84:	003f0f06 	br	800d9c4 <__alt_data_end+0xf800d9c4>
 800dd88:	217ff804 	addi	r5,r4,-32
 800dd8c:	00800804 	movi	r2,32
 800dd90:	494ad83a 	srl	r5,r9,r5
 800dd94:	20807d26 	beq	r4,r2,800df8c <__adddf3+0x7e8>
 800dd98:	00801004 	movi	r2,64
 800dd9c:	1109c83a 	sub	r4,r2,r4
 800dda0:	4912983a 	sll	r9,r9,r4
 800dda4:	498cb03a 	or	r6,r9,r6
 800dda8:	300cc03a 	cmpne	r6,r6,zero
 800ddac:	298ab03a 	or	r5,r5,r6
 800ddb0:	0013883a 	mov	r9,zero
 800ddb4:	003f1506 	br	800da0c <__alt_data_end+0xf800da0c>
 800ddb8:	0101ffc4 	movi	r4,2047
 800ddbc:	113f9a1e 	bne	r2,r4,800dc28 <__alt_data_end+0xf800dc28>
 800ddc0:	4811883a 	mov	r8,r9
 800ddc4:	3023883a 	mov	r17,r6
 800ddc8:	1021883a 	mov	r16,r2
 800ddcc:	3825883a 	mov	r18,r7
 800ddd0:	003e9306 	br	800d820 <__alt_data_end+0xf800d820>
 800ddd4:	8000161e 	bne	r16,zero,800de30 <__adddf3+0x68c>
 800ddd8:	444ab03a 	or	r5,r8,r17
 800dddc:	28005126 	beq	r5,zero,800df24 <__adddf3+0x780>
 800dde0:	0108303a 	nor	r4,zero,r4
 800dde4:	20004d1e 	bne	r4,zero,800df1c <__adddf3+0x778>
 800dde8:	89a3883a 	add	r17,r17,r6
 800ddec:	4253883a 	add	r9,r8,r9
 800ddf0:	898d803a 	cmpltu	r6,r17,r6
 800ddf4:	3251883a 	add	r8,r6,r9
 800ddf8:	1021883a 	mov	r16,r2
 800ddfc:	003f0806 	br	800da20 <__alt_data_end+0xf800da20>
 800de00:	1000301e 	bne	r2,zero,800dec4 <__adddf3+0x720>
 800de04:	4984b03a 	or	r2,r9,r6
 800de08:	10007126 	beq	r2,zero,800dfd0 <__adddf3+0x82c>
 800de0c:	4811883a 	mov	r8,r9
 800de10:	3023883a 	mov	r17,r6
 800de14:	3825883a 	mov	r18,r7
 800de18:	0401ffc4 	movi	r16,2047
 800de1c:	003e8006 	br	800d820 <__alt_data_end+0xf800d820>
 800de20:	4462b03a 	or	r17,r8,r17
 800de24:	8822c03a 	cmpne	r17,r17,zero
 800de28:	0007883a 	mov	r3,zero
 800de2c:	003f8b06 	br	800dc5c <__alt_data_end+0xf800dc5c>
 800de30:	0141ffc4 	movi	r5,2047
 800de34:	11403b26 	beq	r2,r5,800df24 <__adddf3+0x780>
 800de38:	0109c83a 	sub	r4,zero,r4
 800de3c:	42002034 	orhi	r8,r8,128
 800de40:	01400e04 	movi	r5,56
 800de44:	29006716 	blt	r5,r4,800dfe4 <__adddf3+0x840>
 800de48:	014007c4 	movi	r5,31
 800de4c:	29007016 	blt	r5,r4,800e010 <__adddf3+0x86c>
 800de50:	01400804 	movi	r5,32
 800de54:	290bc83a 	sub	r5,r5,r4
 800de58:	4154983a 	sll	r10,r8,r5
 800de5c:	890ed83a 	srl	r7,r17,r4
 800de60:	894a983a 	sll	r5,r17,r5
 800de64:	4108d83a 	srl	r4,r8,r4
 800de68:	51e2b03a 	or	r17,r10,r7
 800de6c:	280ac03a 	cmpne	r5,r5,zero
 800de70:	8962b03a 	or	r17,r17,r5
 800de74:	89a3883a 	add	r17,r17,r6
 800de78:	2253883a 	add	r9,r4,r9
 800de7c:	898d803a 	cmpltu	r6,r17,r6
 800de80:	3251883a 	add	r8,r6,r9
 800de84:	1021883a 	mov	r16,r2
 800de88:	003ee506 	br	800da20 <__alt_data_end+0xf800da20>
 800de8c:	4984b03a 	or	r2,r9,r6
 800de90:	103e6326 	beq	r2,zero,800d820 <__alt_data_end+0xf800d820>
 800de94:	8987c83a 	sub	r3,r17,r6
 800de98:	88c9803a 	cmpltu	r4,r17,r3
 800de9c:	4245c83a 	sub	r2,r8,r9
 800dea0:	1105c83a 	sub	r2,r2,r4
 800dea4:	1100202c 	andhi	r4,r2,128
 800dea8:	203ebb26 	beq	r4,zero,800d998 <__alt_data_end+0xf800d998>
 800deac:	3463c83a 	sub	r17,r6,r17
 800deb0:	4a07c83a 	sub	r3,r9,r8
 800deb4:	344d803a 	cmpltu	r6,r6,r17
 800deb8:	1991c83a 	sub	r8,r3,r6
 800debc:	3825883a 	mov	r18,r7
 800dec0:	003e5706 	br	800d820 <__alt_data_end+0xf800d820>
 800dec4:	4984b03a 	or	r2,r9,r6
 800dec8:	10002e26 	beq	r2,zero,800df84 <__adddf3+0x7e0>
 800decc:	4004d0fa 	srli	r2,r8,3
 800ded0:	8822d0fa 	srli	r17,r17,3
 800ded4:	4010977a 	slli	r8,r8,29
 800ded8:	10c0022c 	andhi	r3,r2,8
 800dedc:	4462b03a 	or	r17,r8,r17
 800dee0:	18000826 	beq	r3,zero,800df04 <__adddf3+0x760>
 800dee4:	4808d0fa 	srli	r4,r9,3
 800dee8:	20c0022c 	andhi	r3,r4,8
 800deec:	1800051e 	bne	r3,zero,800df04 <__adddf3+0x760>
 800def0:	300cd0fa 	srli	r6,r6,3
 800def4:	4806977a 	slli	r3,r9,29
 800def8:	2005883a 	mov	r2,r4
 800defc:	3825883a 	mov	r18,r7
 800df00:	19a2b03a 	or	r17,r3,r6
 800df04:	8810d77a 	srli	r8,r17,29
 800df08:	100490fa 	slli	r2,r2,3
 800df0c:	882290fa 	slli	r17,r17,3
 800df10:	0401ffc4 	movi	r16,2047
 800df14:	4090b03a 	or	r8,r8,r2
 800df18:	003e4106 	br	800d820 <__alt_data_end+0xf800d820>
 800df1c:	0141ffc4 	movi	r5,2047
 800df20:	117fc71e 	bne	r2,r5,800de40 <__alt_data_end+0xf800de40>
 800df24:	4811883a 	mov	r8,r9
 800df28:	3023883a 	mov	r17,r6
 800df2c:	1021883a 	mov	r16,r2
 800df30:	003e3b06 	br	800d820 <__alt_data_end+0xf800d820>
 800df34:	10002f26 	beq	r2,zero,800dff4 <__adddf3+0x850>
 800df38:	4984b03a 	or	r2,r9,r6
 800df3c:	10001126 	beq	r2,zero,800df84 <__adddf3+0x7e0>
 800df40:	4004d0fa 	srli	r2,r8,3
 800df44:	8822d0fa 	srli	r17,r17,3
 800df48:	4010977a 	slli	r8,r8,29
 800df4c:	10c0022c 	andhi	r3,r2,8
 800df50:	4462b03a 	or	r17,r8,r17
 800df54:	183feb26 	beq	r3,zero,800df04 <__alt_data_end+0xf800df04>
 800df58:	4808d0fa 	srli	r4,r9,3
 800df5c:	20c0022c 	andhi	r3,r4,8
 800df60:	183fe81e 	bne	r3,zero,800df04 <__alt_data_end+0xf800df04>
 800df64:	300cd0fa 	srli	r6,r6,3
 800df68:	4806977a 	slli	r3,r9,29
 800df6c:	2005883a 	mov	r2,r4
 800df70:	19a2b03a 	or	r17,r3,r6
 800df74:	003fe306 	br	800df04 <__alt_data_end+0xf800df04>
 800df78:	0011883a 	mov	r8,zero
 800df7c:	0005883a 	mov	r2,zero
 800df80:	003e3f06 	br	800d880 <__alt_data_end+0xf800d880>
 800df84:	0401ffc4 	movi	r16,2047
 800df88:	003e2506 	br	800d820 <__alt_data_end+0xf800d820>
 800df8c:	0013883a 	mov	r9,zero
 800df90:	003f8406 	br	800dda4 <__alt_data_end+0xf800dda4>
 800df94:	0005883a 	mov	r2,zero
 800df98:	0007883a 	mov	r3,zero
 800df9c:	003e8906 	br	800d9c4 <__alt_data_end+0xf800d9c4>
 800dfa0:	197ff804 	addi	r5,r3,-32
 800dfa4:	01000804 	movi	r4,32
 800dfa8:	414ad83a 	srl	r5,r8,r5
 800dfac:	19002426 	beq	r3,r4,800e040 <__adddf3+0x89c>
 800dfb0:	01001004 	movi	r4,64
 800dfb4:	20c7c83a 	sub	r3,r4,r3
 800dfb8:	40c6983a 	sll	r3,r8,r3
 800dfbc:	1c46b03a 	or	r3,r3,r17
 800dfc0:	1806c03a 	cmpne	r3,r3,zero
 800dfc4:	28e2b03a 	or	r17,r5,r3
 800dfc8:	0007883a 	mov	r3,zero
 800dfcc:	003f2306 	br	800dc5c <__alt_data_end+0xf800dc5c>
 800dfd0:	0007883a 	mov	r3,zero
 800dfd4:	5811883a 	mov	r8,r11
 800dfd8:	00bfffc4 	movi	r2,-1
 800dfdc:	0401ffc4 	movi	r16,2047
 800dfe0:	003e7806 	br	800d9c4 <__alt_data_end+0xf800d9c4>
 800dfe4:	4462b03a 	or	r17,r8,r17
 800dfe8:	8822c03a 	cmpne	r17,r17,zero
 800dfec:	0009883a 	mov	r4,zero
 800dff0:	003fa006 	br	800de74 <__alt_data_end+0xf800de74>
 800dff4:	4811883a 	mov	r8,r9
 800dff8:	3023883a 	mov	r17,r6
 800dffc:	0401ffc4 	movi	r16,2047
 800e000:	003e0706 	br	800d820 <__alt_data_end+0xf800d820>
 800e004:	4811883a 	mov	r8,r9
 800e008:	3023883a 	mov	r17,r6
 800e00c:	003e0406 	br	800d820 <__alt_data_end+0xf800d820>
 800e010:	21fff804 	addi	r7,r4,-32
 800e014:	01400804 	movi	r5,32
 800e018:	41ced83a 	srl	r7,r8,r7
 800e01c:	21400a26 	beq	r4,r5,800e048 <__adddf3+0x8a4>
 800e020:	01401004 	movi	r5,64
 800e024:	2909c83a 	sub	r4,r5,r4
 800e028:	4108983a 	sll	r4,r8,r4
 800e02c:	2448b03a 	or	r4,r4,r17
 800e030:	2008c03a 	cmpne	r4,r4,zero
 800e034:	3922b03a 	or	r17,r7,r4
 800e038:	0009883a 	mov	r4,zero
 800e03c:	003f8d06 	br	800de74 <__alt_data_end+0xf800de74>
 800e040:	0007883a 	mov	r3,zero
 800e044:	003fdd06 	br	800dfbc <__alt_data_end+0xf800dfbc>
 800e048:	0009883a 	mov	r4,zero
 800e04c:	003ff706 	br	800e02c <__alt_data_end+0xf800e02c>

0800e050 <__divdf3>:
 800e050:	defff204 	addi	sp,sp,-56
 800e054:	dd400915 	stw	r21,36(sp)
 800e058:	282ad53a 	srli	r21,r5,20
 800e05c:	dd000815 	stw	r20,32(sp)
 800e060:	2828d7fa 	srli	r20,r5,31
 800e064:	dc000415 	stw	r16,16(sp)
 800e068:	04000434 	movhi	r16,16
 800e06c:	df000c15 	stw	fp,48(sp)
 800e070:	843fffc4 	addi	r16,r16,-1
 800e074:	dfc00d15 	stw	ra,52(sp)
 800e078:	ddc00b15 	stw	r23,44(sp)
 800e07c:	dd800a15 	stw	r22,40(sp)
 800e080:	dcc00715 	stw	r19,28(sp)
 800e084:	dc800615 	stw	r18,24(sp)
 800e088:	dc400515 	stw	r17,20(sp)
 800e08c:	ad41ffcc 	andi	r21,r21,2047
 800e090:	2c20703a 	and	r16,r5,r16
 800e094:	a7003fcc 	andi	fp,r20,255
 800e098:	a8006126 	beq	r21,zero,800e220 <__divdf3+0x1d0>
 800e09c:	0081ffc4 	movi	r2,2047
 800e0a0:	2025883a 	mov	r18,r4
 800e0a4:	a8803726 	beq	r21,r2,800e184 <__divdf3+0x134>
 800e0a8:	80800434 	orhi	r2,r16,16
 800e0ac:	100490fa 	slli	r2,r2,3
 800e0b0:	2020d77a 	srli	r16,r4,29
 800e0b4:	202490fa 	slli	r18,r4,3
 800e0b8:	ad7f0044 	addi	r21,r21,-1023
 800e0bc:	80a0b03a 	or	r16,r16,r2
 800e0c0:	0027883a 	mov	r19,zero
 800e0c4:	0013883a 	mov	r9,zero
 800e0c8:	3804d53a 	srli	r2,r7,20
 800e0cc:	382cd7fa 	srli	r22,r7,31
 800e0d0:	04400434 	movhi	r17,16
 800e0d4:	8c7fffc4 	addi	r17,r17,-1
 800e0d8:	1081ffcc 	andi	r2,r2,2047
 800e0dc:	3011883a 	mov	r8,r6
 800e0e0:	3c62703a 	and	r17,r7,r17
 800e0e4:	b5c03fcc 	andi	r23,r22,255
 800e0e8:	10006c26 	beq	r2,zero,800e29c <__divdf3+0x24c>
 800e0ec:	00c1ffc4 	movi	r3,2047
 800e0f0:	10c06426 	beq	r2,r3,800e284 <__divdf3+0x234>
 800e0f4:	88c00434 	orhi	r3,r17,16
 800e0f8:	180690fa 	slli	r3,r3,3
 800e0fc:	3022d77a 	srli	r17,r6,29
 800e100:	301090fa 	slli	r8,r6,3
 800e104:	10bf0044 	addi	r2,r2,-1023
 800e108:	88e2b03a 	or	r17,r17,r3
 800e10c:	000f883a 	mov	r7,zero
 800e110:	a58cf03a 	xor	r6,r20,r22
 800e114:	3cc8b03a 	or	r4,r7,r19
 800e118:	a8abc83a 	sub	r21,r21,r2
 800e11c:	008003c4 	movi	r2,15
 800e120:	3007883a 	mov	r3,r6
 800e124:	34c03fcc 	andi	r19,r6,255
 800e128:	11009036 	bltu	r2,r4,800e36c <__divdf3+0x31c>
 800e12c:	200890ba 	slli	r4,r4,2
 800e130:	00820074 	movhi	r2,2049
 800e134:	10b85104 	addi	r2,r2,-7868
 800e138:	2089883a 	add	r4,r4,r2
 800e13c:	20800017 	ldw	r2,0(r4)
 800e140:	1000683a 	jmp	r2
 800e144:	0800e36c 	andhi	zero,at,909
 800e148:	0800e1bc 	xorhi	zero,at,902
 800e14c:	0800e35c 	xori	zero,at,909
 800e150:	0800e1b0 	cmpltui	zero,at,902
 800e154:	0800e35c 	xori	zero,at,909
 800e158:	0800e330 	cmpltui	zero,at,908
 800e15c:	0800e35c 	xori	zero,at,909
 800e160:	0800e1b0 	cmpltui	zero,at,902
 800e164:	0800e1bc 	xorhi	zero,at,902
 800e168:	0800e1bc 	xorhi	zero,at,902
 800e16c:	0800e330 	cmpltui	zero,at,908
 800e170:	0800e1b0 	cmpltui	zero,at,902
 800e174:	0800e1a0 	cmpeqi	zero,at,902
 800e178:	0800e1a0 	cmpeqi	zero,at,902
 800e17c:	0800e1a0 	cmpeqi	zero,at,902
 800e180:	0800e650 	cmplti	zero,at,921
 800e184:	2404b03a 	or	r2,r4,r16
 800e188:	1000661e 	bne	r2,zero,800e324 <__divdf3+0x2d4>
 800e18c:	04c00204 	movi	r19,8
 800e190:	0021883a 	mov	r16,zero
 800e194:	0025883a 	mov	r18,zero
 800e198:	02400084 	movi	r9,2
 800e19c:	003fca06 	br	800e0c8 <__alt_data_end+0xf800e0c8>
 800e1a0:	8023883a 	mov	r17,r16
 800e1a4:	9011883a 	mov	r8,r18
 800e1a8:	e02f883a 	mov	r23,fp
 800e1ac:	480f883a 	mov	r7,r9
 800e1b0:	00800084 	movi	r2,2
 800e1b4:	3881311e 	bne	r7,r2,800e67c <__divdf3+0x62c>
 800e1b8:	b827883a 	mov	r19,r23
 800e1bc:	98c0004c 	andi	r3,r19,1
 800e1c0:	0081ffc4 	movi	r2,2047
 800e1c4:	000b883a 	mov	r5,zero
 800e1c8:	0025883a 	mov	r18,zero
 800e1cc:	1004953a 	slli	r2,r2,20
 800e1d0:	18c03fcc 	andi	r3,r3,255
 800e1d4:	04400434 	movhi	r17,16
 800e1d8:	8c7fffc4 	addi	r17,r17,-1
 800e1dc:	180697fa 	slli	r3,r3,31
 800e1e0:	2c4a703a 	and	r5,r5,r17
 800e1e4:	288ab03a 	or	r5,r5,r2
 800e1e8:	28c6b03a 	or	r3,r5,r3
 800e1ec:	9005883a 	mov	r2,r18
 800e1f0:	dfc00d17 	ldw	ra,52(sp)
 800e1f4:	df000c17 	ldw	fp,48(sp)
 800e1f8:	ddc00b17 	ldw	r23,44(sp)
 800e1fc:	dd800a17 	ldw	r22,40(sp)
 800e200:	dd400917 	ldw	r21,36(sp)
 800e204:	dd000817 	ldw	r20,32(sp)
 800e208:	dcc00717 	ldw	r19,28(sp)
 800e20c:	dc800617 	ldw	r18,24(sp)
 800e210:	dc400517 	ldw	r17,20(sp)
 800e214:	dc000417 	ldw	r16,16(sp)
 800e218:	dec00e04 	addi	sp,sp,56
 800e21c:	f800283a 	ret
 800e220:	2404b03a 	or	r2,r4,r16
 800e224:	2027883a 	mov	r19,r4
 800e228:	10003926 	beq	r2,zero,800e310 <__divdf3+0x2c0>
 800e22c:	80012e26 	beq	r16,zero,800e6e8 <__divdf3+0x698>
 800e230:	8009883a 	mov	r4,r16
 800e234:	d9800315 	stw	r6,12(sp)
 800e238:	d9c00215 	stw	r7,8(sp)
 800e23c:	800fda80 	call	800fda8 <__clzsi2>
 800e240:	d9800317 	ldw	r6,12(sp)
 800e244:	d9c00217 	ldw	r7,8(sp)
 800e248:	113ffd44 	addi	r4,r2,-11
 800e24c:	00c00704 	movi	r3,28
 800e250:	19012116 	blt	r3,r4,800e6d8 <__divdf3+0x688>
 800e254:	00c00744 	movi	r3,29
 800e258:	147ffe04 	addi	r17,r2,-8
 800e25c:	1907c83a 	sub	r3,r3,r4
 800e260:	8460983a 	sll	r16,r16,r17
 800e264:	98c6d83a 	srl	r3,r19,r3
 800e268:	9c64983a 	sll	r18,r19,r17
 800e26c:	1c20b03a 	or	r16,r3,r16
 800e270:	1080fcc4 	addi	r2,r2,1011
 800e274:	00abc83a 	sub	r21,zero,r2
 800e278:	0027883a 	mov	r19,zero
 800e27c:	0013883a 	mov	r9,zero
 800e280:	003f9106 	br	800e0c8 <__alt_data_end+0xf800e0c8>
 800e284:	3446b03a 	or	r3,r6,r17
 800e288:	18001f1e 	bne	r3,zero,800e308 <__divdf3+0x2b8>
 800e28c:	0023883a 	mov	r17,zero
 800e290:	0011883a 	mov	r8,zero
 800e294:	01c00084 	movi	r7,2
 800e298:	003f9d06 	br	800e110 <__alt_data_end+0xf800e110>
 800e29c:	3446b03a 	or	r3,r6,r17
 800e2a0:	18001526 	beq	r3,zero,800e2f8 <__divdf3+0x2a8>
 800e2a4:	88011b26 	beq	r17,zero,800e714 <__divdf3+0x6c4>
 800e2a8:	8809883a 	mov	r4,r17
 800e2ac:	d9800315 	stw	r6,12(sp)
 800e2b0:	da400115 	stw	r9,4(sp)
 800e2b4:	800fda80 	call	800fda8 <__clzsi2>
 800e2b8:	d9800317 	ldw	r6,12(sp)
 800e2bc:	da400117 	ldw	r9,4(sp)
 800e2c0:	113ffd44 	addi	r4,r2,-11
 800e2c4:	00c00704 	movi	r3,28
 800e2c8:	19010e16 	blt	r3,r4,800e704 <__divdf3+0x6b4>
 800e2cc:	00c00744 	movi	r3,29
 800e2d0:	123ffe04 	addi	r8,r2,-8
 800e2d4:	1907c83a 	sub	r3,r3,r4
 800e2d8:	8a22983a 	sll	r17,r17,r8
 800e2dc:	30c6d83a 	srl	r3,r6,r3
 800e2e0:	3210983a 	sll	r8,r6,r8
 800e2e4:	1c62b03a 	or	r17,r3,r17
 800e2e8:	1080fcc4 	addi	r2,r2,1011
 800e2ec:	0085c83a 	sub	r2,zero,r2
 800e2f0:	000f883a 	mov	r7,zero
 800e2f4:	003f8606 	br	800e110 <__alt_data_end+0xf800e110>
 800e2f8:	0023883a 	mov	r17,zero
 800e2fc:	0011883a 	mov	r8,zero
 800e300:	01c00044 	movi	r7,1
 800e304:	003f8206 	br	800e110 <__alt_data_end+0xf800e110>
 800e308:	01c000c4 	movi	r7,3
 800e30c:	003f8006 	br	800e110 <__alt_data_end+0xf800e110>
 800e310:	04c00104 	movi	r19,4
 800e314:	0021883a 	mov	r16,zero
 800e318:	0025883a 	mov	r18,zero
 800e31c:	02400044 	movi	r9,1
 800e320:	003f6906 	br	800e0c8 <__alt_data_end+0xf800e0c8>
 800e324:	04c00304 	movi	r19,12
 800e328:	024000c4 	movi	r9,3
 800e32c:	003f6606 	br	800e0c8 <__alt_data_end+0xf800e0c8>
 800e330:	01400434 	movhi	r5,16
 800e334:	0007883a 	mov	r3,zero
 800e338:	297fffc4 	addi	r5,r5,-1
 800e33c:	04bfffc4 	movi	r18,-1
 800e340:	0081ffc4 	movi	r2,2047
 800e344:	003fa106 	br	800e1cc <__alt_data_end+0xf800e1cc>
 800e348:	00c00044 	movi	r3,1
 800e34c:	1887c83a 	sub	r3,r3,r2
 800e350:	01000e04 	movi	r4,56
 800e354:	20c1210e 	bge	r4,r3,800e7dc <__divdf3+0x78c>
 800e358:	98c0004c 	andi	r3,r19,1
 800e35c:	0005883a 	mov	r2,zero
 800e360:	000b883a 	mov	r5,zero
 800e364:	0025883a 	mov	r18,zero
 800e368:	003f9806 	br	800e1cc <__alt_data_end+0xf800e1cc>
 800e36c:	8c00fd36 	bltu	r17,r16,800e764 <__divdf3+0x714>
 800e370:	8440fb26 	beq	r16,r17,800e760 <__divdf3+0x710>
 800e374:	8007883a 	mov	r3,r16
 800e378:	ad7fffc4 	addi	r21,r21,-1
 800e37c:	0021883a 	mov	r16,zero
 800e380:	4004d63a 	srli	r2,r8,24
 800e384:	8822923a 	slli	r17,r17,8
 800e388:	1809883a 	mov	r4,r3
 800e38c:	402c923a 	slli	r22,r8,8
 800e390:	88b8b03a 	or	fp,r17,r2
 800e394:	e028d43a 	srli	r20,fp,16
 800e398:	d8c00015 	stw	r3,0(sp)
 800e39c:	e5ffffcc 	andi	r23,fp,65535
 800e3a0:	a00b883a 	mov	r5,r20
 800e3a4:	800d6e80 	call	800d6e8 <__udivsi3>
 800e3a8:	d8c00017 	ldw	r3,0(sp)
 800e3ac:	a00b883a 	mov	r5,r20
 800e3b0:	d8800315 	stw	r2,12(sp)
 800e3b4:	1809883a 	mov	r4,r3
 800e3b8:	800d74c0 	call	800d74c <__umodsi3>
 800e3bc:	d9800317 	ldw	r6,12(sp)
 800e3c0:	1006943a 	slli	r3,r2,16
 800e3c4:	9004d43a 	srli	r2,r18,16
 800e3c8:	b9a3383a 	mul	r17,r23,r6
 800e3cc:	10c4b03a 	or	r2,r2,r3
 800e3d0:	1440062e 	bgeu	r2,r17,800e3ec <__divdf3+0x39c>
 800e3d4:	1705883a 	add	r2,r2,fp
 800e3d8:	30ffffc4 	addi	r3,r6,-1
 800e3dc:	1700ee36 	bltu	r2,fp,800e798 <__divdf3+0x748>
 800e3e0:	1440ed2e 	bgeu	r2,r17,800e798 <__divdf3+0x748>
 800e3e4:	31bfff84 	addi	r6,r6,-2
 800e3e8:	1705883a 	add	r2,r2,fp
 800e3ec:	1463c83a 	sub	r17,r2,r17
 800e3f0:	a00b883a 	mov	r5,r20
 800e3f4:	8809883a 	mov	r4,r17
 800e3f8:	d9800315 	stw	r6,12(sp)
 800e3fc:	800d6e80 	call	800d6e8 <__udivsi3>
 800e400:	a00b883a 	mov	r5,r20
 800e404:	8809883a 	mov	r4,r17
 800e408:	d8800215 	stw	r2,8(sp)
 800e40c:	800d74c0 	call	800d74c <__umodsi3>
 800e410:	d9c00217 	ldw	r7,8(sp)
 800e414:	1004943a 	slli	r2,r2,16
 800e418:	94bfffcc 	andi	r18,r18,65535
 800e41c:	b9d1383a 	mul	r8,r23,r7
 800e420:	90a4b03a 	or	r18,r18,r2
 800e424:	d9800317 	ldw	r6,12(sp)
 800e428:	9200062e 	bgeu	r18,r8,800e444 <__divdf3+0x3f4>
 800e42c:	9725883a 	add	r18,r18,fp
 800e430:	38bfffc4 	addi	r2,r7,-1
 800e434:	9700d636 	bltu	r18,fp,800e790 <__divdf3+0x740>
 800e438:	9200d52e 	bgeu	r18,r8,800e790 <__divdf3+0x740>
 800e43c:	39ffff84 	addi	r7,r7,-2
 800e440:	9725883a 	add	r18,r18,fp
 800e444:	3004943a 	slli	r2,r6,16
 800e448:	b012d43a 	srli	r9,r22,16
 800e44c:	b1bfffcc 	andi	r6,r22,65535
 800e450:	11e2b03a 	or	r17,r2,r7
 800e454:	8806d43a 	srli	r3,r17,16
 800e458:	893fffcc 	andi	r4,r17,65535
 800e45c:	218b383a 	mul	r5,r4,r6
 800e460:	30c5383a 	mul	r2,r6,r3
 800e464:	2249383a 	mul	r4,r4,r9
 800e468:	280ed43a 	srli	r7,r5,16
 800e46c:	9225c83a 	sub	r18,r18,r8
 800e470:	2089883a 	add	r4,r4,r2
 800e474:	3909883a 	add	r4,r7,r4
 800e478:	1a47383a 	mul	r3,r3,r9
 800e47c:	2080022e 	bgeu	r4,r2,800e488 <__divdf3+0x438>
 800e480:	00800074 	movhi	r2,1
 800e484:	1887883a 	add	r3,r3,r2
 800e488:	2004d43a 	srli	r2,r4,16
 800e48c:	2008943a 	slli	r4,r4,16
 800e490:	297fffcc 	andi	r5,r5,65535
 800e494:	10c7883a 	add	r3,r2,r3
 800e498:	2149883a 	add	r4,r4,r5
 800e49c:	90c0a536 	bltu	r18,r3,800e734 <__divdf3+0x6e4>
 800e4a0:	90c0bf26 	beq	r18,r3,800e7a0 <__divdf3+0x750>
 800e4a4:	90c7c83a 	sub	r3,r18,r3
 800e4a8:	810fc83a 	sub	r7,r16,r4
 800e4ac:	81e5803a 	cmpltu	r18,r16,r7
 800e4b0:	1ca5c83a 	sub	r18,r3,r18
 800e4b4:	e480c126 	beq	fp,r18,800e7bc <__divdf3+0x76c>
 800e4b8:	a00b883a 	mov	r5,r20
 800e4bc:	9009883a 	mov	r4,r18
 800e4c0:	d9800315 	stw	r6,12(sp)
 800e4c4:	d9c00215 	stw	r7,8(sp)
 800e4c8:	da400115 	stw	r9,4(sp)
 800e4cc:	800d6e80 	call	800d6e8 <__udivsi3>
 800e4d0:	a00b883a 	mov	r5,r20
 800e4d4:	9009883a 	mov	r4,r18
 800e4d8:	d8800015 	stw	r2,0(sp)
 800e4dc:	800d74c0 	call	800d74c <__umodsi3>
 800e4e0:	d9c00217 	ldw	r7,8(sp)
 800e4e4:	da000017 	ldw	r8,0(sp)
 800e4e8:	1006943a 	slli	r3,r2,16
 800e4ec:	3804d43a 	srli	r2,r7,16
 800e4f0:	ba21383a 	mul	r16,r23,r8
 800e4f4:	d9800317 	ldw	r6,12(sp)
 800e4f8:	10c4b03a 	or	r2,r2,r3
 800e4fc:	da400117 	ldw	r9,4(sp)
 800e500:	1400062e 	bgeu	r2,r16,800e51c <__divdf3+0x4cc>
 800e504:	1705883a 	add	r2,r2,fp
 800e508:	40ffffc4 	addi	r3,r8,-1
 800e50c:	1700ad36 	bltu	r2,fp,800e7c4 <__divdf3+0x774>
 800e510:	1400ac2e 	bgeu	r2,r16,800e7c4 <__divdf3+0x774>
 800e514:	423fff84 	addi	r8,r8,-2
 800e518:	1705883a 	add	r2,r2,fp
 800e51c:	1421c83a 	sub	r16,r2,r16
 800e520:	a00b883a 	mov	r5,r20
 800e524:	8009883a 	mov	r4,r16
 800e528:	d9800315 	stw	r6,12(sp)
 800e52c:	d9c00215 	stw	r7,8(sp)
 800e530:	da000015 	stw	r8,0(sp)
 800e534:	da400115 	stw	r9,4(sp)
 800e538:	800d6e80 	call	800d6e8 <__udivsi3>
 800e53c:	8009883a 	mov	r4,r16
 800e540:	a00b883a 	mov	r5,r20
 800e544:	1025883a 	mov	r18,r2
 800e548:	800d74c0 	call	800d74c <__umodsi3>
 800e54c:	d9c00217 	ldw	r7,8(sp)
 800e550:	1004943a 	slli	r2,r2,16
 800e554:	bcaf383a 	mul	r23,r23,r18
 800e558:	393fffcc 	andi	r4,r7,65535
 800e55c:	2088b03a 	or	r4,r4,r2
 800e560:	d9800317 	ldw	r6,12(sp)
 800e564:	da000017 	ldw	r8,0(sp)
 800e568:	da400117 	ldw	r9,4(sp)
 800e56c:	25c0062e 	bgeu	r4,r23,800e588 <__divdf3+0x538>
 800e570:	2709883a 	add	r4,r4,fp
 800e574:	90bfffc4 	addi	r2,r18,-1
 800e578:	27009436 	bltu	r4,fp,800e7cc <__divdf3+0x77c>
 800e57c:	25c0932e 	bgeu	r4,r23,800e7cc <__divdf3+0x77c>
 800e580:	94bfff84 	addi	r18,r18,-2
 800e584:	2709883a 	add	r4,r4,fp
 800e588:	4004943a 	slli	r2,r8,16
 800e58c:	25efc83a 	sub	r23,r4,r23
 800e590:	1490b03a 	or	r8,r2,r18
 800e594:	4008d43a 	srli	r4,r8,16
 800e598:	40ffffcc 	andi	r3,r8,65535
 800e59c:	30c5383a 	mul	r2,r6,r3
 800e5a0:	1a47383a 	mul	r3,r3,r9
 800e5a4:	310d383a 	mul	r6,r6,r4
 800e5a8:	100ad43a 	srli	r5,r2,16
 800e5ac:	4913383a 	mul	r9,r9,r4
 800e5b0:	1987883a 	add	r3,r3,r6
 800e5b4:	28c7883a 	add	r3,r5,r3
 800e5b8:	1980022e 	bgeu	r3,r6,800e5c4 <__divdf3+0x574>
 800e5bc:	01000074 	movhi	r4,1
 800e5c0:	4913883a 	add	r9,r9,r4
 800e5c4:	1808d43a 	srli	r4,r3,16
 800e5c8:	1806943a 	slli	r3,r3,16
 800e5cc:	10bfffcc 	andi	r2,r2,65535
 800e5d0:	2253883a 	add	r9,r4,r9
 800e5d4:	1887883a 	add	r3,r3,r2
 800e5d8:	ba403836 	bltu	r23,r9,800e6bc <__divdf3+0x66c>
 800e5dc:	ba403626 	beq	r23,r9,800e6b8 <__divdf3+0x668>
 800e5e0:	42000054 	ori	r8,r8,1
 800e5e4:	a880ffc4 	addi	r2,r21,1023
 800e5e8:	00bf570e 	bge	zero,r2,800e348 <__alt_data_end+0xf800e348>
 800e5ec:	40c001cc 	andi	r3,r8,7
 800e5f0:	18000726 	beq	r3,zero,800e610 <__divdf3+0x5c0>
 800e5f4:	40c003cc 	andi	r3,r8,15
 800e5f8:	01000104 	movi	r4,4
 800e5fc:	19000426 	beq	r3,r4,800e610 <__divdf3+0x5c0>
 800e600:	4107883a 	add	r3,r8,r4
 800e604:	1a11803a 	cmpltu	r8,r3,r8
 800e608:	8a23883a 	add	r17,r17,r8
 800e60c:	1811883a 	mov	r8,r3
 800e610:	88c0402c 	andhi	r3,r17,256
 800e614:	18000426 	beq	r3,zero,800e628 <__divdf3+0x5d8>
 800e618:	00ffc034 	movhi	r3,65280
 800e61c:	18ffffc4 	addi	r3,r3,-1
 800e620:	a8810004 	addi	r2,r21,1024
 800e624:	88e2703a 	and	r17,r17,r3
 800e628:	00c1ff84 	movi	r3,2046
 800e62c:	18bee316 	blt	r3,r2,800e1bc <__alt_data_end+0xf800e1bc>
 800e630:	8824977a 	slli	r18,r17,29
 800e634:	4010d0fa 	srli	r8,r8,3
 800e638:	8822927a 	slli	r17,r17,9
 800e63c:	1081ffcc 	andi	r2,r2,2047
 800e640:	9224b03a 	or	r18,r18,r8
 800e644:	880ad33a 	srli	r5,r17,12
 800e648:	98c0004c 	andi	r3,r19,1
 800e64c:	003edf06 	br	800e1cc <__alt_data_end+0xf800e1cc>
 800e650:	8080022c 	andhi	r2,r16,8
 800e654:	10001226 	beq	r2,zero,800e6a0 <__divdf3+0x650>
 800e658:	8880022c 	andhi	r2,r17,8
 800e65c:	1000101e 	bne	r2,zero,800e6a0 <__divdf3+0x650>
 800e660:	00800434 	movhi	r2,16
 800e664:	89400234 	orhi	r5,r17,8
 800e668:	10bfffc4 	addi	r2,r2,-1
 800e66c:	b007883a 	mov	r3,r22
 800e670:	288a703a 	and	r5,r5,r2
 800e674:	4025883a 	mov	r18,r8
 800e678:	003f3106 	br	800e340 <__alt_data_end+0xf800e340>
 800e67c:	008000c4 	movi	r2,3
 800e680:	3880a626 	beq	r7,r2,800e91c <__divdf3+0x8cc>
 800e684:	00800044 	movi	r2,1
 800e688:	3880521e 	bne	r7,r2,800e7d4 <__divdf3+0x784>
 800e68c:	b807883a 	mov	r3,r23
 800e690:	0005883a 	mov	r2,zero
 800e694:	000b883a 	mov	r5,zero
 800e698:	0025883a 	mov	r18,zero
 800e69c:	003ecb06 	br	800e1cc <__alt_data_end+0xf800e1cc>
 800e6a0:	00800434 	movhi	r2,16
 800e6a4:	81400234 	orhi	r5,r16,8
 800e6a8:	10bfffc4 	addi	r2,r2,-1
 800e6ac:	a007883a 	mov	r3,r20
 800e6b0:	288a703a 	and	r5,r5,r2
 800e6b4:	003f2206 	br	800e340 <__alt_data_end+0xf800e340>
 800e6b8:	183fca26 	beq	r3,zero,800e5e4 <__alt_data_end+0xf800e5e4>
 800e6bc:	e5ef883a 	add	r23,fp,r23
 800e6c0:	40bfffc4 	addi	r2,r8,-1
 800e6c4:	bf00392e 	bgeu	r23,fp,800e7ac <__divdf3+0x75c>
 800e6c8:	1011883a 	mov	r8,r2
 800e6cc:	ba7fc41e 	bne	r23,r9,800e5e0 <__alt_data_end+0xf800e5e0>
 800e6d0:	b0ffc31e 	bne	r22,r3,800e5e0 <__alt_data_end+0xf800e5e0>
 800e6d4:	003fc306 	br	800e5e4 <__alt_data_end+0xf800e5e4>
 800e6d8:	143ff604 	addi	r16,r2,-40
 800e6dc:	9c20983a 	sll	r16,r19,r16
 800e6e0:	0025883a 	mov	r18,zero
 800e6e4:	003ee206 	br	800e270 <__alt_data_end+0xf800e270>
 800e6e8:	d9800315 	stw	r6,12(sp)
 800e6ec:	d9c00215 	stw	r7,8(sp)
 800e6f0:	800fda80 	call	800fda8 <__clzsi2>
 800e6f4:	10800804 	addi	r2,r2,32
 800e6f8:	d9c00217 	ldw	r7,8(sp)
 800e6fc:	d9800317 	ldw	r6,12(sp)
 800e700:	003ed106 	br	800e248 <__alt_data_end+0xf800e248>
 800e704:	147ff604 	addi	r17,r2,-40
 800e708:	3462983a 	sll	r17,r6,r17
 800e70c:	0011883a 	mov	r8,zero
 800e710:	003ef506 	br	800e2e8 <__alt_data_end+0xf800e2e8>
 800e714:	3009883a 	mov	r4,r6
 800e718:	d9800315 	stw	r6,12(sp)
 800e71c:	da400115 	stw	r9,4(sp)
 800e720:	800fda80 	call	800fda8 <__clzsi2>
 800e724:	10800804 	addi	r2,r2,32
 800e728:	da400117 	ldw	r9,4(sp)
 800e72c:	d9800317 	ldw	r6,12(sp)
 800e730:	003ee306 	br	800e2c0 <__alt_data_end+0xf800e2c0>
 800e734:	85a1883a 	add	r16,r16,r22
 800e738:	8585803a 	cmpltu	r2,r16,r22
 800e73c:	1705883a 	add	r2,r2,fp
 800e740:	14a5883a 	add	r18,r2,r18
 800e744:	88bfffc4 	addi	r2,r17,-1
 800e748:	e4800c2e 	bgeu	fp,r18,800e77c <__divdf3+0x72c>
 800e74c:	90c03e36 	bltu	r18,r3,800e848 <__divdf3+0x7f8>
 800e750:	1c806926 	beq	r3,r18,800e8f8 <__divdf3+0x8a8>
 800e754:	90c7c83a 	sub	r3,r18,r3
 800e758:	1023883a 	mov	r17,r2
 800e75c:	003f5206 	br	800e4a8 <__alt_data_end+0xf800e4a8>
 800e760:	923f0436 	bltu	r18,r8,800e374 <__alt_data_end+0xf800e374>
 800e764:	800897fa 	slli	r4,r16,31
 800e768:	9004d07a 	srli	r2,r18,1
 800e76c:	8006d07a 	srli	r3,r16,1
 800e770:	902097fa 	slli	r16,r18,31
 800e774:	20a4b03a 	or	r18,r4,r2
 800e778:	003f0106 	br	800e380 <__alt_data_end+0xf800e380>
 800e77c:	e4bff51e 	bne	fp,r18,800e754 <__alt_data_end+0xf800e754>
 800e780:	85bff22e 	bgeu	r16,r22,800e74c <__alt_data_end+0xf800e74c>
 800e784:	e0c7c83a 	sub	r3,fp,r3
 800e788:	1023883a 	mov	r17,r2
 800e78c:	003f4606 	br	800e4a8 <__alt_data_end+0xf800e4a8>
 800e790:	100f883a 	mov	r7,r2
 800e794:	003f2b06 	br	800e444 <__alt_data_end+0xf800e444>
 800e798:	180d883a 	mov	r6,r3
 800e79c:	003f1306 	br	800e3ec <__alt_data_end+0xf800e3ec>
 800e7a0:	813fe436 	bltu	r16,r4,800e734 <__alt_data_end+0xf800e734>
 800e7a4:	0007883a 	mov	r3,zero
 800e7a8:	003f3f06 	br	800e4a8 <__alt_data_end+0xf800e4a8>
 800e7ac:	ba402c36 	bltu	r23,r9,800e860 <__divdf3+0x810>
 800e7b0:	4dc05426 	beq	r9,r23,800e904 <__divdf3+0x8b4>
 800e7b4:	1011883a 	mov	r8,r2
 800e7b8:	003f8906 	br	800e5e0 <__alt_data_end+0xf800e5e0>
 800e7bc:	023fffc4 	movi	r8,-1
 800e7c0:	003f8806 	br	800e5e4 <__alt_data_end+0xf800e5e4>
 800e7c4:	1811883a 	mov	r8,r3
 800e7c8:	003f5406 	br	800e51c <__alt_data_end+0xf800e51c>
 800e7cc:	1025883a 	mov	r18,r2
 800e7d0:	003f6d06 	br	800e588 <__alt_data_end+0xf800e588>
 800e7d4:	b827883a 	mov	r19,r23
 800e7d8:	003f8206 	br	800e5e4 <__alt_data_end+0xf800e5e4>
 800e7dc:	010007c4 	movi	r4,31
 800e7e0:	20c02616 	blt	r4,r3,800e87c <__divdf3+0x82c>
 800e7e4:	00800804 	movi	r2,32
 800e7e8:	10c5c83a 	sub	r2,r2,r3
 800e7ec:	888a983a 	sll	r5,r17,r2
 800e7f0:	40c8d83a 	srl	r4,r8,r3
 800e7f4:	4084983a 	sll	r2,r8,r2
 800e7f8:	88e2d83a 	srl	r17,r17,r3
 800e7fc:	2906b03a 	or	r3,r5,r4
 800e800:	1004c03a 	cmpne	r2,r2,zero
 800e804:	1886b03a 	or	r3,r3,r2
 800e808:	188001cc 	andi	r2,r3,7
 800e80c:	10000726 	beq	r2,zero,800e82c <__divdf3+0x7dc>
 800e810:	188003cc 	andi	r2,r3,15
 800e814:	01000104 	movi	r4,4
 800e818:	11000426 	beq	r2,r4,800e82c <__divdf3+0x7dc>
 800e81c:	1805883a 	mov	r2,r3
 800e820:	10c00104 	addi	r3,r2,4
 800e824:	1885803a 	cmpltu	r2,r3,r2
 800e828:	88a3883a 	add	r17,r17,r2
 800e82c:	8880202c 	andhi	r2,r17,128
 800e830:	10002726 	beq	r2,zero,800e8d0 <__divdf3+0x880>
 800e834:	98c0004c 	andi	r3,r19,1
 800e838:	00800044 	movi	r2,1
 800e83c:	000b883a 	mov	r5,zero
 800e840:	0025883a 	mov	r18,zero
 800e844:	003e6106 	br	800e1cc <__alt_data_end+0xf800e1cc>
 800e848:	85a1883a 	add	r16,r16,r22
 800e84c:	8585803a 	cmpltu	r2,r16,r22
 800e850:	1705883a 	add	r2,r2,fp
 800e854:	14a5883a 	add	r18,r2,r18
 800e858:	8c7fff84 	addi	r17,r17,-2
 800e85c:	003f1106 	br	800e4a4 <__alt_data_end+0xf800e4a4>
 800e860:	b589883a 	add	r4,r22,r22
 800e864:	25ad803a 	cmpltu	r22,r4,r22
 800e868:	b739883a 	add	fp,r22,fp
 800e86c:	40bfff84 	addi	r2,r8,-2
 800e870:	bf2f883a 	add	r23,r23,fp
 800e874:	202d883a 	mov	r22,r4
 800e878:	003f9306 	br	800e6c8 <__alt_data_end+0xf800e6c8>
 800e87c:	013ff844 	movi	r4,-31
 800e880:	2085c83a 	sub	r2,r4,r2
 800e884:	8888d83a 	srl	r4,r17,r2
 800e888:	00800804 	movi	r2,32
 800e88c:	18802126 	beq	r3,r2,800e914 <__divdf3+0x8c4>
 800e890:	00801004 	movi	r2,64
 800e894:	10c5c83a 	sub	r2,r2,r3
 800e898:	8884983a 	sll	r2,r17,r2
 800e89c:	1204b03a 	or	r2,r2,r8
 800e8a0:	1004c03a 	cmpne	r2,r2,zero
 800e8a4:	2084b03a 	or	r2,r4,r2
 800e8a8:	144001cc 	andi	r17,r2,7
 800e8ac:	88000d1e 	bne	r17,zero,800e8e4 <__divdf3+0x894>
 800e8b0:	000b883a 	mov	r5,zero
 800e8b4:	1024d0fa 	srli	r18,r2,3
 800e8b8:	98c0004c 	andi	r3,r19,1
 800e8bc:	0005883a 	mov	r2,zero
 800e8c0:	9464b03a 	or	r18,r18,r17
 800e8c4:	003e4106 	br	800e1cc <__alt_data_end+0xf800e1cc>
 800e8c8:	1007883a 	mov	r3,r2
 800e8cc:	0023883a 	mov	r17,zero
 800e8d0:	880a927a 	slli	r5,r17,9
 800e8d4:	1805883a 	mov	r2,r3
 800e8d8:	8822977a 	slli	r17,r17,29
 800e8dc:	280ad33a 	srli	r5,r5,12
 800e8e0:	003ff406 	br	800e8b4 <__alt_data_end+0xf800e8b4>
 800e8e4:	10c003cc 	andi	r3,r2,15
 800e8e8:	01000104 	movi	r4,4
 800e8ec:	193ff626 	beq	r3,r4,800e8c8 <__alt_data_end+0xf800e8c8>
 800e8f0:	0023883a 	mov	r17,zero
 800e8f4:	003fca06 	br	800e820 <__alt_data_end+0xf800e820>
 800e8f8:	813fd336 	bltu	r16,r4,800e848 <__alt_data_end+0xf800e848>
 800e8fc:	1023883a 	mov	r17,r2
 800e900:	003fa806 	br	800e7a4 <__alt_data_end+0xf800e7a4>
 800e904:	b0ffd636 	bltu	r22,r3,800e860 <__alt_data_end+0xf800e860>
 800e908:	1011883a 	mov	r8,r2
 800e90c:	b0ff341e 	bne	r22,r3,800e5e0 <__alt_data_end+0xf800e5e0>
 800e910:	003f3406 	br	800e5e4 <__alt_data_end+0xf800e5e4>
 800e914:	0005883a 	mov	r2,zero
 800e918:	003fe006 	br	800e89c <__alt_data_end+0xf800e89c>
 800e91c:	00800434 	movhi	r2,16
 800e920:	89400234 	orhi	r5,r17,8
 800e924:	10bfffc4 	addi	r2,r2,-1
 800e928:	b807883a 	mov	r3,r23
 800e92c:	288a703a 	and	r5,r5,r2
 800e930:	4025883a 	mov	r18,r8
 800e934:	003e8206 	br	800e340 <__alt_data_end+0xf800e340>

0800e938 <__eqdf2>:
 800e938:	2804d53a 	srli	r2,r5,20
 800e93c:	3806d53a 	srli	r3,r7,20
 800e940:	02000434 	movhi	r8,16
 800e944:	423fffc4 	addi	r8,r8,-1
 800e948:	1081ffcc 	andi	r2,r2,2047
 800e94c:	0281ffc4 	movi	r10,2047
 800e950:	2a12703a 	and	r9,r5,r8
 800e954:	18c1ffcc 	andi	r3,r3,2047
 800e958:	3a10703a 	and	r8,r7,r8
 800e95c:	280ad7fa 	srli	r5,r5,31
 800e960:	380ed7fa 	srli	r7,r7,31
 800e964:	12801026 	beq	r2,r10,800e9a8 <__eqdf2+0x70>
 800e968:	0281ffc4 	movi	r10,2047
 800e96c:	1a800a26 	beq	r3,r10,800e998 <__eqdf2+0x60>
 800e970:	10c00226 	beq	r2,r3,800e97c <__eqdf2+0x44>
 800e974:	00800044 	movi	r2,1
 800e978:	f800283a 	ret
 800e97c:	4a3ffd1e 	bne	r9,r8,800e974 <__alt_data_end+0xf800e974>
 800e980:	21bffc1e 	bne	r4,r6,800e974 <__alt_data_end+0xf800e974>
 800e984:	29c00c26 	beq	r5,r7,800e9b8 <__eqdf2+0x80>
 800e988:	103ffa1e 	bne	r2,zero,800e974 <__alt_data_end+0xf800e974>
 800e98c:	2244b03a 	or	r2,r4,r9
 800e990:	1004c03a 	cmpne	r2,r2,zero
 800e994:	f800283a 	ret
 800e998:	3214b03a 	or	r10,r6,r8
 800e99c:	503ff426 	beq	r10,zero,800e970 <__alt_data_end+0xf800e970>
 800e9a0:	00800044 	movi	r2,1
 800e9a4:	f800283a 	ret
 800e9a8:	2254b03a 	or	r10,r4,r9
 800e9ac:	503fee26 	beq	r10,zero,800e968 <__alt_data_end+0xf800e968>
 800e9b0:	00800044 	movi	r2,1
 800e9b4:	f800283a 	ret
 800e9b8:	0005883a 	mov	r2,zero
 800e9bc:	f800283a 	ret

0800e9c0 <__gedf2>:
 800e9c0:	2804d53a 	srli	r2,r5,20
 800e9c4:	3806d53a 	srli	r3,r7,20
 800e9c8:	02000434 	movhi	r8,16
 800e9cc:	423fffc4 	addi	r8,r8,-1
 800e9d0:	1081ffcc 	andi	r2,r2,2047
 800e9d4:	0241ffc4 	movi	r9,2047
 800e9d8:	2a14703a 	and	r10,r5,r8
 800e9dc:	18c1ffcc 	andi	r3,r3,2047
 800e9e0:	3a10703a 	and	r8,r7,r8
 800e9e4:	280ad7fa 	srli	r5,r5,31
 800e9e8:	380ed7fa 	srli	r7,r7,31
 800e9ec:	12401d26 	beq	r2,r9,800ea64 <__gedf2+0xa4>
 800e9f0:	0241ffc4 	movi	r9,2047
 800e9f4:	1a401226 	beq	r3,r9,800ea40 <__gedf2+0x80>
 800e9f8:	1000081e 	bne	r2,zero,800ea1c <__gedf2+0x5c>
 800e9fc:	2296b03a 	or	r11,r4,r10
 800ea00:	5813003a 	cmpeq	r9,r11,zero
 800ea04:	1800091e 	bne	r3,zero,800ea2c <__gedf2+0x6c>
 800ea08:	3218b03a 	or	r12,r6,r8
 800ea0c:	6000071e 	bne	r12,zero,800ea2c <__gedf2+0x6c>
 800ea10:	0005883a 	mov	r2,zero
 800ea14:	5800101e 	bne	r11,zero,800ea58 <__gedf2+0x98>
 800ea18:	f800283a 	ret
 800ea1c:	18000c1e 	bne	r3,zero,800ea50 <__gedf2+0x90>
 800ea20:	3212b03a 	or	r9,r6,r8
 800ea24:	48000c26 	beq	r9,zero,800ea58 <__gedf2+0x98>
 800ea28:	0013883a 	mov	r9,zero
 800ea2c:	39c03fcc 	andi	r7,r7,255
 800ea30:	48000826 	beq	r9,zero,800ea54 <__gedf2+0x94>
 800ea34:	38000926 	beq	r7,zero,800ea5c <__gedf2+0x9c>
 800ea38:	00800044 	movi	r2,1
 800ea3c:	f800283a 	ret
 800ea40:	3212b03a 	or	r9,r6,r8
 800ea44:	483fec26 	beq	r9,zero,800e9f8 <__alt_data_end+0xf800e9f8>
 800ea48:	00bfff84 	movi	r2,-2
 800ea4c:	f800283a 	ret
 800ea50:	39c03fcc 	andi	r7,r7,255
 800ea54:	29c00626 	beq	r5,r7,800ea70 <__gedf2+0xb0>
 800ea58:	283ff726 	beq	r5,zero,800ea38 <__alt_data_end+0xf800ea38>
 800ea5c:	00bfffc4 	movi	r2,-1
 800ea60:	f800283a 	ret
 800ea64:	2292b03a 	or	r9,r4,r10
 800ea68:	483fe126 	beq	r9,zero,800e9f0 <__alt_data_end+0xf800e9f0>
 800ea6c:	003ff606 	br	800ea48 <__alt_data_end+0xf800ea48>
 800ea70:	18bff916 	blt	r3,r2,800ea58 <__alt_data_end+0xf800ea58>
 800ea74:	10c00316 	blt	r2,r3,800ea84 <__gedf2+0xc4>
 800ea78:	42bff736 	bltu	r8,r10,800ea58 <__alt_data_end+0xf800ea58>
 800ea7c:	52000326 	beq	r10,r8,800ea8c <__gedf2+0xcc>
 800ea80:	5200042e 	bgeu	r10,r8,800ea94 <__gedf2+0xd4>
 800ea84:	283fec1e 	bne	r5,zero,800ea38 <__alt_data_end+0xf800ea38>
 800ea88:	003ff406 	br	800ea5c <__alt_data_end+0xf800ea5c>
 800ea8c:	313ff236 	bltu	r6,r4,800ea58 <__alt_data_end+0xf800ea58>
 800ea90:	21bffc36 	bltu	r4,r6,800ea84 <__alt_data_end+0xf800ea84>
 800ea94:	0005883a 	mov	r2,zero
 800ea98:	f800283a 	ret

0800ea9c <__ledf2>:
 800ea9c:	2804d53a 	srli	r2,r5,20
 800eaa0:	3810d53a 	srli	r8,r7,20
 800eaa4:	00c00434 	movhi	r3,16
 800eaa8:	18ffffc4 	addi	r3,r3,-1
 800eaac:	1081ffcc 	andi	r2,r2,2047
 800eab0:	0241ffc4 	movi	r9,2047
 800eab4:	28d4703a 	and	r10,r5,r3
 800eab8:	4201ffcc 	andi	r8,r8,2047
 800eabc:	38c6703a 	and	r3,r7,r3
 800eac0:	280ad7fa 	srli	r5,r5,31
 800eac4:	380ed7fa 	srli	r7,r7,31
 800eac8:	12401f26 	beq	r2,r9,800eb48 <__ledf2+0xac>
 800eacc:	0241ffc4 	movi	r9,2047
 800ead0:	42401426 	beq	r8,r9,800eb24 <__ledf2+0x88>
 800ead4:	1000091e 	bne	r2,zero,800eafc <__ledf2+0x60>
 800ead8:	2296b03a 	or	r11,r4,r10
 800eadc:	5813003a 	cmpeq	r9,r11,zero
 800eae0:	29403fcc 	andi	r5,r5,255
 800eae4:	40000a1e 	bne	r8,zero,800eb10 <__ledf2+0x74>
 800eae8:	30d8b03a 	or	r12,r6,r3
 800eaec:	6000081e 	bne	r12,zero,800eb10 <__ledf2+0x74>
 800eaf0:	0005883a 	mov	r2,zero
 800eaf4:	5800111e 	bne	r11,zero,800eb3c <__ledf2+0xa0>
 800eaf8:	f800283a 	ret
 800eafc:	29403fcc 	andi	r5,r5,255
 800eb00:	40000c1e 	bne	r8,zero,800eb34 <__ledf2+0x98>
 800eb04:	30d2b03a 	or	r9,r6,r3
 800eb08:	48000c26 	beq	r9,zero,800eb3c <__ledf2+0xa0>
 800eb0c:	0013883a 	mov	r9,zero
 800eb10:	39c03fcc 	andi	r7,r7,255
 800eb14:	48000826 	beq	r9,zero,800eb38 <__ledf2+0x9c>
 800eb18:	38001126 	beq	r7,zero,800eb60 <__ledf2+0xc4>
 800eb1c:	00800044 	movi	r2,1
 800eb20:	f800283a 	ret
 800eb24:	30d2b03a 	or	r9,r6,r3
 800eb28:	483fea26 	beq	r9,zero,800ead4 <__alt_data_end+0xf800ead4>
 800eb2c:	00800084 	movi	r2,2
 800eb30:	f800283a 	ret
 800eb34:	39c03fcc 	andi	r7,r7,255
 800eb38:	39400726 	beq	r7,r5,800eb58 <__ledf2+0xbc>
 800eb3c:	2800081e 	bne	r5,zero,800eb60 <__ledf2+0xc4>
 800eb40:	00800044 	movi	r2,1
 800eb44:	f800283a 	ret
 800eb48:	2292b03a 	or	r9,r4,r10
 800eb4c:	483fdf26 	beq	r9,zero,800eacc <__alt_data_end+0xf800eacc>
 800eb50:	00800084 	movi	r2,2
 800eb54:	f800283a 	ret
 800eb58:	4080030e 	bge	r8,r2,800eb68 <__ledf2+0xcc>
 800eb5c:	383fef26 	beq	r7,zero,800eb1c <__alt_data_end+0xf800eb1c>
 800eb60:	00bfffc4 	movi	r2,-1
 800eb64:	f800283a 	ret
 800eb68:	123feb16 	blt	r2,r8,800eb18 <__alt_data_end+0xf800eb18>
 800eb6c:	1abff336 	bltu	r3,r10,800eb3c <__alt_data_end+0xf800eb3c>
 800eb70:	50c00326 	beq	r10,r3,800eb80 <__ledf2+0xe4>
 800eb74:	50c0042e 	bgeu	r10,r3,800eb88 <__ledf2+0xec>
 800eb78:	283fe81e 	bne	r5,zero,800eb1c <__alt_data_end+0xf800eb1c>
 800eb7c:	003ff806 	br	800eb60 <__alt_data_end+0xf800eb60>
 800eb80:	313fee36 	bltu	r6,r4,800eb3c <__alt_data_end+0xf800eb3c>
 800eb84:	21bffc36 	bltu	r4,r6,800eb78 <__alt_data_end+0xf800eb78>
 800eb88:	0005883a 	mov	r2,zero
 800eb8c:	f800283a 	ret

0800eb90 <__muldf3>:
 800eb90:	defff304 	addi	sp,sp,-52
 800eb94:	2804d53a 	srli	r2,r5,20
 800eb98:	dd800915 	stw	r22,36(sp)
 800eb9c:	282cd7fa 	srli	r22,r5,31
 800eba0:	dc000315 	stw	r16,12(sp)
 800eba4:	04000434 	movhi	r16,16
 800eba8:	dd400815 	stw	r21,32(sp)
 800ebac:	dc800515 	stw	r18,20(sp)
 800ebb0:	843fffc4 	addi	r16,r16,-1
 800ebb4:	dfc00c15 	stw	ra,48(sp)
 800ebb8:	df000b15 	stw	fp,44(sp)
 800ebbc:	ddc00a15 	stw	r23,40(sp)
 800ebc0:	dd000715 	stw	r20,28(sp)
 800ebc4:	dcc00615 	stw	r19,24(sp)
 800ebc8:	dc400415 	stw	r17,16(sp)
 800ebcc:	1481ffcc 	andi	r18,r2,2047
 800ebd0:	2c20703a 	and	r16,r5,r16
 800ebd4:	b02b883a 	mov	r21,r22
 800ebd8:	b2403fcc 	andi	r9,r22,255
 800ebdc:	90006026 	beq	r18,zero,800ed60 <__muldf3+0x1d0>
 800ebe0:	0081ffc4 	movi	r2,2047
 800ebe4:	2029883a 	mov	r20,r4
 800ebe8:	90803626 	beq	r18,r2,800ecc4 <__muldf3+0x134>
 800ebec:	80800434 	orhi	r2,r16,16
 800ebf0:	100490fa 	slli	r2,r2,3
 800ebf4:	2020d77a 	srli	r16,r4,29
 800ebf8:	202890fa 	slli	r20,r4,3
 800ebfc:	94bf0044 	addi	r18,r18,-1023
 800ec00:	80a0b03a 	or	r16,r16,r2
 800ec04:	0027883a 	mov	r19,zero
 800ec08:	0039883a 	mov	fp,zero
 800ec0c:	3804d53a 	srli	r2,r7,20
 800ec10:	382ed7fa 	srli	r23,r7,31
 800ec14:	04400434 	movhi	r17,16
 800ec18:	8c7fffc4 	addi	r17,r17,-1
 800ec1c:	1081ffcc 	andi	r2,r2,2047
 800ec20:	3011883a 	mov	r8,r6
 800ec24:	3c62703a 	and	r17,r7,r17
 800ec28:	ba803fcc 	andi	r10,r23,255
 800ec2c:	10006d26 	beq	r2,zero,800ede4 <__muldf3+0x254>
 800ec30:	00c1ffc4 	movi	r3,2047
 800ec34:	10c06526 	beq	r2,r3,800edcc <__muldf3+0x23c>
 800ec38:	88c00434 	orhi	r3,r17,16
 800ec3c:	180690fa 	slli	r3,r3,3
 800ec40:	3022d77a 	srli	r17,r6,29
 800ec44:	301090fa 	slli	r8,r6,3
 800ec48:	10bf0044 	addi	r2,r2,-1023
 800ec4c:	88e2b03a 	or	r17,r17,r3
 800ec50:	000b883a 	mov	r5,zero
 800ec54:	9085883a 	add	r2,r18,r2
 800ec58:	2cc8b03a 	or	r4,r5,r19
 800ec5c:	00c003c4 	movi	r3,15
 800ec60:	bdacf03a 	xor	r22,r23,r22
 800ec64:	12c00044 	addi	r11,r2,1
 800ec68:	19009936 	bltu	r3,r4,800eed0 <__muldf3+0x340>
 800ec6c:	200890ba 	slli	r4,r4,2
 800ec70:	00c20074 	movhi	r3,2049
 800ec74:	18fb2104 	addi	r3,r3,-4988
 800ec78:	20c9883a 	add	r4,r4,r3
 800ec7c:	20c00017 	ldw	r3,0(r4)
 800ec80:	1800683a 	jmp	r3
 800ec84:	0800eed0 	cmplti	zero,at,955
 800ec88:	0800ece4 	muli	zero,at,947
 800ec8c:	0800ece4 	muli	zero,at,947
 800ec90:	0800ece0 	cmpeqi	zero,at,947
 800ec94:	0800eeac 	andhi	zero,at,954
 800ec98:	0800eeac 	andhi	zero,at,954
 800ec9c:	0800ee94 	ori	zero,at,954
 800eca0:	0800ece0 	cmpeqi	zero,at,947
 800eca4:	0800eeac 	andhi	zero,at,954
 800eca8:	0800ee94 	ori	zero,at,954
 800ecac:	0800eeac 	andhi	zero,at,954
 800ecb0:	0800ece0 	cmpeqi	zero,at,947
 800ecb4:	0800eebc 	xorhi	zero,at,954
 800ecb8:	0800eebc 	xorhi	zero,at,954
 800ecbc:	0800eebc 	xorhi	zero,at,954
 800ecc0:	0800f0d8 	cmpnei	zero,at,963
 800ecc4:	2404b03a 	or	r2,r4,r16
 800ecc8:	10006f1e 	bne	r2,zero,800ee88 <__muldf3+0x2f8>
 800eccc:	04c00204 	movi	r19,8
 800ecd0:	0021883a 	mov	r16,zero
 800ecd4:	0029883a 	mov	r20,zero
 800ecd8:	07000084 	movi	fp,2
 800ecdc:	003fcb06 	br	800ec0c <__alt_data_end+0xf800ec0c>
 800ece0:	502d883a 	mov	r22,r10
 800ece4:	00800084 	movi	r2,2
 800ece8:	28805726 	beq	r5,r2,800ee48 <__muldf3+0x2b8>
 800ecec:	008000c4 	movi	r2,3
 800ecf0:	28816626 	beq	r5,r2,800f28c <__muldf3+0x6fc>
 800ecf4:	00800044 	movi	r2,1
 800ecf8:	2881411e 	bne	r5,r2,800f200 <__muldf3+0x670>
 800ecfc:	b02b883a 	mov	r21,r22
 800ed00:	0005883a 	mov	r2,zero
 800ed04:	000b883a 	mov	r5,zero
 800ed08:	0029883a 	mov	r20,zero
 800ed0c:	1004953a 	slli	r2,r2,20
 800ed10:	a8c03fcc 	andi	r3,r21,255
 800ed14:	04400434 	movhi	r17,16
 800ed18:	8c7fffc4 	addi	r17,r17,-1
 800ed1c:	180697fa 	slli	r3,r3,31
 800ed20:	2c4a703a 	and	r5,r5,r17
 800ed24:	288ab03a 	or	r5,r5,r2
 800ed28:	28c6b03a 	or	r3,r5,r3
 800ed2c:	a005883a 	mov	r2,r20
 800ed30:	dfc00c17 	ldw	ra,48(sp)
 800ed34:	df000b17 	ldw	fp,44(sp)
 800ed38:	ddc00a17 	ldw	r23,40(sp)
 800ed3c:	dd800917 	ldw	r22,36(sp)
 800ed40:	dd400817 	ldw	r21,32(sp)
 800ed44:	dd000717 	ldw	r20,28(sp)
 800ed48:	dcc00617 	ldw	r19,24(sp)
 800ed4c:	dc800517 	ldw	r18,20(sp)
 800ed50:	dc400417 	ldw	r17,16(sp)
 800ed54:	dc000317 	ldw	r16,12(sp)
 800ed58:	dec00d04 	addi	sp,sp,52
 800ed5c:	f800283a 	ret
 800ed60:	2404b03a 	or	r2,r4,r16
 800ed64:	2027883a 	mov	r19,r4
 800ed68:	10004226 	beq	r2,zero,800ee74 <__muldf3+0x2e4>
 800ed6c:	8000fc26 	beq	r16,zero,800f160 <__muldf3+0x5d0>
 800ed70:	8009883a 	mov	r4,r16
 800ed74:	d9800215 	stw	r6,8(sp)
 800ed78:	d9c00015 	stw	r7,0(sp)
 800ed7c:	da400115 	stw	r9,4(sp)
 800ed80:	800fda80 	call	800fda8 <__clzsi2>
 800ed84:	d9800217 	ldw	r6,8(sp)
 800ed88:	d9c00017 	ldw	r7,0(sp)
 800ed8c:	da400117 	ldw	r9,4(sp)
 800ed90:	113ffd44 	addi	r4,r2,-11
 800ed94:	00c00704 	movi	r3,28
 800ed98:	1900ed16 	blt	r3,r4,800f150 <__muldf3+0x5c0>
 800ed9c:	00c00744 	movi	r3,29
 800eda0:	147ffe04 	addi	r17,r2,-8
 800eda4:	1907c83a 	sub	r3,r3,r4
 800eda8:	8460983a 	sll	r16,r16,r17
 800edac:	98c6d83a 	srl	r3,r19,r3
 800edb0:	9c68983a 	sll	r20,r19,r17
 800edb4:	1c20b03a 	or	r16,r3,r16
 800edb8:	1080fcc4 	addi	r2,r2,1011
 800edbc:	00a5c83a 	sub	r18,zero,r2
 800edc0:	0027883a 	mov	r19,zero
 800edc4:	0039883a 	mov	fp,zero
 800edc8:	003f9006 	br	800ec0c <__alt_data_end+0xf800ec0c>
 800edcc:	3446b03a 	or	r3,r6,r17
 800edd0:	1800261e 	bne	r3,zero,800ee6c <__muldf3+0x2dc>
 800edd4:	0023883a 	mov	r17,zero
 800edd8:	0011883a 	mov	r8,zero
 800eddc:	01400084 	movi	r5,2
 800ede0:	003f9c06 	br	800ec54 <__alt_data_end+0xf800ec54>
 800ede4:	3446b03a 	or	r3,r6,r17
 800ede8:	18001c26 	beq	r3,zero,800ee5c <__muldf3+0x2cc>
 800edec:	8800ce26 	beq	r17,zero,800f128 <__muldf3+0x598>
 800edf0:	8809883a 	mov	r4,r17
 800edf4:	d9800215 	stw	r6,8(sp)
 800edf8:	da400115 	stw	r9,4(sp)
 800edfc:	da800015 	stw	r10,0(sp)
 800ee00:	800fda80 	call	800fda8 <__clzsi2>
 800ee04:	d9800217 	ldw	r6,8(sp)
 800ee08:	da400117 	ldw	r9,4(sp)
 800ee0c:	da800017 	ldw	r10,0(sp)
 800ee10:	113ffd44 	addi	r4,r2,-11
 800ee14:	00c00704 	movi	r3,28
 800ee18:	1900bf16 	blt	r3,r4,800f118 <__muldf3+0x588>
 800ee1c:	00c00744 	movi	r3,29
 800ee20:	123ffe04 	addi	r8,r2,-8
 800ee24:	1907c83a 	sub	r3,r3,r4
 800ee28:	8a22983a 	sll	r17,r17,r8
 800ee2c:	30c6d83a 	srl	r3,r6,r3
 800ee30:	3210983a 	sll	r8,r6,r8
 800ee34:	1c62b03a 	or	r17,r3,r17
 800ee38:	1080fcc4 	addi	r2,r2,1011
 800ee3c:	0085c83a 	sub	r2,zero,r2
 800ee40:	000b883a 	mov	r5,zero
 800ee44:	003f8306 	br	800ec54 <__alt_data_end+0xf800ec54>
 800ee48:	b02b883a 	mov	r21,r22
 800ee4c:	0081ffc4 	movi	r2,2047
 800ee50:	000b883a 	mov	r5,zero
 800ee54:	0029883a 	mov	r20,zero
 800ee58:	003fac06 	br	800ed0c <__alt_data_end+0xf800ed0c>
 800ee5c:	0023883a 	mov	r17,zero
 800ee60:	0011883a 	mov	r8,zero
 800ee64:	01400044 	movi	r5,1
 800ee68:	003f7a06 	br	800ec54 <__alt_data_end+0xf800ec54>
 800ee6c:	014000c4 	movi	r5,3
 800ee70:	003f7806 	br	800ec54 <__alt_data_end+0xf800ec54>
 800ee74:	04c00104 	movi	r19,4
 800ee78:	0021883a 	mov	r16,zero
 800ee7c:	0029883a 	mov	r20,zero
 800ee80:	07000044 	movi	fp,1
 800ee84:	003f6106 	br	800ec0c <__alt_data_end+0xf800ec0c>
 800ee88:	04c00304 	movi	r19,12
 800ee8c:	070000c4 	movi	fp,3
 800ee90:	003f5e06 	br	800ec0c <__alt_data_end+0xf800ec0c>
 800ee94:	01400434 	movhi	r5,16
 800ee98:	002b883a 	mov	r21,zero
 800ee9c:	297fffc4 	addi	r5,r5,-1
 800eea0:	053fffc4 	movi	r20,-1
 800eea4:	0081ffc4 	movi	r2,2047
 800eea8:	003f9806 	br	800ed0c <__alt_data_end+0xf800ed0c>
 800eeac:	8023883a 	mov	r17,r16
 800eeb0:	a011883a 	mov	r8,r20
 800eeb4:	e00b883a 	mov	r5,fp
 800eeb8:	003f8a06 	br	800ece4 <__alt_data_end+0xf800ece4>
 800eebc:	8023883a 	mov	r17,r16
 800eec0:	a011883a 	mov	r8,r20
 800eec4:	482d883a 	mov	r22,r9
 800eec8:	e00b883a 	mov	r5,fp
 800eecc:	003f8506 	br	800ece4 <__alt_data_end+0xf800ece4>
 800eed0:	a00ad43a 	srli	r5,r20,16
 800eed4:	401ad43a 	srli	r13,r8,16
 800eed8:	a53fffcc 	andi	r20,r20,65535
 800eedc:	423fffcc 	andi	r8,r8,65535
 800eee0:	4519383a 	mul	r12,r8,r20
 800eee4:	4147383a 	mul	r3,r8,r5
 800eee8:	6d09383a 	mul	r4,r13,r20
 800eeec:	600cd43a 	srli	r6,r12,16
 800eef0:	2b5d383a 	mul	r14,r5,r13
 800eef4:	20c9883a 	add	r4,r4,r3
 800eef8:	310d883a 	add	r6,r6,r4
 800eefc:	30c0022e 	bgeu	r6,r3,800ef08 <__muldf3+0x378>
 800ef00:	00c00074 	movhi	r3,1
 800ef04:	70dd883a 	add	r14,r14,r3
 800ef08:	8826d43a 	srli	r19,r17,16
 800ef0c:	8bffffcc 	andi	r15,r17,65535
 800ef10:	7d23383a 	mul	r17,r15,r20
 800ef14:	7949383a 	mul	r4,r15,r5
 800ef18:	9d29383a 	mul	r20,r19,r20
 800ef1c:	8814d43a 	srli	r10,r17,16
 800ef20:	3012943a 	slli	r9,r6,16
 800ef24:	a129883a 	add	r20,r20,r4
 800ef28:	633fffcc 	andi	r12,r12,65535
 800ef2c:	5515883a 	add	r10,r10,r20
 800ef30:	3006d43a 	srli	r3,r6,16
 800ef34:	4b13883a 	add	r9,r9,r12
 800ef38:	2ccb383a 	mul	r5,r5,r19
 800ef3c:	5100022e 	bgeu	r10,r4,800ef48 <__muldf3+0x3b8>
 800ef40:	01000074 	movhi	r4,1
 800ef44:	290b883a 	add	r5,r5,r4
 800ef48:	802ad43a 	srli	r21,r16,16
 800ef4c:	843fffcc 	andi	r16,r16,65535
 800ef50:	440d383a 	mul	r6,r8,r16
 800ef54:	4565383a 	mul	r18,r8,r21
 800ef58:	8349383a 	mul	r4,r16,r13
 800ef5c:	500e943a 	slli	r7,r10,16
 800ef60:	3010d43a 	srli	r8,r6,16
 800ef64:	5028d43a 	srli	r20,r10,16
 800ef68:	2489883a 	add	r4,r4,r18
 800ef6c:	8abfffcc 	andi	r10,r17,65535
 800ef70:	3a95883a 	add	r10,r7,r10
 800ef74:	4119883a 	add	r12,r8,r4
 800ef78:	a169883a 	add	r20,r20,r5
 800ef7c:	1a87883a 	add	r3,r3,r10
 800ef80:	6d5b383a 	mul	r13,r13,r21
 800ef84:	6480022e 	bgeu	r12,r18,800ef90 <__muldf3+0x400>
 800ef88:	01000074 	movhi	r4,1
 800ef8c:	691b883a 	add	r13,r13,r4
 800ef90:	7c25383a 	mul	r18,r15,r16
 800ef94:	7d4b383a 	mul	r5,r15,r21
 800ef98:	84cf383a 	mul	r7,r16,r19
 800ef9c:	901ed43a 	srli	r15,r18,16
 800efa0:	6008d43a 	srli	r4,r12,16
 800efa4:	6010943a 	slli	r8,r12,16
 800efa8:	394f883a 	add	r7,r7,r5
 800efac:	333fffcc 	andi	r12,r6,65535
 800efb0:	79df883a 	add	r15,r15,r7
 800efb4:	235b883a 	add	r13,r4,r13
 800efb8:	9d63383a 	mul	r17,r19,r21
 800efbc:	4309883a 	add	r4,r8,r12
 800efc0:	7940022e 	bgeu	r15,r5,800efcc <__muldf3+0x43c>
 800efc4:	01400074 	movhi	r5,1
 800efc8:	8963883a 	add	r17,r17,r5
 800efcc:	780a943a 	slli	r5,r15,16
 800efd0:	91bfffcc 	andi	r6,r18,65535
 800efd4:	70c7883a 	add	r3,r14,r3
 800efd8:	298d883a 	add	r6,r5,r6
 800efdc:	1a8f803a 	cmpltu	r7,r3,r10
 800efe0:	350b883a 	add	r5,r6,r20
 800efe4:	20c7883a 	add	r3,r4,r3
 800efe8:	3955883a 	add	r10,r7,r5
 800efec:	1909803a 	cmpltu	r4,r3,r4
 800eff0:	6a91883a 	add	r8,r13,r10
 800eff4:	780cd43a 	srli	r6,r15,16
 800eff8:	2219883a 	add	r12,r4,r8
 800effc:	2d0b803a 	cmpltu	r5,r5,r20
 800f000:	51cf803a 	cmpltu	r7,r10,r7
 800f004:	29ceb03a 	or	r7,r5,r7
 800f008:	4351803a 	cmpltu	r8,r8,r13
 800f00c:	610b803a 	cmpltu	r5,r12,r4
 800f010:	4148b03a 	or	r4,r8,r5
 800f014:	398f883a 	add	r7,r7,r6
 800f018:	3909883a 	add	r4,r7,r4
 800f01c:	1810927a 	slli	r8,r3,9
 800f020:	2449883a 	add	r4,r4,r17
 800f024:	2008927a 	slli	r4,r4,9
 800f028:	6022d5fa 	srli	r17,r12,23
 800f02c:	1806d5fa 	srli	r3,r3,23
 800f030:	4252b03a 	or	r9,r8,r9
 800f034:	600a927a 	slli	r5,r12,9
 800f038:	4810c03a 	cmpne	r8,r9,zero
 800f03c:	2462b03a 	or	r17,r4,r17
 800f040:	40c6b03a 	or	r3,r8,r3
 800f044:	8900402c 	andhi	r4,r17,256
 800f048:	1950b03a 	or	r8,r3,r5
 800f04c:	20000726 	beq	r4,zero,800f06c <__muldf3+0x4dc>
 800f050:	4006d07a 	srli	r3,r8,1
 800f054:	880497fa 	slli	r2,r17,31
 800f058:	4200004c 	andi	r8,r8,1
 800f05c:	8822d07a 	srli	r17,r17,1
 800f060:	1a10b03a 	or	r8,r3,r8
 800f064:	1210b03a 	or	r8,r2,r8
 800f068:	5805883a 	mov	r2,r11
 800f06c:	1140ffc4 	addi	r5,r2,1023
 800f070:	0140440e 	bge	zero,r5,800f184 <__muldf3+0x5f4>
 800f074:	40c001cc 	andi	r3,r8,7
 800f078:	18000726 	beq	r3,zero,800f098 <__muldf3+0x508>
 800f07c:	40c003cc 	andi	r3,r8,15
 800f080:	01000104 	movi	r4,4
 800f084:	19000426 	beq	r3,r4,800f098 <__muldf3+0x508>
 800f088:	4107883a 	add	r3,r8,r4
 800f08c:	1a11803a 	cmpltu	r8,r3,r8
 800f090:	8a23883a 	add	r17,r17,r8
 800f094:	1811883a 	mov	r8,r3
 800f098:	88c0402c 	andhi	r3,r17,256
 800f09c:	18000426 	beq	r3,zero,800f0b0 <__muldf3+0x520>
 800f0a0:	11410004 	addi	r5,r2,1024
 800f0a4:	00bfc034 	movhi	r2,65280
 800f0a8:	10bfffc4 	addi	r2,r2,-1
 800f0ac:	88a2703a 	and	r17,r17,r2
 800f0b0:	0081ff84 	movi	r2,2046
 800f0b4:	117f6416 	blt	r2,r5,800ee48 <__alt_data_end+0xf800ee48>
 800f0b8:	8828977a 	slli	r20,r17,29
 800f0bc:	4010d0fa 	srli	r8,r8,3
 800f0c0:	8822927a 	slli	r17,r17,9
 800f0c4:	2881ffcc 	andi	r2,r5,2047
 800f0c8:	a228b03a 	or	r20,r20,r8
 800f0cc:	880ad33a 	srli	r5,r17,12
 800f0d0:	b02b883a 	mov	r21,r22
 800f0d4:	003f0d06 	br	800ed0c <__alt_data_end+0xf800ed0c>
 800f0d8:	8080022c 	andhi	r2,r16,8
 800f0dc:	10000926 	beq	r2,zero,800f104 <__muldf3+0x574>
 800f0e0:	8880022c 	andhi	r2,r17,8
 800f0e4:	1000071e 	bne	r2,zero,800f104 <__muldf3+0x574>
 800f0e8:	00800434 	movhi	r2,16
 800f0ec:	89400234 	orhi	r5,r17,8
 800f0f0:	10bfffc4 	addi	r2,r2,-1
 800f0f4:	b82b883a 	mov	r21,r23
 800f0f8:	288a703a 	and	r5,r5,r2
 800f0fc:	4029883a 	mov	r20,r8
 800f100:	003f6806 	br	800eea4 <__alt_data_end+0xf800eea4>
 800f104:	00800434 	movhi	r2,16
 800f108:	81400234 	orhi	r5,r16,8
 800f10c:	10bfffc4 	addi	r2,r2,-1
 800f110:	288a703a 	and	r5,r5,r2
 800f114:	003f6306 	br	800eea4 <__alt_data_end+0xf800eea4>
 800f118:	147ff604 	addi	r17,r2,-40
 800f11c:	3462983a 	sll	r17,r6,r17
 800f120:	0011883a 	mov	r8,zero
 800f124:	003f4406 	br	800ee38 <__alt_data_end+0xf800ee38>
 800f128:	3009883a 	mov	r4,r6
 800f12c:	d9800215 	stw	r6,8(sp)
 800f130:	da400115 	stw	r9,4(sp)
 800f134:	da800015 	stw	r10,0(sp)
 800f138:	800fda80 	call	800fda8 <__clzsi2>
 800f13c:	10800804 	addi	r2,r2,32
 800f140:	da800017 	ldw	r10,0(sp)
 800f144:	da400117 	ldw	r9,4(sp)
 800f148:	d9800217 	ldw	r6,8(sp)
 800f14c:	003f3006 	br	800ee10 <__alt_data_end+0xf800ee10>
 800f150:	143ff604 	addi	r16,r2,-40
 800f154:	9c20983a 	sll	r16,r19,r16
 800f158:	0029883a 	mov	r20,zero
 800f15c:	003f1606 	br	800edb8 <__alt_data_end+0xf800edb8>
 800f160:	d9800215 	stw	r6,8(sp)
 800f164:	d9c00015 	stw	r7,0(sp)
 800f168:	da400115 	stw	r9,4(sp)
 800f16c:	800fda80 	call	800fda8 <__clzsi2>
 800f170:	10800804 	addi	r2,r2,32
 800f174:	da400117 	ldw	r9,4(sp)
 800f178:	d9c00017 	ldw	r7,0(sp)
 800f17c:	d9800217 	ldw	r6,8(sp)
 800f180:	003f0306 	br	800ed90 <__alt_data_end+0xf800ed90>
 800f184:	00c00044 	movi	r3,1
 800f188:	1947c83a 	sub	r3,r3,r5
 800f18c:	00800e04 	movi	r2,56
 800f190:	10feda16 	blt	r2,r3,800ecfc <__alt_data_end+0xf800ecfc>
 800f194:	008007c4 	movi	r2,31
 800f198:	10c01b16 	blt	r2,r3,800f208 <__muldf3+0x678>
 800f19c:	00800804 	movi	r2,32
 800f1a0:	10c5c83a 	sub	r2,r2,r3
 800f1a4:	888a983a 	sll	r5,r17,r2
 800f1a8:	40c8d83a 	srl	r4,r8,r3
 800f1ac:	4084983a 	sll	r2,r8,r2
 800f1b0:	88e2d83a 	srl	r17,r17,r3
 800f1b4:	2906b03a 	or	r3,r5,r4
 800f1b8:	1004c03a 	cmpne	r2,r2,zero
 800f1bc:	1886b03a 	or	r3,r3,r2
 800f1c0:	188001cc 	andi	r2,r3,7
 800f1c4:	10000726 	beq	r2,zero,800f1e4 <__muldf3+0x654>
 800f1c8:	188003cc 	andi	r2,r3,15
 800f1cc:	01000104 	movi	r4,4
 800f1d0:	11000426 	beq	r2,r4,800f1e4 <__muldf3+0x654>
 800f1d4:	1805883a 	mov	r2,r3
 800f1d8:	10c00104 	addi	r3,r2,4
 800f1dc:	1885803a 	cmpltu	r2,r3,r2
 800f1e0:	88a3883a 	add	r17,r17,r2
 800f1e4:	8880202c 	andhi	r2,r17,128
 800f1e8:	10001c26 	beq	r2,zero,800f25c <__muldf3+0x6cc>
 800f1ec:	b02b883a 	mov	r21,r22
 800f1f0:	00800044 	movi	r2,1
 800f1f4:	000b883a 	mov	r5,zero
 800f1f8:	0029883a 	mov	r20,zero
 800f1fc:	003ec306 	br	800ed0c <__alt_data_end+0xf800ed0c>
 800f200:	5805883a 	mov	r2,r11
 800f204:	003f9906 	br	800f06c <__alt_data_end+0xf800f06c>
 800f208:	00bff844 	movi	r2,-31
 800f20c:	1145c83a 	sub	r2,r2,r5
 800f210:	8888d83a 	srl	r4,r17,r2
 800f214:	00800804 	movi	r2,32
 800f218:	18801a26 	beq	r3,r2,800f284 <__muldf3+0x6f4>
 800f21c:	00801004 	movi	r2,64
 800f220:	10c5c83a 	sub	r2,r2,r3
 800f224:	8884983a 	sll	r2,r17,r2
 800f228:	1204b03a 	or	r2,r2,r8
 800f22c:	1004c03a 	cmpne	r2,r2,zero
 800f230:	2084b03a 	or	r2,r4,r2
 800f234:	144001cc 	andi	r17,r2,7
 800f238:	88000d1e 	bne	r17,zero,800f270 <__muldf3+0x6e0>
 800f23c:	000b883a 	mov	r5,zero
 800f240:	1028d0fa 	srli	r20,r2,3
 800f244:	b02b883a 	mov	r21,r22
 800f248:	0005883a 	mov	r2,zero
 800f24c:	a468b03a 	or	r20,r20,r17
 800f250:	003eae06 	br	800ed0c <__alt_data_end+0xf800ed0c>
 800f254:	1007883a 	mov	r3,r2
 800f258:	0023883a 	mov	r17,zero
 800f25c:	880a927a 	slli	r5,r17,9
 800f260:	1805883a 	mov	r2,r3
 800f264:	8822977a 	slli	r17,r17,29
 800f268:	280ad33a 	srli	r5,r5,12
 800f26c:	003ff406 	br	800f240 <__alt_data_end+0xf800f240>
 800f270:	10c003cc 	andi	r3,r2,15
 800f274:	01000104 	movi	r4,4
 800f278:	193ff626 	beq	r3,r4,800f254 <__alt_data_end+0xf800f254>
 800f27c:	0023883a 	mov	r17,zero
 800f280:	003fd506 	br	800f1d8 <__alt_data_end+0xf800f1d8>
 800f284:	0005883a 	mov	r2,zero
 800f288:	003fe706 	br	800f228 <__alt_data_end+0xf800f228>
 800f28c:	00800434 	movhi	r2,16
 800f290:	89400234 	orhi	r5,r17,8
 800f294:	10bfffc4 	addi	r2,r2,-1
 800f298:	b02b883a 	mov	r21,r22
 800f29c:	288a703a 	and	r5,r5,r2
 800f2a0:	4029883a 	mov	r20,r8
 800f2a4:	003eff06 	br	800eea4 <__alt_data_end+0xf800eea4>

0800f2a8 <__subdf3>:
 800f2a8:	02000434 	movhi	r8,16
 800f2ac:	423fffc4 	addi	r8,r8,-1
 800f2b0:	defffb04 	addi	sp,sp,-20
 800f2b4:	2a14703a 	and	r10,r5,r8
 800f2b8:	3812d53a 	srli	r9,r7,20
 800f2bc:	3a10703a 	and	r8,r7,r8
 800f2c0:	2006d77a 	srli	r3,r4,29
 800f2c4:	3004d77a 	srli	r2,r6,29
 800f2c8:	dc000015 	stw	r16,0(sp)
 800f2cc:	501490fa 	slli	r10,r10,3
 800f2d0:	2820d53a 	srli	r16,r5,20
 800f2d4:	401090fa 	slli	r8,r8,3
 800f2d8:	dc800215 	stw	r18,8(sp)
 800f2dc:	dc400115 	stw	r17,4(sp)
 800f2e0:	dfc00415 	stw	ra,16(sp)
 800f2e4:	202290fa 	slli	r17,r4,3
 800f2e8:	dcc00315 	stw	r19,12(sp)
 800f2ec:	4a41ffcc 	andi	r9,r9,2047
 800f2f0:	0101ffc4 	movi	r4,2047
 800f2f4:	2824d7fa 	srli	r18,r5,31
 800f2f8:	8401ffcc 	andi	r16,r16,2047
 800f2fc:	50c6b03a 	or	r3,r10,r3
 800f300:	380ed7fa 	srli	r7,r7,31
 800f304:	408ab03a 	or	r5,r8,r2
 800f308:	300c90fa 	slli	r6,r6,3
 800f30c:	49009626 	beq	r9,r4,800f568 <__subdf3+0x2c0>
 800f310:	39c0005c 	xori	r7,r7,1
 800f314:	8245c83a 	sub	r2,r16,r9
 800f318:	3c807426 	beq	r7,r18,800f4ec <__subdf3+0x244>
 800f31c:	0080af0e 	bge	zero,r2,800f5dc <__subdf3+0x334>
 800f320:	48002a1e 	bne	r9,zero,800f3cc <__subdf3+0x124>
 800f324:	2988b03a 	or	r4,r5,r6
 800f328:	20009a1e 	bne	r4,zero,800f594 <__subdf3+0x2ec>
 800f32c:	888001cc 	andi	r2,r17,7
 800f330:	10000726 	beq	r2,zero,800f350 <__subdf3+0xa8>
 800f334:	888003cc 	andi	r2,r17,15
 800f338:	01000104 	movi	r4,4
 800f33c:	11000426 	beq	r2,r4,800f350 <__subdf3+0xa8>
 800f340:	890b883a 	add	r5,r17,r4
 800f344:	2c63803a 	cmpltu	r17,r5,r17
 800f348:	1c47883a 	add	r3,r3,r17
 800f34c:	2823883a 	mov	r17,r5
 800f350:	1880202c 	andhi	r2,r3,128
 800f354:	10005926 	beq	r2,zero,800f4bc <__subdf3+0x214>
 800f358:	84000044 	addi	r16,r16,1
 800f35c:	0081ffc4 	movi	r2,2047
 800f360:	8080be26 	beq	r16,r2,800f65c <__subdf3+0x3b4>
 800f364:	017fe034 	movhi	r5,65408
 800f368:	297fffc4 	addi	r5,r5,-1
 800f36c:	1946703a 	and	r3,r3,r5
 800f370:	1804977a 	slli	r2,r3,29
 800f374:	1806927a 	slli	r3,r3,9
 800f378:	8822d0fa 	srli	r17,r17,3
 800f37c:	8401ffcc 	andi	r16,r16,2047
 800f380:	180ad33a 	srli	r5,r3,12
 800f384:	9100004c 	andi	r4,r18,1
 800f388:	1444b03a 	or	r2,r2,r17
 800f38c:	80c1ffcc 	andi	r3,r16,2047
 800f390:	1820953a 	slli	r16,r3,20
 800f394:	20c03fcc 	andi	r3,r4,255
 800f398:	180897fa 	slli	r4,r3,31
 800f39c:	00c00434 	movhi	r3,16
 800f3a0:	18ffffc4 	addi	r3,r3,-1
 800f3a4:	28c6703a 	and	r3,r5,r3
 800f3a8:	1c06b03a 	or	r3,r3,r16
 800f3ac:	1906b03a 	or	r3,r3,r4
 800f3b0:	dfc00417 	ldw	ra,16(sp)
 800f3b4:	dcc00317 	ldw	r19,12(sp)
 800f3b8:	dc800217 	ldw	r18,8(sp)
 800f3bc:	dc400117 	ldw	r17,4(sp)
 800f3c0:	dc000017 	ldw	r16,0(sp)
 800f3c4:	dec00504 	addi	sp,sp,20
 800f3c8:	f800283a 	ret
 800f3cc:	0101ffc4 	movi	r4,2047
 800f3d0:	813fd626 	beq	r16,r4,800f32c <__alt_data_end+0xf800f32c>
 800f3d4:	29402034 	orhi	r5,r5,128
 800f3d8:	01000e04 	movi	r4,56
 800f3dc:	2080a316 	blt	r4,r2,800f66c <__subdf3+0x3c4>
 800f3e0:	010007c4 	movi	r4,31
 800f3e4:	2080c616 	blt	r4,r2,800f700 <__subdf3+0x458>
 800f3e8:	01000804 	movi	r4,32
 800f3ec:	2089c83a 	sub	r4,r4,r2
 800f3f0:	2910983a 	sll	r8,r5,r4
 800f3f4:	308ed83a 	srl	r7,r6,r2
 800f3f8:	3108983a 	sll	r4,r6,r4
 800f3fc:	2884d83a 	srl	r2,r5,r2
 800f400:	41ccb03a 	or	r6,r8,r7
 800f404:	2008c03a 	cmpne	r4,r4,zero
 800f408:	310cb03a 	or	r6,r6,r4
 800f40c:	898dc83a 	sub	r6,r17,r6
 800f410:	89a3803a 	cmpltu	r17,r17,r6
 800f414:	1887c83a 	sub	r3,r3,r2
 800f418:	1c47c83a 	sub	r3,r3,r17
 800f41c:	3023883a 	mov	r17,r6
 800f420:	1880202c 	andhi	r2,r3,128
 800f424:	10002326 	beq	r2,zero,800f4b4 <__subdf3+0x20c>
 800f428:	04c02034 	movhi	r19,128
 800f42c:	9cffffc4 	addi	r19,r19,-1
 800f430:	1ce6703a 	and	r19,r3,r19
 800f434:	98007a26 	beq	r19,zero,800f620 <__subdf3+0x378>
 800f438:	9809883a 	mov	r4,r19
 800f43c:	800fda80 	call	800fda8 <__clzsi2>
 800f440:	113ffe04 	addi	r4,r2,-8
 800f444:	00c007c4 	movi	r3,31
 800f448:	19007b16 	blt	r3,r4,800f638 <__subdf3+0x390>
 800f44c:	00800804 	movi	r2,32
 800f450:	1105c83a 	sub	r2,r2,r4
 800f454:	8884d83a 	srl	r2,r17,r2
 800f458:	9906983a 	sll	r3,r19,r4
 800f45c:	8922983a 	sll	r17,r17,r4
 800f460:	10c4b03a 	or	r2,r2,r3
 800f464:	24007816 	blt	r4,r16,800f648 <__subdf3+0x3a0>
 800f468:	2421c83a 	sub	r16,r4,r16
 800f46c:	80c00044 	addi	r3,r16,1
 800f470:	010007c4 	movi	r4,31
 800f474:	20c09516 	blt	r4,r3,800f6cc <__subdf3+0x424>
 800f478:	01400804 	movi	r5,32
 800f47c:	28cbc83a 	sub	r5,r5,r3
 800f480:	88c8d83a 	srl	r4,r17,r3
 800f484:	8962983a 	sll	r17,r17,r5
 800f488:	114a983a 	sll	r5,r2,r5
 800f48c:	10c6d83a 	srl	r3,r2,r3
 800f490:	8804c03a 	cmpne	r2,r17,zero
 800f494:	290ab03a 	or	r5,r5,r4
 800f498:	28a2b03a 	or	r17,r5,r2
 800f49c:	0021883a 	mov	r16,zero
 800f4a0:	003fa206 	br	800f32c <__alt_data_end+0xf800f32c>
 800f4a4:	2090b03a 	or	r8,r4,r2
 800f4a8:	40018e26 	beq	r8,zero,800fae4 <__subdf3+0x83c>
 800f4ac:	1007883a 	mov	r3,r2
 800f4b0:	2023883a 	mov	r17,r4
 800f4b4:	888001cc 	andi	r2,r17,7
 800f4b8:	103f9e1e 	bne	r2,zero,800f334 <__alt_data_end+0xf800f334>
 800f4bc:	1804977a 	slli	r2,r3,29
 800f4c0:	8822d0fa 	srli	r17,r17,3
 800f4c4:	1810d0fa 	srli	r8,r3,3
 800f4c8:	9100004c 	andi	r4,r18,1
 800f4cc:	1444b03a 	or	r2,r2,r17
 800f4d0:	00c1ffc4 	movi	r3,2047
 800f4d4:	80c02826 	beq	r16,r3,800f578 <__subdf3+0x2d0>
 800f4d8:	01400434 	movhi	r5,16
 800f4dc:	297fffc4 	addi	r5,r5,-1
 800f4e0:	80e0703a 	and	r16,r16,r3
 800f4e4:	414a703a 	and	r5,r8,r5
 800f4e8:	003fa806 	br	800f38c <__alt_data_end+0xf800f38c>
 800f4ec:	0080630e 	bge	zero,r2,800f67c <__subdf3+0x3d4>
 800f4f0:	48003026 	beq	r9,zero,800f5b4 <__subdf3+0x30c>
 800f4f4:	0101ffc4 	movi	r4,2047
 800f4f8:	813f8c26 	beq	r16,r4,800f32c <__alt_data_end+0xf800f32c>
 800f4fc:	29402034 	orhi	r5,r5,128
 800f500:	01000e04 	movi	r4,56
 800f504:	2080a90e 	bge	r4,r2,800f7ac <__subdf3+0x504>
 800f508:	298cb03a 	or	r6,r5,r6
 800f50c:	3012c03a 	cmpne	r9,r6,zero
 800f510:	0005883a 	mov	r2,zero
 800f514:	4c53883a 	add	r9,r9,r17
 800f518:	4c63803a 	cmpltu	r17,r9,r17
 800f51c:	10c7883a 	add	r3,r2,r3
 800f520:	88c7883a 	add	r3,r17,r3
 800f524:	4823883a 	mov	r17,r9
 800f528:	1880202c 	andhi	r2,r3,128
 800f52c:	1000d026 	beq	r2,zero,800f870 <__subdf3+0x5c8>
 800f530:	84000044 	addi	r16,r16,1
 800f534:	0081ffc4 	movi	r2,2047
 800f538:	8080fe26 	beq	r16,r2,800f934 <__subdf3+0x68c>
 800f53c:	00bfe034 	movhi	r2,65408
 800f540:	10bfffc4 	addi	r2,r2,-1
 800f544:	1886703a 	and	r3,r3,r2
 800f548:	880ad07a 	srli	r5,r17,1
 800f54c:	180497fa 	slli	r2,r3,31
 800f550:	8900004c 	andi	r4,r17,1
 800f554:	2922b03a 	or	r17,r5,r4
 800f558:	1806d07a 	srli	r3,r3,1
 800f55c:	1462b03a 	or	r17,r2,r17
 800f560:	3825883a 	mov	r18,r7
 800f564:	003f7106 	br	800f32c <__alt_data_end+0xf800f32c>
 800f568:	2984b03a 	or	r2,r5,r6
 800f56c:	103f6826 	beq	r2,zero,800f310 <__alt_data_end+0xf800f310>
 800f570:	39c03fcc 	andi	r7,r7,255
 800f574:	003f6706 	br	800f314 <__alt_data_end+0xf800f314>
 800f578:	4086b03a 	or	r3,r8,r2
 800f57c:	18015226 	beq	r3,zero,800fac8 <__subdf3+0x820>
 800f580:	00c00434 	movhi	r3,16
 800f584:	41400234 	orhi	r5,r8,8
 800f588:	18ffffc4 	addi	r3,r3,-1
 800f58c:	28ca703a 	and	r5,r5,r3
 800f590:	003f7e06 	br	800f38c <__alt_data_end+0xf800f38c>
 800f594:	10bfffc4 	addi	r2,r2,-1
 800f598:	1000491e 	bne	r2,zero,800f6c0 <__subdf3+0x418>
 800f59c:	898fc83a 	sub	r7,r17,r6
 800f5a0:	89e3803a 	cmpltu	r17,r17,r7
 800f5a4:	1947c83a 	sub	r3,r3,r5
 800f5a8:	1c47c83a 	sub	r3,r3,r17
 800f5ac:	3823883a 	mov	r17,r7
 800f5b0:	003f9b06 	br	800f420 <__alt_data_end+0xf800f420>
 800f5b4:	2988b03a 	or	r4,r5,r6
 800f5b8:	203f5c26 	beq	r4,zero,800f32c <__alt_data_end+0xf800f32c>
 800f5bc:	10bfffc4 	addi	r2,r2,-1
 800f5c0:	1000931e 	bne	r2,zero,800f810 <__subdf3+0x568>
 800f5c4:	898d883a 	add	r6,r17,r6
 800f5c8:	3463803a 	cmpltu	r17,r6,r17
 800f5cc:	1947883a 	add	r3,r3,r5
 800f5d0:	88c7883a 	add	r3,r17,r3
 800f5d4:	3023883a 	mov	r17,r6
 800f5d8:	003fd306 	br	800f528 <__alt_data_end+0xf800f528>
 800f5dc:	1000541e 	bne	r2,zero,800f730 <__subdf3+0x488>
 800f5e0:	80800044 	addi	r2,r16,1
 800f5e4:	1081ffcc 	andi	r2,r2,2047
 800f5e8:	01000044 	movi	r4,1
 800f5ec:	2080a20e 	bge	r4,r2,800f878 <__subdf3+0x5d0>
 800f5f0:	8989c83a 	sub	r4,r17,r6
 800f5f4:	8905803a 	cmpltu	r2,r17,r4
 800f5f8:	1967c83a 	sub	r19,r3,r5
 800f5fc:	98a7c83a 	sub	r19,r19,r2
 800f600:	9880202c 	andhi	r2,r19,128
 800f604:	10006326 	beq	r2,zero,800f794 <__subdf3+0x4ec>
 800f608:	3463c83a 	sub	r17,r6,r17
 800f60c:	28c7c83a 	sub	r3,r5,r3
 800f610:	344d803a 	cmpltu	r6,r6,r17
 800f614:	19a7c83a 	sub	r19,r3,r6
 800f618:	3825883a 	mov	r18,r7
 800f61c:	983f861e 	bne	r19,zero,800f438 <__alt_data_end+0xf800f438>
 800f620:	8809883a 	mov	r4,r17
 800f624:	800fda80 	call	800fda8 <__clzsi2>
 800f628:	10800804 	addi	r2,r2,32
 800f62c:	113ffe04 	addi	r4,r2,-8
 800f630:	00c007c4 	movi	r3,31
 800f634:	193f850e 	bge	r3,r4,800f44c <__alt_data_end+0xf800f44c>
 800f638:	10bff604 	addi	r2,r2,-40
 800f63c:	8884983a 	sll	r2,r17,r2
 800f640:	0023883a 	mov	r17,zero
 800f644:	243f880e 	bge	r4,r16,800f468 <__alt_data_end+0xf800f468>
 800f648:	00ffe034 	movhi	r3,65408
 800f64c:	18ffffc4 	addi	r3,r3,-1
 800f650:	8121c83a 	sub	r16,r16,r4
 800f654:	10c6703a 	and	r3,r2,r3
 800f658:	003f3406 	br	800f32c <__alt_data_end+0xf800f32c>
 800f65c:	9100004c 	andi	r4,r18,1
 800f660:	000b883a 	mov	r5,zero
 800f664:	0005883a 	mov	r2,zero
 800f668:	003f4806 	br	800f38c <__alt_data_end+0xf800f38c>
 800f66c:	298cb03a 	or	r6,r5,r6
 800f670:	300cc03a 	cmpne	r6,r6,zero
 800f674:	0005883a 	mov	r2,zero
 800f678:	003f6406 	br	800f40c <__alt_data_end+0xf800f40c>
 800f67c:	10009a1e 	bne	r2,zero,800f8e8 <__subdf3+0x640>
 800f680:	82400044 	addi	r9,r16,1
 800f684:	4881ffcc 	andi	r2,r9,2047
 800f688:	02800044 	movi	r10,1
 800f68c:	5080670e 	bge	r10,r2,800f82c <__subdf3+0x584>
 800f690:	0081ffc4 	movi	r2,2047
 800f694:	4880af26 	beq	r9,r2,800f954 <__subdf3+0x6ac>
 800f698:	898d883a 	add	r6,r17,r6
 800f69c:	1945883a 	add	r2,r3,r5
 800f6a0:	3447803a 	cmpltu	r3,r6,r17
 800f6a4:	1887883a 	add	r3,r3,r2
 800f6a8:	182297fa 	slli	r17,r3,31
 800f6ac:	300cd07a 	srli	r6,r6,1
 800f6b0:	1806d07a 	srli	r3,r3,1
 800f6b4:	4821883a 	mov	r16,r9
 800f6b8:	89a2b03a 	or	r17,r17,r6
 800f6bc:	003f1b06 	br	800f32c <__alt_data_end+0xf800f32c>
 800f6c0:	0101ffc4 	movi	r4,2047
 800f6c4:	813f441e 	bne	r16,r4,800f3d8 <__alt_data_end+0xf800f3d8>
 800f6c8:	003f1806 	br	800f32c <__alt_data_end+0xf800f32c>
 800f6cc:	843ff844 	addi	r16,r16,-31
 800f6d0:	01400804 	movi	r5,32
 800f6d4:	1408d83a 	srl	r4,r2,r16
 800f6d8:	19405026 	beq	r3,r5,800f81c <__subdf3+0x574>
 800f6dc:	01401004 	movi	r5,64
 800f6e0:	28c7c83a 	sub	r3,r5,r3
 800f6e4:	10c4983a 	sll	r2,r2,r3
 800f6e8:	88a2b03a 	or	r17,r17,r2
 800f6ec:	8822c03a 	cmpne	r17,r17,zero
 800f6f0:	2462b03a 	or	r17,r4,r17
 800f6f4:	0007883a 	mov	r3,zero
 800f6f8:	0021883a 	mov	r16,zero
 800f6fc:	003f6d06 	br	800f4b4 <__alt_data_end+0xf800f4b4>
 800f700:	11fff804 	addi	r7,r2,-32
 800f704:	01000804 	movi	r4,32
 800f708:	29ced83a 	srl	r7,r5,r7
 800f70c:	11004526 	beq	r2,r4,800f824 <__subdf3+0x57c>
 800f710:	01001004 	movi	r4,64
 800f714:	2089c83a 	sub	r4,r4,r2
 800f718:	2904983a 	sll	r2,r5,r4
 800f71c:	118cb03a 	or	r6,r2,r6
 800f720:	300cc03a 	cmpne	r6,r6,zero
 800f724:	398cb03a 	or	r6,r7,r6
 800f728:	0005883a 	mov	r2,zero
 800f72c:	003f3706 	br	800f40c <__alt_data_end+0xf800f40c>
 800f730:	80002a26 	beq	r16,zero,800f7dc <__subdf3+0x534>
 800f734:	0101ffc4 	movi	r4,2047
 800f738:	49006626 	beq	r9,r4,800f8d4 <__subdf3+0x62c>
 800f73c:	0085c83a 	sub	r2,zero,r2
 800f740:	18c02034 	orhi	r3,r3,128
 800f744:	01000e04 	movi	r4,56
 800f748:	20807e16 	blt	r4,r2,800f944 <__subdf3+0x69c>
 800f74c:	010007c4 	movi	r4,31
 800f750:	2080e716 	blt	r4,r2,800faf0 <__subdf3+0x848>
 800f754:	01000804 	movi	r4,32
 800f758:	2089c83a 	sub	r4,r4,r2
 800f75c:	1914983a 	sll	r10,r3,r4
 800f760:	8890d83a 	srl	r8,r17,r2
 800f764:	8908983a 	sll	r4,r17,r4
 800f768:	1884d83a 	srl	r2,r3,r2
 800f76c:	5222b03a 	or	r17,r10,r8
 800f770:	2006c03a 	cmpne	r3,r4,zero
 800f774:	88e2b03a 	or	r17,r17,r3
 800f778:	3463c83a 	sub	r17,r6,r17
 800f77c:	2885c83a 	sub	r2,r5,r2
 800f780:	344d803a 	cmpltu	r6,r6,r17
 800f784:	1187c83a 	sub	r3,r2,r6
 800f788:	4821883a 	mov	r16,r9
 800f78c:	3825883a 	mov	r18,r7
 800f790:	003f2306 	br	800f420 <__alt_data_end+0xf800f420>
 800f794:	24d0b03a 	or	r8,r4,r19
 800f798:	40001b1e 	bne	r8,zero,800f808 <__subdf3+0x560>
 800f79c:	0005883a 	mov	r2,zero
 800f7a0:	0009883a 	mov	r4,zero
 800f7a4:	0021883a 	mov	r16,zero
 800f7a8:	003f4906 	br	800f4d0 <__alt_data_end+0xf800f4d0>
 800f7ac:	010007c4 	movi	r4,31
 800f7b0:	20803a16 	blt	r4,r2,800f89c <__subdf3+0x5f4>
 800f7b4:	01000804 	movi	r4,32
 800f7b8:	2089c83a 	sub	r4,r4,r2
 800f7bc:	2912983a 	sll	r9,r5,r4
 800f7c0:	3090d83a 	srl	r8,r6,r2
 800f7c4:	3108983a 	sll	r4,r6,r4
 800f7c8:	2884d83a 	srl	r2,r5,r2
 800f7cc:	4a12b03a 	or	r9,r9,r8
 800f7d0:	2008c03a 	cmpne	r4,r4,zero
 800f7d4:	4912b03a 	or	r9,r9,r4
 800f7d8:	003f4e06 	br	800f514 <__alt_data_end+0xf800f514>
 800f7dc:	1c48b03a 	or	r4,r3,r17
 800f7e0:	20003c26 	beq	r4,zero,800f8d4 <__subdf3+0x62c>
 800f7e4:	0084303a 	nor	r2,zero,r2
 800f7e8:	1000381e 	bne	r2,zero,800f8cc <__subdf3+0x624>
 800f7ec:	3463c83a 	sub	r17,r6,r17
 800f7f0:	28c5c83a 	sub	r2,r5,r3
 800f7f4:	344d803a 	cmpltu	r6,r6,r17
 800f7f8:	1187c83a 	sub	r3,r2,r6
 800f7fc:	4821883a 	mov	r16,r9
 800f800:	3825883a 	mov	r18,r7
 800f804:	003f0606 	br	800f420 <__alt_data_end+0xf800f420>
 800f808:	2023883a 	mov	r17,r4
 800f80c:	003f0906 	br	800f434 <__alt_data_end+0xf800f434>
 800f810:	0101ffc4 	movi	r4,2047
 800f814:	813f3a1e 	bne	r16,r4,800f500 <__alt_data_end+0xf800f500>
 800f818:	003ec406 	br	800f32c <__alt_data_end+0xf800f32c>
 800f81c:	0005883a 	mov	r2,zero
 800f820:	003fb106 	br	800f6e8 <__alt_data_end+0xf800f6e8>
 800f824:	0005883a 	mov	r2,zero
 800f828:	003fbc06 	br	800f71c <__alt_data_end+0xf800f71c>
 800f82c:	1c44b03a 	or	r2,r3,r17
 800f830:	80008e1e 	bne	r16,zero,800fa6c <__subdf3+0x7c4>
 800f834:	1000c826 	beq	r2,zero,800fb58 <__subdf3+0x8b0>
 800f838:	2984b03a 	or	r2,r5,r6
 800f83c:	103ebb26 	beq	r2,zero,800f32c <__alt_data_end+0xf800f32c>
 800f840:	8989883a 	add	r4,r17,r6
 800f844:	1945883a 	add	r2,r3,r5
 800f848:	2447803a 	cmpltu	r3,r4,r17
 800f84c:	1887883a 	add	r3,r3,r2
 800f850:	1880202c 	andhi	r2,r3,128
 800f854:	2023883a 	mov	r17,r4
 800f858:	103f1626 	beq	r2,zero,800f4b4 <__alt_data_end+0xf800f4b4>
 800f85c:	00bfe034 	movhi	r2,65408
 800f860:	10bfffc4 	addi	r2,r2,-1
 800f864:	5021883a 	mov	r16,r10
 800f868:	1886703a 	and	r3,r3,r2
 800f86c:	003eaf06 	br	800f32c <__alt_data_end+0xf800f32c>
 800f870:	3825883a 	mov	r18,r7
 800f874:	003f0f06 	br	800f4b4 <__alt_data_end+0xf800f4b4>
 800f878:	1c44b03a 	or	r2,r3,r17
 800f87c:	8000251e 	bne	r16,zero,800f914 <__subdf3+0x66c>
 800f880:	1000661e 	bne	r2,zero,800fa1c <__subdf3+0x774>
 800f884:	2990b03a 	or	r8,r5,r6
 800f888:	40009626 	beq	r8,zero,800fae4 <__subdf3+0x83c>
 800f88c:	2807883a 	mov	r3,r5
 800f890:	3023883a 	mov	r17,r6
 800f894:	3825883a 	mov	r18,r7
 800f898:	003ea406 	br	800f32c <__alt_data_end+0xf800f32c>
 800f89c:	127ff804 	addi	r9,r2,-32
 800f8a0:	01000804 	movi	r4,32
 800f8a4:	2a52d83a 	srl	r9,r5,r9
 800f8a8:	11008c26 	beq	r2,r4,800fadc <__subdf3+0x834>
 800f8ac:	01001004 	movi	r4,64
 800f8b0:	2085c83a 	sub	r2,r4,r2
 800f8b4:	2884983a 	sll	r2,r5,r2
 800f8b8:	118cb03a 	or	r6,r2,r6
 800f8bc:	300cc03a 	cmpne	r6,r6,zero
 800f8c0:	4992b03a 	or	r9,r9,r6
 800f8c4:	0005883a 	mov	r2,zero
 800f8c8:	003f1206 	br	800f514 <__alt_data_end+0xf800f514>
 800f8cc:	0101ffc4 	movi	r4,2047
 800f8d0:	493f9c1e 	bne	r9,r4,800f744 <__alt_data_end+0xf800f744>
 800f8d4:	2807883a 	mov	r3,r5
 800f8d8:	3023883a 	mov	r17,r6
 800f8dc:	4821883a 	mov	r16,r9
 800f8e0:	3825883a 	mov	r18,r7
 800f8e4:	003e9106 	br	800f32c <__alt_data_end+0xf800f32c>
 800f8e8:	80001f1e 	bne	r16,zero,800f968 <__subdf3+0x6c0>
 800f8ec:	1c48b03a 	or	r4,r3,r17
 800f8f0:	20005a26 	beq	r4,zero,800fa5c <__subdf3+0x7b4>
 800f8f4:	0084303a 	nor	r2,zero,r2
 800f8f8:	1000561e 	bne	r2,zero,800fa54 <__subdf3+0x7ac>
 800f8fc:	89a3883a 	add	r17,r17,r6
 800f900:	1945883a 	add	r2,r3,r5
 800f904:	898d803a 	cmpltu	r6,r17,r6
 800f908:	3087883a 	add	r3,r6,r2
 800f90c:	4821883a 	mov	r16,r9
 800f910:	003f0506 	br	800f528 <__alt_data_end+0xf800f528>
 800f914:	10002b1e 	bne	r2,zero,800f9c4 <__subdf3+0x71c>
 800f918:	2984b03a 	or	r2,r5,r6
 800f91c:	10008026 	beq	r2,zero,800fb20 <__subdf3+0x878>
 800f920:	2807883a 	mov	r3,r5
 800f924:	3023883a 	mov	r17,r6
 800f928:	3825883a 	mov	r18,r7
 800f92c:	0401ffc4 	movi	r16,2047
 800f930:	003e7e06 	br	800f32c <__alt_data_end+0xf800f32c>
 800f934:	3809883a 	mov	r4,r7
 800f938:	0011883a 	mov	r8,zero
 800f93c:	0005883a 	mov	r2,zero
 800f940:	003ee306 	br	800f4d0 <__alt_data_end+0xf800f4d0>
 800f944:	1c62b03a 	or	r17,r3,r17
 800f948:	8822c03a 	cmpne	r17,r17,zero
 800f94c:	0005883a 	mov	r2,zero
 800f950:	003f8906 	br	800f778 <__alt_data_end+0xf800f778>
 800f954:	3809883a 	mov	r4,r7
 800f958:	4821883a 	mov	r16,r9
 800f95c:	0011883a 	mov	r8,zero
 800f960:	0005883a 	mov	r2,zero
 800f964:	003eda06 	br	800f4d0 <__alt_data_end+0xf800f4d0>
 800f968:	0101ffc4 	movi	r4,2047
 800f96c:	49003b26 	beq	r9,r4,800fa5c <__subdf3+0x7b4>
 800f970:	0085c83a 	sub	r2,zero,r2
 800f974:	18c02034 	orhi	r3,r3,128
 800f978:	01000e04 	movi	r4,56
 800f97c:	20806e16 	blt	r4,r2,800fb38 <__subdf3+0x890>
 800f980:	010007c4 	movi	r4,31
 800f984:	20807716 	blt	r4,r2,800fb64 <__subdf3+0x8bc>
 800f988:	01000804 	movi	r4,32
 800f98c:	2089c83a 	sub	r4,r4,r2
 800f990:	1914983a 	sll	r10,r3,r4
 800f994:	8890d83a 	srl	r8,r17,r2
 800f998:	8908983a 	sll	r4,r17,r4
 800f99c:	1884d83a 	srl	r2,r3,r2
 800f9a0:	5222b03a 	or	r17,r10,r8
 800f9a4:	2006c03a 	cmpne	r3,r4,zero
 800f9a8:	88e2b03a 	or	r17,r17,r3
 800f9ac:	89a3883a 	add	r17,r17,r6
 800f9b0:	1145883a 	add	r2,r2,r5
 800f9b4:	898d803a 	cmpltu	r6,r17,r6
 800f9b8:	3087883a 	add	r3,r6,r2
 800f9bc:	4821883a 	mov	r16,r9
 800f9c0:	003ed906 	br	800f528 <__alt_data_end+0xf800f528>
 800f9c4:	2984b03a 	or	r2,r5,r6
 800f9c8:	10004226 	beq	r2,zero,800fad4 <__subdf3+0x82c>
 800f9cc:	1808d0fa 	srli	r4,r3,3
 800f9d0:	8822d0fa 	srli	r17,r17,3
 800f9d4:	1806977a 	slli	r3,r3,29
 800f9d8:	2080022c 	andhi	r2,r4,8
 800f9dc:	1c62b03a 	or	r17,r3,r17
 800f9e0:	10000826 	beq	r2,zero,800fa04 <__subdf3+0x75c>
 800f9e4:	2812d0fa 	srli	r9,r5,3
 800f9e8:	4880022c 	andhi	r2,r9,8
 800f9ec:	1000051e 	bne	r2,zero,800fa04 <__subdf3+0x75c>
 800f9f0:	300cd0fa 	srli	r6,r6,3
 800f9f4:	2804977a 	slli	r2,r5,29
 800f9f8:	4809883a 	mov	r4,r9
 800f9fc:	3825883a 	mov	r18,r7
 800fa00:	11a2b03a 	or	r17,r2,r6
 800fa04:	8806d77a 	srli	r3,r17,29
 800fa08:	200890fa 	slli	r4,r4,3
 800fa0c:	882290fa 	slli	r17,r17,3
 800fa10:	0401ffc4 	movi	r16,2047
 800fa14:	1906b03a 	or	r3,r3,r4
 800fa18:	003e4406 	br	800f32c <__alt_data_end+0xf800f32c>
 800fa1c:	2984b03a 	or	r2,r5,r6
 800fa20:	103e4226 	beq	r2,zero,800f32c <__alt_data_end+0xf800f32c>
 800fa24:	8989c83a 	sub	r4,r17,r6
 800fa28:	8911803a 	cmpltu	r8,r17,r4
 800fa2c:	1945c83a 	sub	r2,r3,r5
 800fa30:	1205c83a 	sub	r2,r2,r8
 800fa34:	1200202c 	andhi	r8,r2,128
 800fa38:	403e9a26 	beq	r8,zero,800f4a4 <__alt_data_end+0xf800f4a4>
 800fa3c:	3463c83a 	sub	r17,r6,r17
 800fa40:	28c5c83a 	sub	r2,r5,r3
 800fa44:	344d803a 	cmpltu	r6,r6,r17
 800fa48:	1187c83a 	sub	r3,r2,r6
 800fa4c:	3825883a 	mov	r18,r7
 800fa50:	003e3606 	br	800f32c <__alt_data_end+0xf800f32c>
 800fa54:	0101ffc4 	movi	r4,2047
 800fa58:	493fc71e 	bne	r9,r4,800f978 <__alt_data_end+0xf800f978>
 800fa5c:	2807883a 	mov	r3,r5
 800fa60:	3023883a 	mov	r17,r6
 800fa64:	4821883a 	mov	r16,r9
 800fa68:	003e3006 	br	800f32c <__alt_data_end+0xf800f32c>
 800fa6c:	10003626 	beq	r2,zero,800fb48 <__subdf3+0x8a0>
 800fa70:	2984b03a 	or	r2,r5,r6
 800fa74:	10001726 	beq	r2,zero,800fad4 <__subdf3+0x82c>
 800fa78:	1808d0fa 	srli	r4,r3,3
 800fa7c:	8822d0fa 	srli	r17,r17,3
 800fa80:	1806977a 	slli	r3,r3,29
 800fa84:	2080022c 	andhi	r2,r4,8
 800fa88:	1c62b03a 	or	r17,r3,r17
 800fa8c:	10000726 	beq	r2,zero,800faac <__subdf3+0x804>
 800fa90:	2812d0fa 	srli	r9,r5,3
 800fa94:	4880022c 	andhi	r2,r9,8
 800fa98:	1000041e 	bne	r2,zero,800faac <__subdf3+0x804>
 800fa9c:	300cd0fa 	srli	r6,r6,3
 800faa0:	2804977a 	slli	r2,r5,29
 800faa4:	4809883a 	mov	r4,r9
 800faa8:	11a2b03a 	or	r17,r2,r6
 800faac:	8806d77a 	srli	r3,r17,29
 800fab0:	200890fa 	slli	r4,r4,3
 800fab4:	882290fa 	slli	r17,r17,3
 800fab8:	3825883a 	mov	r18,r7
 800fabc:	1906b03a 	or	r3,r3,r4
 800fac0:	0401ffc4 	movi	r16,2047
 800fac4:	003e1906 	br	800f32c <__alt_data_end+0xf800f32c>
 800fac8:	000b883a 	mov	r5,zero
 800facc:	0005883a 	mov	r2,zero
 800fad0:	003e2e06 	br	800f38c <__alt_data_end+0xf800f38c>
 800fad4:	0401ffc4 	movi	r16,2047
 800fad8:	003e1406 	br	800f32c <__alt_data_end+0xf800f32c>
 800fadc:	0005883a 	mov	r2,zero
 800fae0:	003f7506 	br	800f8b8 <__alt_data_end+0xf800f8b8>
 800fae4:	0005883a 	mov	r2,zero
 800fae8:	0009883a 	mov	r4,zero
 800faec:	003e7806 	br	800f4d0 <__alt_data_end+0xf800f4d0>
 800faf0:	123ff804 	addi	r8,r2,-32
 800faf4:	01000804 	movi	r4,32
 800faf8:	1a10d83a 	srl	r8,r3,r8
 800fafc:	11002526 	beq	r2,r4,800fb94 <__subdf3+0x8ec>
 800fb00:	01001004 	movi	r4,64
 800fb04:	2085c83a 	sub	r2,r4,r2
 800fb08:	1884983a 	sll	r2,r3,r2
 800fb0c:	1444b03a 	or	r2,r2,r17
 800fb10:	1004c03a 	cmpne	r2,r2,zero
 800fb14:	40a2b03a 	or	r17,r8,r2
 800fb18:	0005883a 	mov	r2,zero
 800fb1c:	003f1606 	br	800f778 <__alt_data_end+0xf800f778>
 800fb20:	02000434 	movhi	r8,16
 800fb24:	0009883a 	mov	r4,zero
 800fb28:	423fffc4 	addi	r8,r8,-1
 800fb2c:	00bfffc4 	movi	r2,-1
 800fb30:	0401ffc4 	movi	r16,2047
 800fb34:	003e6606 	br	800f4d0 <__alt_data_end+0xf800f4d0>
 800fb38:	1c62b03a 	or	r17,r3,r17
 800fb3c:	8822c03a 	cmpne	r17,r17,zero
 800fb40:	0005883a 	mov	r2,zero
 800fb44:	003f9906 	br	800f9ac <__alt_data_end+0xf800f9ac>
 800fb48:	2807883a 	mov	r3,r5
 800fb4c:	3023883a 	mov	r17,r6
 800fb50:	0401ffc4 	movi	r16,2047
 800fb54:	003df506 	br	800f32c <__alt_data_end+0xf800f32c>
 800fb58:	2807883a 	mov	r3,r5
 800fb5c:	3023883a 	mov	r17,r6
 800fb60:	003df206 	br	800f32c <__alt_data_end+0xf800f32c>
 800fb64:	123ff804 	addi	r8,r2,-32
 800fb68:	01000804 	movi	r4,32
 800fb6c:	1a10d83a 	srl	r8,r3,r8
 800fb70:	11000a26 	beq	r2,r4,800fb9c <__subdf3+0x8f4>
 800fb74:	01001004 	movi	r4,64
 800fb78:	2085c83a 	sub	r2,r4,r2
 800fb7c:	1884983a 	sll	r2,r3,r2
 800fb80:	1444b03a 	or	r2,r2,r17
 800fb84:	1004c03a 	cmpne	r2,r2,zero
 800fb88:	40a2b03a 	or	r17,r8,r2
 800fb8c:	0005883a 	mov	r2,zero
 800fb90:	003f8606 	br	800f9ac <__alt_data_end+0xf800f9ac>
 800fb94:	0005883a 	mov	r2,zero
 800fb98:	003fdc06 	br	800fb0c <__alt_data_end+0xf800fb0c>
 800fb9c:	0005883a 	mov	r2,zero
 800fba0:	003ff706 	br	800fb80 <__alt_data_end+0xf800fb80>

0800fba4 <__fixdfsi>:
 800fba4:	280cd53a 	srli	r6,r5,20
 800fba8:	00c00434 	movhi	r3,16
 800fbac:	18ffffc4 	addi	r3,r3,-1
 800fbb0:	3181ffcc 	andi	r6,r6,2047
 800fbb4:	01c0ff84 	movi	r7,1022
 800fbb8:	28c6703a 	and	r3,r5,r3
 800fbbc:	280ad7fa 	srli	r5,r5,31
 800fbc0:	3980120e 	bge	r7,r6,800fc0c <__fixdfsi+0x68>
 800fbc4:	00810744 	movi	r2,1053
 800fbc8:	11800c16 	blt	r2,r6,800fbfc <__fixdfsi+0x58>
 800fbcc:	00810cc4 	movi	r2,1075
 800fbd0:	1185c83a 	sub	r2,r2,r6
 800fbd4:	01c007c4 	movi	r7,31
 800fbd8:	18c00434 	orhi	r3,r3,16
 800fbdc:	38800d16 	blt	r7,r2,800fc14 <__fixdfsi+0x70>
 800fbe0:	31befb44 	addi	r6,r6,-1043
 800fbe4:	2084d83a 	srl	r2,r4,r2
 800fbe8:	1986983a 	sll	r3,r3,r6
 800fbec:	1884b03a 	or	r2,r3,r2
 800fbf0:	28000726 	beq	r5,zero,800fc10 <__fixdfsi+0x6c>
 800fbf4:	0085c83a 	sub	r2,zero,r2
 800fbf8:	f800283a 	ret
 800fbfc:	00a00034 	movhi	r2,32768
 800fc00:	10bfffc4 	addi	r2,r2,-1
 800fc04:	2885883a 	add	r2,r5,r2
 800fc08:	f800283a 	ret
 800fc0c:	0005883a 	mov	r2,zero
 800fc10:	f800283a 	ret
 800fc14:	008104c4 	movi	r2,1043
 800fc18:	1185c83a 	sub	r2,r2,r6
 800fc1c:	1884d83a 	srl	r2,r3,r2
 800fc20:	003ff306 	br	800fbf0 <__alt_data_end+0xf800fbf0>

0800fc24 <__floatsidf>:
 800fc24:	defffd04 	addi	sp,sp,-12
 800fc28:	dfc00215 	stw	ra,8(sp)
 800fc2c:	dc400115 	stw	r17,4(sp)
 800fc30:	dc000015 	stw	r16,0(sp)
 800fc34:	20002b26 	beq	r4,zero,800fce4 <__floatsidf+0xc0>
 800fc38:	2023883a 	mov	r17,r4
 800fc3c:	2020d7fa 	srli	r16,r4,31
 800fc40:	20002d16 	blt	r4,zero,800fcf8 <__floatsidf+0xd4>
 800fc44:	8809883a 	mov	r4,r17
 800fc48:	800fda80 	call	800fda8 <__clzsi2>
 800fc4c:	01410784 	movi	r5,1054
 800fc50:	288bc83a 	sub	r5,r5,r2
 800fc54:	01010cc4 	movi	r4,1075
 800fc58:	2149c83a 	sub	r4,r4,r5
 800fc5c:	00c007c4 	movi	r3,31
 800fc60:	1900160e 	bge	r3,r4,800fcbc <__floatsidf+0x98>
 800fc64:	00c104c4 	movi	r3,1043
 800fc68:	1947c83a 	sub	r3,r3,r5
 800fc6c:	88c6983a 	sll	r3,r17,r3
 800fc70:	00800434 	movhi	r2,16
 800fc74:	10bfffc4 	addi	r2,r2,-1
 800fc78:	1886703a 	and	r3,r3,r2
 800fc7c:	2941ffcc 	andi	r5,r5,2047
 800fc80:	800d883a 	mov	r6,r16
 800fc84:	0005883a 	mov	r2,zero
 800fc88:	280a953a 	slli	r5,r5,20
 800fc8c:	31803fcc 	andi	r6,r6,255
 800fc90:	01000434 	movhi	r4,16
 800fc94:	300c97fa 	slli	r6,r6,31
 800fc98:	213fffc4 	addi	r4,r4,-1
 800fc9c:	1906703a 	and	r3,r3,r4
 800fca0:	1946b03a 	or	r3,r3,r5
 800fca4:	1986b03a 	or	r3,r3,r6
 800fca8:	dfc00217 	ldw	ra,8(sp)
 800fcac:	dc400117 	ldw	r17,4(sp)
 800fcb0:	dc000017 	ldw	r16,0(sp)
 800fcb4:	dec00304 	addi	sp,sp,12
 800fcb8:	f800283a 	ret
 800fcbc:	00c002c4 	movi	r3,11
 800fcc0:	1887c83a 	sub	r3,r3,r2
 800fcc4:	88c6d83a 	srl	r3,r17,r3
 800fcc8:	8904983a 	sll	r2,r17,r4
 800fccc:	01000434 	movhi	r4,16
 800fcd0:	213fffc4 	addi	r4,r4,-1
 800fcd4:	2941ffcc 	andi	r5,r5,2047
 800fcd8:	1906703a 	and	r3,r3,r4
 800fcdc:	800d883a 	mov	r6,r16
 800fce0:	003fe906 	br	800fc88 <__alt_data_end+0xf800fc88>
 800fce4:	000d883a 	mov	r6,zero
 800fce8:	000b883a 	mov	r5,zero
 800fcec:	0007883a 	mov	r3,zero
 800fcf0:	0005883a 	mov	r2,zero
 800fcf4:	003fe406 	br	800fc88 <__alt_data_end+0xf800fc88>
 800fcf8:	0123c83a 	sub	r17,zero,r4
 800fcfc:	003fd106 	br	800fc44 <__alt_data_end+0xf800fc44>

0800fd00 <__floatunsidf>:
 800fd00:	defffe04 	addi	sp,sp,-8
 800fd04:	dc000015 	stw	r16,0(sp)
 800fd08:	dfc00115 	stw	ra,4(sp)
 800fd0c:	2021883a 	mov	r16,r4
 800fd10:	20002226 	beq	r4,zero,800fd9c <__floatunsidf+0x9c>
 800fd14:	800fda80 	call	800fda8 <__clzsi2>
 800fd18:	01010784 	movi	r4,1054
 800fd1c:	2089c83a 	sub	r4,r4,r2
 800fd20:	01810cc4 	movi	r6,1075
 800fd24:	310dc83a 	sub	r6,r6,r4
 800fd28:	00c007c4 	movi	r3,31
 800fd2c:	1980120e 	bge	r3,r6,800fd78 <__floatunsidf+0x78>
 800fd30:	00c104c4 	movi	r3,1043
 800fd34:	1907c83a 	sub	r3,r3,r4
 800fd38:	80ca983a 	sll	r5,r16,r3
 800fd3c:	00800434 	movhi	r2,16
 800fd40:	10bfffc4 	addi	r2,r2,-1
 800fd44:	2101ffcc 	andi	r4,r4,2047
 800fd48:	0021883a 	mov	r16,zero
 800fd4c:	288a703a 	and	r5,r5,r2
 800fd50:	2008953a 	slli	r4,r4,20
 800fd54:	00c00434 	movhi	r3,16
 800fd58:	18ffffc4 	addi	r3,r3,-1
 800fd5c:	28c6703a 	and	r3,r5,r3
 800fd60:	8005883a 	mov	r2,r16
 800fd64:	1906b03a 	or	r3,r3,r4
 800fd68:	dfc00117 	ldw	ra,4(sp)
 800fd6c:	dc000017 	ldw	r16,0(sp)
 800fd70:	dec00204 	addi	sp,sp,8
 800fd74:	f800283a 	ret
 800fd78:	00c002c4 	movi	r3,11
 800fd7c:	188bc83a 	sub	r5,r3,r2
 800fd80:	814ad83a 	srl	r5,r16,r5
 800fd84:	00c00434 	movhi	r3,16
 800fd88:	18ffffc4 	addi	r3,r3,-1
 800fd8c:	81a0983a 	sll	r16,r16,r6
 800fd90:	2101ffcc 	andi	r4,r4,2047
 800fd94:	28ca703a 	and	r5,r5,r3
 800fd98:	003fed06 	br	800fd50 <__alt_data_end+0xf800fd50>
 800fd9c:	0009883a 	mov	r4,zero
 800fda0:	000b883a 	mov	r5,zero
 800fda4:	003fea06 	br	800fd50 <__alt_data_end+0xf800fd50>

0800fda8 <__clzsi2>:
 800fda8:	00bfffd4 	movui	r2,65535
 800fdac:	11000536 	bltu	r2,r4,800fdc4 <__clzsi2+0x1c>
 800fdb0:	00803fc4 	movi	r2,255
 800fdb4:	11000f36 	bltu	r2,r4,800fdf4 <__clzsi2+0x4c>
 800fdb8:	00800804 	movi	r2,32
 800fdbc:	0007883a 	mov	r3,zero
 800fdc0:	00000506 	br	800fdd8 <__clzsi2+0x30>
 800fdc4:	00804034 	movhi	r2,256
 800fdc8:	10bfffc4 	addi	r2,r2,-1
 800fdcc:	11000c2e 	bgeu	r2,r4,800fe00 <__clzsi2+0x58>
 800fdd0:	00800204 	movi	r2,8
 800fdd4:	00c00604 	movi	r3,24
 800fdd8:	20c8d83a 	srl	r4,r4,r3
 800fddc:	00c20074 	movhi	r3,2049
 800fde0:	18ccf904 	addi	r3,r3,13284
 800fde4:	1909883a 	add	r4,r3,r4
 800fde8:	20c00003 	ldbu	r3,0(r4)
 800fdec:	10c5c83a 	sub	r2,r2,r3
 800fdf0:	f800283a 	ret
 800fdf4:	00800604 	movi	r2,24
 800fdf8:	00c00204 	movi	r3,8
 800fdfc:	003ff606 	br	800fdd8 <__alt_data_end+0xf800fdd8>
 800fe00:	00800404 	movi	r2,16
 800fe04:	1007883a 	mov	r3,r2
 800fe08:	003ff306 	br	800fdd8 <__alt_data_end+0xf800fdd8>

0800fe0c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 800fe0c:	defffe04 	addi	sp,sp,-8
 800fe10:	dfc00115 	stw	ra,4(sp)
 800fe14:	df000015 	stw	fp,0(sp)
 800fe18:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 800fe1c:	d0a01617 	ldw	r2,-32680(gp)
 800fe20:	10000326 	beq	r2,zero,800fe30 <alt_get_errno+0x24>
 800fe24:	d0a01617 	ldw	r2,-32680(gp)
 800fe28:	103ee83a 	callr	r2
 800fe2c:	00000106 	br	800fe34 <alt_get_errno+0x28>
 800fe30:	d0a6e804 	addi	r2,gp,-25696
}
 800fe34:	e037883a 	mov	sp,fp
 800fe38:	dfc00117 	ldw	ra,4(sp)
 800fe3c:	df000017 	ldw	fp,0(sp)
 800fe40:	dec00204 	addi	sp,sp,8
 800fe44:	f800283a 	ret

0800fe48 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
 800fe48:	defffb04 	addi	sp,sp,-20
 800fe4c:	dfc00415 	stw	ra,16(sp)
 800fe50:	df000315 	stw	fp,12(sp)
 800fe54:	df000304 	addi	fp,sp,12
 800fe58:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
 800fe5c:	e0bfff17 	ldw	r2,-4(fp)
 800fe60:	10000616 	blt	r2,zero,800fe7c <close+0x34>
 800fe64:	e0bfff17 	ldw	r2,-4(fp)
 800fe68:	10c00324 	muli	r3,r2,12
 800fe6c:	00820074 	movhi	r2,2049
 800fe70:	108f7904 	addi	r2,r2,15844
 800fe74:	1885883a 	add	r2,r3,r2
 800fe78:	00000106 	br	800fe80 <close+0x38>
 800fe7c:	0005883a 	mov	r2,zero
 800fe80:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
 800fe84:	e0bffd17 	ldw	r2,-12(fp)
 800fe88:	10001926 	beq	r2,zero,800fef0 <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
 800fe8c:	e0bffd17 	ldw	r2,-12(fp)
 800fe90:	10800017 	ldw	r2,0(r2)
 800fe94:	10800417 	ldw	r2,16(r2)
 800fe98:	10000626 	beq	r2,zero,800feb4 <close+0x6c>
 800fe9c:	e0bffd17 	ldw	r2,-12(fp)
 800fea0:	10800017 	ldw	r2,0(r2)
 800fea4:	10800417 	ldw	r2,16(r2)
 800fea8:	e13ffd17 	ldw	r4,-12(fp)
 800feac:	103ee83a 	callr	r2
 800feb0:	00000106 	br	800feb8 <close+0x70>
 800feb4:	0005883a 	mov	r2,zero
 800feb8:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
 800febc:	e13fff17 	ldw	r4,-4(fp)
 800fec0:	80106c80 	call	80106c8 <alt_release_fd>
    if (rval < 0)
 800fec4:	e0bffe17 	ldw	r2,-8(fp)
 800fec8:	1000070e 	bge	r2,zero,800fee8 <close+0xa0>
    {
      ALT_ERRNO = -rval;
 800fecc:	800fe0c0 	call	800fe0c <alt_get_errno>
 800fed0:	1007883a 	mov	r3,r2
 800fed4:	e0bffe17 	ldw	r2,-8(fp)
 800fed8:	0085c83a 	sub	r2,zero,r2
 800fedc:	18800015 	stw	r2,0(r3)
      return -1;
 800fee0:	00bfffc4 	movi	r2,-1
 800fee4:	00000706 	br	800ff04 <close+0xbc>
    }
    return 0;
 800fee8:	0005883a 	mov	r2,zero
 800feec:	00000506 	br	800ff04 <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
 800fef0:	800fe0c0 	call	800fe0c <alt_get_errno>
 800fef4:	1007883a 	mov	r3,r2
 800fef8:	00801444 	movi	r2,81
 800fefc:	18800015 	stw	r2,0(r3)
    return -1;
 800ff00:	00bfffc4 	movi	r2,-1
  }
}
 800ff04:	e037883a 	mov	sp,fp
 800ff08:	dfc00117 	ldw	ra,4(sp)
 800ff0c:	df000017 	ldw	fp,0(sp)
 800ff10:	dec00204 	addi	sp,sp,8
 800ff14:	f800283a 	ret

0800ff18 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
 800ff18:	defffc04 	addi	sp,sp,-16
 800ff1c:	df000315 	stw	fp,12(sp)
 800ff20:	df000304 	addi	fp,sp,12
 800ff24:	e13ffd15 	stw	r4,-12(fp)
 800ff28:	e17ffe15 	stw	r5,-8(fp)
 800ff2c:	e1bfff15 	stw	r6,-4(fp)
  return len;
 800ff30:	e0bfff17 	ldw	r2,-4(fp)
}
 800ff34:	e037883a 	mov	sp,fp
 800ff38:	df000017 	ldw	fp,0(sp)
 800ff3c:	dec00104 	addi	sp,sp,4
 800ff40:	f800283a 	ret

0800ff44 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
 800ff44:	defffd04 	addi	sp,sp,-12
 800ff48:	df000215 	stw	fp,8(sp)
 800ff4c:	df000204 	addi	fp,sp,8
 800ff50:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
 800ff54:	0001883a 	nop
 800ff58:	e0bfff17 	ldw	r2,-4(fp)
 800ff5c:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
 800ff60:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
 800ff64:	10000226 	beq	r2,zero,800ff70 <_exit+0x2c>
    ALT_SIM_FAIL();
 800ff68:	002af070 	cmpltui	zero,zero,43969
 800ff6c:	00000106 	br	800ff74 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
 800ff70:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
 800ff74:	003fff06 	br	800ff74 <__alt_data_end+0xf800ff74>

0800ff78 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 800ff78:	defffe04 	addi	sp,sp,-8
 800ff7c:	dfc00115 	stw	ra,4(sp)
 800ff80:	df000015 	stw	fp,0(sp)
 800ff84:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 800ff88:	d0a01617 	ldw	r2,-32680(gp)
 800ff8c:	10000326 	beq	r2,zero,800ff9c <alt_get_errno+0x24>
 800ff90:	d0a01617 	ldw	r2,-32680(gp)
 800ff94:	103ee83a 	callr	r2
 800ff98:	00000106 	br	800ffa0 <alt_get_errno+0x28>
 800ff9c:	d0a6e804 	addi	r2,gp,-25696
}
 800ffa0:	e037883a 	mov	sp,fp
 800ffa4:	dfc00117 	ldw	ra,4(sp)
 800ffa8:	df000017 	ldw	fp,0(sp)
 800ffac:	dec00204 	addi	sp,sp,8
 800ffb0:	f800283a 	ret

0800ffb4 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
 800ffb4:	defffb04 	addi	sp,sp,-20
 800ffb8:	dfc00415 	stw	ra,16(sp)
 800ffbc:	df000315 	stw	fp,12(sp)
 800ffc0:	df000304 	addi	fp,sp,12
 800ffc4:	e13ffe15 	stw	r4,-8(fp)
 800ffc8:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 800ffcc:	e0bffe17 	ldw	r2,-8(fp)
 800ffd0:	10000616 	blt	r2,zero,800ffec <fstat+0x38>
 800ffd4:	e0bffe17 	ldw	r2,-8(fp)
 800ffd8:	10c00324 	muli	r3,r2,12
 800ffdc:	00820074 	movhi	r2,2049
 800ffe0:	108f7904 	addi	r2,r2,15844
 800ffe4:	1885883a 	add	r2,r3,r2
 800ffe8:	00000106 	br	800fff0 <fstat+0x3c>
 800ffec:	0005883a 	mov	r2,zero
 800fff0:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
 800fff4:	e0bffd17 	ldw	r2,-12(fp)
 800fff8:	10001026 	beq	r2,zero,801003c <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
 800fffc:	e0bffd17 	ldw	r2,-12(fp)
 8010000:	10800017 	ldw	r2,0(r2)
 8010004:	10800817 	ldw	r2,32(r2)
 8010008:	10000726 	beq	r2,zero,8010028 <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
 801000c:	e0bffd17 	ldw	r2,-12(fp)
 8010010:	10800017 	ldw	r2,0(r2)
 8010014:	10800817 	ldw	r2,32(r2)
 8010018:	e17fff17 	ldw	r5,-4(fp)
 801001c:	e13ffd17 	ldw	r4,-12(fp)
 8010020:	103ee83a 	callr	r2
 8010024:	00000a06 	br	8010050 <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
 8010028:	e0bfff17 	ldw	r2,-4(fp)
 801002c:	00c80004 	movi	r3,8192
 8010030:	10c00115 	stw	r3,4(r2)
      return 0;
 8010034:	0005883a 	mov	r2,zero
 8010038:	00000506 	br	8010050 <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 801003c:	800ff780 	call	800ff78 <alt_get_errno>
 8010040:	1007883a 	mov	r3,r2
 8010044:	00801444 	movi	r2,81
 8010048:	18800015 	stw	r2,0(r3)
    return -1;
 801004c:	00bfffc4 	movi	r2,-1
  }
}
 8010050:	e037883a 	mov	sp,fp
 8010054:	dfc00117 	ldw	ra,4(sp)
 8010058:	df000017 	ldw	fp,0(sp)
 801005c:	dec00204 	addi	sp,sp,8
 8010060:	f800283a 	ret

08010064 <getpid>:
 *
 * ALT_GETPID is mapped onto the getpid() system call in alt_syscall.h
 */
 
int ALT_GETPID (void)
{
 8010064:	deffff04 	addi	sp,sp,-4
 8010068:	df000015 	stw	fp,0(sp)
 801006c:	d839883a 	mov	fp,sp
  return 0;
 8010070:	0005883a 	mov	r2,zero
}
 8010074:	e037883a 	mov	sp,fp
 8010078:	df000017 	ldw	fp,0(sp)
 801007c:	dec00104 	addi	sp,sp,4
 8010080:	f800283a 	ret

08010084 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 8010084:	defffe04 	addi	sp,sp,-8
 8010088:	dfc00115 	stw	ra,4(sp)
 801008c:	df000015 	stw	fp,0(sp)
 8010090:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 8010094:	d0a01617 	ldw	r2,-32680(gp)
 8010098:	10000326 	beq	r2,zero,80100a8 <alt_get_errno+0x24>
 801009c:	d0a01617 	ldw	r2,-32680(gp)
 80100a0:	103ee83a 	callr	r2
 80100a4:	00000106 	br	80100ac <alt_get_errno+0x28>
 80100a8:	d0a6e804 	addi	r2,gp,-25696
}
 80100ac:	e037883a 	mov	sp,fp
 80100b0:	dfc00117 	ldw	ra,4(sp)
 80100b4:	df000017 	ldw	fp,0(sp)
 80100b8:	dec00204 	addi	sp,sp,8
 80100bc:	f800283a 	ret

080100c0 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
 80100c0:	deffed04 	addi	sp,sp,-76
 80100c4:	dfc01215 	stw	ra,72(sp)
 80100c8:	df001115 	stw	fp,68(sp)
 80100cc:	df001104 	addi	fp,sp,68
 80100d0:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 80100d4:	e0bfff17 	ldw	r2,-4(fp)
 80100d8:	10000616 	blt	r2,zero,80100f4 <isatty+0x34>
 80100dc:	e0bfff17 	ldw	r2,-4(fp)
 80100e0:	10c00324 	muli	r3,r2,12
 80100e4:	00820074 	movhi	r2,2049
 80100e8:	108f7904 	addi	r2,r2,15844
 80100ec:	1885883a 	add	r2,r3,r2
 80100f0:	00000106 	br	80100f8 <isatty+0x38>
 80100f4:	0005883a 	mov	r2,zero
 80100f8:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
 80100fc:	e0bfef17 	ldw	r2,-68(fp)
 8010100:	10000e26 	beq	r2,zero,801013c <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
 8010104:	e0bfef17 	ldw	r2,-68(fp)
 8010108:	10800017 	ldw	r2,0(r2)
 801010c:	10800817 	ldw	r2,32(r2)
 8010110:	1000021e 	bne	r2,zero,801011c <isatty+0x5c>
    {
      return 1;
 8010114:	00800044 	movi	r2,1
 8010118:	00000d06 	br	8010150 <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
 801011c:	e0bff004 	addi	r2,fp,-64
 8010120:	100b883a 	mov	r5,r2
 8010124:	e13fff17 	ldw	r4,-4(fp)
 8010128:	800ffb40 	call	800ffb4 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
 801012c:	e0bff117 	ldw	r2,-60(fp)
 8010130:	10880020 	cmpeqi	r2,r2,8192
 8010134:	10803fcc 	andi	r2,r2,255
 8010138:	00000506 	br	8010150 <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 801013c:	80100840 	call	8010084 <alt_get_errno>
 8010140:	1007883a 	mov	r3,r2
 8010144:	00801444 	movi	r2,81
 8010148:	18800015 	stw	r2,0(r3)
    return 0;
 801014c:	0005883a 	mov	r2,zero
  }
}
 8010150:	e037883a 	mov	sp,fp
 8010154:	dfc00117 	ldw	ra,4(sp)
 8010158:	df000017 	ldw	fp,0(sp)
 801015c:	dec00204 	addi	sp,sp,8
 8010160:	f800283a 	ret

08010164 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 8010164:	defffe04 	addi	sp,sp,-8
 8010168:	dfc00115 	stw	ra,4(sp)
 801016c:	df000015 	stw	fp,0(sp)
 8010170:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 8010174:	d0a01617 	ldw	r2,-32680(gp)
 8010178:	10000326 	beq	r2,zero,8010188 <alt_get_errno+0x24>
 801017c:	d0a01617 	ldw	r2,-32680(gp)
 8010180:	103ee83a 	callr	r2
 8010184:	00000106 	br	801018c <alt_get_errno+0x28>
 8010188:	d0a6e804 	addi	r2,gp,-25696
}
 801018c:	e037883a 	mov	sp,fp
 8010190:	dfc00117 	ldw	ra,4(sp)
 8010194:	df000017 	ldw	fp,0(sp)
 8010198:	dec00204 	addi	sp,sp,8
 801019c:	f800283a 	ret

080101a0 <kill>:
 *
 * ALT_KILL is mapped onto the kill() system call in alt_syscall.h
 */

int ALT_KILL (int pid, int sig)
{
 80101a0:	defffb04 	addi	sp,sp,-20
 80101a4:	dfc00415 	stw	ra,16(sp)
 80101a8:	df000315 	stw	fp,12(sp)
 80101ac:	df000304 	addi	fp,sp,12
 80101b0:	e13ffe15 	stw	r4,-8(fp)
 80101b4:	e17fff15 	stw	r5,-4(fp)
  int status = 0;
 80101b8:	e03ffd15 	stw	zero,-12(fp)

  if (pid <= 0)
 80101bc:	e0bffe17 	ldw	r2,-8(fp)
 80101c0:	00802f16 	blt	zero,r2,8010280 <kill+0xe0>
  {
    switch (sig)
 80101c4:	e0bfff17 	ldw	r2,-4(fp)
 80101c8:	10800828 	cmpgeui	r2,r2,32
 80101cc:	1000291e 	bne	r2,zero,8010274 <kill+0xd4>
 80101d0:	e0bfff17 	ldw	r2,-4(fp)
 80101d4:	100690ba 	slli	r3,r2,2
 80101d8:	00820074 	movhi	r2,2049
 80101dc:	10807b04 	addi	r2,r2,492
 80101e0:	1885883a 	add	r2,r3,r2
 80101e4:	10800017 	ldw	r2,0(r2)
 80101e8:	1000683a 	jmp	r2
 80101ec:	08010294 	ori	zero,at,1034
 80101f0:	08010274 	orhi	zero,at,1033
 80101f4:	08010274 	orhi	zero,at,1033
 80101f8:	0801026c 	andhi	zero,at,1033
 80101fc:	0801026c 	andhi	zero,at,1033
 8010200:	0801026c 	andhi	zero,at,1033
 8010204:	0801026c 	andhi	zero,at,1033
 8010208:	08010274 	orhi	zero,at,1033
 801020c:	0801026c 	andhi	zero,at,1033
 8010210:	0801026c 	andhi	zero,at,1033
 8010214:	0801026c 	andhi	zero,at,1033
 8010218:	0801026c 	andhi	zero,at,1033
 801021c:	0801026c 	andhi	zero,at,1033
 8010220:	0801026c 	andhi	zero,at,1033
 8010224:	0801026c 	andhi	zero,at,1033
 8010228:	0801026c 	andhi	zero,at,1033
 801022c:	08010294 	ori	zero,at,1034
 8010230:	08010274 	orhi	zero,at,1033
 8010234:	08010274 	orhi	zero,at,1033
 8010238:	08010274 	orhi	zero,at,1033
 801023c:	08010294 	ori	zero,at,1034
 8010240:	08010274 	orhi	zero,at,1033
 8010244:	08010274 	orhi	zero,at,1033
 8010248:	0801026c 	andhi	zero,at,1033
 801024c:	0801026c 	andhi	zero,at,1033
 8010250:	0801026c 	andhi	zero,at,1033
 8010254:	0801026c 	andhi	zero,at,1033
 8010258:	0801026c 	andhi	zero,at,1033
 801025c:	08010274 	orhi	zero,at,1033
 8010260:	08010274 	orhi	zero,at,1033
 8010264:	0801026c 	andhi	zero,at,1033
 8010268:	0801026c 	andhi	zero,at,1033
       * The Posix standard defines the default behaviour for all these signals 
       * as being eqivalent to a call to _exit(). No mechanism is provided to 
       * change this behaviour.
       */

      _exit(0);
 801026c:	0009883a 	mov	r4,zero
 8010270:	800ff440 	call	800ff44 <_exit>
      break;
    default:

      /* Tried to send an unsupported signal */

      status = EINVAL;
 8010274:	00800584 	movi	r2,22
 8010278:	e0bffd15 	stw	r2,-12(fp)
 801027c:	00000606 	br	8010298 <kill+0xf8>
    }
  }

  else if (pid > 0)
 8010280:	e0bffe17 	ldw	r2,-8(fp)
 8010284:	0080040e 	bge	zero,r2,8010298 <kill+0xf8>
  {
    /* Attempted to signal a non-existant process */

    status = ESRCH;
 8010288:	008000c4 	movi	r2,3
 801028c:	e0bffd15 	stw	r2,-12(fp)
 8010290:	00000106 	br	8010298 <kill+0xf8>
    {
    case 0:

      /* The null signal is used to check that a pid is valid. */

      break;
 8010294:	0001883a 	nop
    /* Attempted to signal a non-existant process */

    status = ESRCH;
  }

  if (status)
 8010298:	e0bffd17 	ldw	r2,-12(fp)
 801029c:	10000626 	beq	r2,zero,80102b8 <kill+0x118>
  {
    ALT_ERRNO = status;
 80102a0:	80101640 	call	8010164 <alt_get_errno>
 80102a4:	1007883a 	mov	r3,r2
 80102a8:	e0bffd17 	ldw	r2,-12(fp)
 80102ac:	18800015 	stw	r2,0(r3)
    return -1;
 80102b0:	00bfffc4 	movi	r2,-1
 80102b4:	00000106 	br	80102bc <kill+0x11c>
  }

  return 0;
 80102b8:	0005883a 	mov	r2,zero
}
 80102bc:	e037883a 	mov	sp,fp
 80102c0:	dfc00117 	ldw	ra,4(sp)
 80102c4:	df000017 	ldw	fp,0(sp)
 80102c8:	dec00204 	addi	sp,sp,8
 80102cc:	f800283a 	ret

080102d0 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
 80102d0:	defffc04 	addi	sp,sp,-16
 80102d4:	df000315 	stw	fp,12(sp)
 80102d8:	df000304 	addi	fp,sp,12
 80102dc:	e13ffd15 	stw	r4,-12(fp)
 80102e0:	e17ffe15 	stw	r5,-8(fp)
 80102e4:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
 80102e8:	e0fffe17 	ldw	r3,-8(fp)
 80102ec:	e0bffd17 	ldw	r2,-12(fp)
 80102f0:	18800c26 	beq	r3,r2,8010324 <alt_load_section+0x54>
  {
    while( to != end )
 80102f4:	00000806 	br	8010318 <alt_load_section+0x48>
    {
      *to++ = *from++;
 80102f8:	e0bffe17 	ldw	r2,-8(fp)
 80102fc:	10c00104 	addi	r3,r2,4
 8010300:	e0fffe15 	stw	r3,-8(fp)
 8010304:	e0fffd17 	ldw	r3,-12(fp)
 8010308:	19000104 	addi	r4,r3,4
 801030c:	e13ffd15 	stw	r4,-12(fp)
 8010310:	18c00017 	ldw	r3,0(r3)
 8010314:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
 8010318:	e0fffe17 	ldw	r3,-8(fp)
 801031c:	e0bfff17 	ldw	r2,-4(fp)
 8010320:	18bff51e 	bne	r3,r2,80102f8 <__alt_data_end+0xf80102f8>
    {
      *to++ = *from++;
    }
  }
}
 8010324:	0001883a 	nop
 8010328:	e037883a 	mov	sp,fp
 801032c:	df000017 	ldw	fp,0(sp)
 8010330:	dec00104 	addi	sp,sp,4
 8010334:	f800283a 	ret

08010338 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
 8010338:	defffe04 	addi	sp,sp,-8
 801033c:	dfc00115 	stw	ra,4(sp)
 8010340:	df000015 	stw	fp,0(sp)
 8010344:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
 8010348:	01820074 	movhi	r6,2049
 801034c:	31940c04 	addi	r6,r6,20528
 8010350:	01420074 	movhi	r5,2049
 8010354:	294d4604 	addi	r5,r5,13592
 8010358:	01020074 	movhi	r4,2049
 801035c:	21140c04 	addi	r4,r4,20528
 8010360:	80102d00 	call	80102d0 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
 8010364:	01820034 	movhi	r6,2048
 8010368:	31809104 	addi	r6,r6,580
 801036c:	01420034 	movhi	r5,2048
 8010370:	29400804 	addi	r5,r5,32
 8010374:	01020034 	movhi	r4,2048
 8010378:	21000804 	addi	r4,r4,32
 801037c:	80102d00 	call	80102d0 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
 8010380:	01820074 	movhi	r6,2049
 8010384:	318d4604 	addi	r6,r6,13592
 8010388:	01420074 	movhi	r5,2049
 801038c:	2949e304 	addi	r5,r5,10124
 8010390:	01020074 	movhi	r4,2049
 8010394:	2109e304 	addi	r4,r4,10124
 8010398:	80102d00 	call	80102d0 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
 801039c:	80116680 	call	8011668 <alt_dcache_flush_all>
  alt_icache_flush_all();
 80103a0:	80118500 	call	8011850 <alt_icache_flush_all>
}
 80103a4:	0001883a 	nop
 80103a8:	e037883a 	mov	sp,fp
 80103ac:	dfc00117 	ldw	ra,4(sp)
 80103b0:	df000017 	ldw	fp,0(sp)
 80103b4:	dec00204 	addi	sp,sp,8
 80103b8:	f800283a 	ret

080103bc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 80103bc:	defffe04 	addi	sp,sp,-8
 80103c0:	dfc00115 	stw	ra,4(sp)
 80103c4:	df000015 	stw	fp,0(sp)
 80103c8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 80103cc:	d0a01617 	ldw	r2,-32680(gp)
 80103d0:	10000326 	beq	r2,zero,80103e0 <alt_get_errno+0x24>
 80103d4:	d0a01617 	ldw	r2,-32680(gp)
 80103d8:	103ee83a 	callr	r2
 80103dc:	00000106 	br	80103e4 <alt_get_errno+0x28>
 80103e0:	d0a6e804 	addi	r2,gp,-25696
}
 80103e4:	e037883a 	mov	sp,fp
 80103e8:	dfc00117 	ldw	ra,4(sp)
 80103ec:	df000017 	ldw	fp,0(sp)
 80103f0:	dec00204 	addi	sp,sp,8
 80103f4:	f800283a 	ret

080103f8 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
 80103f8:	defff904 	addi	sp,sp,-28
 80103fc:	dfc00615 	stw	ra,24(sp)
 8010400:	df000515 	stw	fp,20(sp)
 8010404:	df000504 	addi	fp,sp,20
 8010408:	e13ffd15 	stw	r4,-12(fp)
 801040c:	e17ffe15 	stw	r5,-8(fp)
 8010410:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
 8010414:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 8010418:	e0bffd17 	ldw	r2,-12(fp)
 801041c:	10000616 	blt	r2,zero,8010438 <lseek+0x40>
 8010420:	e0bffd17 	ldw	r2,-12(fp)
 8010424:	10c00324 	muli	r3,r2,12
 8010428:	00820074 	movhi	r2,2049
 801042c:	108f7904 	addi	r2,r2,15844
 8010430:	1885883a 	add	r2,r3,r2
 8010434:	00000106 	br	801043c <lseek+0x44>
 8010438:	0005883a 	mov	r2,zero
 801043c:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
 8010440:	e0bffc17 	ldw	r2,-16(fp)
 8010444:	10001026 	beq	r2,zero,8010488 <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
 8010448:	e0bffc17 	ldw	r2,-16(fp)
 801044c:	10800017 	ldw	r2,0(r2)
 8010450:	10800717 	ldw	r2,28(r2)
 8010454:	10000926 	beq	r2,zero,801047c <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
 8010458:	e0bffc17 	ldw	r2,-16(fp)
 801045c:	10800017 	ldw	r2,0(r2)
 8010460:	10800717 	ldw	r2,28(r2)
 8010464:	e1bfff17 	ldw	r6,-4(fp)
 8010468:	e17ffe17 	ldw	r5,-8(fp)
 801046c:	e13ffc17 	ldw	r4,-16(fp)
 8010470:	103ee83a 	callr	r2
 8010474:	e0bffb15 	stw	r2,-20(fp)
 8010478:	00000506 	br	8010490 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
 801047c:	00bfde84 	movi	r2,-134
 8010480:	e0bffb15 	stw	r2,-20(fp)
 8010484:	00000206 	br	8010490 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
 8010488:	00bfebc4 	movi	r2,-81
 801048c:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
 8010490:	e0bffb17 	ldw	r2,-20(fp)
 8010494:	1000070e 	bge	r2,zero,80104b4 <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
 8010498:	80103bc0 	call	80103bc <alt_get_errno>
 801049c:	1007883a 	mov	r3,r2
 80104a0:	e0bffb17 	ldw	r2,-20(fp)
 80104a4:	0085c83a 	sub	r2,zero,r2
 80104a8:	18800015 	stw	r2,0(r3)
    rc = -1;
 80104ac:	00bfffc4 	movi	r2,-1
 80104b0:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
 80104b4:	e0bffb17 	ldw	r2,-20(fp)
}
 80104b8:	e037883a 	mov	sp,fp
 80104bc:	dfc00117 	ldw	ra,4(sp)
 80104c0:	df000017 	ldw	fp,0(sp)
 80104c4:	dec00204 	addi	sp,sp,8
 80104c8:	f800283a 	ret

080104cc <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
 80104cc:	defffd04 	addi	sp,sp,-12
 80104d0:	dfc00215 	stw	ra,8(sp)
 80104d4:	df000115 	stw	fp,4(sp)
 80104d8:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
 80104dc:	0009883a 	mov	r4,zero
 80104e0:	80109440 	call	8010944 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
 80104e4:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
 80104e8:	801097c0 	call	801097c <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
 80104ec:	01820074 	movhi	r6,2049
 80104f0:	318d3c04 	addi	r6,r6,13552
 80104f4:	01420074 	movhi	r5,2049
 80104f8:	294d3c04 	addi	r5,r5,13552
 80104fc:	01020074 	movhi	r4,2049
 8010500:	210d3c04 	addi	r4,r4,13552
 8010504:	8011be80 	call	8011be8 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
 8010508:	80117900 	call	8011790 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
 801050c:	01020074 	movhi	r4,2049
 8010510:	2105fc04 	addi	r4,r4,6128
 8010514:	80123e80 	call	80123e8 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
 8010518:	d0a6ec17 	ldw	r2,-25680(gp)
 801051c:	d0e6ed17 	ldw	r3,-25676(gp)
 8010520:	d126ee17 	ldw	r4,-25672(gp)
 8010524:	200d883a 	mov	r6,r4
 8010528:	180b883a 	mov	r5,r3
 801052c:	1009883a 	mov	r4,r2
 8010530:	800044c0 	call	800044c <main>
 8010534:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
 8010538:	01000044 	movi	r4,1
 801053c:	800fe480 	call	800fe48 <close>
  exit (result);
 8010540:	e13fff17 	ldw	r4,-4(fp)
 8010544:	80123fc0 	call	80123fc <exit>

08010548 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
 8010548:	defffe04 	addi	sp,sp,-8
 801054c:	df000115 	stw	fp,4(sp)
 8010550:	df000104 	addi	fp,sp,4
 8010554:	e13fff15 	stw	r4,-4(fp)
}
 8010558:	0001883a 	nop
 801055c:	e037883a 	mov	sp,fp
 8010560:	df000017 	ldw	fp,0(sp)
 8010564:	dec00104 	addi	sp,sp,4
 8010568:	f800283a 	ret

0801056c <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
 801056c:	defffe04 	addi	sp,sp,-8
 8010570:	df000115 	stw	fp,4(sp)
 8010574:	df000104 	addi	fp,sp,4
 8010578:	e13fff15 	stw	r4,-4(fp)
}
 801057c:	0001883a 	nop
 8010580:	e037883a 	mov	sp,fp
 8010584:	df000017 	ldw	fp,0(sp)
 8010588:	dec00104 	addi	sp,sp,4
 801058c:	f800283a 	ret

08010590 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 8010590:	defffe04 	addi	sp,sp,-8
 8010594:	dfc00115 	stw	ra,4(sp)
 8010598:	df000015 	stw	fp,0(sp)
 801059c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 80105a0:	d0a01617 	ldw	r2,-32680(gp)
 80105a4:	10000326 	beq	r2,zero,80105b4 <alt_get_errno+0x24>
 80105a8:	d0a01617 	ldw	r2,-32680(gp)
 80105ac:	103ee83a 	callr	r2
 80105b0:	00000106 	br	80105b8 <alt_get_errno+0x28>
 80105b4:	d0a6e804 	addi	r2,gp,-25696
}
 80105b8:	e037883a 	mov	sp,fp
 80105bc:	dfc00117 	ldw	ra,4(sp)
 80105c0:	df000017 	ldw	fp,0(sp)
 80105c4:	dec00204 	addi	sp,sp,8
 80105c8:	f800283a 	ret

080105cc <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
 80105cc:	defff904 	addi	sp,sp,-28
 80105d0:	dfc00615 	stw	ra,24(sp)
 80105d4:	df000515 	stw	fp,20(sp)
 80105d8:	df000504 	addi	fp,sp,20
 80105dc:	e13ffd15 	stw	r4,-12(fp)
 80105e0:	e17ffe15 	stw	r5,-8(fp)
 80105e4:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 80105e8:	e0bffd17 	ldw	r2,-12(fp)
 80105ec:	10000616 	blt	r2,zero,8010608 <read+0x3c>
 80105f0:	e0bffd17 	ldw	r2,-12(fp)
 80105f4:	10c00324 	muli	r3,r2,12
 80105f8:	00820074 	movhi	r2,2049
 80105fc:	108f7904 	addi	r2,r2,15844
 8010600:	1885883a 	add	r2,r3,r2
 8010604:	00000106 	br	801060c <read+0x40>
 8010608:	0005883a 	mov	r2,zero
 801060c:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 8010610:	e0bffb17 	ldw	r2,-20(fp)
 8010614:	10002226 	beq	r2,zero,80106a0 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 8010618:	e0bffb17 	ldw	r2,-20(fp)
 801061c:	10800217 	ldw	r2,8(r2)
 8010620:	108000cc 	andi	r2,r2,3
 8010624:	10800060 	cmpeqi	r2,r2,1
 8010628:	1000181e 	bne	r2,zero,801068c <read+0xc0>
        (fd->dev->read))
 801062c:	e0bffb17 	ldw	r2,-20(fp)
 8010630:	10800017 	ldw	r2,0(r2)
 8010634:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 8010638:	10001426 	beq	r2,zero,801068c <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
 801063c:	e0bffb17 	ldw	r2,-20(fp)
 8010640:	10800017 	ldw	r2,0(r2)
 8010644:	10800517 	ldw	r2,20(r2)
 8010648:	e0ffff17 	ldw	r3,-4(fp)
 801064c:	180d883a 	mov	r6,r3
 8010650:	e17ffe17 	ldw	r5,-8(fp)
 8010654:	e13ffb17 	ldw	r4,-20(fp)
 8010658:	103ee83a 	callr	r2
 801065c:	e0bffc15 	stw	r2,-16(fp)
 8010660:	e0bffc17 	ldw	r2,-16(fp)
 8010664:	1000070e 	bge	r2,zero,8010684 <read+0xb8>
        {
          ALT_ERRNO = -rval;
 8010668:	80105900 	call	8010590 <alt_get_errno>
 801066c:	1007883a 	mov	r3,r2
 8010670:	e0bffc17 	ldw	r2,-16(fp)
 8010674:	0085c83a 	sub	r2,zero,r2
 8010678:	18800015 	stw	r2,0(r3)
          return -1;
 801067c:	00bfffc4 	movi	r2,-1
 8010680:	00000c06 	br	80106b4 <read+0xe8>
        }
        return rval;
 8010684:	e0bffc17 	ldw	r2,-16(fp)
 8010688:	00000a06 	br	80106b4 <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
 801068c:	80105900 	call	8010590 <alt_get_errno>
 8010690:	1007883a 	mov	r3,r2
 8010694:	00800344 	movi	r2,13
 8010698:	18800015 	stw	r2,0(r3)
 801069c:	00000406 	br	80106b0 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
 80106a0:	80105900 	call	8010590 <alt_get_errno>
 80106a4:	1007883a 	mov	r3,r2
 80106a8:	00801444 	movi	r2,81
 80106ac:	18800015 	stw	r2,0(r3)
  }
  return -1;
 80106b0:	00bfffc4 	movi	r2,-1
}
 80106b4:	e037883a 	mov	sp,fp
 80106b8:	dfc00117 	ldw	ra,4(sp)
 80106bc:	df000017 	ldw	fp,0(sp)
 80106c0:	dec00204 	addi	sp,sp,8
 80106c4:	f800283a 	ret

080106c8 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
 80106c8:	defffe04 	addi	sp,sp,-8
 80106cc:	df000115 	stw	fp,4(sp)
 80106d0:	df000104 	addi	fp,sp,4
 80106d4:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
 80106d8:	e0bfff17 	ldw	r2,-4(fp)
 80106dc:	108000d0 	cmplti	r2,r2,3
 80106e0:	10000d1e 	bne	r2,zero,8010718 <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
 80106e4:	00820074 	movhi	r2,2049
 80106e8:	108f7904 	addi	r2,r2,15844
 80106ec:	e0ffff17 	ldw	r3,-4(fp)
 80106f0:	18c00324 	muli	r3,r3,12
 80106f4:	10c5883a 	add	r2,r2,r3
 80106f8:	10800204 	addi	r2,r2,8
 80106fc:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
 8010700:	00820074 	movhi	r2,2049
 8010704:	108f7904 	addi	r2,r2,15844
 8010708:	e0ffff17 	ldw	r3,-4(fp)
 801070c:	18c00324 	muli	r3,r3,12
 8010710:	10c5883a 	add	r2,r2,r3
 8010714:	10000015 	stw	zero,0(r2)
  }
}
 8010718:	0001883a 	nop
 801071c:	e037883a 	mov	sp,fp
 8010720:	df000017 	ldw	fp,0(sp)
 8010724:	dec00104 	addi	sp,sp,4
 8010728:	f800283a 	ret

0801072c <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
 801072c:	defff904 	addi	sp,sp,-28
 8010730:	df000615 	stw	fp,24(sp)
 8010734:	df000604 	addi	fp,sp,24
 8010738:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 801073c:	0005303a 	rdctl	r2,status
 8010740:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 8010744:	e0fffe17 	ldw	r3,-8(fp)
 8010748:	00bfff84 	movi	r2,-2
 801074c:	1884703a 	and	r2,r3,r2
 8010750:	1001703a 	wrctl	status,r2
  
  return context;
 8010754:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
 8010758:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
 801075c:	d0a01717 	ldw	r2,-32676(gp)
 8010760:	10c000c4 	addi	r3,r2,3
 8010764:	00bfff04 	movi	r2,-4
 8010768:	1884703a 	and	r2,r3,r2
 801076c:	d0a01715 	stw	r2,-32676(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
 8010770:	d0e01717 	ldw	r3,-32676(gp)
 8010774:	e0bfff17 	ldw	r2,-4(fp)
 8010778:	1887883a 	add	r3,r3,r2
 801077c:	00840034 	movhi	r2,4096
 8010780:	10800004 	addi	r2,r2,0
 8010784:	10c0062e 	bgeu	r2,r3,80107a0 <sbrk+0x74>
 8010788:	e0bffb17 	ldw	r2,-20(fp)
 801078c:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 8010790:	e0bffa17 	ldw	r2,-24(fp)
 8010794:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
 8010798:	00bfffc4 	movi	r2,-1
 801079c:	00000b06 	br	80107cc <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
 80107a0:	d0a01717 	ldw	r2,-32676(gp)
 80107a4:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
 80107a8:	d0e01717 	ldw	r3,-32676(gp)
 80107ac:	e0bfff17 	ldw	r2,-4(fp)
 80107b0:	1885883a 	add	r2,r3,r2
 80107b4:	d0a01715 	stw	r2,-32676(gp)
 80107b8:	e0bffb17 	ldw	r2,-20(fp)
 80107bc:	e0bffc15 	stw	r2,-16(fp)
 80107c0:	e0bffc17 	ldw	r2,-16(fp)
 80107c4:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
 80107c8:	e0bffd17 	ldw	r2,-12(fp)
} 
 80107cc:	e037883a 	mov	sp,fp
 80107d0:	df000017 	ldw	fp,0(sp)
 80107d4:	dec00104 	addi	sp,sp,4
 80107d8:	f800283a 	ret

080107dc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 80107dc:	defffe04 	addi	sp,sp,-8
 80107e0:	dfc00115 	stw	ra,4(sp)
 80107e4:	df000015 	stw	fp,0(sp)
 80107e8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 80107ec:	d0a01617 	ldw	r2,-32680(gp)
 80107f0:	10000326 	beq	r2,zero,8010800 <alt_get_errno+0x24>
 80107f4:	d0a01617 	ldw	r2,-32680(gp)
 80107f8:	103ee83a 	callr	r2
 80107fc:	00000106 	br	8010804 <alt_get_errno+0x28>
 8010800:	d0a6e804 	addi	r2,gp,-25696
}
 8010804:	e037883a 	mov	sp,fp
 8010808:	dfc00117 	ldw	ra,4(sp)
 801080c:	df000017 	ldw	fp,0(sp)
 8010810:	dec00204 	addi	sp,sp,8
 8010814:	f800283a 	ret

08010818 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
 8010818:	defff904 	addi	sp,sp,-28
 801081c:	dfc00615 	stw	ra,24(sp)
 8010820:	df000515 	stw	fp,20(sp)
 8010824:	df000504 	addi	fp,sp,20
 8010828:	e13ffd15 	stw	r4,-12(fp)
 801082c:	e17ffe15 	stw	r5,-8(fp)
 8010830:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 8010834:	e0bffd17 	ldw	r2,-12(fp)
 8010838:	10000616 	blt	r2,zero,8010854 <write+0x3c>
 801083c:	e0bffd17 	ldw	r2,-12(fp)
 8010840:	10c00324 	muli	r3,r2,12
 8010844:	00820074 	movhi	r2,2049
 8010848:	108f7904 	addi	r2,r2,15844
 801084c:	1885883a 	add	r2,r3,r2
 8010850:	00000106 	br	8010858 <write+0x40>
 8010854:	0005883a 	mov	r2,zero
 8010858:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 801085c:	e0bffb17 	ldw	r2,-20(fp)
 8010860:	10002126 	beq	r2,zero,80108e8 <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
 8010864:	e0bffb17 	ldw	r2,-20(fp)
 8010868:	10800217 	ldw	r2,8(r2)
 801086c:	108000cc 	andi	r2,r2,3
 8010870:	10001826 	beq	r2,zero,80108d4 <write+0xbc>
 8010874:	e0bffb17 	ldw	r2,-20(fp)
 8010878:	10800017 	ldw	r2,0(r2)
 801087c:	10800617 	ldw	r2,24(r2)
 8010880:	10001426 	beq	r2,zero,80108d4 <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
 8010884:	e0bffb17 	ldw	r2,-20(fp)
 8010888:	10800017 	ldw	r2,0(r2)
 801088c:	10800617 	ldw	r2,24(r2)
 8010890:	e0ffff17 	ldw	r3,-4(fp)
 8010894:	180d883a 	mov	r6,r3
 8010898:	e17ffe17 	ldw	r5,-8(fp)
 801089c:	e13ffb17 	ldw	r4,-20(fp)
 80108a0:	103ee83a 	callr	r2
 80108a4:	e0bffc15 	stw	r2,-16(fp)
 80108a8:	e0bffc17 	ldw	r2,-16(fp)
 80108ac:	1000070e 	bge	r2,zero,80108cc <write+0xb4>
      {
        ALT_ERRNO = -rval;
 80108b0:	80107dc0 	call	80107dc <alt_get_errno>
 80108b4:	1007883a 	mov	r3,r2
 80108b8:	e0bffc17 	ldw	r2,-16(fp)
 80108bc:	0085c83a 	sub	r2,zero,r2
 80108c0:	18800015 	stw	r2,0(r3)
        return -1;
 80108c4:	00bfffc4 	movi	r2,-1
 80108c8:	00000c06 	br	80108fc <write+0xe4>
      }
      return rval;
 80108cc:	e0bffc17 	ldw	r2,-16(fp)
 80108d0:	00000a06 	br	80108fc <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
 80108d4:	80107dc0 	call	80107dc <alt_get_errno>
 80108d8:	1007883a 	mov	r3,r2
 80108dc:	00800344 	movi	r2,13
 80108e0:	18800015 	stw	r2,0(r3)
 80108e4:	00000406 	br	80108f8 <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
 80108e8:	80107dc0 	call	80107dc <alt_get_errno>
 80108ec:	1007883a 	mov	r3,r2
 80108f0:	00801444 	movi	r2,81
 80108f4:	18800015 	stw	r2,0(r3)
  }
  return -1;
 80108f8:	00bfffc4 	movi	r2,-1
}
 80108fc:	e037883a 	mov	sp,fp
 8010900:	dfc00117 	ldw	ra,4(sp)
 8010904:	df000017 	ldw	fp,0(sp)
 8010908:	dec00204 	addi	sp,sp,8
 801090c:	f800283a 	ret

08010910 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
 8010910:	defffd04 	addi	sp,sp,-12
 8010914:	dfc00215 	stw	ra,8(sp)
 8010918:	df000115 	stw	fp,4(sp)
 801091c:	df000104 	addi	fp,sp,4
 8010920:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
 8010924:	d1601304 	addi	r5,gp,-32692
 8010928:	e13fff17 	ldw	r4,-4(fp)
 801092c:	80116ec0 	call	80116ec <alt_dev_llist_insert>
}
 8010930:	e037883a 	mov	sp,fp
 8010934:	dfc00117 	ldw	ra,4(sp)
 8010938:	df000017 	ldw	fp,0(sp)
 801093c:	dec00204 	addi	sp,sp,8
 8010940:	f800283a 	ret

08010944 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
 8010944:	defffd04 	addi	sp,sp,-12
 8010948:	dfc00215 	stw	ra,8(sp)
 801094c:	df000115 	stw	fp,4(sp)
 8010950:	df000104 	addi	fp,sp,4
 8010954:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
 8010958:	801205c0 	call	801205c <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
 801095c:	00800044 	movi	r2,1
 8010960:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
 8010964:	0001883a 	nop
 8010968:	e037883a 	mov	sp,fp
 801096c:	dfc00117 	ldw	ra,4(sp)
 8010970:	df000017 	ldw	fp,0(sp)
 8010974:	dec00204 	addi	sp,sp,8
 8010978:	f800283a 	ret

0801097c <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
 801097c:	defffe04 	addi	sp,sp,-8
 8010980:	dfc00115 	stw	ra,4(sp)
 8010984:	df000015 	stw	fp,0(sp)
 8010988:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( TIMER_0, timer_0);
 801098c:	01c0fa04 	movi	r7,1000
 8010990:	01800044 	movi	r6,1
 8010994:	000b883a 	mov	r5,zero
 8010998:	01040134 	movhi	r4,4100
 801099c:	21040004 	addi	r4,r4,4096
 80109a0:	80114c00 	call	80114c0 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
 80109a4:	000d883a 	mov	r6,zero
 80109a8:	000b883a 	mov	r5,zero
 80109ac:	01020074 	movhi	r4,2049
 80109b0:	210fe304 	addi	r4,r4,16268
 80109b4:	8010b440 	call	8010b44 <altera_avalon_jtag_uart_init>
 80109b8:	01020074 	movhi	r4,2049
 80109bc:	210fd904 	addi	r4,r4,16228
 80109c0:	80109100 	call	8010910 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID_QSYS_0, sysid_qsys_0);
 80109c4:	0001883a 	nop
}
 80109c8:	0001883a 	nop
 80109cc:	e037883a 	mov	sp,fp
 80109d0:	dfc00117 	ldw	ra,4(sp)
 80109d4:	df000017 	ldw	fp,0(sp)
 80109d8:	dec00204 	addi	sp,sp,8
 80109dc:	f800283a 	ret

080109e0 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
 80109e0:	defffa04 	addi	sp,sp,-24
 80109e4:	dfc00515 	stw	ra,20(sp)
 80109e8:	df000415 	stw	fp,16(sp)
 80109ec:	df000404 	addi	fp,sp,16
 80109f0:	e13ffd15 	stw	r4,-12(fp)
 80109f4:	e17ffe15 	stw	r5,-8(fp)
 80109f8:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 80109fc:	e0bffd17 	ldw	r2,-12(fp)
 8010a00:	10800017 	ldw	r2,0(r2)
 8010a04:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
 8010a08:	e0bffc17 	ldw	r2,-16(fp)
 8010a0c:	10c00a04 	addi	r3,r2,40
 8010a10:	e0bffd17 	ldw	r2,-12(fp)
 8010a14:	10800217 	ldw	r2,8(r2)
 8010a18:	100f883a 	mov	r7,r2
 8010a1c:	e1bfff17 	ldw	r6,-4(fp)
 8010a20:	e17ffe17 	ldw	r5,-8(fp)
 8010a24:	1809883a 	mov	r4,r3
 8010a28:	80110080 	call	8011008 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
 8010a2c:	e037883a 	mov	sp,fp
 8010a30:	dfc00117 	ldw	ra,4(sp)
 8010a34:	df000017 	ldw	fp,0(sp)
 8010a38:	dec00204 	addi	sp,sp,8
 8010a3c:	f800283a 	ret

08010a40 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
 8010a40:	defffa04 	addi	sp,sp,-24
 8010a44:	dfc00515 	stw	ra,20(sp)
 8010a48:	df000415 	stw	fp,16(sp)
 8010a4c:	df000404 	addi	fp,sp,16
 8010a50:	e13ffd15 	stw	r4,-12(fp)
 8010a54:	e17ffe15 	stw	r5,-8(fp)
 8010a58:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 8010a5c:	e0bffd17 	ldw	r2,-12(fp)
 8010a60:	10800017 	ldw	r2,0(r2)
 8010a64:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
 8010a68:	e0bffc17 	ldw	r2,-16(fp)
 8010a6c:	10c00a04 	addi	r3,r2,40
 8010a70:	e0bffd17 	ldw	r2,-12(fp)
 8010a74:	10800217 	ldw	r2,8(r2)
 8010a78:	100f883a 	mov	r7,r2
 8010a7c:	e1bfff17 	ldw	r6,-4(fp)
 8010a80:	e17ffe17 	ldw	r5,-8(fp)
 8010a84:	1809883a 	mov	r4,r3
 8010a88:	80112240 	call	8011224 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
 8010a8c:	e037883a 	mov	sp,fp
 8010a90:	dfc00117 	ldw	ra,4(sp)
 8010a94:	df000017 	ldw	fp,0(sp)
 8010a98:	dec00204 	addi	sp,sp,8
 8010a9c:	f800283a 	ret

08010aa0 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
 8010aa0:	defffc04 	addi	sp,sp,-16
 8010aa4:	dfc00315 	stw	ra,12(sp)
 8010aa8:	df000215 	stw	fp,8(sp)
 8010aac:	df000204 	addi	fp,sp,8
 8010ab0:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 8010ab4:	e0bfff17 	ldw	r2,-4(fp)
 8010ab8:	10800017 	ldw	r2,0(r2)
 8010abc:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
 8010ac0:	e0bffe17 	ldw	r2,-8(fp)
 8010ac4:	10c00a04 	addi	r3,r2,40
 8010ac8:	e0bfff17 	ldw	r2,-4(fp)
 8010acc:	10800217 	ldw	r2,8(r2)
 8010ad0:	100b883a 	mov	r5,r2
 8010ad4:	1809883a 	mov	r4,r3
 8010ad8:	8010eb00 	call	8010eb0 <altera_avalon_jtag_uart_close>
}
 8010adc:	e037883a 	mov	sp,fp
 8010ae0:	dfc00117 	ldw	ra,4(sp)
 8010ae4:	df000017 	ldw	fp,0(sp)
 8010ae8:	dec00204 	addi	sp,sp,8
 8010aec:	f800283a 	ret

08010af0 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
 8010af0:	defffa04 	addi	sp,sp,-24
 8010af4:	dfc00515 	stw	ra,20(sp)
 8010af8:	df000415 	stw	fp,16(sp)
 8010afc:	df000404 	addi	fp,sp,16
 8010b00:	e13ffd15 	stw	r4,-12(fp)
 8010b04:	e17ffe15 	stw	r5,-8(fp)
 8010b08:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
 8010b0c:	e0bffd17 	ldw	r2,-12(fp)
 8010b10:	10800017 	ldw	r2,0(r2)
 8010b14:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
 8010b18:	e0bffc17 	ldw	r2,-16(fp)
 8010b1c:	10800a04 	addi	r2,r2,40
 8010b20:	e1bfff17 	ldw	r6,-4(fp)
 8010b24:	e17ffe17 	ldw	r5,-8(fp)
 8010b28:	1009883a 	mov	r4,r2
 8010b2c:	8010f180 	call	8010f18 <altera_avalon_jtag_uart_ioctl>
}
 8010b30:	e037883a 	mov	sp,fp
 8010b34:	dfc00117 	ldw	ra,4(sp)
 8010b38:	df000017 	ldw	fp,0(sp)
 8010b3c:	dec00204 	addi	sp,sp,8
 8010b40:	f800283a 	ret

08010b44 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
 8010b44:	defffa04 	addi	sp,sp,-24
 8010b48:	dfc00515 	stw	ra,20(sp)
 8010b4c:	df000415 	stw	fp,16(sp)
 8010b50:	df000404 	addi	fp,sp,16
 8010b54:	e13ffd15 	stw	r4,-12(fp)
 8010b58:	e17ffe15 	stw	r5,-8(fp)
 8010b5c:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 8010b60:	e0bffd17 	ldw	r2,-12(fp)
 8010b64:	00c00044 	movi	r3,1
 8010b68:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
 8010b6c:	e0bffd17 	ldw	r2,-12(fp)
 8010b70:	10800017 	ldw	r2,0(r2)
 8010b74:	10800104 	addi	r2,r2,4
 8010b78:	1007883a 	mov	r3,r2
 8010b7c:	e0bffd17 	ldw	r2,-12(fp)
 8010b80:	10800817 	ldw	r2,32(r2)
 8010b84:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
 8010b88:	e0bffe17 	ldw	r2,-8(fp)
 8010b8c:	e0ffff17 	ldw	r3,-4(fp)
 8010b90:	d8000015 	stw	zero,0(sp)
 8010b94:	e1fffd17 	ldw	r7,-12(fp)
 8010b98:	01820074 	movhi	r6,2049
 8010b9c:	31830104 	addi	r6,r6,3076
 8010ba0:	180b883a 	mov	r5,r3
 8010ba4:	1009883a 	mov	r4,r2
 8010ba8:	80118840 	call	8011884 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
 8010bac:	e0bffd17 	ldw	r2,-12(fp)
 8010bb0:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
 8010bb4:	e0bffd17 	ldw	r2,-12(fp)
 8010bb8:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
 8010bbc:	d0e6f017 	ldw	r3,-25664(gp)
 8010bc0:	e1fffd17 	ldw	r7,-12(fp)
 8010bc4:	01820074 	movhi	r6,2049
 8010bc8:	31838404 	addi	r6,r6,3600
 8010bcc:	180b883a 	mov	r5,r3
 8010bd0:	1009883a 	mov	r4,r2
 8010bd4:	801153c0 	call	801153c <alt_alarm_start>
 8010bd8:	1000040e 	bge	r2,zero,8010bec <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
 8010bdc:	e0fffd17 	ldw	r3,-12(fp)
 8010be0:	00a00034 	movhi	r2,32768
 8010be4:	10bfffc4 	addi	r2,r2,-1
 8010be8:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
 8010bec:	0001883a 	nop
 8010bf0:	e037883a 	mov	sp,fp
 8010bf4:	dfc00117 	ldw	ra,4(sp)
 8010bf8:	df000017 	ldw	fp,0(sp)
 8010bfc:	dec00204 	addi	sp,sp,8
 8010c00:	f800283a 	ret

08010c04 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
 8010c04:	defff804 	addi	sp,sp,-32
 8010c08:	df000715 	stw	fp,28(sp)
 8010c0c:	df000704 	addi	fp,sp,28
 8010c10:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
 8010c14:	e0bfff17 	ldw	r2,-4(fp)
 8010c18:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
 8010c1c:	e0bffb17 	ldw	r2,-20(fp)
 8010c20:	10800017 	ldw	r2,0(r2)
 8010c24:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 8010c28:	e0bffc17 	ldw	r2,-16(fp)
 8010c2c:	10800104 	addi	r2,r2,4
 8010c30:	10800037 	ldwio	r2,0(r2)
 8010c34:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
 8010c38:	e0bffd17 	ldw	r2,-12(fp)
 8010c3c:	1080c00c 	andi	r2,r2,768
 8010c40:	10006d26 	beq	r2,zero,8010df8 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
 8010c44:	e0bffd17 	ldw	r2,-12(fp)
 8010c48:	1080400c 	andi	r2,r2,256
 8010c4c:	10003526 	beq	r2,zero,8010d24 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
 8010c50:	00800074 	movhi	r2,1
 8010c54:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 8010c58:	e0bffb17 	ldw	r2,-20(fp)
 8010c5c:	10800a17 	ldw	r2,40(r2)
 8010c60:	10800044 	addi	r2,r2,1
 8010c64:	1081ffcc 	andi	r2,r2,2047
 8010c68:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
 8010c6c:	e0bffb17 	ldw	r2,-20(fp)
 8010c70:	10c00b17 	ldw	r3,44(r2)
 8010c74:	e0bffe17 	ldw	r2,-8(fp)
 8010c78:	18801526 	beq	r3,r2,8010cd0 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
 8010c7c:	e0bffc17 	ldw	r2,-16(fp)
 8010c80:	10800037 	ldwio	r2,0(r2)
 8010c84:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
 8010c88:	e0bff917 	ldw	r2,-28(fp)
 8010c8c:	10a0000c 	andi	r2,r2,32768
 8010c90:	10001126 	beq	r2,zero,8010cd8 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
 8010c94:	e0bffb17 	ldw	r2,-20(fp)
 8010c98:	10800a17 	ldw	r2,40(r2)
 8010c9c:	e0fff917 	ldw	r3,-28(fp)
 8010ca0:	1809883a 	mov	r4,r3
 8010ca4:	e0fffb17 	ldw	r3,-20(fp)
 8010ca8:	1885883a 	add	r2,r3,r2
 8010cac:	10800e04 	addi	r2,r2,56
 8010cb0:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 8010cb4:	e0bffb17 	ldw	r2,-20(fp)
 8010cb8:	10800a17 	ldw	r2,40(r2)
 8010cbc:	10800044 	addi	r2,r2,1
 8010cc0:	10c1ffcc 	andi	r3,r2,2047
 8010cc4:	e0bffb17 	ldw	r2,-20(fp)
 8010cc8:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
 8010ccc:	003fe206 	br	8010c58 <__alt_data_end+0xf8010c58>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
 8010cd0:	0001883a 	nop
 8010cd4:	00000106 	br	8010cdc <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
 8010cd8:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
 8010cdc:	e0bff917 	ldw	r2,-28(fp)
 8010ce0:	10bfffec 	andhi	r2,r2,65535
 8010ce4:	10000f26 	beq	r2,zero,8010d24 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 8010ce8:	e0bffb17 	ldw	r2,-20(fp)
 8010cec:	10c00817 	ldw	r3,32(r2)
 8010cf0:	00bfff84 	movi	r2,-2
 8010cf4:	1886703a 	and	r3,r3,r2
 8010cf8:	e0bffb17 	ldw	r2,-20(fp)
 8010cfc:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
 8010d00:	e0bffc17 	ldw	r2,-16(fp)
 8010d04:	10800104 	addi	r2,r2,4
 8010d08:	1007883a 	mov	r3,r2
 8010d0c:	e0bffb17 	ldw	r2,-20(fp)
 8010d10:	10800817 	ldw	r2,32(r2)
 8010d14:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 8010d18:	e0bffc17 	ldw	r2,-16(fp)
 8010d1c:	10800104 	addi	r2,r2,4
 8010d20:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
 8010d24:	e0bffd17 	ldw	r2,-12(fp)
 8010d28:	1080800c 	andi	r2,r2,512
 8010d2c:	103fbe26 	beq	r2,zero,8010c28 <__alt_data_end+0xf8010c28>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
 8010d30:	e0bffd17 	ldw	r2,-12(fp)
 8010d34:	1004d43a 	srli	r2,r2,16
 8010d38:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
 8010d3c:	00001406 	br	8010d90 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
 8010d40:	e0bffc17 	ldw	r2,-16(fp)
 8010d44:	e0fffb17 	ldw	r3,-20(fp)
 8010d48:	18c00d17 	ldw	r3,52(r3)
 8010d4c:	e13ffb17 	ldw	r4,-20(fp)
 8010d50:	20c7883a 	add	r3,r4,r3
 8010d54:	18c20e04 	addi	r3,r3,2104
 8010d58:	18c00003 	ldbu	r3,0(r3)
 8010d5c:	18c03fcc 	andi	r3,r3,255
 8010d60:	18c0201c 	xori	r3,r3,128
 8010d64:	18ffe004 	addi	r3,r3,-128
 8010d68:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 8010d6c:	e0bffb17 	ldw	r2,-20(fp)
 8010d70:	10800d17 	ldw	r2,52(r2)
 8010d74:	10800044 	addi	r2,r2,1
 8010d78:	10c1ffcc 	andi	r3,r2,2047
 8010d7c:	e0bffb17 	ldw	r2,-20(fp)
 8010d80:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
 8010d84:	e0bffa17 	ldw	r2,-24(fp)
 8010d88:	10bfffc4 	addi	r2,r2,-1
 8010d8c:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
 8010d90:	e0bffa17 	ldw	r2,-24(fp)
 8010d94:	10000526 	beq	r2,zero,8010dac <altera_avalon_jtag_uart_irq+0x1a8>
 8010d98:	e0bffb17 	ldw	r2,-20(fp)
 8010d9c:	10c00d17 	ldw	r3,52(r2)
 8010da0:	e0bffb17 	ldw	r2,-20(fp)
 8010da4:	10800c17 	ldw	r2,48(r2)
 8010da8:	18bfe51e 	bne	r3,r2,8010d40 <__alt_data_end+0xf8010d40>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
 8010dac:	e0bffa17 	ldw	r2,-24(fp)
 8010db0:	103f9d26 	beq	r2,zero,8010c28 <__alt_data_end+0xf8010c28>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 8010db4:	e0bffb17 	ldw	r2,-20(fp)
 8010db8:	10c00817 	ldw	r3,32(r2)
 8010dbc:	00bfff44 	movi	r2,-3
 8010dc0:	1886703a 	and	r3,r3,r2
 8010dc4:	e0bffb17 	ldw	r2,-20(fp)
 8010dc8:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 8010dcc:	e0bffb17 	ldw	r2,-20(fp)
 8010dd0:	10800017 	ldw	r2,0(r2)
 8010dd4:	10800104 	addi	r2,r2,4
 8010dd8:	1007883a 	mov	r3,r2
 8010ddc:	e0bffb17 	ldw	r2,-20(fp)
 8010de0:	10800817 	ldw	r2,32(r2)
 8010de4:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 8010de8:	e0bffc17 	ldw	r2,-16(fp)
 8010dec:	10800104 	addi	r2,r2,4
 8010df0:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
 8010df4:	003f8c06 	br	8010c28 <__alt_data_end+0xf8010c28>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
 8010df8:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
 8010dfc:	0001883a 	nop
 8010e00:	e037883a 	mov	sp,fp
 8010e04:	df000017 	ldw	fp,0(sp)
 8010e08:	dec00104 	addi	sp,sp,4
 8010e0c:	f800283a 	ret

08010e10 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
 8010e10:	defff804 	addi	sp,sp,-32
 8010e14:	df000715 	stw	fp,28(sp)
 8010e18:	df000704 	addi	fp,sp,28
 8010e1c:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
 8010e20:	e0bffb17 	ldw	r2,-20(fp)
 8010e24:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
 8010e28:	e0bff917 	ldw	r2,-28(fp)
 8010e2c:	10800017 	ldw	r2,0(r2)
 8010e30:	10800104 	addi	r2,r2,4
 8010e34:	10800037 	ldwio	r2,0(r2)
 8010e38:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
 8010e3c:	e0bffa17 	ldw	r2,-24(fp)
 8010e40:	1081000c 	andi	r2,r2,1024
 8010e44:	10000b26 	beq	r2,zero,8010e74 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
 8010e48:	e0bff917 	ldw	r2,-28(fp)
 8010e4c:	10800017 	ldw	r2,0(r2)
 8010e50:	10800104 	addi	r2,r2,4
 8010e54:	1007883a 	mov	r3,r2
 8010e58:	e0bff917 	ldw	r2,-28(fp)
 8010e5c:	10800817 	ldw	r2,32(r2)
 8010e60:	10810014 	ori	r2,r2,1024
 8010e64:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
 8010e68:	e0bff917 	ldw	r2,-28(fp)
 8010e6c:	10000915 	stw	zero,36(r2)
 8010e70:	00000a06 	br	8010e9c <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
 8010e74:	e0bff917 	ldw	r2,-28(fp)
 8010e78:	10c00917 	ldw	r3,36(r2)
 8010e7c:	00a00034 	movhi	r2,32768
 8010e80:	10bfff04 	addi	r2,r2,-4
 8010e84:	10c00536 	bltu	r2,r3,8010e9c <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
 8010e88:	e0bff917 	ldw	r2,-28(fp)
 8010e8c:	10800917 	ldw	r2,36(r2)
 8010e90:	10c00044 	addi	r3,r2,1
 8010e94:	e0bff917 	ldw	r2,-28(fp)
 8010e98:	10c00915 	stw	r3,36(r2)
 8010e9c:	d0a6f017 	ldw	r2,-25664(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
 8010ea0:	e037883a 	mov	sp,fp
 8010ea4:	df000017 	ldw	fp,0(sp)
 8010ea8:	dec00104 	addi	sp,sp,4
 8010eac:	f800283a 	ret

08010eb0 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
 8010eb0:	defffd04 	addi	sp,sp,-12
 8010eb4:	df000215 	stw	fp,8(sp)
 8010eb8:	df000204 	addi	fp,sp,8
 8010ebc:	e13ffe15 	stw	r4,-8(fp)
 8010ec0:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 8010ec4:	00000506 	br	8010edc <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
 8010ec8:	e0bfff17 	ldw	r2,-4(fp)
 8010ecc:	1090000c 	andi	r2,r2,16384
 8010ed0:	10000226 	beq	r2,zero,8010edc <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
 8010ed4:	00bffd44 	movi	r2,-11
 8010ed8:	00000b06 	br	8010f08 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 8010edc:	e0bffe17 	ldw	r2,-8(fp)
 8010ee0:	10c00d17 	ldw	r3,52(r2)
 8010ee4:	e0bffe17 	ldw	r2,-8(fp)
 8010ee8:	10800c17 	ldw	r2,48(r2)
 8010eec:	18800526 	beq	r3,r2,8010f04 <altera_avalon_jtag_uart_close+0x54>
 8010ef0:	e0bffe17 	ldw	r2,-8(fp)
 8010ef4:	10c00917 	ldw	r3,36(r2)
 8010ef8:	e0bffe17 	ldw	r2,-8(fp)
 8010efc:	10800117 	ldw	r2,4(r2)
 8010f00:	18bff136 	bltu	r3,r2,8010ec8 <__alt_data_end+0xf8010ec8>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
 8010f04:	0005883a 	mov	r2,zero
}
 8010f08:	e037883a 	mov	sp,fp
 8010f0c:	df000017 	ldw	fp,0(sp)
 8010f10:	dec00104 	addi	sp,sp,4
 8010f14:	f800283a 	ret

08010f18 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
 8010f18:	defffa04 	addi	sp,sp,-24
 8010f1c:	df000515 	stw	fp,20(sp)
 8010f20:	df000504 	addi	fp,sp,20
 8010f24:	e13ffd15 	stw	r4,-12(fp)
 8010f28:	e17ffe15 	stw	r5,-8(fp)
 8010f2c:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
 8010f30:	00bff9c4 	movi	r2,-25
 8010f34:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
 8010f38:	e0bffe17 	ldw	r2,-8(fp)
 8010f3c:	10da8060 	cmpeqi	r3,r2,27137
 8010f40:	1800031e 	bne	r3,zero,8010f50 <altera_avalon_jtag_uart_ioctl+0x38>
 8010f44:	109a80a0 	cmpeqi	r2,r2,27138
 8010f48:	1000181e 	bne	r2,zero,8010fac <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
 8010f4c:	00002906 	br	8010ff4 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
 8010f50:	e0bffd17 	ldw	r2,-12(fp)
 8010f54:	10c00117 	ldw	r3,4(r2)
 8010f58:	00a00034 	movhi	r2,32768
 8010f5c:	10bfffc4 	addi	r2,r2,-1
 8010f60:	18802126 	beq	r3,r2,8010fe8 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
 8010f64:	e0bfff17 	ldw	r2,-4(fp)
 8010f68:	10800017 	ldw	r2,0(r2)
 8010f6c:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
 8010f70:	e0bffc17 	ldw	r2,-16(fp)
 8010f74:	10800090 	cmplti	r2,r2,2
 8010f78:	1000061e 	bne	r2,zero,8010f94 <altera_avalon_jtag_uart_ioctl+0x7c>
 8010f7c:	e0fffc17 	ldw	r3,-16(fp)
 8010f80:	00a00034 	movhi	r2,32768
 8010f84:	10bfffc4 	addi	r2,r2,-1
 8010f88:	18800226 	beq	r3,r2,8010f94 <altera_avalon_jtag_uart_ioctl+0x7c>
 8010f8c:	e0bffc17 	ldw	r2,-16(fp)
 8010f90:	00000206 	br	8010f9c <altera_avalon_jtag_uart_ioctl+0x84>
 8010f94:	00a00034 	movhi	r2,32768
 8010f98:	10bfff84 	addi	r2,r2,-2
 8010f9c:	e0fffd17 	ldw	r3,-12(fp)
 8010fa0:	18800115 	stw	r2,4(r3)
      rc = 0;
 8010fa4:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
 8010fa8:	00000f06 	br	8010fe8 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
 8010fac:	e0bffd17 	ldw	r2,-12(fp)
 8010fb0:	10c00117 	ldw	r3,4(r2)
 8010fb4:	00a00034 	movhi	r2,32768
 8010fb8:	10bfffc4 	addi	r2,r2,-1
 8010fbc:	18800c26 	beq	r3,r2,8010ff0 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
 8010fc0:	e0bffd17 	ldw	r2,-12(fp)
 8010fc4:	10c00917 	ldw	r3,36(r2)
 8010fc8:	e0bffd17 	ldw	r2,-12(fp)
 8010fcc:	10800117 	ldw	r2,4(r2)
 8010fd0:	1885803a 	cmpltu	r2,r3,r2
 8010fd4:	10c03fcc 	andi	r3,r2,255
 8010fd8:	e0bfff17 	ldw	r2,-4(fp)
 8010fdc:	10c00015 	stw	r3,0(r2)
      rc = 0;
 8010fe0:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
 8010fe4:	00000206 	br	8010ff0 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
 8010fe8:	0001883a 	nop
 8010fec:	00000106 	br	8010ff4 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
 8010ff0:	0001883a 	nop

  default:
    break;
  }

  return rc;
 8010ff4:	e0bffb17 	ldw	r2,-20(fp)
}
 8010ff8:	e037883a 	mov	sp,fp
 8010ffc:	df000017 	ldw	fp,0(sp)
 8011000:	dec00104 	addi	sp,sp,4
 8011004:	f800283a 	ret

08011008 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
 8011008:	defff304 	addi	sp,sp,-52
 801100c:	dfc00c15 	stw	ra,48(sp)
 8011010:	df000b15 	stw	fp,44(sp)
 8011014:	df000b04 	addi	fp,sp,44
 8011018:	e13ffc15 	stw	r4,-16(fp)
 801101c:	e17ffd15 	stw	r5,-12(fp)
 8011020:	e1bffe15 	stw	r6,-8(fp)
 8011024:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
 8011028:	e0bffd17 	ldw	r2,-12(fp)
 801102c:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 8011030:	00004706 	br	8011150 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
 8011034:	e0bffc17 	ldw	r2,-16(fp)
 8011038:	10800a17 	ldw	r2,40(r2)
 801103c:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
 8011040:	e0bffc17 	ldw	r2,-16(fp)
 8011044:	10800b17 	ldw	r2,44(r2)
 8011048:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
 801104c:	e0fff717 	ldw	r3,-36(fp)
 8011050:	e0bff817 	ldw	r2,-32(fp)
 8011054:	18800536 	bltu	r3,r2,801106c <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
 8011058:	e0fff717 	ldw	r3,-36(fp)
 801105c:	e0bff817 	ldw	r2,-32(fp)
 8011060:	1885c83a 	sub	r2,r3,r2
 8011064:	e0bff615 	stw	r2,-40(fp)
 8011068:	00000406 	br	801107c <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
 801106c:	00c20004 	movi	r3,2048
 8011070:	e0bff817 	ldw	r2,-32(fp)
 8011074:	1885c83a 	sub	r2,r3,r2
 8011078:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
 801107c:	e0bff617 	ldw	r2,-40(fp)
 8011080:	10001e26 	beq	r2,zero,80110fc <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
 8011084:	e0fffe17 	ldw	r3,-8(fp)
 8011088:	e0bff617 	ldw	r2,-40(fp)
 801108c:	1880022e 	bgeu	r3,r2,8011098 <altera_avalon_jtag_uart_read+0x90>
        n = space;
 8011090:	e0bffe17 	ldw	r2,-8(fp)
 8011094:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
 8011098:	e0bffc17 	ldw	r2,-16(fp)
 801109c:	10c00e04 	addi	r3,r2,56
 80110a0:	e0bff817 	ldw	r2,-32(fp)
 80110a4:	1885883a 	add	r2,r3,r2
 80110a8:	e1bff617 	ldw	r6,-40(fp)
 80110ac:	100b883a 	mov	r5,r2
 80110b0:	e13ff517 	ldw	r4,-44(fp)
 80110b4:	80090a80 	call	80090a8 <memcpy>
      ptr   += n;
 80110b8:	e0fff517 	ldw	r3,-44(fp)
 80110bc:	e0bff617 	ldw	r2,-40(fp)
 80110c0:	1885883a 	add	r2,r3,r2
 80110c4:	e0bff515 	stw	r2,-44(fp)
      space -= n;
 80110c8:	e0fffe17 	ldw	r3,-8(fp)
 80110cc:	e0bff617 	ldw	r2,-40(fp)
 80110d0:	1885c83a 	sub	r2,r3,r2
 80110d4:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 80110d8:	e0fff817 	ldw	r3,-32(fp)
 80110dc:	e0bff617 	ldw	r2,-40(fp)
 80110e0:	1885883a 	add	r2,r3,r2
 80110e4:	10c1ffcc 	andi	r3,r2,2047
 80110e8:	e0bffc17 	ldw	r2,-16(fp)
 80110ec:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
 80110f0:	e0bffe17 	ldw	r2,-8(fp)
 80110f4:	00bfcf16 	blt	zero,r2,8011034 <__alt_data_end+0xf8011034>
 80110f8:	00000106 	br	8011100 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
 80110fc:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
 8011100:	e0fff517 	ldw	r3,-44(fp)
 8011104:	e0bffd17 	ldw	r2,-12(fp)
 8011108:	1880141e 	bne	r3,r2,801115c <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
 801110c:	e0bfff17 	ldw	r2,-4(fp)
 8011110:	1090000c 	andi	r2,r2,16384
 8011114:	1000131e 	bne	r2,zero,8011164 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
 8011118:	0001883a 	nop
 801111c:	e0bffc17 	ldw	r2,-16(fp)
 8011120:	10c00a17 	ldw	r3,40(r2)
 8011124:	e0bff717 	ldw	r2,-36(fp)
 8011128:	1880051e 	bne	r3,r2,8011140 <altera_avalon_jtag_uart_read+0x138>
 801112c:	e0bffc17 	ldw	r2,-16(fp)
 8011130:	10c00917 	ldw	r3,36(r2)
 8011134:	e0bffc17 	ldw	r2,-16(fp)
 8011138:	10800117 	ldw	r2,4(r2)
 801113c:	18bff736 	bltu	r3,r2,801111c <__alt_data_end+0xf801111c>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
 8011140:	e0bffc17 	ldw	r2,-16(fp)
 8011144:	10c00a17 	ldw	r3,40(r2)
 8011148:	e0bff717 	ldw	r2,-36(fp)
 801114c:	18800726 	beq	r3,r2,801116c <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 8011150:	e0bffe17 	ldw	r2,-8(fp)
 8011154:	00bfb716 	blt	zero,r2,8011034 <__alt_data_end+0xf8011034>
 8011158:	00000506 	br	8011170 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
 801115c:	0001883a 	nop
 8011160:	00000306 	br	8011170 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
 8011164:	0001883a 	nop
 8011168:	00000106 	br	8011170 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
 801116c:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
 8011170:	e0fff517 	ldw	r3,-44(fp)
 8011174:	e0bffd17 	ldw	r2,-12(fp)
 8011178:	18801826 	beq	r3,r2,80111dc <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 801117c:	0005303a 	rdctl	r2,status
 8011180:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 8011184:	e0fffb17 	ldw	r3,-20(fp)
 8011188:	00bfff84 	movi	r2,-2
 801118c:	1884703a 	and	r2,r3,r2
 8011190:	1001703a 	wrctl	status,r2
  
  return context;
 8011194:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
 8011198:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 801119c:	e0bffc17 	ldw	r2,-16(fp)
 80111a0:	10800817 	ldw	r2,32(r2)
 80111a4:	10c00054 	ori	r3,r2,1
 80111a8:	e0bffc17 	ldw	r2,-16(fp)
 80111ac:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 80111b0:	e0bffc17 	ldw	r2,-16(fp)
 80111b4:	10800017 	ldw	r2,0(r2)
 80111b8:	10800104 	addi	r2,r2,4
 80111bc:	1007883a 	mov	r3,r2
 80111c0:	e0bffc17 	ldw	r2,-16(fp)
 80111c4:	10800817 	ldw	r2,32(r2)
 80111c8:	18800035 	stwio	r2,0(r3)
 80111cc:	e0bffa17 	ldw	r2,-24(fp)
 80111d0:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 80111d4:	e0bff917 	ldw	r2,-28(fp)
 80111d8:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
 80111dc:	e0fff517 	ldw	r3,-44(fp)
 80111e0:	e0bffd17 	ldw	r2,-12(fp)
 80111e4:	18800426 	beq	r3,r2,80111f8 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
 80111e8:	e0fff517 	ldw	r3,-44(fp)
 80111ec:	e0bffd17 	ldw	r2,-12(fp)
 80111f0:	1885c83a 	sub	r2,r3,r2
 80111f4:	00000606 	br	8011210 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
 80111f8:	e0bfff17 	ldw	r2,-4(fp)
 80111fc:	1090000c 	andi	r2,r2,16384
 8011200:	10000226 	beq	r2,zero,801120c <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
 8011204:	00bffd44 	movi	r2,-11
 8011208:	00000106 	br	8011210 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
 801120c:	00bffec4 	movi	r2,-5
}
 8011210:	e037883a 	mov	sp,fp
 8011214:	dfc00117 	ldw	ra,4(sp)
 8011218:	df000017 	ldw	fp,0(sp)
 801121c:	dec00204 	addi	sp,sp,8
 8011220:	f800283a 	ret

08011224 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
 8011224:	defff304 	addi	sp,sp,-52
 8011228:	dfc00c15 	stw	ra,48(sp)
 801122c:	df000b15 	stw	fp,44(sp)
 8011230:	df000b04 	addi	fp,sp,44
 8011234:	e13ffc15 	stw	r4,-16(fp)
 8011238:	e17ffd15 	stw	r5,-12(fp)
 801123c:	e1bffe15 	stw	r6,-8(fp)
 8011240:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
 8011244:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
 8011248:	e0bffd17 	ldw	r2,-12(fp)
 801124c:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 8011250:	00003706 	br	8011330 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
 8011254:	e0bffc17 	ldw	r2,-16(fp)
 8011258:	10800c17 	ldw	r2,48(r2)
 801125c:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
 8011260:	e0bffc17 	ldw	r2,-16(fp)
 8011264:	10800d17 	ldw	r2,52(r2)
 8011268:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
 801126c:	e0fff917 	ldw	r3,-28(fp)
 8011270:	e0bff517 	ldw	r2,-44(fp)
 8011274:	1880062e 	bgeu	r3,r2,8011290 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
 8011278:	e0fff517 	ldw	r3,-44(fp)
 801127c:	e0bff917 	ldw	r2,-28(fp)
 8011280:	1885c83a 	sub	r2,r3,r2
 8011284:	10bfffc4 	addi	r2,r2,-1
 8011288:	e0bff615 	stw	r2,-40(fp)
 801128c:	00000b06 	br	80112bc <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
 8011290:	e0bff517 	ldw	r2,-44(fp)
 8011294:	10000526 	beq	r2,zero,80112ac <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
 8011298:	00c20004 	movi	r3,2048
 801129c:	e0bff917 	ldw	r2,-28(fp)
 80112a0:	1885c83a 	sub	r2,r3,r2
 80112a4:	e0bff615 	stw	r2,-40(fp)
 80112a8:	00000406 	br	80112bc <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
 80112ac:	00c1ffc4 	movi	r3,2047
 80112b0:	e0bff917 	ldw	r2,-28(fp)
 80112b4:	1885c83a 	sub	r2,r3,r2
 80112b8:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
 80112bc:	e0bff617 	ldw	r2,-40(fp)
 80112c0:	10001e26 	beq	r2,zero,801133c <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
 80112c4:	e0fffe17 	ldw	r3,-8(fp)
 80112c8:	e0bff617 	ldw	r2,-40(fp)
 80112cc:	1880022e 	bgeu	r3,r2,80112d8 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
 80112d0:	e0bffe17 	ldw	r2,-8(fp)
 80112d4:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
 80112d8:	e0bffc17 	ldw	r2,-16(fp)
 80112dc:	10c20e04 	addi	r3,r2,2104
 80112e0:	e0bff917 	ldw	r2,-28(fp)
 80112e4:	1885883a 	add	r2,r3,r2
 80112e8:	e1bff617 	ldw	r6,-40(fp)
 80112ec:	e17ffd17 	ldw	r5,-12(fp)
 80112f0:	1009883a 	mov	r4,r2
 80112f4:	80090a80 	call	80090a8 <memcpy>
      ptr   += n;
 80112f8:	e0fffd17 	ldw	r3,-12(fp)
 80112fc:	e0bff617 	ldw	r2,-40(fp)
 8011300:	1885883a 	add	r2,r3,r2
 8011304:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
 8011308:	e0fffe17 	ldw	r3,-8(fp)
 801130c:	e0bff617 	ldw	r2,-40(fp)
 8011310:	1885c83a 	sub	r2,r3,r2
 8011314:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 8011318:	e0fff917 	ldw	r3,-28(fp)
 801131c:	e0bff617 	ldw	r2,-40(fp)
 8011320:	1885883a 	add	r2,r3,r2
 8011324:	10c1ffcc 	andi	r3,r2,2047
 8011328:	e0bffc17 	ldw	r2,-16(fp)
 801132c:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 8011330:	e0bffe17 	ldw	r2,-8(fp)
 8011334:	00bfc716 	blt	zero,r2,8011254 <__alt_data_end+0xf8011254>
 8011338:	00000106 	br	8011340 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
 801133c:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 8011340:	0005303a 	rdctl	r2,status
 8011344:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 8011348:	e0fffb17 	ldw	r3,-20(fp)
 801134c:	00bfff84 	movi	r2,-2
 8011350:	1884703a 	and	r2,r3,r2
 8011354:	1001703a 	wrctl	status,r2
  
  return context;
 8011358:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
 801135c:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 8011360:	e0bffc17 	ldw	r2,-16(fp)
 8011364:	10800817 	ldw	r2,32(r2)
 8011368:	10c00094 	ori	r3,r2,2
 801136c:	e0bffc17 	ldw	r2,-16(fp)
 8011370:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 8011374:	e0bffc17 	ldw	r2,-16(fp)
 8011378:	10800017 	ldw	r2,0(r2)
 801137c:	10800104 	addi	r2,r2,4
 8011380:	1007883a 	mov	r3,r2
 8011384:	e0bffc17 	ldw	r2,-16(fp)
 8011388:	10800817 	ldw	r2,32(r2)
 801138c:	18800035 	stwio	r2,0(r3)
 8011390:	e0bffa17 	ldw	r2,-24(fp)
 8011394:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 8011398:	e0bff817 	ldw	r2,-32(fp)
 801139c:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
 80113a0:	e0bffe17 	ldw	r2,-8(fp)
 80113a4:	0080100e 	bge	zero,r2,80113e8 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
 80113a8:	e0bfff17 	ldw	r2,-4(fp)
 80113ac:	1090000c 	andi	r2,r2,16384
 80113b0:	1000101e 	bne	r2,zero,80113f4 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
 80113b4:	0001883a 	nop
 80113b8:	e0bffc17 	ldw	r2,-16(fp)
 80113bc:	10c00d17 	ldw	r3,52(r2)
 80113c0:	e0bff517 	ldw	r2,-44(fp)
 80113c4:	1880051e 	bne	r3,r2,80113dc <altera_avalon_jtag_uart_write+0x1b8>
 80113c8:	e0bffc17 	ldw	r2,-16(fp)
 80113cc:	10c00917 	ldw	r3,36(r2)
 80113d0:	e0bffc17 	ldw	r2,-16(fp)
 80113d4:	10800117 	ldw	r2,4(r2)
 80113d8:	18bff736 	bltu	r3,r2,80113b8 <__alt_data_end+0xf80113b8>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
 80113dc:	e0bffc17 	ldw	r2,-16(fp)
 80113e0:	10800917 	ldw	r2,36(r2)
 80113e4:	1000051e 	bne	r2,zero,80113fc <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
 80113e8:	e0bffe17 	ldw	r2,-8(fp)
 80113ec:	00bfd016 	blt	zero,r2,8011330 <__alt_data_end+0xf8011330>
 80113f0:	00000306 	br	8011400 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
 80113f4:	0001883a 	nop
 80113f8:	00000106 	br	8011400 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
 80113fc:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
 8011400:	e0fffd17 	ldw	r3,-12(fp)
 8011404:	e0bff717 	ldw	r2,-36(fp)
 8011408:	18800426 	beq	r3,r2,801141c <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
 801140c:	e0fffd17 	ldw	r3,-12(fp)
 8011410:	e0bff717 	ldw	r2,-36(fp)
 8011414:	1885c83a 	sub	r2,r3,r2
 8011418:	00000606 	br	8011434 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
 801141c:	e0bfff17 	ldw	r2,-4(fp)
 8011420:	1090000c 	andi	r2,r2,16384
 8011424:	10000226 	beq	r2,zero,8011430 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
 8011428:	00bffd44 	movi	r2,-11
 801142c:	00000106 	br	8011434 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
 8011430:	00bffec4 	movi	r2,-5
}
 8011434:	e037883a 	mov	sp,fp
 8011438:	dfc00117 	ldw	ra,4(sp)
 801143c:	df000017 	ldw	fp,0(sp)
 8011440:	dec00204 	addi	sp,sp,8
 8011444:	f800283a 	ret

08011448 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
 8011448:	defffa04 	addi	sp,sp,-24
 801144c:	dfc00515 	stw	ra,20(sp)
 8011450:	df000415 	stw	fp,16(sp)
 8011454:	df000404 	addi	fp,sp,16
 8011458:	e13fff15 	stw	r4,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
 801145c:	0007883a 	mov	r3,zero
 8011460:	e0bfff17 	ldw	r2,-4(fp)
 8011464:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
 8011468:	e0bfff17 	ldw	r2,-4(fp)
 801146c:	10800104 	addi	r2,r2,4
 8011470:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 8011474:	0005303a 	rdctl	r2,status
 8011478:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 801147c:	e0fffd17 	ldw	r3,-12(fp)
 8011480:	00bfff84 	movi	r2,-2
 8011484:	1884703a 	and	r2,r3,r2
 8011488:	1001703a 	wrctl	status,r2
  
  return context;
 801148c:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
 8011490:	e0bffc15 	stw	r2,-16(fp)
  alt_tick ();
 8011494:	8011f540 	call	8011f54 <alt_tick>
 8011498:	e0bffc17 	ldw	r2,-16(fp)
 801149c:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 80114a0:	e0bffe17 	ldw	r2,-8(fp)
 80114a4:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
 80114a8:	0001883a 	nop
 80114ac:	e037883a 	mov	sp,fp
 80114b0:	dfc00117 	ldw	ra,4(sp)
 80114b4:	df000017 	ldw	fp,0(sp)
 80114b8:	dec00204 	addi	sp,sp,8
 80114bc:	f800283a 	ret

080114c0 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
 80114c0:	defff804 	addi	sp,sp,-32
 80114c4:	dfc00715 	stw	ra,28(sp)
 80114c8:	df000615 	stw	fp,24(sp)
 80114cc:	df000604 	addi	fp,sp,24
 80114d0:	e13ffc15 	stw	r4,-16(fp)
 80114d4:	e17ffd15 	stw	r5,-12(fp)
 80114d8:	e1bffe15 	stw	r6,-8(fp)
 80114dc:	e1ffff15 	stw	r7,-4(fp)
 80114e0:	e0bfff17 	ldw	r2,-4(fp)
 80114e4:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
 80114e8:	d0a6f017 	ldw	r2,-25664(gp)
 80114ec:	1000021e 	bne	r2,zero,80114f8 <alt_avalon_timer_sc_init+0x38>
  {
    _alt_tick_rate = nticks;
 80114f0:	e0bffb17 	ldw	r2,-20(fp)
 80114f4:	d0a6f015 	stw	r2,-25664(gp)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
 80114f8:	e0bffc17 	ldw	r2,-16(fp)
 80114fc:	10800104 	addi	r2,r2,4
 8011500:	00c001c4 	movi	r3,7
 8011504:	10c00035 	stwio	r3,0(r2)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
 8011508:	d8000015 	stw	zero,0(sp)
 801150c:	e1fffc17 	ldw	r7,-16(fp)
 8011510:	01820074 	movhi	r6,2049
 8011514:	31851204 	addi	r6,r6,5192
 8011518:	e17ffe17 	ldw	r5,-8(fp)
 801151c:	e13ffd17 	ldw	r4,-12(fp)
 8011520:	80118840 	call	8011884 <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
 8011524:	0001883a 	nop
 8011528:	e037883a 	mov	sp,fp
 801152c:	dfc00117 	ldw	ra,4(sp)
 8011530:	df000017 	ldw	fp,0(sp)
 8011534:	dec00204 	addi	sp,sp,8
 8011538:	f800283a 	ret

0801153c <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
 801153c:	defff504 	addi	sp,sp,-44
 8011540:	df000a15 	stw	fp,40(sp)
 8011544:	df000a04 	addi	fp,sp,40
 8011548:	e13ffc15 	stw	r4,-16(fp)
 801154c:	e17ffd15 	stw	r5,-12(fp)
 8011550:	e1bffe15 	stw	r6,-8(fp)
 8011554:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
 8011558:	e03ff615 	stw	zero,-40(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
 801155c:	d0a6f017 	ldw	r2,-25664(gp)
  
  if (alt_ticks_per_second ())
 8011560:	10003c26 	beq	r2,zero,8011654 <alt_alarm_start+0x118>
  {
    if (alarm)
 8011564:	e0bffc17 	ldw	r2,-16(fp)
 8011568:	10003826 	beq	r2,zero,801164c <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
 801156c:	e0bffc17 	ldw	r2,-16(fp)
 8011570:	e0fffe17 	ldw	r3,-8(fp)
 8011574:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
 8011578:	e0bffc17 	ldw	r2,-16(fp)
 801157c:	e0ffff17 	ldw	r3,-4(fp)
 8011580:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 8011584:	0005303a 	rdctl	r2,status
 8011588:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 801158c:	e0fff917 	ldw	r3,-28(fp)
 8011590:	00bfff84 	movi	r2,-2
 8011594:	1884703a 	and	r2,r3,r2
 8011598:	1001703a 	wrctl	status,r2
  
  return context;
 801159c:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
 80115a0:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
 80115a4:	d0a6f117 	ldw	r2,-25660(gp)
      
      current_nticks = alt_nticks();
 80115a8:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
 80115ac:	e0fffd17 	ldw	r3,-12(fp)
 80115b0:	e0bff617 	ldw	r2,-40(fp)
 80115b4:	1885883a 	add	r2,r3,r2
 80115b8:	10c00044 	addi	r3,r2,1
 80115bc:	e0bffc17 	ldw	r2,-16(fp)
 80115c0:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
 80115c4:	e0bffc17 	ldw	r2,-16(fp)
 80115c8:	10c00217 	ldw	r3,8(r2)
 80115cc:	e0bff617 	ldw	r2,-40(fp)
 80115d0:	1880042e 	bgeu	r3,r2,80115e4 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
 80115d4:	e0bffc17 	ldw	r2,-16(fp)
 80115d8:	00c00044 	movi	r3,1
 80115dc:	10c00405 	stb	r3,16(r2)
 80115e0:	00000206 	br	80115ec <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
 80115e4:	e0bffc17 	ldw	r2,-16(fp)
 80115e8:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
 80115ec:	e0bffc17 	ldw	r2,-16(fp)
 80115f0:	d0e01904 	addi	r3,gp,-32668
 80115f4:	e0fffa15 	stw	r3,-24(fp)
 80115f8:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 80115fc:	e0bffb17 	ldw	r2,-20(fp)
 8011600:	e0fffa17 	ldw	r3,-24(fp)
 8011604:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 8011608:	e0bffa17 	ldw	r2,-24(fp)
 801160c:	10c00017 	ldw	r3,0(r2)
 8011610:	e0bffb17 	ldw	r2,-20(fp)
 8011614:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 8011618:	e0bffa17 	ldw	r2,-24(fp)
 801161c:	10800017 	ldw	r2,0(r2)
 8011620:	e0fffb17 	ldw	r3,-20(fp)
 8011624:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 8011628:	e0bffa17 	ldw	r2,-24(fp)
 801162c:	e0fffb17 	ldw	r3,-20(fp)
 8011630:	10c00015 	stw	r3,0(r2)
 8011634:	e0bff817 	ldw	r2,-32(fp)
 8011638:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 801163c:	e0bff717 	ldw	r2,-36(fp)
 8011640:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
 8011644:	0005883a 	mov	r2,zero
 8011648:	00000306 	br	8011658 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
 801164c:	00bffa84 	movi	r2,-22
 8011650:	00000106 	br	8011658 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
 8011654:	00bfde84 	movi	r2,-134
  }
}
 8011658:	e037883a 	mov	sp,fp
 801165c:	df000017 	ldw	fp,0(sp)
 8011660:	dec00104 	addi	sp,sp,4
 8011664:	f800283a 	ret

08011668 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
 8011668:	defffe04 	addi	sp,sp,-8
 801166c:	df000115 	stw	fp,4(sp)
 8011670:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
 8011674:	e03fff15 	stw	zero,-4(fp)
 8011678:	00000506 	br	8011690 <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
 801167c:	e0bfff17 	ldw	r2,-4(fp)
 8011680:	1000003b 	flushd	0(r2)
void alt_dcache_flush_all (void)
{
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
 8011684:	e0bfff17 	ldw	r2,-4(fp)
 8011688:	10800804 	addi	r2,r2,32
 801168c:	e0bfff15 	stw	r2,-4(fp)
 8011690:	e0bfff17 	ldw	r2,-4(fp)
 8011694:	10820030 	cmpltui	r2,r2,2048
 8011698:	103ff81e 	bne	r2,zero,801167c <__alt_data_end+0xf801167c>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
 801169c:	0001883a 	nop
 80116a0:	e037883a 	mov	sp,fp
 80116a4:	df000017 	ldw	fp,0(sp)
 80116a8:	dec00104 	addi	sp,sp,4
 80116ac:	f800283a 	ret

080116b0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 80116b0:	defffe04 	addi	sp,sp,-8
 80116b4:	dfc00115 	stw	ra,4(sp)
 80116b8:	df000015 	stw	fp,0(sp)
 80116bc:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 80116c0:	d0a01617 	ldw	r2,-32680(gp)
 80116c4:	10000326 	beq	r2,zero,80116d4 <alt_get_errno+0x24>
 80116c8:	d0a01617 	ldw	r2,-32680(gp)
 80116cc:	103ee83a 	callr	r2
 80116d0:	00000106 	br	80116d8 <alt_get_errno+0x28>
 80116d4:	d0a6e804 	addi	r2,gp,-25696
}
 80116d8:	e037883a 	mov	sp,fp
 80116dc:	dfc00117 	ldw	ra,4(sp)
 80116e0:	df000017 	ldw	fp,0(sp)
 80116e4:	dec00204 	addi	sp,sp,8
 80116e8:	f800283a 	ret

080116ec <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
 80116ec:	defffa04 	addi	sp,sp,-24
 80116f0:	dfc00515 	stw	ra,20(sp)
 80116f4:	df000415 	stw	fp,16(sp)
 80116f8:	df000404 	addi	fp,sp,16
 80116fc:	e13ffe15 	stw	r4,-8(fp)
 8011700:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
 8011704:	e0bffe17 	ldw	r2,-8(fp)
 8011708:	10000326 	beq	r2,zero,8011718 <alt_dev_llist_insert+0x2c>
 801170c:	e0bffe17 	ldw	r2,-8(fp)
 8011710:	10800217 	ldw	r2,8(r2)
 8011714:	1000061e 	bne	r2,zero,8011730 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
 8011718:	80116b00 	call	80116b0 <alt_get_errno>
 801171c:	1007883a 	mov	r3,r2
 8011720:	00800584 	movi	r2,22
 8011724:	18800015 	stw	r2,0(r3)
    return -EINVAL;
 8011728:	00bffa84 	movi	r2,-22
 801172c:	00001306 	br	801177c <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
 8011730:	e0bffe17 	ldw	r2,-8(fp)
 8011734:	e0ffff17 	ldw	r3,-4(fp)
 8011738:	e0fffc15 	stw	r3,-16(fp)
 801173c:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 8011740:	e0bffd17 	ldw	r2,-12(fp)
 8011744:	e0fffc17 	ldw	r3,-16(fp)
 8011748:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 801174c:	e0bffc17 	ldw	r2,-16(fp)
 8011750:	10c00017 	ldw	r3,0(r2)
 8011754:	e0bffd17 	ldw	r2,-12(fp)
 8011758:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 801175c:	e0bffc17 	ldw	r2,-16(fp)
 8011760:	10800017 	ldw	r2,0(r2)
 8011764:	e0fffd17 	ldw	r3,-12(fp)
 8011768:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 801176c:	e0bffc17 	ldw	r2,-16(fp)
 8011770:	e0fffd17 	ldw	r3,-12(fp)
 8011774:	10c00015 	stw	r3,0(r2)

  return 0;  
 8011778:	0005883a 	mov	r2,zero
}
 801177c:	e037883a 	mov	sp,fp
 8011780:	dfc00117 	ldw	ra,4(sp)
 8011784:	df000017 	ldw	fp,0(sp)
 8011788:	dec00204 	addi	sp,sp,8
 801178c:	f800283a 	ret

08011790 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
 8011790:	defffd04 	addi	sp,sp,-12
 8011794:	dfc00215 	stw	ra,8(sp)
 8011798:	df000115 	stw	fp,4(sp)
 801179c:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 80117a0:	00820074 	movhi	r2,2049
 80117a4:	1089e204 	addi	r2,r2,10120
 80117a8:	e0bfff15 	stw	r2,-4(fp)
 80117ac:	00000606 	br	80117c8 <_do_ctors+0x38>
        (*ctor) (); 
 80117b0:	e0bfff17 	ldw	r2,-4(fp)
 80117b4:	10800017 	ldw	r2,0(r2)
 80117b8:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 80117bc:	e0bfff17 	ldw	r2,-4(fp)
 80117c0:	10bfff04 	addi	r2,r2,-4
 80117c4:	e0bfff15 	stw	r2,-4(fp)
 80117c8:	e0ffff17 	ldw	r3,-4(fp)
 80117cc:	00820074 	movhi	r2,2049
 80117d0:	1089e144 	addi	r2,r2,10117
 80117d4:	18bff62e 	bgeu	r3,r2,80117b0 <__alt_data_end+0xf80117b0>
        (*ctor) (); 
}
 80117d8:	0001883a 	nop
 80117dc:	e037883a 	mov	sp,fp
 80117e0:	dfc00117 	ldw	ra,4(sp)
 80117e4:	df000017 	ldw	fp,0(sp)
 80117e8:	dec00204 	addi	sp,sp,8
 80117ec:	f800283a 	ret

080117f0 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
 80117f0:	defffd04 	addi	sp,sp,-12
 80117f4:	dfc00215 	stw	ra,8(sp)
 80117f8:	df000115 	stw	fp,4(sp)
 80117fc:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 8011800:	00820074 	movhi	r2,2049
 8011804:	1089e204 	addi	r2,r2,10120
 8011808:	e0bfff15 	stw	r2,-4(fp)
 801180c:	00000606 	br	8011828 <_do_dtors+0x38>
        (*dtor) (); 
 8011810:	e0bfff17 	ldw	r2,-4(fp)
 8011814:	10800017 	ldw	r2,0(r2)
 8011818:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 801181c:	e0bfff17 	ldw	r2,-4(fp)
 8011820:	10bfff04 	addi	r2,r2,-4
 8011824:	e0bfff15 	stw	r2,-4(fp)
 8011828:	e0ffff17 	ldw	r3,-4(fp)
 801182c:	00820074 	movhi	r2,2049
 8011830:	1089e304 	addi	r2,r2,10124
 8011834:	18bff62e 	bgeu	r3,r2,8011810 <__alt_data_end+0xf8011810>
        (*dtor) (); 
}
 8011838:	0001883a 	nop
 801183c:	e037883a 	mov	sp,fp
 8011840:	dfc00117 	ldw	ra,4(sp)
 8011844:	df000017 	ldw	fp,0(sp)
 8011848:	dec00204 	addi	sp,sp,8
 801184c:	f800283a 	ret

08011850 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
 8011850:	defffe04 	addi	sp,sp,-8
 8011854:	dfc00115 	stw	ra,4(sp)
 8011858:	df000015 	stw	fp,0(sp)
 801185c:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
 8011860:	01440004 	movi	r5,4096
 8011864:	0009883a 	mov	r4,zero
 8011868:	80122bc0 	call	80122bc <alt_icache_flush>
#endif
}
 801186c:	0001883a 	nop
 8011870:	e037883a 	mov	sp,fp
 8011874:	dfc00117 	ldw	ra,4(sp)
 8011878:	df000017 	ldw	fp,0(sp)
 801187c:	dec00204 	addi	sp,sp,8
 8011880:	f800283a 	ret

08011884 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
 8011884:	defff904 	addi	sp,sp,-28
 8011888:	dfc00615 	stw	ra,24(sp)
 801188c:	df000515 	stw	fp,20(sp)
 8011890:	df000504 	addi	fp,sp,20
 8011894:	e13ffc15 	stw	r4,-16(fp)
 8011898:	e17ffd15 	stw	r5,-12(fp)
 801189c:	e1bffe15 	stw	r6,-8(fp)
 80118a0:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
 80118a4:	e0800217 	ldw	r2,8(fp)
 80118a8:	d8800015 	stw	r2,0(sp)
 80118ac:	e1ffff17 	ldw	r7,-4(fp)
 80118b0:	e1bffe17 	ldw	r6,-8(fp)
 80118b4:	e17ffd17 	ldw	r5,-12(fp)
 80118b8:	e13ffc17 	ldw	r4,-16(fp)
 80118bc:	8011a340 	call	8011a34 <alt_iic_isr_register>
}  
 80118c0:	e037883a 	mov	sp,fp
 80118c4:	dfc00117 	ldw	ra,4(sp)
 80118c8:	df000017 	ldw	fp,0(sp)
 80118cc:	dec00204 	addi	sp,sp,8
 80118d0:	f800283a 	ret

080118d4 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
 80118d4:	defff904 	addi	sp,sp,-28
 80118d8:	df000615 	stw	fp,24(sp)
 80118dc:	df000604 	addi	fp,sp,24
 80118e0:	e13ffe15 	stw	r4,-8(fp)
 80118e4:	e17fff15 	stw	r5,-4(fp)
 80118e8:	e0bfff17 	ldw	r2,-4(fp)
 80118ec:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 80118f0:	0005303a 	rdctl	r2,status
 80118f4:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 80118f8:	e0fffb17 	ldw	r3,-20(fp)
 80118fc:	00bfff84 	movi	r2,-2
 8011900:	1884703a 	and	r2,r3,r2
 8011904:	1001703a 	wrctl	status,r2
  
  return context;
 8011908:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 801190c:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
 8011910:	00c00044 	movi	r3,1
 8011914:	e0bffa17 	ldw	r2,-24(fp)
 8011918:	1884983a 	sll	r2,r3,r2
 801191c:	1007883a 	mov	r3,r2
 8011920:	d0a6ef17 	ldw	r2,-25668(gp)
 8011924:	1884b03a 	or	r2,r3,r2
 8011928:	d0a6ef15 	stw	r2,-25668(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 801192c:	d0a6ef17 	ldw	r2,-25668(gp)
 8011930:	100170fa 	wrctl	ienable,r2
 8011934:	e0bffc17 	ldw	r2,-16(fp)
 8011938:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 801193c:	e0bffd17 	ldw	r2,-12(fp)
 8011940:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 8011944:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
 8011948:	0001883a 	nop
}
 801194c:	e037883a 	mov	sp,fp
 8011950:	df000017 	ldw	fp,0(sp)
 8011954:	dec00104 	addi	sp,sp,4
 8011958:	f800283a 	ret

0801195c <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
 801195c:	defff904 	addi	sp,sp,-28
 8011960:	df000615 	stw	fp,24(sp)
 8011964:	df000604 	addi	fp,sp,24
 8011968:	e13ffe15 	stw	r4,-8(fp)
 801196c:	e17fff15 	stw	r5,-4(fp)
 8011970:	e0bfff17 	ldw	r2,-4(fp)
 8011974:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 8011978:	0005303a 	rdctl	r2,status
 801197c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 8011980:	e0fffb17 	ldw	r3,-20(fp)
 8011984:	00bfff84 	movi	r2,-2
 8011988:	1884703a 	and	r2,r3,r2
 801198c:	1001703a 	wrctl	status,r2
  
  return context;
 8011990:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 8011994:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
 8011998:	00c00044 	movi	r3,1
 801199c:	e0bffa17 	ldw	r2,-24(fp)
 80119a0:	1884983a 	sll	r2,r3,r2
 80119a4:	0084303a 	nor	r2,zero,r2
 80119a8:	1007883a 	mov	r3,r2
 80119ac:	d0a6ef17 	ldw	r2,-25668(gp)
 80119b0:	1884703a 	and	r2,r3,r2
 80119b4:	d0a6ef15 	stw	r2,-25668(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 80119b8:	d0a6ef17 	ldw	r2,-25668(gp)
 80119bc:	100170fa 	wrctl	ienable,r2
 80119c0:	e0bffc17 	ldw	r2,-16(fp)
 80119c4:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 80119c8:	e0bffd17 	ldw	r2,-12(fp)
 80119cc:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 80119d0:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
 80119d4:	0001883a 	nop
}
 80119d8:	e037883a 	mov	sp,fp
 80119dc:	df000017 	ldw	fp,0(sp)
 80119e0:	dec00104 	addi	sp,sp,4
 80119e4:	f800283a 	ret

080119e8 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
 80119e8:	defffc04 	addi	sp,sp,-16
 80119ec:	df000315 	stw	fp,12(sp)
 80119f0:	df000304 	addi	fp,sp,12
 80119f4:	e13ffe15 	stw	r4,-8(fp)
 80119f8:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
 80119fc:	000530fa 	rdctl	r2,ienable
 8011a00:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
 8011a04:	00c00044 	movi	r3,1
 8011a08:	e0bfff17 	ldw	r2,-4(fp)
 8011a0c:	1884983a 	sll	r2,r3,r2
 8011a10:	1007883a 	mov	r3,r2
 8011a14:	e0bffd17 	ldw	r2,-12(fp)
 8011a18:	1884703a 	and	r2,r3,r2
 8011a1c:	1004c03a 	cmpne	r2,r2,zero
 8011a20:	10803fcc 	andi	r2,r2,255
}
 8011a24:	e037883a 	mov	sp,fp
 8011a28:	df000017 	ldw	fp,0(sp)
 8011a2c:	dec00104 	addi	sp,sp,4
 8011a30:	f800283a 	ret

08011a34 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
 8011a34:	defff504 	addi	sp,sp,-44
 8011a38:	dfc00a15 	stw	ra,40(sp)
 8011a3c:	df000915 	stw	fp,36(sp)
 8011a40:	df000904 	addi	fp,sp,36
 8011a44:	e13ffc15 	stw	r4,-16(fp)
 8011a48:	e17ffd15 	stw	r5,-12(fp)
 8011a4c:	e1bffe15 	stw	r6,-8(fp)
 8011a50:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
 8011a54:	00bffa84 	movi	r2,-22
 8011a58:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
 8011a5c:	e0bffd17 	ldw	r2,-12(fp)
 8011a60:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
 8011a64:	e0bff817 	ldw	r2,-32(fp)
 8011a68:	10800808 	cmpgei	r2,r2,32
 8011a6c:	1000271e 	bne	r2,zero,8011b0c <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 8011a70:	0005303a 	rdctl	r2,status
 8011a74:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 8011a78:	e0fffb17 	ldw	r3,-20(fp)
 8011a7c:	00bfff84 	movi	r2,-2
 8011a80:	1884703a 	and	r2,r3,r2
 8011a84:	1001703a 	wrctl	status,r2
  
  return context;
 8011a88:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
 8011a8c:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
 8011a90:	00820074 	movhi	r2,2049
 8011a94:	109af204 	addi	r2,r2,27592
 8011a98:	e0fff817 	ldw	r3,-32(fp)
 8011a9c:	180690fa 	slli	r3,r3,3
 8011aa0:	10c5883a 	add	r2,r2,r3
 8011aa4:	e0fffe17 	ldw	r3,-8(fp)
 8011aa8:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
 8011aac:	00820074 	movhi	r2,2049
 8011ab0:	109af204 	addi	r2,r2,27592
 8011ab4:	e0fff817 	ldw	r3,-32(fp)
 8011ab8:	180690fa 	slli	r3,r3,3
 8011abc:	10c5883a 	add	r2,r2,r3
 8011ac0:	10800104 	addi	r2,r2,4
 8011ac4:	e0ffff17 	ldw	r3,-4(fp)
 8011ac8:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
 8011acc:	e0bffe17 	ldw	r2,-8(fp)
 8011ad0:	10000526 	beq	r2,zero,8011ae8 <alt_iic_isr_register+0xb4>
 8011ad4:	e0bff817 	ldw	r2,-32(fp)
 8011ad8:	100b883a 	mov	r5,r2
 8011adc:	e13ffc17 	ldw	r4,-16(fp)
 8011ae0:	80118d40 	call	80118d4 <alt_ic_irq_enable>
 8011ae4:	00000406 	br	8011af8 <alt_iic_isr_register+0xc4>
 8011ae8:	e0bff817 	ldw	r2,-32(fp)
 8011aec:	100b883a 	mov	r5,r2
 8011af0:	e13ffc17 	ldw	r4,-16(fp)
 8011af4:	801195c0 	call	801195c <alt_ic_irq_disable>
 8011af8:	e0bff715 	stw	r2,-36(fp)
 8011afc:	e0bffa17 	ldw	r2,-24(fp)
 8011b00:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 8011b04:	e0bff917 	ldw	r2,-28(fp)
 8011b08:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
 8011b0c:	e0bff717 	ldw	r2,-36(fp)
}
 8011b10:	e037883a 	mov	sp,fp
 8011b14:	dfc00117 	ldw	ra,4(sp)
 8011b18:	df000017 	ldw	fp,0(sp)
 8011b1c:	dec00204 	addi	sp,sp,8
 8011b20:	f800283a 	ret

08011b24 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
 8011b24:	defff904 	addi	sp,sp,-28
 8011b28:	dfc00615 	stw	ra,24(sp)
 8011b2c:	df000515 	stw	fp,20(sp)
 8011b30:	df000504 	addi	fp,sp,20
 8011b34:	e13ffc15 	stw	r4,-16(fp)
 8011b38:	e17ffd15 	stw	r5,-12(fp)
 8011b3c:	e1bffe15 	stw	r6,-8(fp)
 8011b40:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
 8011b44:	e1bfff17 	ldw	r6,-4(fp)
 8011b48:	e17ffe17 	ldw	r5,-8(fp)
 8011b4c:	e13ffd17 	ldw	r4,-12(fp)
 8011b50:	8011d640 	call	8011d64 <open>
 8011b54:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
 8011b58:	e0bffb17 	ldw	r2,-20(fp)
 8011b5c:	10001c16 	blt	r2,zero,8011bd0 <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
 8011b60:	00820074 	movhi	r2,2049
 8011b64:	108f7904 	addi	r2,r2,15844
 8011b68:	e0fffb17 	ldw	r3,-20(fp)
 8011b6c:	18c00324 	muli	r3,r3,12
 8011b70:	10c5883a 	add	r2,r2,r3
 8011b74:	10c00017 	ldw	r3,0(r2)
 8011b78:	e0bffc17 	ldw	r2,-16(fp)
 8011b7c:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
 8011b80:	00820074 	movhi	r2,2049
 8011b84:	108f7904 	addi	r2,r2,15844
 8011b88:	e0fffb17 	ldw	r3,-20(fp)
 8011b8c:	18c00324 	muli	r3,r3,12
 8011b90:	10c5883a 	add	r2,r2,r3
 8011b94:	10800104 	addi	r2,r2,4
 8011b98:	10c00017 	ldw	r3,0(r2)
 8011b9c:	e0bffc17 	ldw	r2,-16(fp)
 8011ba0:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
 8011ba4:	00820074 	movhi	r2,2049
 8011ba8:	108f7904 	addi	r2,r2,15844
 8011bac:	e0fffb17 	ldw	r3,-20(fp)
 8011bb0:	18c00324 	muli	r3,r3,12
 8011bb4:	10c5883a 	add	r2,r2,r3
 8011bb8:	10800204 	addi	r2,r2,8
 8011bbc:	10c00017 	ldw	r3,0(r2)
 8011bc0:	e0bffc17 	ldw	r2,-16(fp)
 8011bc4:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
 8011bc8:	e13ffb17 	ldw	r4,-20(fp)
 8011bcc:	80106c80 	call	80106c8 <alt_release_fd>
  }
} 
 8011bd0:	0001883a 	nop
 8011bd4:	e037883a 	mov	sp,fp
 8011bd8:	dfc00117 	ldw	ra,4(sp)
 8011bdc:	df000017 	ldw	fp,0(sp)
 8011be0:	dec00204 	addi	sp,sp,8
 8011be4:	f800283a 	ret

08011be8 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
 8011be8:	defffb04 	addi	sp,sp,-20
 8011bec:	dfc00415 	stw	ra,16(sp)
 8011bf0:	df000315 	stw	fp,12(sp)
 8011bf4:	df000304 	addi	fp,sp,12
 8011bf8:	e13ffd15 	stw	r4,-12(fp)
 8011bfc:	e17ffe15 	stw	r5,-8(fp)
 8011c00:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
 8011c04:	01c07fc4 	movi	r7,511
 8011c08:	01800044 	movi	r6,1
 8011c0c:	e17ffd17 	ldw	r5,-12(fp)
 8011c10:	01020074 	movhi	r4,2049
 8011c14:	210f7c04 	addi	r4,r4,15856
 8011c18:	8011b240 	call	8011b24 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
 8011c1c:	01c07fc4 	movi	r7,511
 8011c20:	000d883a 	mov	r6,zero
 8011c24:	e17ffe17 	ldw	r5,-8(fp)
 8011c28:	01020074 	movhi	r4,2049
 8011c2c:	210f7904 	addi	r4,r4,15844
 8011c30:	8011b240 	call	8011b24 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
 8011c34:	01c07fc4 	movi	r7,511
 8011c38:	01800044 	movi	r6,1
 8011c3c:	e17fff17 	ldw	r5,-4(fp)
 8011c40:	01020074 	movhi	r4,2049
 8011c44:	210f7f04 	addi	r4,r4,15868
 8011c48:	8011b240 	call	8011b24 <alt_open_fd>
}  
 8011c4c:	0001883a 	nop
 8011c50:	e037883a 	mov	sp,fp
 8011c54:	dfc00117 	ldw	ra,4(sp)
 8011c58:	df000017 	ldw	fp,0(sp)
 8011c5c:	dec00204 	addi	sp,sp,8
 8011c60:	f800283a 	ret

08011c64 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 8011c64:	defffe04 	addi	sp,sp,-8
 8011c68:	dfc00115 	stw	ra,4(sp)
 8011c6c:	df000015 	stw	fp,0(sp)
 8011c70:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 8011c74:	d0a01617 	ldw	r2,-32680(gp)
 8011c78:	10000326 	beq	r2,zero,8011c88 <alt_get_errno+0x24>
 8011c7c:	d0a01617 	ldw	r2,-32680(gp)
 8011c80:	103ee83a 	callr	r2
 8011c84:	00000106 	br	8011c8c <alt_get_errno+0x28>
 8011c88:	d0a6e804 	addi	r2,gp,-25696
}
 8011c8c:	e037883a 	mov	sp,fp
 8011c90:	dfc00117 	ldw	ra,4(sp)
 8011c94:	df000017 	ldw	fp,0(sp)
 8011c98:	dec00204 	addi	sp,sp,8
 8011c9c:	f800283a 	ret

08011ca0 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
 8011ca0:	defffd04 	addi	sp,sp,-12
 8011ca4:	df000215 	stw	fp,8(sp)
 8011ca8:	df000204 	addi	fp,sp,8
 8011cac:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
 8011cb0:	e0bfff17 	ldw	r2,-4(fp)
 8011cb4:	10800217 	ldw	r2,8(r2)
 8011cb8:	10d00034 	orhi	r3,r2,16384
 8011cbc:	e0bfff17 	ldw	r2,-4(fp)
 8011cc0:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 8011cc4:	e03ffe15 	stw	zero,-8(fp)
 8011cc8:	00001d06 	br	8011d40 <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 8011ccc:	00820074 	movhi	r2,2049
 8011cd0:	108f7904 	addi	r2,r2,15844
 8011cd4:	e0fffe17 	ldw	r3,-8(fp)
 8011cd8:	18c00324 	muli	r3,r3,12
 8011cdc:	10c5883a 	add	r2,r2,r3
 8011ce0:	10c00017 	ldw	r3,0(r2)
 8011ce4:	e0bfff17 	ldw	r2,-4(fp)
 8011ce8:	10800017 	ldw	r2,0(r2)
 8011cec:	1880111e 	bne	r3,r2,8011d34 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 8011cf0:	00820074 	movhi	r2,2049
 8011cf4:	108f7904 	addi	r2,r2,15844
 8011cf8:	e0fffe17 	ldw	r3,-8(fp)
 8011cfc:	18c00324 	muli	r3,r3,12
 8011d00:	10c5883a 	add	r2,r2,r3
 8011d04:	10800204 	addi	r2,r2,8
 8011d08:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 8011d0c:	1000090e 	bge	r2,zero,8011d34 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
 8011d10:	e0bffe17 	ldw	r2,-8(fp)
 8011d14:	10c00324 	muli	r3,r2,12
 8011d18:	00820074 	movhi	r2,2049
 8011d1c:	108f7904 	addi	r2,r2,15844
 8011d20:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 8011d24:	e0bfff17 	ldw	r2,-4(fp)
 8011d28:	18800226 	beq	r3,r2,8011d34 <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
 8011d2c:	00bffcc4 	movi	r2,-13
 8011d30:	00000806 	br	8011d54 <alt_file_locked+0xb4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 8011d34:	e0bffe17 	ldw	r2,-8(fp)
 8011d38:	10800044 	addi	r2,r2,1
 8011d3c:	e0bffe15 	stw	r2,-8(fp)
 8011d40:	d0a01517 	ldw	r2,-32684(gp)
 8011d44:	1007883a 	mov	r3,r2
 8011d48:	e0bffe17 	ldw	r2,-8(fp)
 8011d4c:	18bfdf2e 	bgeu	r3,r2,8011ccc <__alt_data_end+0xf8011ccc>
    }
  }
  
  /* The device is not locked */
 
  return 0;
 8011d50:	0005883a 	mov	r2,zero
}
 8011d54:	e037883a 	mov	sp,fp
 8011d58:	df000017 	ldw	fp,0(sp)
 8011d5c:	dec00104 	addi	sp,sp,4
 8011d60:	f800283a 	ret

08011d64 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
 8011d64:	defff604 	addi	sp,sp,-40
 8011d68:	dfc00915 	stw	ra,36(sp)
 8011d6c:	df000815 	stw	fp,32(sp)
 8011d70:	df000804 	addi	fp,sp,32
 8011d74:	e13ffd15 	stw	r4,-12(fp)
 8011d78:	e17ffe15 	stw	r5,-8(fp)
 8011d7c:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
 8011d80:	00bfffc4 	movi	r2,-1
 8011d84:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
 8011d88:	00bffb44 	movi	r2,-19
 8011d8c:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
 8011d90:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
 8011d94:	d1601304 	addi	r5,gp,-32692
 8011d98:	e13ffd17 	ldw	r4,-12(fp)
 8011d9c:	80120800 	call	8012080 <alt_find_dev>
 8011da0:	e0bff815 	stw	r2,-32(fp)
 8011da4:	e0bff817 	ldw	r2,-32(fp)
 8011da8:	1000051e 	bne	r2,zero,8011dc0 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
 8011dac:	e13ffd17 	ldw	r4,-12(fp)
 8011db0:	80121100 	call	8012110 <alt_find_file>
 8011db4:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
 8011db8:	00800044 	movi	r2,1
 8011dbc:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
 8011dc0:	e0bff817 	ldw	r2,-32(fp)
 8011dc4:	10002926 	beq	r2,zero,8011e6c <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
 8011dc8:	e13ff817 	ldw	r4,-32(fp)
 8011dcc:	80122180 	call	8012218 <alt_get_fd>
 8011dd0:	e0bff915 	stw	r2,-28(fp)
 8011dd4:	e0bff917 	ldw	r2,-28(fp)
 8011dd8:	1000030e 	bge	r2,zero,8011de8 <open+0x84>
    {
      status = index;
 8011ddc:	e0bff917 	ldw	r2,-28(fp)
 8011de0:	e0bffa15 	stw	r2,-24(fp)
 8011de4:	00002306 	br	8011e74 <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
 8011de8:	e0bff917 	ldw	r2,-28(fp)
 8011dec:	10c00324 	muli	r3,r2,12
 8011df0:	00820074 	movhi	r2,2049
 8011df4:	108f7904 	addi	r2,r2,15844
 8011df8:	1885883a 	add	r2,r3,r2
 8011dfc:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
 8011e00:	e0fffe17 	ldw	r3,-8(fp)
 8011e04:	00900034 	movhi	r2,16384
 8011e08:	10bfffc4 	addi	r2,r2,-1
 8011e0c:	1886703a 	and	r3,r3,r2
 8011e10:	e0bffc17 	ldw	r2,-16(fp)
 8011e14:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
 8011e18:	e0bffb17 	ldw	r2,-20(fp)
 8011e1c:	1000051e 	bne	r2,zero,8011e34 <open+0xd0>
 8011e20:	e13ffc17 	ldw	r4,-16(fp)
 8011e24:	8011ca00 	call	8011ca0 <alt_file_locked>
 8011e28:	e0bffa15 	stw	r2,-24(fp)
 8011e2c:	e0bffa17 	ldw	r2,-24(fp)
 8011e30:	10001016 	blt	r2,zero,8011e74 <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
 8011e34:	e0bff817 	ldw	r2,-32(fp)
 8011e38:	10800317 	ldw	r2,12(r2)
 8011e3c:	10000826 	beq	r2,zero,8011e60 <open+0xfc>
 8011e40:	e0bff817 	ldw	r2,-32(fp)
 8011e44:	10800317 	ldw	r2,12(r2)
 8011e48:	e1ffff17 	ldw	r7,-4(fp)
 8011e4c:	e1bffe17 	ldw	r6,-8(fp)
 8011e50:	e17ffd17 	ldw	r5,-12(fp)
 8011e54:	e13ffc17 	ldw	r4,-16(fp)
 8011e58:	103ee83a 	callr	r2
 8011e5c:	00000106 	br	8011e64 <open+0x100>
 8011e60:	0005883a 	mov	r2,zero
 8011e64:	e0bffa15 	stw	r2,-24(fp)
 8011e68:	00000206 	br	8011e74 <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
 8011e6c:	00bffb44 	movi	r2,-19
 8011e70:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
 8011e74:	e0bffa17 	ldw	r2,-24(fp)
 8011e78:	1000090e 	bge	r2,zero,8011ea0 <open+0x13c>
  {
    alt_release_fd (index);  
 8011e7c:	e13ff917 	ldw	r4,-28(fp)
 8011e80:	80106c80 	call	80106c8 <alt_release_fd>
    ALT_ERRNO = -status;
 8011e84:	8011c640 	call	8011c64 <alt_get_errno>
 8011e88:	1007883a 	mov	r3,r2
 8011e8c:	e0bffa17 	ldw	r2,-24(fp)
 8011e90:	0085c83a 	sub	r2,zero,r2
 8011e94:	18800015 	stw	r2,0(r3)
    return -1;
 8011e98:	00bfffc4 	movi	r2,-1
 8011e9c:	00000106 	br	8011ea4 <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
 8011ea0:	e0bff917 	ldw	r2,-28(fp)
}
 8011ea4:	e037883a 	mov	sp,fp
 8011ea8:	dfc00117 	ldw	ra,4(sp)
 8011eac:	df000017 	ldw	fp,0(sp)
 8011eb0:	dec00204 	addi	sp,sp,8
 8011eb4:	f800283a 	ret

08011eb8 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
 8011eb8:	defffa04 	addi	sp,sp,-24
 8011ebc:	df000515 	stw	fp,20(sp)
 8011ec0:	df000504 	addi	fp,sp,20
 8011ec4:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 8011ec8:	0005303a 	rdctl	r2,status
 8011ecc:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 8011ed0:	e0fffc17 	ldw	r3,-16(fp)
 8011ed4:	00bfff84 	movi	r2,-2
 8011ed8:	1884703a 	and	r2,r3,r2
 8011edc:	1001703a 	wrctl	status,r2
  
  return context;
 8011ee0:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
 8011ee4:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
 8011ee8:	e0bfff17 	ldw	r2,-4(fp)
 8011eec:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
 8011ef0:	e0bffd17 	ldw	r2,-12(fp)
 8011ef4:	10800017 	ldw	r2,0(r2)
 8011ef8:	e0fffd17 	ldw	r3,-12(fp)
 8011efc:	18c00117 	ldw	r3,4(r3)
 8011f00:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
 8011f04:	e0bffd17 	ldw	r2,-12(fp)
 8011f08:	10800117 	ldw	r2,4(r2)
 8011f0c:	e0fffd17 	ldw	r3,-12(fp)
 8011f10:	18c00017 	ldw	r3,0(r3)
 8011f14:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
 8011f18:	e0bffd17 	ldw	r2,-12(fp)
 8011f1c:	e0fffd17 	ldw	r3,-12(fp)
 8011f20:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
 8011f24:	e0bffd17 	ldw	r2,-12(fp)
 8011f28:	e0fffd17 	ldw	r3,-12(fp)
 8011f2c:	10c00015 	stw	r3,0(r2)
 8011f30:	e0bffb17 	ldw	r2,-20(fp)
 8011f34:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 8011f38:	e0bffe17 	ldw	r2,-8(fp)
 8011f3c:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
 8011f40:	0001883a 	nop
 8011f44:	e037883a 	mov	sp,fp
 8011f48:	df000017 	ldw	fp,0(sp)
 8011f4c:	dec00104 	addi	sp,sp,4
 8011f50:	f800283a 	ret

08011f54 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
 8011f54:	defffb04 	addi	sp,sp,-20
 8011f58:	dfc00415 	stw	ra,16(sp)
 8011f5c:	df000315 	stw	fp,12(sp)
 8011f60:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
 8011f64:	d0a01917 	ldw	r2,-32668(gp)
 8011f68:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
 8011f6c:	d0a6f117 	ldw	r2,-25660(gp)
 8011f70:	10800044 	addi	r2,r2,1
 8011f74:	d0a6f115 	stw	r2,-25660(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 8011f78:	00002e06 	br	8012034 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
 8011f7c:	e0bffd17 	ldw	r2,-12(fp)
 8011f80:	10800017 	ldw	r2,0(r2)
 8011f84:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
 8011f88:	e0bffd17 	ldw	r2,-12(fp)
 8011f8c:	10800403 	ldbu	r2,16(r2)
 8011f90:	10803fcc 	andi	r2,r2,255
 8011f94:	10000426 	beq	r2,zero,8011fa8 <alt_tick+0x54>
 8011f98:	d0a6f117 	ldw	r2,-25660(gp)
 8011f9c:	1000021e 	bne	r2,zero,8011fa8 <alt_tick+0x54>
    {
      alarm->rollover = 0;
 8011fa0:	e0bffd17 	ldw	r2,-12(fp)
 8011fa4:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
 8011fa8:	e0bffd17 	ldw	r2,-12(fp)
 8011fac:	10800217 	ldw	r2,8(r2)
 8011fb0:	d0e6f117 	ldw	r3,-25660(gp)
 8011fb4:	18801d36 	bltu	r3,r2,801202c <alt_tick+0xd8>
 8011fb8:	e0bffd17 	ldw	r2,-12(fp)
 8011fbc:	10800403 	ldbu	r2,16(r2)
 8011fc0:	10803fcc 	andi	r2,r2,255
 8011fc4:	1000191e 	bne	r2,zero,801202c <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
 8011fc8:	e0bffd17 	ldw	r2,-12(fp)
 8011fcc:	10800317 	ldw	r2,12(r2)
 8011fd0:	e0fffd17 	ldw	r3,-12(fp)
 8011fd4:	18c00517 	ldw	r3,20(r3)
 8011fd8:	1809883a 	mov	r4,r3
 8011fdc:	103ee83a 	callr	r2
 8011fe0:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
 8011fe4:	e0bfff17 	ldw	r2,-4(fp)
 8011fe8:	1000031e 	bne	r2,zero,8011ff8 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
 8011fec:	e13ffd17 	ldw	r4,-12(fp)
 8011ff0:	8011eb80 	call	8011eb8 <alt_alarm_stop>
 8011ff4:	00000d06 	br	801202c <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
 8011ff8:	e0bffd17 	ldw	r2,-12(fp)
 8011ffc:	10c00217 	ldw	r3,8(r2)
 8012000:	e0bfff17 	ldw	r2,-4(fp)
 8012004:	1887883a 	add	r3,r3,r2
 8012008:	e0bffd17 	ldw	r2,-12(fp)
 801200c:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
 8012010:	e0bffd17 	ldw	r2,-12(fp)
 8012014:	10c00217 	ldw	r3,8(r2)
 8012018:	d0a6f117 	ldw	r2,-25660(gp)
 801201c:	1880032e 	bgeu	r3,r2,801202c <alt_tick+0xd8>
        {
          alarm->rollover = 1;
 8012020:	e0bffd17 	ldw	r2,-12(fp)
 8012024:	00c00044 	movi	r3,1
 8012028:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
 801202c:	e0bffe17 	ldw	r2,-8(fp)
 8012030:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 8012034:	e0fffd17 	ldw	r3,-12(fp)
 8012038:	d0a01904 	addi	r2,gp,-32668
 801203c:	18bfcf1e 	bne	r3,r2,8011f7c <__alt_data_end+0xf8011f7c>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
 8012040:	0001883a 	nop
}
 8012044:	0001883a 	nop
 8012048:	e037883a 	mov	sp,fp
 801204c:	dfc00117 	ldw	ra,4(sp)
 8012050:	df000017 	ldw	fp,0(sp)
 8012054:	dec00204 	addi	sp,sp,8
 8012058:	f800283a 	ret

0801205c <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
 801205c:	deffff04 	addi	sp,sp,-4
 8012060:	df000015 	stw	fp,0(sp)
 8012064:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
 8012068:	000170fa 	wrctl	ienable,zero
}
 801206c:	0001883a 	nop
 8012070:	e037883a 	mov	sp,fp
 8012074:	df000017 	ldw	fp,0(sp)
 8012078:	dec00104 	addi	sp,sp,4
 801207c:	f800283a 	ret

08012080 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
 8012080:	defffa04 	addi	sp,sp,-24
 8012084:	dfc00515 	stw	ra,20(sp)
 8012088:	df000415 	stw	fp,16(sp)
 801208c:	df000404 	addi	fp,sp,16
 8012090:	e13ffe15 	stw	r4,-8(fp)
 8012094:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
 8012098:	e0bfff17 	ldw	r2,-4(fp)
 801209c:	10800017 	ldw	r2,0(r2)
 80120a0:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
 80120a4:	e13ffe17 	ldw	r4,-8(fp)
 80120a8:	8003f280 	call	8003f28 <strlen>
 80120ac:	10800044 	addi	r2,r2,1
 80120b0:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 80120b4:	00000d06 	br	80120ec <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
 80120b8:	e0bffc17 	ldw	r2,-16(fp)
 80120bc:	10800217 	ldw	r2,8(r2)
 80120c0:	e0fffd17 	ldw	r3,-12(fp)
 80120c4:	180d883a 	mov	r6,r3
 80120c8:	e17ffe17 	ldw	r5,-8(fp)
 80120cc:	1009883a 	mov	r4,r2
 80120d0:	80124340 	call	8012434 <memcmp>
 80120d4:	1000021e 	bne	r2,zero,80120e0 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
 80120d8:	e0bffc17 	ldw	r2,-16(fp)
 80120dc:	00000706 	br	80120fc <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
 80120e0:	e0bffc17 	ldw	r2,-16(fp)
 80120e4:	10800017 	ldw	r2,0(r2)
 80120e8:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 80120ec:	e0fffc17 	ldw	r3,-16(fp)
 80120f0:	e0bfff17 	ldw	r2,-4(fp)
 80120f4:	18bff01e 	bne	r3,r2,80120b8 <__alt_data_end+0xf80120b8>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
 80120f8:	0005883a 	mov	r2,zero
}
 80120fc:	e037883a 	mov	sp,fp
 8012100:	dfc00117 	ldw	ra,4(sp)
 8012104:	df000017 	ldw	fp,0(sp)
 8012108:	dec00204 	addi	sp,sp,8
 801210c:	f800283a 	ret

08012110 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
 8012110:	defffb04 	addi	sp,sp,-20
 8012114:	dfc00415 	stw	ra,16(sp)
 8012118:	df000315 	stw	fp,12(sp)
 801211c:	df000304 	addi	fp,sp,12
 8012120:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
 8012124:	d0a01117 	ldw	r2,-32700(gp)
 8012128:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 801212c:	00003106 	br	80121f4 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
 8012130:	e0bffd17 	ldw	r2,-12(fp)
 8012134:	10800217 	ldw	r2,8(r2)
 8012138:	1009883a 	mov	r4,r2
 801213c:	8003f280 	call	8003f28 <strlen>
 8012140:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
 8012144:	e0bffd17 	ldw	r2,-12(fp)
 8012148:	10c00217 	ldw	r3,8(r2)
 801214c:	e0bffe17 	ldw	r2,-8(fp)
 8012150:	10bfffc4 	addi	r2,r2,-1
 8012154:	1885883a 	add	r2,r3,r2
 8012158:	10800003 	ldbu	r2,0(r2)
 801215c:	10803fcc 	andi	r2,r2,255
 8012160:	1080201c 	xori	r2,r2,128
 8012164:	10bfe004 	addi	r2,r2,-128
 8012168:	10800bd8 	cmpnei	r2,r2,47
 801216c:	1000031e 	bne	r2,zero,801217c <alt_find_file+0x6c>
    {
      len -= 1;
 8012170:	e0bffe17 	ldw	r2,-8(fp)
 8012174:	10bfffc4 	addi	r2,r2,-1
 8012178:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 801217c:	e0bffe17 	ldw	r2,-8(fp)
 8012180:	e0ffff17 	ldw	r3,-4(fp)
 8012184:	1885883a 	add	r2,r3,r2
 8012188:	10800003 	ldbu	r2,0(r2)
 801218c:	10803fcc 	andi	r2,r2,255
 8012190:	1080201c 	xori	r2,r2,128
 8012194:	10bfe004 	addi	r2,r2,-128
 8012198:	10800be0 	cmpeqi	r2,r2,47
 801219c:	1000081e 	bne	r2,zero,80121c0 <alt_find_file+0xb0>
 80121a0:	e0bffe17 	ldw	r2,-8(fp)
 80121a4:	e0ffff17 	ldw	r3,-4(fp)
 80121a8:	1885883a 	add	r2,r3,r2
 80121ac:	10800003 	ldbu	r2,0(r2)
 80121b0:	10803fcc 	andi	r2,r2,255
 80121b4:	1080201c 	xori	r2,r2,128
 80121b8:	10bfe004 	addi	r2,r2,-128
 80121bc:	10000a1e 	bne	r2,zero,80121e8 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
 80121c0:	e0bffd17 	ldw	r2,-12(fp)
 80121c4:	10800217 	ldw	r2,8(r2)
 80121c8:	e0fffe17 	ldw	r3,-8(fp)
 80121cc:	180d883a 	mov	r6,r3
 80121d0:	e17fff17 	ldw	r5,-4(fp)
 80121d4:	1009883a 	mov	r4,r2
 80121d8:	80124340 	call	8012434 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 80121dc:	1000021e 	bne	r2,zero,80121e8 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
 80121e0:	e0bffd17 	ldw	r2,-12(fp)
 80121e4:	00000706 	br	8012204 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
 80121e8:	e0bffd17 	ldw	r2,-12(fp)
 80121ec:	10800017 	ldw	r2,0(r2)
 80121f0:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 80121f4:	e0fffd17 	ldw	r3,-12(fp)
 80121f8:	d0a01104 	addi	r2,gp,-32700
 80121fc:	18bfcc1e 	bne	r3,r2,8012130 <__alt_data_end+0xf8012130>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
 8012200:	0005883a 	mov	r2,zero
}
 8012204:	e037883a 	mov	sp,fp
 8012208:	dfc00117 	ldw	ra,4(sp)
 801220c:	df000017 	ldw	fp,0(sp)
 8012210:	dec00204 	addi	sp,sp,8
 8012214:	f800283a 	ret

08012218 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
 8012218:	defffc04 	addi	sp,sp,-16
 801221c:	df000315 	stw	fp,12(sp)
 8012220:	df000304 	addi	fp,sp,12
 8012224:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
 8012228:	00bffa04 	movi	r2,-24
 801222c:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 8012230:	e03ffd15 	stw	zero,-12(fp)
 8012234:	00001906 	br	801229c <alt_get_fd+0x84>
  {
    if (!alt_fd_list[i].dev)
 8012238:	00820074 	movhi	r2,2049
 801223c:	108f7904 	addi	r2,r2,15844
 8012240:	e0fffd17 	ldw	r3,-12(fp)
 8012244:	18c00324 	muli	r3,r3,12
 8012248:	10c5883a 	add	r2,r2,r3
 801224c:	10800017 	ldw	r2,0(r2)
 8012250:	10000f1e 	bne	r2,zero,8012290 <alt_get_fd+0x78>
    {
      alt_fd_list[i].dev = dev;
 8012254:	00820074 	movhi	r2,2049
 8012258:	108f7904 	addi	r2,r2,15844
 801225c:	e0fffd17 	ldw	r3,-12(fp)
 8012260:	18c00324 	muli	r3,r3,12
 8012264:	10c5883a 	add	r2,r2,r3
 8012268:	e0ffff17 	ldw	r3,-4(fp)
 801226c:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
 8012270:	d0e01517 	ldw	r3,-32684(gp)
 8012274:	e0bffd17 	ldw	r2,-12(fp)
 8012278:	1880020e 	bge	r3,r2,8012284 <alt_get_fd+0x6c>
      {
        alt_max_fd = i;
 801227c:	e0bffd17 	ldw	r2,-12(fp)
 8012280:	d0a01515 	stw	r2,-32684(gp)
      }
      rc = i;
 8012284:	e0bffd17 	ldw	r2,-12(fp)
 8012288:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
 801228c:	00000606 	br	80122a8 <alt_get_fd+0x90>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 8012290:	e0bffd17 	ldw	r2,-12(fp)
 8012294:	10800044 	addi	r2,r2,1
 8012298:	e0bffd15 	stw	r2,-12(fp)
 801229c:	e0bffd17 	ldw	r2,-12(fp)
 80122a0:	10800810 	cmplti	r2,r2,32
 80122a4:	103fe41e 	bne	r2,zero,8012238 <__alt_data_end+0xf8012238>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
 80122a8:	e0bffe17 	ldw	r2,-8(fp)
}
 80122ac:	e037883a 	mov	sp,fp
 80122b0:	df000017 	ldw	fp,0(sp)
 80122b4:	dec00104 	addi	sp,sp,4
 80122b8:	f800283a 	ret

080122bc <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
 80122bc:	defffb04 	addi	sp,sp,-20
 80122c0:	df000415 	stw	fp,16(sp)
 80122c4:	df000404 	addi	fp,sp,16
 80122c8:	e13ffe15 	stw	r4,-8(fp)
 80122cc:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
 80122d0:	e0bfff17 	ldw	r2,-4(fp)
 80122d4:	10840070 	cmpltui	r2,r2,4097
 80122d8:	1000021e 	bne	r2,zero,80122e4 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
 80122dc:	00840004 	movi	r2,4096
 80122e0:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
 80122e4:	e0fffe17 	ldw	r3,-8(fp)
 80122e8:	e0bfff17 	ldw	r2,-4(fp)
 80122ec:	1885883a 	add	r2,r3,r2
 80122f0:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
 80122f4:	e0bffe17 	ldw	r2,-8(fp)
 80122f8:	e0bffc15 	stw	r2,-16(fp)
 80122fc:	00000506 	br	8012314 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
 8012300:	e0bffc17 	ldw	r2,-16(fp)
 8012304:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
 8012308:	e0bffc17 	ldw	r2,-16(fp)
 801230c:	10800804 	addi	r2,r2,32
 8012310:	e0bffc15 	stw	r2,-16(fp)
 8012314:	e0fffc17 	ldw	r3,-16(fp)
 8012318:	e0bffd17 	ldw	r2,-12(fp)
 801231c:	18bff836 	bltu	r3,r2,8012300 <__alt_data_end+0xf8012300>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
 8012320:	e0bffe17 	ldw	r2,-8(fp)
 8012324:	108007cc 	andi	r2,r2,31
 8012328:	10000226 	beq	r2,zero,8012334 <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
 801232c:	e0bffc17 	ldw	r2,-16(fp)
 8012330:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
 8012334:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
 8012338:	0001883a 	nop
 801233c:	e037883a 	mov	sp,fp
 8012340:	df000017 	ldw	fp,0(sp)
 8012344:	dec00104 	addi	sp,sp,4
 8012348:	f800283a 	ret

0801234c <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
 801234c:	defffe04 	addi	sp,sp,-8
 8012350:	df000115 	stw	fp,4(sp)
 8012354:	df000104 	addi	fp,sp,4
 8012358:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
 801235c:	e0bfff17 	ldw	r2,-4(fp)
 8012360:	10bffe84 	addi	r2,r2,-6
 8012364:	10c00428 	cmpgeui	r3,r2,16
 8012368:	18001a1e 	bne	r3,zero,80123d4 <alt_exception_cause_generated_bad_addr+0x88>
 801236c:	100690ba 	slli	r3,r2,2
 8012370:	00820074 	movhi	r2,2049
 8012374:	1088e104 	addi	r2,r2,9092
 8012378:	1885883a 	add	r2,r3,r2
 801237c:	10800017 	ldw	r2,0(r2)
 8012380:	1000683a 	jmp	r2
 8012384:	080123c4 	addi	zero,at,1167
 8012388:	080123c4 	addi	zero,at,1167
 801238c:	080123d4 	ori	zero,at,1167
 8012390:	080123d4 	ori	zero,at,1167
 8012394:	080123d4 	ori	zero,at,1167
 8012398:	080123c4 	addi	zero,at,1167
 801239c:	080123cc 	andi	zero,at,1167
 80123a0:	080123d4 	ori	zero,at,1167
 80123a4:	080123c4 	addi	zero,at,1167
 80123a8:	080123c4 	addi	zero,at,1167
 80123ac:	080123d4 	ori	zero,at,1167
 80123b0:	080123c4 	addi	zero,at,1167
 80123b4:	080123cc 	andi	zero,at,1167
 80123b8:	080123d4 	ori	zero,at,1167
 80123bc:	080123d4 	ori	zero,at,1167
 80123c0:	080123c4 	addi	zero,at,1167
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
 80123c4:	00800044 	movi	r2,1
 80123c8:	00000306 	br	80123d8 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
 80123cc:	0005883a 	mov	r2,zero
 80123d0:	00000106 	br	80123d8 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
 80123d4:	0005883a 	mov	r2,zero
  }
}
 80123d8:	e037883a 	mov	sp,fp
 80123dc:	df000017 	ldw	fp,0(sp)
 80123e0:	dec00104 	addi	sp,sp,4
 80123e4:	f800283a 	ret

080123e8 <atexit>:
 80123e8:	200b883a 	mov	r5,r4
 80123ec:	000f883a 	mov	r7,zero
 80123f0:	000d883a 	mov	r6,zero
 80123f4:	0009883a 	mov	r4,zero
 80123f8:	80124b01 	jmpi	80124b0 <__register_exitproc>

080123fc <exit>:
 80123fc:	defffe04 	addi	sp,sp,-8
 8012400:	000b883a 	mov	r5,zero
 8012404:	dc000015 	stw	r16,0(sp)
 8012408:	dfc00115 	stw	ra,4(sp)
 801240c:	2021883a 	mov	r16,r4
 8012410:	80125c80 	call	80125c8 <__call_exitprocs>
 8012414:	00820074 	movhi	r2,2049
 8012418:	1093fe04 	addi	r2,r2,20472
 801241c:	11000017 	ldw	r4,0(r2)
 8012420:	20800f17 	ldw	r2,60(r4)
 8012424:	10000126 	beq	r2,zero,801242c <exit+0x30>
 8012428:	103ee83a 	callr	r2
 801242c:	8009883a 	mov	r4,r16
 8012430:	800ff440 	call	800ff44 <_exit>

08012434 <memcmp>:
 8012434:	01c000c4 	movi	r7,3
 8012438:	3980192e 	bgeu	r7,r6,80124a0 <memcmp+0x6c>
 801243c:	2144b03a 	or	r2,r4,r5
 8012440:	11c4703a 	and	r2,r2,r7
 8012444:	10000f26 	beq	r2,zero,8012484 <memcmp+0x50>
 8012448:	20800003 	ldbu	r2,0(r4)
 801244c:	28c00003 	ldbu	r3,0(r5)
 8012450:	10c0151e 	bne	r2,r3,80124a8 <memcmp+0x74>
 8012454:	31bfff84 	addi	r6,r6,-2
 8012458:	01ffffc4 	movi	r7,-1
 801245c:	00000406 	br	8012470 <memcmp+0x3c>
 8012460:	20800003 	ldbu	r2,0(r4)
 8012464:	28c00003 	ldbu	r3,0(r5)
 8012468:	31bfffc4 	addi	r6,r6,-1
 801246c:	10c00e1e 	bne	r2,r3,80124a8 <memcmp+0x74>
 8012470:	21000044 	addi	r4,r4,1
 8012474:	29400044 	addi	r5,r5,1
 8012478:	31fff91e 	bne	r6,r7,8012460 <__alt_data_end+0xf8012460>
 801247c:	0005883a 	mov	r2,zero
 8012480:	f800283a 	ret
 8012484:	20c00017 	ldw	r3,0(r4)
 8012488:	28800017 	ldw	r2,0(r5)
 801248c:	18bfee1e 	bne	r3,r2,8012448 <__alt_data_end+0xf8012448>
 8012490:	31bfff04 	addi	r6,r6,-4
 8012494:	21000104 	addi	r4,r4,4
 8012498:	29400104 	addi	r5,r5,4
 801249c:	39bff936 	bltu	r7,r6,8012484 <__alt_data_end+0xf8012484>
 80124a0:	303fe91e 	bne	r6,zero,8012448 <__alt_data_end+0xf8012448>
 80124a4:	003ff506 	br	801247c <__alt_data_end+0xf801247c>
 80124a8:	10c5c83a 	sub	r2,r2,r3
 80124ac:	f800283a 	ret

080124b0 <__register_exitproc>:
 80124b0:	defffa04 	addi	sp,sp,-24
 80124b4:	dc000315 	stw	r16,12(sp)
 80124b8:	04020074 	movhi	r16,2049
 80124bc:	8413fe04 	addi	r16,r16,20472
 80124c0:	80c00017 	ldw	r3,0(r16)
 80124c4:	dc400415 	stw	r17,16(sp)
 80124c8:	dfc00515 	stw	ra,20(sp)
 80124cc:	18805217 	ldw	r2,328(r3)
 80124d0:	2023883a 	mov	r17,r4
 80124d4:	10003726 	beq	r2,zero,80125b4 <__register_exitproc+0x104>
 80124d8:	10c00117 	ldw	r3,4(r2)
 80124dc:	010007c4 	movi	r4,31
 80124e0:	20c00e16 	blt	r4,r3,801251c <__register_exitproc+0x6c>
 80124e4:	1a000044 	addi	r8,r3,1
 80124e8:	8800221e 	bne	r17,zero,8012574 <__register_exitproc+0xc4>
 80124ec:	18c00084 	addi	r3,r3,2
 80124f0:	18c7883a 	add	r3,r3,r3
 80124f4:	18c7883a 	add	r3,r3,r3
 80124f8:	12000115 	stw	r8,4(r2)
 80124fc:	10c7883a 	add	r3,r2,r3
 8012500:	19400015 	stw	r5,0(r3)
 8012504:	0005883a 	mov	r2,zero
 8012508:	dfc00517 	ldw	ra,20(sp)
 801250c:	dc400417 	ldw	r17,16(sp)
 8012510:	dc000317 	ldw	r16,12(sp)
 8012514:	dec00604 	addi	sp,sp,24
 8012518:	f800283a 	ret
 801251c:	00820034 	movhi	r2,2048
 8012520:	108c0e04 	addi	r2,r2,12344
 8012524:	10002626 	beq	r2,zero,80125c0 <__register_exitproc+0x110>
 8012528:	01006404 	movi	r4,400
 801252c:	d9400015 	stw	r5,0(sp)
 8012530:	d9800115 	stw	r6,4(sp)
 8012534:	d9c00215 	stw	r7,8(sp)
 8012538:	80030380 	call	8003038 <malloc>
 801253c:	d9400017 	ldw	r5,0(sp)
 8012540:	d9800117 	ldw	r6,4(sp)
 8012544:	d9c00217 	ldw	r7,8(sp)
 8012548:	10001d26 	beq	r2,zero,80125c0 <__register_exitproc+0x110>
 801254c:	81000017 	ldw	r4,0(r16)
 8012550:	10000115 	stw	zero,4(r2)
 8012554:	02000044 	movi	r8,1
 8012558:	22405217 	ldw	r9,328(r4)
 801255c:	0007883a 	mov	r3,zero
 8012560:	12400015 	stw	r9,0(r2)
 8012564:	20805215 	stw	r2,328(r4)
 8012568:	10006215 	stw	zero,392(r2)
 801256c:	10006315 	stw	zero,396(r2)
 8012570:	883fde26 	beq	r17,zero,80124ec <__alt_data_end+0xf80124ec>
 8012574:	18c9883a 	add	r4,r3,r3
 8012578:	2109883a 	add	r4,r4,r4
 801257c:	1109883a 	add	r4,r2,r4
 8012580:	21802215 	stw	r6,136(r4)
 8012584:	01800044 	movi	r6,1
 8012588:	12406217 	ldw	r9,392(r2)
 801258c:	30cc983a 	sll	r6,r6,r3
 8012590:	4992b03a 	or	r9,r9,r6
 8012594:	12406215 	stw	r9,392(r2)
 8012598:	21c04215 	stw	r7,264(r4)
 801259c:	01000084 	movi	r4,2
 80125a0:	893fd21e 	bne	r17,r4,80124ec <__alt_data_end+0xf80124ec>
 80125a4:	11006317 	ldw	r4,396(r2)
 80125a8:	218cb03a 	or	r6,r4,r6
 80125ac:	11806315 	stw	r6,396(r2)
 80125b0:	003fce06 	br	80124ec <__alt_data_end+0xf80124ec>
 80125b4:	18805304 	addi	r2,r3,332
 80125b8:	18805215 	stw	r2,328(r3)
 80125bc:	003fc606 	br	80124d8 <__alt_data_end+0xf80124d8>
 80125c0:	00bfffc4 	movi	r2,-1
 80125c4:	003fd006 	br	8012508 <__alt_data_end+0xf8012508>

080125c8 <__call_exitprocs>:
 80125c8:	defff504 	addi	sp,sp,-44
 80125cc:	df000915 	stw	fp,36(sp)
 80125d0:	dd400615 	stw	r21,24(sp)
 80125d4:	dc800315 	stw	r18,12(sp)
 80125d8:	dfc00a15 	stw	ra,40(sp)
 80125dc:	ddc00815 	stw	r23,32(sp)
 80125e0:	dd800715 	stw	r22,28(sp)
 80125e4:	dd000515 	stw	r20,20(sp)
 80125e8:	dcc00415 	stw	r19,16(sp)
 80125ec:	dc400215 	stw	r17,8(sp)
 80125f0:	dc000115 	stw	r16,4(sp)
 80125f4:	d9000015 	stw	r4,0(sp)
 80125f8:	2839883a 	mov	fp,r5
 80125fc:	04800044 	movi	r18,1
 8012600:	057fffc4 	movi	r21,-1
 8012604:	00820074 	movhi	r2,2049
 8012608:	1093fe04 	addi	r2,r2,20472
 801260c:	12000017 	ldw	r8,0(r2)
 8012610:	45005217 	ldw	r20,328(r8)
 8012614:	44c05204 	addi	r19,r8,328
 8012618:	a0001c26 	beq	r20,zero,801268c <__call_exitprocs+0xc4>
 801261c:	a0800117 	ldw	r2,4(r20)
 8012620:	15ffffc4 	addi	r23,r2,-1
 8012624:	b8000d16 	blt	r23,zero,801265c <__call_exitprocs+0x94>
 8012628:	14000044 	addi	r16,r2,1
 801262c:	8421883a 	add	r16,r16,r16
 8012630:	8421883a 	add	r16,r16,r16
 8012634:	84402004 	addi	r17,r16,128
 8012638:	a463883a 	add	r17,r20,r17
 801263c:	a421883a 	add	r16,r20,r16
 8012640:	e0001e26 	beq	fp,zero,80126bc <__call_exitprocs+0xf4>
 8012644:	80804017 	ldw	r2,256(r16)
 8012648:	e0801c26 	beq	fp,r2,80126bc <__call_exitprocs+0xf4>
 801264c:	bdffffc4 	addi	r23,r23,-1
 8012650:	843fff04 	addi	r16,r16,-4
 8012654:	8c7fff04 	addi	r17,r17,-4
 8012658:	bd7ff91e 	bne	r23,r21,8012640 <__alt_data_end+0xf8012640>
 801265c:	00820034 	movhi	r2,2048
 8012660:	108c1304 	addi	r2,r2,12364
 8012664:	10000926 	beq	r2,zero,801268c <__call_exitprocs+0xc4>
 8012668:	a0800117 	ldw	r2,4(r20)
 801266c:	1000301e 	bne	r2,zero,8012730 <__call_exitprocs+0x168>
 8012670:	a0800017 	ldw	r2,0(r20)
 8012674:	10003226 	beq	r2,zero,8012740 <__call_exitprocs+0x178>
 8012678:	a009883a 	mov	r4,r20
 801267c:	98800015 	stw	r2,0(r19)
 8012680:	800304c0 	call	800304c <free>
 8012684:	9d000017 	ldw	r20,0(r19)
 8012688:	a03fe41e 	bne	r20,zero,801261c <__alt_data_end+0xf801261c>
 801268c:	dfc00a17 	ldw	ra,40(sp)
 8012690:	df000917 	ldw	fp,36(sp)
 8012694:	ddc00817 	ldw	r23,32(sp)
 8012698:	dd800717 	ldw	r22,28(sp)
 801269c:	dd400617 	ldw	r21,24(sp)
 80126a0:	dd000517 	ldw	r20,20(sp)
 80126a4:	dcc00417 	ldw	r19,16(sp)
 80126a8:	dc800317 	ldw	r18,12(sp)
 80126ac:	dc400217 	ldw	r17,8(sp)
 80126b0:	dc000117 	ldw	r16,4(sp)
 80126b4:	dec00b04 	addi	sp,sp,44
 80126b8:	f800283a 	ret
 80126bc:	a0800117 	ldw	r2,4(r20)
 80126c0:	80c00017 	ldw	r3,0(r16)
 80126c4:	10bfffc4 	addi	r2,r2,-1
 80126c8:	15c01426 	beq	r2,r23,801271c <__call_exitprocs+0x154>
 80126cc:	80000015 	stw	zero,0(r16)
 80126d0:	183fde26 	beq	r3,zero,801264c <__alt_data_end+0xf801264c>
 80126d4:	95c8983a 	sll	r4,r18,r23
 80126d8:	a0806217 	ldw	r2,392(r20)
 80126dc:	a5800117 	ldw	r22,4(r20)
 80126e0:	2084703a 	and	r2,r4,r2
 80126e4:	10000b26 	beq	r2,zero,8012714 <__call_exitprocs+0x14c>
 80126e8:	a0806317 	ldw	r2,396(r20)
 80126ec:	2088703a 	and	r4,r4,r2
 80126f0:	20000c1e 	bne	r4,zero,8012724 <__call_exitprocs+0x15c>
 80126f4:	89400017 	ldw	r5,0(r17)
 80126f8:	d9000017 	ldw	r4,0(sp)
 80126fc:	183ee83a 	callr	r3
 8012700:	a0800117 	ldw	r2,4(r20)
 8012704:	15bfbf1e 	bne	r2,r22,8012604 <__alt_data_end+0xf8012604>
 8012708:	98800017 	ldw	r2,0(r19)
 801270c:	153fcf26 	beq	r2,r20,801264c <__alt_data_end+0xf801264c>
 8012710:	003fbc06 	br	8012604 <__alt_data_end+0xf8012604>
 8012714:	183ee83a 	callr	r3
 8012718:	003ff906 	br	8012700 <__alt_data_end+0xf8012700>
 801271c:	a5c00115 	stw	r23,4(r20)
 8012720:	003feb06 	br	80126d0 <__alt_data_end+0xf80126d0>
 8012724:	89000017 	ldw	r4,0(r17)
 8012728:	183ee83a 	callr	r3
 801272c:	003ff406 	br	8012700 <__alt_data_end+0xf8012700>
 8012730:	a0800017 	ldw	r2,0(r20)
 8012734:	a027883a 	mov	r19,r20
 8012738:	1029883a 	mov	r20,r2
 801273c:	003fb606 	br	8012618 <__alt_data_end+0xf8012618>
 8012740:	0005883a 	mov	r2,zero
 8012744:	003ffb06 	br	8012734 <__alt_data_end+0xf8012734>
 8012748:	0201ffff 	0x201ffff
 801274c:	883a0000 	call	883a000 <_gp+0x81d03c>
 8012750:	010d0bff 	0x10d0bff
 8012754:	01010002 	0x1010002
	...
 8012760:	010d0bff 	0x10d0bff
 8012764:	01010004 	movi	r4,1024
 8012768:	00000100 	call	10 <__alt_mem_sdram-0x7fffff0>
 801276c:	00000000 	call	0 <__alt_mem_sdram-0x8000000>
 8012770:	01110bff 	0x1110bff
 8012774:	01010004 	movi	r4,1024
 8012778:	7f000105 	stb	fp,4(r15)
 801277c:	007d0000 	call	7d000 <__alt_mem_sdram-0x7f83000>
 8012780:	00000000 	call	0 <__alt_mem_sdram-0x8000000>
 8012784:	01883a00 	call	1883a0 <__alt_mem_sdram-0x7e77c60>
 8012788:	08002220 	cmpeqi	zero,at,136
